var searchIndex = {};
searchIndex["aho_corasick"] = {"doc":"An implementation of the Aho-Corasick string search algorithm.","items":[[3,"Match","aho_corasick","Records a match in the search text.",null,null],[12,"pati","","The pattern index.",0,null],[12,"start","","The starting byte offset of the match in the search text.",0,null],[12,"end","","The ending byte offset of the match in the search text.",0,null],[3,"Matches","","An iterator of non-overlapping matches for in-memory text.",null,null],[3,"MatchesOverlapping","","An iterator of overlapping matches for in-memory text.",null,null],[3,"StreamMatches","","An iterator of non-overlapping matches for streaming text.",null,null],[3,"StreamMatchesOverlapping","","An iterator of overlapping matches for streaming text.",null,null],[3,"FullAcAutomaton","","A complete Aho-Corasick automaton.",null,null],[3,"AcAutomaton","","An Aho-Corasick finite automaton.",null,null],[3,"Dense","","State transitions that can be stored either sparsely or densely.",null,null],[3,"Sparse","","State transitions that are always sparse.",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"match"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"match"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"match"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["match"],"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["match"],"name":"option"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"fullacautomaton"}}],[11,"new","","Build a new expanded Aho-Corasick automaton from an existing Aho-Corasick automaton.",5,{"inputs":[{"name":"acautomaton"}],"output":{"name":"fullacautomaton"}}],[11,"next_state","","",5,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"u8"}],"output":{"name":"stateidx"}}],[11,"get_match","","",5,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"},{"name":"usize"}],"output":{"name":"match"}}],[11,"has_match","","",5,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"start_bytes","","",5,null],[11,"patterns","","",5,null],[11,"pattern","","",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"p"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"StateIdx","","The integer type used for the state index.",null,null],[8,"Automaton","","An abstraction over automatons and their corresponding iterators. The type parameter `P` is the type of the pattern that was used to construct this Automaton.",null,null],[10,"next_state","","Return the next state given the current state and next character.",6,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"u8"}],"output":{"name":"stateidx"}}],[10,"has_match","","Return true if and only if the given state and current pattern index indicate a match.",6,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"}],"output":{"name":"bool"}}],[10,"get_match","","Build a match given the current state, pattern index and input index.",6,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"},{"name":"usize"}],"output":{"name":"match"}}],[10,"start_bytes","","Return the set of bytes that have transitions in the root state.",6,null],[10,"patterns","","Returns all of the patterns matched by this automaton.",6,null],[10,"pattern","","Returns the pattern indexed at `i`.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"p"}}],[11,"len","","Return the number of patterns in the automaton.",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the automaton has no patterns.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"matches"}}],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"matchesoverlapping"}}],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"streammatches"}}],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"streammatchesoverlapping"}}],[8,"Transitions","","An abstraction over state transition strategies.",null,null],[10,"new","","Return a new state at the given depth.",7,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[10,"goto","","Return the next state index given the next character.",7,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"stateidx"}}],[10,"set_goto","","Set the next state index for the character given.",7,{"inputs":[{"name":"self"},{"name":"u8"},{"name":"stateidx"}],"output":null}],[10,"heap_bytes","","The memory use in bytes (on the heap) of this set of transitions.",7,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"acautomaton"}}],[11,"new","","Create a new automaton from an iterator of patterns.",8,{"inputs":[{"name":"i"}],"output":{"generics":["dense"],"name":"acautomaton"}}],[11,"with_transitions","","Create a new automaton from an iterator of patterns.",8,{"inputs":[{"name":"i"}],"output":{"name":"acautomaton"}}],[11,"into_full","","Build out the entire automaton into a single matrix.",8,{"inputs":[{"name":"self"}],"output":{"name":"fullacautomaton"}}],[11,"next_state","","",8,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"u8"}],"output":{"name":"stateidx"}}],[11,"get_match","","",8,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"},{"name":"usize"}],"output":{"name":"match"}}],[11,"has_match","","",8,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"start_bytes","","",8,null],[11,"patterns","","",8,null],[11,"pattern","","",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"p"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"dense"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",9,{"inputs":[{"name":"u32"}],"output":{"name":"dense"}}],[11,"goto","","",9,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"stateidx"}}],[11,"set_goto","","",9,{"inputs":[{"name":"self"},{"name":"u8"},{"name":"stateidx"}],"output":null}],[11,"heap_bytes","","",9,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"sparse"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",10,{"inputs":[{"name":"u32"}],"output":{"name":"sparse"}}],[11,"goto","","",10,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"stateidx"}}],[11,"set_goto","","",10,{"inputs":[{"name":"self"},{"name":"u8"},{"name":"stateidx"}],"output":null}],[11,"heap_bytes","","",10,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"from_iter","","Create an automaton from an iterator of strings.",8,{"inputs":[{"name":"t"}],"output":{"name":"acautomaton"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"len","","Return the number of patterns in the automaton.",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the automaton has no patterns.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"matches"}}],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"matchesoverlapping"}}],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"streammatches"}}],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"streammatchesoverlapping"}}]],"paths":[[3,"Match"],[3,"Matches"],[3,"StreamMatches"],[3,"MatchesOverlapping"],[3,"StreamMatchesOverlapping"],[3,"FullAcAutomaton"],[8,"Automaton"],[8,"Transitions"],[3,"AcAutomaton"],[3,"Dense"],[3,"Sparse"]]};
searchIndex["alsa_sys"] = {"doc":"","items":[[3,"snd_dlsym_link","alsa_sys","",null,null],[12,"next","","",0,null],[12,"dlsym_name","","",0,null],[12,"dlsym_ptr","","",0,null],[3,"snd_devname_t","","",null,null],[12,"name","","",1,null],[12,"comment","","",1,null],[12,"next","","",1,null],[3,"snd_pcm_channel_area_t","","",null,null],[12,"addr","","",2,null],[12,"first","","",2,null],[12,"step","","",2,null],[3,"snd_pcm_sync_id_t","","",null,null],[12,"data","","",3,null],[3,"snd_pcm_chmap_t","","",null,null],[12,"channels","","",4,null],[12,"pos","","",4,null],[3,"snd_pcm_chmap_query_t","","",null,null],[12,"_type","","",5,null],[12,"map","","",5,null],[3,"snd_pcm_scope_ops_t","","",null,null],[12,"enable","","",6,null],[12,"disable","","",6,null],[12,"start","","",6,null],[12,"stop","","",6,null],[12,"update","","",6,null],[12,"reset","","",6,null],[12,"close","","",6,null],[3,"snd_timer_read_t","","",null,null],[12,"resolution","","",7,null],[12,"ticks","","",7,null],[3,"snd_timer_tread_t","","",null,null],[12,"event","","",8,null],[12,"tstamp","","",8,null],[12,"val","","",8,null],[3,"snd_aes_iec958_t","","",null,null],[12,"status","","",9,null],[12,"subcode","","",9,null],[12,"pad","","",9,null],[12,"dig_subframe","","",9,null],[3,"snd_mixer_selem_regopt","","",null,null],[12,"ver","","",10,null],[12,"_abstract","","",10,null],[12,"device","","",10,null],[12,"playback_pcm","","",10,null],[12,"capture_pcm","","",10,null],[3,"snd_seq_addr_t","","",null,null],[12,"client","","",11,null],[12,"port","","",11,null],[3,"snd_seq_connect_t","","",null,null],[12,"sender","","",12,null],[12,"dest","","",12,null],[3,"snd_seq_real_time_t","","",null,null],[12,"tv_sec","","",13,null],[12,"tv_nsec","","",13,null],[3,"snd_seq_timestamp_t","","",null,null],[12,"data","","",14,null],[3,"snd_seq_ev_note_t","","",null,null],[12,"channel","","",15,null],[12,"note","","",15,null],[12,"velocity","","",15,null],[12,"off_velocity","","",15,null],[12,"duration","","",15,null],[3,"snd_seq_ev_ctrl_t","","",null,null],[12,"channel","","",16,null],[12,"unused","","",16,null],[12,"param","","",16,null],[12,"value","","",16,null],[3,"snd_seq_ev_raw8_t","","",null,null],[12,"d","","",17,null],[3,"snd_seq_ev_raw32_t","","",null,null],[12,"d","","",18,null],[3,"snd_seq_ev_ext_t","","",null,null],[12,"len","","",19,null],[12,"ptr","","",19,null],[3,"snd_seq_result_t","","",null,null],[12,"event","","",20,null],[12,"result","","",20,null],[3,"snd_seq_queue_skew_t","","",null,null],[12,"value","","",21,null],[12,"base","","",21,null],[3,"snd_seq_ev_queue_control_t","","",null,null],[12,"queue","","",22,null],[12,"unused","","",22,null],[12,"param","","",22,null],[3,"Union_Unnamed9","","",null,null],[12,"data","","",23,null],[3,"snd_seq_event_t","","",null,null],[12,"_type","","",24,null],[12,"flags","","",24,null],[12,"tag","","",24,null],[12,"queue","","",24,null],[12,"time","","",24,null],[12,"source","","",24,null],[12,"dest","","",24,null],[12,"data","","",24,null],[3,"Union_Unnamed10","","",null,null],[12,"data","","",25,null],[4,"snd_async_handler_t","","",null,null],[4,"snd_shm_area","","",null,null],[4,"snd_input_t","","",null,null],[4,"snd_output_t","","",null,null],[4,"snd_config_t","","",null,null],[4,"Struct__snd_config_iterator","","",null,null],[4,"snd_config_update_t","","",null,null],[4,"snd_pcm_info_t","","",null,null],[4,"snd_pcm_hw_params_t","","",null,null],[4,"snd_pcm_sw_params_t","","",null,null],[4,"snd_pcm_status_t","","",null,null],[4,"snd_pcm_access_mask_t","","",null,null],[4,"snd_pcm_format_mask_t","","",null,null],[4,"snd_pcm_subformat_mask_t","","",null,null],[4,"snd_pcm_t","","",null,null],[4,"snd_pcm_scope_t","","",null,null],[4,"snd_pcm_hook_t","","",null,null],[4,"snd_rawmidi_info_t","","",null,null],[4,"snd_rawmidi_params_t","","",null,null],[4,"snd_rawmidi_status_t","","",null,null],[4,"snd_rawmidi_t","","",null,null],[4,"snd_timer_id_t","","",null,null],[4,"snd_timer_ginfo_t","","",null,null],[4,"snd_timer_gparams_t","","",null,null],[4,"snd_timer_gstatus_t","","",null,null],[4,"snd_timer_info_t","","",null,null],[4,"snd_timer_params_t","","",null,null],[4,"snd_timer_status_t","","",null,null],[4,"snd_timer_query_t","","",null,null],[4,"snd_timer_t","","",null,null],[4,"snd_hwdep_info_t","","",null,null],[4,"snd_hwdep_dsp_status_t","","",null,null],[4,"snd_hwdep_dsp_image_t","","",null,null],[4,"snd_hwdep_t","","",null,null],[4,"snd_ctl_card_info_t","","",null,null],[4,"snd_ctl_elem_id_t","","",null,null],[4,"snd_ctl_elem_list_t","","",null,null],[4,"snd_ctl_elem_info_t","","",null,null],[4,"snd_ctl_elem_value_t","","",null,null],[4,"snd_ctl_event_t","","",null,null],[4,"snd_ctl_t","","",null,null],[4,"snd_sctl_t","","",null,null],[4,"snd_hctl_elem_t","","",null,null],[4,"snd_hctl_t","","",null,null],[4,"snd_mixer_t","","",null,null],[4,"snd_mixer_class_t","","",null,null],[4,"snd_mixer_elem_t","","",null,null],[4,"snd_mixer_selem_id_t","","",null,null],[4,"snd_seq_t","","",null,null],[4,"snd_seq_system_info_t","","",null,null],[4,"snd_seq_client_info_t","","",null,null],[4,"snd_seq_client_pool_t","","",null,null],[4,"snd_seq_port_info_t","","",null,null],[4,"snd_seq_port_subscribe_t","","",null,null],[4,"snd_seq_query_subscribe_t","","",null,null],[4,"snd_seq_queue_info_t","","",null,null],[4,"snd_seq_queue_status_t","","",null,null],[4,"snd_seq_queue_tempo_t","","",null,null],[4,"snd_seq_queue_timer_t","","",null,null],[4,"snd_seq_remove_events_t","","",null,null],[4,"snd_midi_event_t","","",null,null],[7,"snd_dlsym_start","","",null,null],[7,"snd_lib_error","","",null,null],[7,"snd_config","","",null,null],[7,"snd_seq_event_types","","",null,null],[5,"snd_asoundlib_version","","",null,null],[5,"snd_dlopen","","",null,null],[5,"snd_dlsym","","",null,null],[5,"snd_dlclose","","",null,null],[5,"snd_async_add_handler","","",null,null],[5,"snd_async_del_handler","","",null,null],[5,"snd_async_handler_get_fd","","",null,null],[5,"snd_async_handler_get_signo","","",null,null],[5,"snd_async_handler_get_callback_private","","",null,null],[5,"snd_shm_area_create","","",null,null],[5,"snd_shm_area_share","","",null,null],[5,"snd_shm_area_destroy","","",null,null],[5,"snd_user_file","","",null,null],[5,"snd_input_stdio_open","","",null,null],[5,"snd_input_stdio_attach","","",null,null],[5,"snd_input_buffer_open","","",null,null],[5,"snd_input_close","","",null,null],[5,"snd_input_scanf","","",null,null],[5,"snd_input_gets","","",null,null],[5,"snd_input_getc","","",null,null],[5,"snd_input_ungetc","","",null,null],[5,"snd_output_stdio_open","","",null,null],[5,"snd_output_stdio_attach","","",null,null],[5,"snd_output_buffer_open","","",null,null],[5,"snd_output_buffer_string","","",null,null],[5,"snd_output_close","","",null,null],[5,"snd_output_printf","","",null,null],[5,"snd_output_puts","","",null,null],[5,"snd_output_putc","","",null,null],[5,"snd_output_flush","","",null,null],[5,"snd_strerror","","",null,null],[5,"snd_lib_error_set_handler","","",null,null],[5,"snd_config_top","","",null,null],[5,"snd_config_load","","",null,null],[5,"snd_config_load_override","","",null,null],[5,"snd_config_save","","",null,null],[5,"snd_config_update","","",null,null],[5,"snd_config_update_r","","",null,null],[5,"snd_config_update_free","","",null,null],[5,"snd_config_update_free_global","","",null,null],[5,"snd_config_search","","",null,null],[5,"snd_config_searchv","","",null,null],[5,"snd_config_search_definition","","",null,null],[5,"snd_config_expand","","",null,null],[5,"snd_config_evaluate","","",null,null],[5,"snd_config_add","","",null,null],[5,"snd_config_delete","","",null,null],[5,"snd_config_delete_compound_members","","",null,null],[5,"snd_config_copy","","",null,null],[5,"snd_config_make","","",null,null],[5,"snd_config_make_integer","","",null,null],[5,"snd_config_make_integer64","","",null,null],[5,"snd_config_make_real","","",null,null],[5,"snd_config_make_string","","",null,null],[5,"snd_config_make_pointer","","",null,null],[5,"snd_config_make_compound","","",null,null],[5,"snd_config_imake_integer","","",null,null],[5,"snd_config_imake_integer64","","",null,null],[5,"snd_config_imake_real","","",null,null],[5,"snd_config_imake_string","","",null,null],[5,"snd_config_imake_pointer","","",null,null],[5,"snd_config_get_type","","",null,null],[5,"snd_config_set_id","","",null,null],[5,"snd_config_set_integer","","",null,null],[5,"snd_config_set_integer64","","",null,null],[5,"snd_config_set_real","","",null,null],[5,"snd_config_set_string","","",null,null],[5,"snd_config_set_ascii","","",null,null],[5,"snd_config_set_pointer","","",null,null],[5,"snd_config_get_id","","",null,null],[5,"snd_config_get_integer","","",null,null],[5,"snd_config_get_integer64","","",null,null],[5,"snd_config_get_real","","",null,null],[5,"snd_config_get_ireal","","",null,null],[5,"snd_config_get_string","","",null,null],[5,"snd_config_get_ascii","","",null,null],[5,"snd_config_get_pointer","","",null,null],[5,"snd_config_test_id","","",null,null],[5,"snd_config_iterator_first","","",null,null],[5,"snd_config_iterator_next","","",null,null],[5,"snd_config_iterator_end","","",null,null],[5,"snd_config_iterator_entry","","",null,null],[5,"snd_config_get_bool_ascii","","",null,null],[5,"snd_config_get_bool","","",null,null],[5,"snd_config_get_ctl_iface_ascii","","",null,null],[5,"snd_config_get_ctl_iface","","",null,null],[5,"snd_names_list","","",null,null],[5,"snd_names_list_free","","",null,null],[5,"snd_pcm_open","","",null,null],[5,"snd_pcm_open_lconf","","",null,null],[5,"snd_pcm_open_fallback","","",null,null],[5,"snd_pcm_close","","",null,null],[5,"snd_pcm_name","","",null,null],[5,"snd_pcm_type","","",null,null],[5,"snd_pcm_stream","","",null,null],[5,"snd_pcm_poll_descriptors_count","","",null,null],[5,"snd_pcm_poll_descriptors","","",null,null],[5,"snd_pcm_poll_descriptors_revents","","",null,null],[5,"snd_pcm_nonblock","","",null,null],[5,"snd_async_add_pcm_handler","","",null,null],[5,"snd_async_handler_get_pcm","","",null,null],[5,"snd_pcm_info","","",null,null],[5,"snd_pcm_hw_params_current","","",null,null],[5,"snd_pcm_hw_params","","",null,null],[5,"snd_pcm_hw_free","","",null,null],[5,"snd_pcm_sw_params_current","","",null,null],[5,"snd_pcm_sw_params","","",null,null],[5,"snd_pcm_prepare","","",null,null],[5,"snd_pcm_reset","","",null,null],[5,"snd_pcm_status","","",null,null],[5,"snd_pcm_start","","",null,null],[5,"snd_pcm_drop","","",null,null],[5,"snd_pcm_drain","","",null,null],[5,"snd_pcm_pause","","",null,null],[5,"snd_pcm_state","","",null,null],[5,"snd_pcm_hwsync","","",null,null],[5,"snd_pcm_delay","","",null,null],[5,"snd_pcm_resume","","",null,null],[5,"snd_pcm_htimestamp","","",null,null],[5,"snd_pcm_avail","","",null,null],[5,"snd_pcm_avail_update","","",null,null],[5,"snd_pcm_avail_delay","","",null,null],[5,"snd_pcm_rewindable","","",null,null],[5,"snd_pcm_rewind","","",null,null],[5,"snd_pcm_forwardable","","",null,null],[5,"snd_pcm_forward","","",null,null],[5,"snd_pcm_writei","","",null,null],[5,"snd_pcm_readi","","",null,null],[5,"snd_pcm_writen","","",null,null],[5,"snd_pcm_readn","","",null,null],[5,"snd_pcm_wait","","",null,null],[5,"snd_pcm_link","","",null,null],[5,"snd_pcm_unlink","","",null,null],[5,"snd_pcm_query_chmaps","","",null,null],[5,"snd_pcm_query_chmaps_from_hw","","",null,null],[5,"snd_pcm_free_chmaps","","",null,null],[5,"snd_pcm_get_chmap","","",null,null],[5,"snd_pcm_set_chmap","","",null,null],[5,"snd_pcm_chmap_type_name","","",null,null],[5,"snd_pcm_chmap_name","","",null,null],[5,"snd_pcm_chmap_long_name","","",null,null],[5,"snd_pcm_chmap_print","","",null,null],[5,"snd_pcm_chmap_from_string","","",null,null],[5,"snd_pcm_chmap_parse_string","","",null,null],[5,"snd_pcm_recover","","",null,null],[5,"snd_pcm_set_params","","",null,null],[5,"snd_pcm_get_params","","",null,null],[5,"snd_pcm_info_sizeof","","",null,null],[5,"snd_pcm_info_malloc","","",null,null],[5,"snd_pcm_info_free","","",null,null],[5,"snd_pcm_info_copy","","",null,null],[5,"snd_pcm_info_get_device","","",null,null],[5,"snd_pcm_info_get_subdevice","","",null,null],[5,"snd_pcm_info_get_stream","","",null,null],[5,"snd_pcm_info_get_card","","",null,null],[5,"snd_pcm_info_get_id","","",null,null],[5,"snd_pcm_info_get_name","","",null,null],[5,"snd_pcm_info_get_subdevice_name","","",null,null],[5,"snd_pcm_info_get_class","","",null,null],[5,"snd_pcm_info_get_subclass","","",null,null],[5,"snd_pcm_info_get_subdevices_count","","",null,null],[5,"snd_pcm_info_get_subdevices_avail","","",null,null],[5,"snd_pcm_info_get_sync","","",null,null],[5,"snd_pcm_info_set_device","","",null,null],[5,"snd_pcm_info_set_subdevice","","",null,null],[5,"snd_pcm_info_set_stream","","",null,null],[5,"snd_pcm_hw_params_any","","",null,null],[5,"snd_pcm_hw_params_can_mmap_sample_resolution","","",null,null],[5,"snd_pcm_hw_params_is_double","","",null,null],[5,"snd_pcm_hw_params_is_batch","","",null,null],[5,"snd_pcm_hw_params_is_block_transfer","","",null,null],[5,"snd_pcm_hw_params_is_monotonic","","",null,null],[5,"snd_pcm_hw_params_can_overrange","","",null,null],[5,"snd_pcm_hw_params_can_pause","","",null,null],[5,"snd_pcm_hw_params_can_resume","","",null,null],[5,"snd_pcm_hw_params_is_half_duplex","","",null,null],[5,"snd_pcm_hw_params_is_joint_duplex","","",null,null],[5,"snd_pcm_hw_params_can_sync_start","","",null,null],[5,"snd_pcm_hw_params_can_disable_period_wakeup","","",null,null],[5,"snd_pcm_hw_params_supports_audio_wallclock_ts","","",null,null],[5,"snd_pcm_hw_params_get_rate_numden","","",null,null],[5,"snd_pcm_hw_params_get_sbits","","",null,null],[5,"snd_pcm_hw_params_get_fifo_size","","",null,null],[5,"snd_pcm_hw_params_sizeof","","",null,null],[5,"snd_pcm_hw_params_malloc","","",null,null],[5,"snd_pcm_hw_params_free","","",null,null],[5,"snd_pcm_hw_params_copy","","",null,null],[5,"snd_pcm_hw_params_get_access","","",null,null],[5,"snd_pcm_hw_params_test_access","","",null,null],[5,"snd_pcm_hw_params_set_access","","",null,null],[5,"snd_pcm_hw_params_set_access_first","","",null,null],[5,"snd_pcm_hw_params_set_access_last","","",null,null],[5,"snd_pcm_hw_params_set_access_mask","","",null,null],[5,"snd_pcm_hw_params_get_access_mask","","",null,null],[5,"snd_pcm_hw_params_get_format","","",null,null],[5,"snd_pcm_hw_params_test_format","","",null,null],[5,"snd_pcm_hw_params_set_format","","",null,null],[5,"snd_pcm_hw_params_set_format_first","","",null,null],[5,"snd_pcm_hw_params_set_format_last","","",null,null],[5,"snd_pcm_hw_params_set_format_mask","","",null,null],[5,"snd_pcm_hw_params_get_format_mask","","",null,null],[5,"snd_pcm_hw_params_get_subformat","","",null,null],[5,"snd_pcm_hw_params_test_subformat","","",null,null],[5,"snd_pcm_hw_params_set_subformat","","",null,null],[5,"snd_pcm_hw_params_set_subformat_first","","",null,null],[5,"snd_pcm_hw_params_set_subformat_last","","",null,null],[5,"snd_pcm_hw_params_set_subformat_mask","","",null,null],[5,"snd_pcm_hw_params_get_subformat_mask","","",null,null],[5,"snd_pcm_hw_params_get_channels","","",null,null],[5,"snd_pcm_hw_params_get_channels_min","","",null,null],[5,"snd_pcm_hw_params_get_channels_max","","",null,null],[5,"snd_pcm_hw_params_test_channels","","",null,null],[5,"snd_pcm_hw_params_set_channels","","",null,null],[5,"snd_pcm_hw_params_set_channels_min","","",null,null],[5,"snd_pcm_hw_params_set_channels_max","","",null,null],[5,"snd_pcm_hw_params_set_channels_minmax","","",null,null],[5,"snd_pcm_hw_params_set_channels_near","","",null,null],[5,"snd_pcm_hw_params_set_channels_first","","",null,null],[5,"snd_pcm_hw_params_set_channels_last","","",null,null],[5,"snd_pcm_hw_params_get_rate","","",null,null],[5,"snd_pcm_hw_params_get_rate_min","","",null,null],[5,"snd_pcm_hw_params_get_rate_max","","",null,null],[5,"snd_pcm_hw_params_test_rate","","",null,null],[5,"snd_pcm_hw_params_set_rate","","",null,null],[5,"snd_pcm_hw_params_set_rate_min","","",null,null],[5,"snd_pcm_hw_params_set_rate_max","","",null,null],[5,"snd_pcm_hw_params_set_rate_minmax","","",null,null],[5,"snd_pcm_hw_params_set_rate_near","","",null,null],[5,"snd_pcm_hw_params_set_rate_first","","",null,null],[5,"snd_pcm_hw_params_set_rate_last","","",null,null],[5,"snd_pcm_hw_params_set_rate_resample","","",null,null],[5,"snd_pcm_hw_params_get_rate_resample","","",null,null],[5,"snd_pcm_hw_params_set_export_buffer","","",null,null],[5,"snd_pcm_hw_params_get_export_buffer","","",null,null],[5,"snd_pcm_hw_params_set_period_wakeup","","",null,null],[5,"snd_pcm_hw_params_get_period_wakeup","","",null,null],[5,"snd_pcm_hw_params_get_period_time","","",null,null],[5,"snd_pcm_hw_params_get_period_time_min","","",null,null],[5,"snd_pcm_hw_params_get_period_time_max","","",null,null],[5,"snd_pcm_hw_params_test_period_time","","",null,null],[5,"snd_pcm_hw_params_set_period_time","","",null,null],[5,"snd_pcm_hw_params_set_period_time_min","","",null,null],[5,"snd_pcm_hw_params_set_period_time_max","","",null,null],[5,"snd_pcm_hw_params_set_period_time_minmax","","",null,null],[5,"snd_pcm_hw_params_set_period_time_near","","",null,null],[5,"snd_pcm_hw_params_set_period_time_first","","",null,null],[5,"snd_pcm_hw_params_set_period_time_last","","",null,null],[5,"snd_pcm_hw_params_get_period_size","","",null,null],[5,"snd_pcm_hw_params_get_period_size_min","","",null,null],[5,"snd_pcm_hw_params_get_period_size_max","","",null,null],[5,"snd_pcm_hw_params_test_period_size","","",null,null],[5,"snd_pcm_hw_params_set_period_size","","",null,null],[5,"snd_pcm_hw_params_set_period_size_min","","",null,null],[5,"snd_pcm_hw_params_set_period_size_max","","",null,null],[5,"snd_pcm_hw_params_set_period_size_minmax","","",null,null],[5,"snd_pcm_hw_params_set_period_size_near","","",null,null],[5,"snd_pcm_hw_params_set_period_size_first","","",null,null],[5,"snd_pcm_hw_params_set_period_size_last","","",null,null],[5,"snd_pcm_hw_params_set_period_size_integer","","",null,null],[5,"snd_pcm_hw_params_get_periods","","",null,null],[5,"snd_pcm_hw_params_get_periods_min","","",null,null],[5,"snd_pcm_hw_params_get_periods_max","","",null,null],[5,"snd_pcm_hw_params_test_periods","","",null,null],[5,"snd_pcm_hw_params_set_periods","","",null,null],[5,"snd_pcm_hw_params_set_periods_min","","",null,null],[5,"snd_pcm_hw_params_set_periods_max","","",null,null],[5,"snd_pcm_hw_params_set_periods_minmax","","",null,null],[5,"snd_pcm_hw_params_set_periods_near","","",null,null],[5,"snd_pcm_hw_params_set_periods_first","","",null,null],[5,"snd_pcm_hw_params_set_periods_last","","",null,null],[5,"snd_pcm_hw_params_set_periods_integer","","",null,null],[5,"snd_pcm_hw_params_get_buffer_time","","",null,null],[5,"snd_pcm_hw_params_get_buffer_time_min","","",null,null],[5,"snd_pcm_hw_params_get_buffer_time_max","","",null,null],[5,"snd_pcm_hw_params_test_buffer_time","","",null,null],[5,"snd_pcm_hw_params_set_buffer_time","","",null,null],[5,"snd_pcm_hw_params_set_buffer_time_min","","",null,null],[5,"snd_pcm_hw_params_set_buffer_time_max","","",null,null],[5,"snd_pcm_hw_params_set_buffer_time_minmax","","",null,null],[5,"snd_pcm_hw_params_set_buffer_time_near","","",null,null],[5,"snd_pcm_hw_params_set_buffer_time_first","","",null,null],[5,"snd_pcm_hw_params_set_buffer_time_last","","",null,null],[5,"snd_pcm_hw_params_get_buffer_size","","",null,null],[5,"snd_pcm_hw_params_get_buffer_size_min","","",null,null],[5,"snd_pcm_hw_params_get_buffer_size_max","","",null,null],[5,"snd_pcm_hw_params_test_buffer_size","","",null,null],[5,"snd_pcm_hw_params_set_buffer_size","","",null,null],[5,"snd_pcm_hw_params_set_buffer_size_min","","",null,null],[5,"snd_pcm_hw_params_set_buffer_size_max","","",null,null],[5,"snd_pcm_hw_params_set_buffer_size_minmax","","",null,null],[5,"snd_pcm_hw_params_set_buffer_size_near","","",null,null],[5,"snd_pcm_hw_params_set_buffer_size_first","","",null,null],[5,"snd_pcm_hw_params_set_buffer_size_last","","",null,null],[5,"snd_pcm_hw_params_get_min_align","","",null,null],[5,"snd_pcm_sw_params_sizeof","","",null,null],[5,"snd_pcm_sw_params_malloc","","",null,null],[5,"snd_pcm_sw_params_free","","",null,null],[5,"snd_pcm_sw_params_copy","","",null,null],[5,"snd_pcm_sw_params_get_boundary","","",null,null],[5,"snd_pcm_sw_params_set_tstamp_mode","","",null,null],[5,"snd_pcm_sw_params_get_tstamp_mode","","",null,null],[5,"snd_pcm_sw_params_set_avail_min","","",null,null],[5,"snd_pcm_sw_params_get_avail_min","","",null,null],[5,"snd_pcm_sw_params_set_period_event","","",null,null],[5,"snd_pcm_sw_params_get_period_event","","",null,null],[5,"snd_pcm_sw_params_set_start_threshold","","",null,null],[5,"snd_pcm_sw_params_get_start_threshold","","",null,null],[5,"snd_pcm_sw_params_set_stop_threshold","","",null,null],[5,"snd_pcm_sw_params_get_stop_threshold","","",null,null],[5,"snd_pcm_sw_params_set_silence_threshold","","",null,null],[5,"snd_pcm_sw_params_get_silence_threshold","","",null,null],[5,"snd_pcm_sw_params_set_silence_size","","",null,null],[5,"snd_pcm_sw_params_get_silence_size","","",null,null],[5,"snd_pcm_access_mask_sizeof","","",null,null],[5,"snd_pcm_access_mask_malloc","","",null,null],[5,"snd_pcm_access_mask_free","","",null,null],[5,"snd_pcm_access_mask_copy","","",null,null],[5,"snd_pcm_access_mask_none","","",null,null],[5,"snd_pcm_access_mask_any","","",null,null],[5,"snd_pcm_access_mask_test","","",null,null],[5,"snd_pcm_access_mask_empty","","",null,null],[5,"snd_pcm_access_mask_set","","",null,null],[5,"snd_pcm_access_mask_reset","","",null,null],[5,"snd_pcm_format_mask_sizeof","","",null,null],[5,"snd_pcm_format_mask_malloc","","",null,null],[5,"snd_pcm_format_mask_free","","",null,null],[5,"snd_pcm_format_mask_copy","","",null,null],[5,"snd_pcm_format_mask_none","","",null,null],[5,"snd_pcm_format_mask_any","","",null,null],[5,"snd_pcm_format_mask_test","","",null,null],[5,"snd_pcm_format_mask_empty","","",null,null],[5,"snd_pcm_format_mask_set","","",null,null],[5,"snd_pcm_format_mask_reset","","",null,null],[5,"snd_pcm_subformat_mask_sizeof","","",null,null],[5,"snd_pcm_subformat_mask_malloc","","",null,null],[5,"snd_pcm_subformat_mask_free","","",null,null],[5,"snd_pcm_subformat_mask_copy","","",null,null],[5,"snd_pcm_subformat_mask_none","","",null,null],[5,"snd_pcm_subformat_mask_any","","",null,null],[5,"snd_pcm_subformat_mask_test","","",null,null],[5,"snd_pcm_subformat_mask_empty","","",null,null],[5,"snd_pcm_subformat_mask_set","","",null,null],[5,"snd_pcm_subformat_mask_reset","","",null,null],[5,"snd_pcm_status_sizeof","","",null,null],[5,"snd_pcm_status_malloc","","",null,null],[5,"snd_pcm_status_free","","",null,null],[5,"snd_pcm_status_copy","","",null,null],[5,"snd_pcm_status_get_state","","",null,null],[5,"snd_pcm_status_get_trigger_tstamp","","",null,null],[5,"snd_pcm_status_get_trigger_htstamp","","",null,null],[5,"snd_pcm_status_get_tstamp","","",null,null],[5,"snd_pcm_status_get_htstamp","","",null,null],[5,"snd_pcm_status_get_audio_htstamp","","",null,null],[5,"snd_pcm_status_get_delay","","",null,null],[5,"snd_pcm_status_get_avail","","",null,null],[5,"snd_pcm_status_get_avail_max","","",null,null],[5,"snd_pcm_status_get_overrange","","",null,null],[5,"snd_pcm_type_name","","",null,null],[5,"snd_pcm_stream_name","","",null,null],[5,"snd_pcm_access_name","","",null,null],[5,"snd_pcm_format_name","","",null,null],[5,"snd_pcm_format_description","","",null,null],[5,"snd_pcm_subformat_name","","",null,null],[5,"snd_pcm_subformat_description","","",null,null],[5,"snd_pcm_format_value","","",null,null],[5,"snd_pcm_tstamp_mode_name","","",null,null],[5,"snd_pcm_state_name","","",null,null],[5,"snd_pcm_dump","","",null,null],[5,"snd_pcm_dump_hw_setup","","",null,null],[5,"snd_pcm_dump_sw_setup","","",null,null],[5,"snd_pcm_dump_setup","","",null,null],[5,"snd_pcm_hw_params_dump","","",null,null],[5,"snd_pcm_sw_params_dump","","",null,null],[5,"snd_pcm_status_dump","","",null,null],[5,"snd_pcm_mmap_begin","","",null,null],[5,"snd_pcm_mmap_commit","","",null,null],[5,"snd_pcm_mmap_writei","","",null,null],[5,"snd_pcm_mmap_readi","","",null,null],[5,"snd_pcm_mmap_writen","","",null,null],[5,"snd_pcm_mmap_readn","","",null,null],[5,"snd_pcm_format_signed","","",null,null],[5,"snd_pcm_format_unsigned","","",null,null],[5,"snd_pcm_format_linear","","",null,null],[5,"snd_pcm_format_float","","",null,null],[5,"snd_pcm_format_little_endian","","",null,null],[5,"snd_pcm_format_big_endian","","",null,null],[5,"snd_pcm_format_cpu_endian","","",null,null],[5,"snd_pcm_format_width","","",null,null],[5,"snd_pcm_format_physical_width","","",null,null],[5,"snd_pcm_build_linear_format","","",null,null],[5,"snd_pcm_format_size","","",null,null],[5,"snd_pcm_format_silence","","",null,null],[5,"snd_pcm_format_silence_16","","",null,null],[5,"snd_pcm_format_silence_32","","",null,null],[5,"snd_pcm_format_silence_64","","",null,null],[5,"snd_pcm_format_set_silence","","",null,null],[5,"snd_pcm_bytes_to_frames","","",null,null],[5,"snd_pcm_frames_to_bytes","","",null,null],[5,"snd_pcm_bytes_to_samples","","",null,null],[5,"snd_pcm_samples_to_bytes","","",null,null],[5,"snd_pcm_area_silence","","",null,null],[5,"snd_pcm_areas_silence","","",null,null],[5,"snd_pcm_area_copy","","",null,null],[5,"snd_pcm_areas_copy","","",null,null],[5,"snd_pcm_hook_get_pcm","","",null,null],[5,"snd_pcm_hook_get_private","","",null,null],[5,"snd_pcm_hook_set_private","","",null,null],[5,"snd_pcm_hook_add","","",null,null],[5,"snd_pcm_hook_remove","","",null,null],[5,"snd_pcm_meter_get_bufsize","","",null,null],[5,"snd_pcm_meter_get_channels","","",null,null],[5,"snd_pcm_meter_get_rate","","",null,null],[5,"snd_pcm_meter_get_now","","",null,null],[5,"snd_pcm_meter_get_boundary","","",null,null],[5,"snd_pcm_meter_add_scope","","",null,null],[5,"snd_pcm_meter_search_scope","","",null,null],[5,"snd_pcm_scope_malloc","","",null,null],[5,"snd_pcm_scope_set_ops","","",null,null],[5,"snd_pcm_scope_set_name","","",null,null],[5,"snd_pcm_scope_get_name","","",null,null],[5,"snd_pcm_scope_get_callback_private","","",null,null],[5,"snd_pcm_scope_set_callback_private","","",null,null],[5,"snd_pcm_scope_s16_open","","",null,null],[5,"snd_pcm_scope_s16_get_channel_buffer","","",null,null],[5,"snd_spcm_init","","",null,null],[5,"snd_spcm_init_duplex","","",null,null],[5,"snd_spcm_init_get_params","","",null,null],[5,"snd_pcm_start_mode_name","","",null,null],[5,"snd_pcm_xrun_mode_name","","",null,null],[5,"snd_pcm_sw_params_set_start_mode","","",null,null],[5,"snd_pcm_sw_params_get_start_mode","","",null,null],[5,"snd_pcm_sw_params_set_xrun_mode","","",null,null],[5,"snd_pcm_sw_params_get_xrun_mode","","",null,null],[5,"snd_pcm_sw_params_set_xfer_align","","",null,null],[5,"snd_pcm_sw_params_get_xfer_align","","",null,null],[5,"snd_pcm_sw_params_set_sleep_min","","",null,null],[5,"snd_pcm_sw_params_get_sleep_min","","",null,null],[5,"snd_pcm_hw_params_get_tick_time","","",null,null],[5,"snd_pcm_hw_params_get_tick_time_min","","",null,null],[5,"snd_pcm_hw_params_get_tick_time_max","","",null,null],[5,"snd_pcm_hw_params_test_tick_time","","",null,null],[5,"snd_pcm_hw_params_set_tick_time","","",null,null],[5,"snd_pcm_hw_params_set_tick_time_min","","",null,null],[5,"snd_pcm_hw_params_set_tick_time_max","","",null,null],[5,"snd_pcm_hw_params_set_tick_time_minmax","","",null,null],[5,"snd_pcm_hw_params_set_tick_time_near","","",null,null],[5,"snd_pcm_hw_params_set_tick_time_first","","",null,null],[5,"snd_pcm_hw_params_set_tick_time_last","","",null,null],[5,"snd_rawmidi_open","","",null,null],[5,"snd_rawmidi_open_lconf","","",null,null],[5,"snd_rawmidi_close","","",null,null],[5,"snd_rawmidi_poll_descriptors_count","","",null,null],[5,"snd_rawmidi_poll_descriptors","","",null,null],[5,"snd_rawmidi_poll_descriptors_revents","","",null,null],[5,"snd_rawmidi_nonblock","","",null,null],[5,"snd_rawmidi_info_sizeof","","",null,null],[5,"snd_rawmidi_info_malloc","","",null,null],[5,"snd_rawmidi_info_free","","",null,null],[5,"snd_rawmidi_info_copy","","",null,null],[5,"snd_rawmidi_info_get_device","","",null,null],[5,"snd_rawmidi_info_get_subdevice","","",null,null],[5,"snd_rawmidi_info_get_stream","","",null,null],[5,"snd_rawmidi_info_get_card","","",null,null],[5,"snd_rawmidi_info_get_flags","","",null,null],[5,"snd_rawmidi_info_get_id","","",null,null],[5,"snd_rawmidi_info_get_name","","",null,null],[5,"snd_rawmidi_info_get_subdevice_name","","",null,null],[5,"snd_rawmidi_info_get_subdevices_count","","",null,null],[5,"snd_rawmidi_info_get_subdevices_avail","","",null,null],[5,"snd_rawmidi_info_set_device","","",null,null],[5,"snd_rawmidi_info_set_subdevice","","",null,null],[5,"snd_rawmidi_info_set_stream","","",null,null],[5,"snd_rawmidi_info","","",null,null],[5,"snd_rawmidi_params_sizeof","","",null,null],[5,"snd_rawmidi_params_malloc","","",null,null],[5,"snd_rawmidi_params_free","","",null,null],[5,"snd_rawmidi_params_copy","","",null,null],[5,"snd_rawmidi_params_set_buffer_size","","",null,null],[5,"snd_rawmidi_params_get_buffer_size","","",null,null],[5,"snd_rawmidi_params_set_avail_min","","",null,null],[5,"snd_rawmidi_params_get_avail_min","","",null,null],[5,"snd_rawmidi_params_set_no_active_sensing","","",null,null],[5,"snd_rawmidi_params_get_no_active_sensing","","",null,null],[5,"snd_rawmidi_params","","",null,null],[5,"snd_rawmidi_params_current","","",null,null],[5,"snd_rawmidi_status_sizeof","","",null,null],[5,"snd_rawmidi_status_malloc","","",null,null],[5,"snd_rawmidi_status_free","","",null,null],[5,"snd_rawmidi_status_copy","","",null,null],[5,"snd_rawmidi_status_get_tstamp","","",null,null],[5,"snd_rawmidi_status_get_avail","","",null,null],[5,"snd_rawmidi_status_get_xruns","","",null,null],[5,"snd_rawmidi_status","","",null,null],[5,"snd_rawmidi_drain","","",null,null],[5,"snd_rawmidi_drop","","",null,null],[5,"snd_rawmidi_write","","",null,null],[5,"snd_rawmidi_read","","",null,null],[5,"snd_rawmidi_name","","",null,null],[5,"snd_rawmidi_type","","",null,null],[5,"snd_rawmidi_stream","","",null,null],[5,"snd_timer_query_open","","",null,null],[5,"snd_timer_query_open_lconf","","",null,null],[5,"snd_timer_query_close","","",null,null],[5,"snd_timer_query_next_device","","",null,null],[5,"snd_timer_query_info","","",null,null],[5,"snd_timer_query_params","","",null,null],[5,"snd_timer_query_status","","",null,null],[5,"snd_timer_open","","",null,null],[5,"snd_timer_open_lconf","","",null,null],[5,"snd_timer_close","","",null,null],[5,"snd_async_add_timer_handler","","",null,null],[5,"snd_async_handler_get_timer","","",null,null],[5,"snd_timer_poll_descriptors_count","","",null,null],[5,"snd_timer_poll_descriptors","","",null,null],[5,"snd_timer_poll_descriptors_revents","","",null,null],[5,"snd_timer_info","","",null,null],[5,"snd_timer_params","","",null,null],[5,"snd_timer_status","","",null,null],[5,"snd_timer_start","","",null,null],[5,"snd_timer_stop","","",null,null],[5,"snd_timer_continue","","",null,null],[5,"snd_timer_read","","",null,null],[5,"snd_timer_id_sizeof","","",null,null],[5,"snd_timer_id_malloc","","",null,null],[5,"snd_timer_id_free","","",null,null],[5,"snd_timer_id_copy","","",null,null],[5,"snd_timer_id_set_class","","",null,null],[5,"snd_timer_id_get_class","","",null,null],[5,"snd_timer_id_set_sclass","","",null,null],[5,"snd_timer_id_get_sclass","","",null,null],[5,"snd_timer_id_set_card","","",null,null],[5,"snd_timer_id_get_card","","",null,null],[5,"snd_timer_id_set_device","","",null,null],[5,"snd_timer_id_get_device","","",null,null],[5,"snd_timer_id_set_subdevice","","",null,null],[5,"snd_timer_id_get_subdevice","","",null,null],[5,"snd_timer_ginfo_sizeof","","",null,null],[5,"snd_timer_ginfo_malloc","","",null,null],[5,"snd_timer_ginfo_free","","",null,null],[5,"snd_timer_ginfo_copy","","",null,null],[5,"snd_timer_ginfo_set_tid","","",null,null],[5,"snd_timer_ginfo_get_tid","","",null,null],[5,"snd_timer_ginfo_get_flags","","",null,null],[5,"snd_timer_ginfo_get_card","","",null,null],[5,"snd_timer_ginfo_get_id","","",null,null],[5,"snd_timer_ginfo_get_name","","",null,null],[5,"snd_timer_ginfo_get_resolution","","",null,null],[5,"snd_timer_ginfo_get_resolution_min","","",null,null],[5,"snd_timer_ginfo_get_resolution_max","","",null,null],[5,"snd_timer_ginfo_get_clients","","",null,null],[5,"snd_timer_info_sizeof","","",null,null],[5,"snd_timer_info_malloc","","",null,null],[5,"snd_timer_info_free","","",null,null],[5,"snd_timer_info_copy","","",null,null],[5,"snd_timer_info_is_slave","","",null,null],[5,"snd_timer_info_get_card","","",null,null],[5,"snd_timer_info_get_id","","",null,null],[5,"snd_timer_info_get_name","","",null,null],[5,"snd_timer_info_get_resolution","","",null,null],[5,"snd_timer_params_sizeof","","",null,null],[5,"snd_timer_params_malloc","","",null,null],[5,"snd_timer_params_free","","",null,null],[5,"snd_timer_params_copy","","",null,null],[5,"snd_timer_params_set_auto_start","","",null,null],[5,"snd_timer_params_get_auto_start","","",null,null],[5,"snd_timer_params_set_exclusive","","",null,null],[5,"snd_timer_params_get_exclusive","","",null,null],[5,"snd_timer_params_set_early_event","","",null,null],[5,"snd_timer_params_get_early_event","","",null,null],[5,"snd_timer_params_set_ticks","","",null,null],[5,"snd_timer_params_get_ticks","","",null,null],[5,"snd_timer_params_set_queue_size","","",null,null],[5,"snd_timer_params_get_queue_size","","",null,null],[5,"snd_timer_params_set_filter","","",null,null],[5,"snd_timer_params_get_filter","","",null,null],[5,"snd_timer_status_sizeof","","",null,null],[5,"snd_timer_status_malloc","","",null,null],[5,"snd_timer_status_free","","",null,null],[5,"snd_timer_status_copy","","",null,null],[5,"snd_timer_status_get_timestamp","","",null,null],[5,"snd_timer_status_get_resolution","","",null,null],[5,"snd_timer_status_get_lost","","",null,null],[5,"snd_timer_status_get_overrun","","",null,null],[5,"snd_timer_status_get_queue","","",null,null],[5,"snd_timer_info_get_ticks","","",null,null],[5,"snd_hwdep_open","","",null,null],[5,"snd_hwdep_close","","",null,null],[5,"snd_hwdep_poll_descriptors","","",null,null],[5,"snd_hwdep_poll_descriptors_revents","","",null,null],[5,"snd_hwdep_nonblock","","",null,null],[5,"snd_hwdep_info","","",null,null],[5,"snd_hwdep_dsp_status","","",null,null],[5,"snd_hwdep_dsp_load","","",null,null],[5,"snd_hwdep_ioctl","","",null,null],[5,"snd_hwdep_write","","",null,null],[5,"snd_hwdep_read","","",null,null],[5,"snd_hwdep_info_sizeof","","",null,null],[5,"snd_hwdep_info_malloc","","",null,null],[5,"snd_hwdep_info_free","","",null,null],[5,"snd_hwdep_info_copy","","",null,null],[5,"snd_hwdep_info_get_device","","",null,null],[5,"snd_hwdep_info_get_card","","",null,null],[5,"snd_hwdep_info_get_id","","",null,null],[5,"snd_hwdep_info_get_name","","",null,null],[5,"snd_hwdep_info_get_iface","","",null,null],[5,"snd_hwdep_info_set_device","","",null,null],[5,"snd_hwdep_dsp_status_sizeof","","",null,null],[5,"snd_hwdep_dsp_status_malloc","","",null,null],[5,"snd_hwdep_dsp_status_free","","",null,null],[5,"snd_hwdep_dsp_status_copy","","",null,null],[5,"snd_hwdep_dsp_status_get_version","","",null,null],[5,"snd_hwdep_dsp_status_get_id","","",null,null],[5,"snd_hwdep_dsp_status_get_num_dsps","","",null,null],[5,"snd_hwdep_dsp_status_get_dsp_loaded","","",null,null],[5,"snd_hwdep_dsp_status_get_chip_ready","","",null,null],[5,"snd_hwdep_dsp_image_sizeof","","",null,null],[5,"snd_hwdep_dsp_image_malloc","","",null,null],[5,"snd_hwdep_dsp_image_free","","",null,null],[5,"snd_hwdep_dsp_image_copy","","",null,null],[5,"snd_hwdep_dsp_image_get_index","","",null,null],[5,"snd_hwdep_dsp_image_get_name","","",null,null],[5,"snd_hwdep_dsp_image_get_image","","",null,null],[5,"snd_hwdep_dsp_image_get_length","","",null,null],[5,"snd_hwdep_dsp_image_set_index","","",null,null],[5,"snd_hwdep_dsp_image_set_name","","",null,null],[5,"snd_hwdep_dsp_image_set_image","","",null,null],[5,"snd_hwdep_dsp_image_set_length","","",null,null],[5,"snd_card_load","","",null,null],[5,"snd_card_next","","",null,null],[5,"snd_card_get_index","","",null,null],[5,"snd_card_get_name","","",null,null],[5,"snd_card_get_longname","","",null,null],[5,"snd_device_name_hint","","",null,null],[5,"snd_device_name_free_hint","","",null,null],[5,"snd_device_name_get_hint","","",null,null],[5,"snd_ctl_open","","",null,null],[5,"snd_ctl_open_lconf","","",null,null],[5,"snd_ctl_open_fallback","","",null,null],[5,"snd_ctl_close","","",null,null],[5,"snd_ctl_nonblock","","",null,null],[5,"snd_async_add_ctl_handler","","",null,null],[5,"snd_async_handler_get_ctl","","",null,null],[5,"snd_ctl_poll_descriptors_count","","",null,null],[5,"snd_ctl_poll_descriptors","","",null,null],[5,"snd_ctl_poll_descriptors_revents","","",null,null],[5,"snd_ctl_subscribe_events","","",null,null],[5,"snd_ctl_card_info","","",null,null],[5,"snd_ctl_elem_list","","",null,null],[5,"snd_ctl_elem_info","","",null,null],[5,"snd_ctl_elem_read","","",null,null],[5,"snd_ctl_elem_write","","",null,null],[5,"snd_ctl_elem_lock","","",null,null],[5,"snd_ctl_elem_unlock","","",null,null],[5,"snd_ctl_elem_tlv_read","","",null,null],[5,"snd_ctl_elem_tlv_write","","",null,null],[5,"snd_ctl_elem_tlv_command","","",null,null],[5,"snd_ctl_hwdep_next_device","","",null,null],[5,"snd_ctl_hwdep_info","","",null,null],[5,"snd_ctl_pcm_next_device","","",null,null],[5,"snd_ctl_pcm_info","","",null,null],[5,"snd_ctl_pcm_prefer_subdevice","","",null,null],[5,"snd_ctl_rawmidi_next_device","","",null,null],[5,"snd_ctl_rawmidi_info","","",null,null],[5,"snd_ctl_rawmidi_prefer_subdevice","","",null,null],[5,"snd_ctl_set_power_state","","",null,null],[5,"snd_ctl_get_power_state","","",null,null],[5,"snd_ctl_read","","",null,null],[5,"snd_ctl_wait","","",null,null],[5,"snd_ctl_name","","",null,null],[5,"snd_ctl_type","","",null,null],[5,"snd_ctl_elem_type_name","","",null,null],[5,"snd_ctl_elem_iface_name","","",null,null],[5,"snd_ctl_event_type_name","","",null,null],[5,"snd_ctl_event_elem_get_mask","","",null,null],[5,"snd_ctl_event_elem_get_numid","","",null,null],[5,"snd_ctl_event_elem_get_id","","",null,null],[5,"snd_ctl_event_elem_get_interface","","",null,null],[5,"snd_ctl_event_elem_get_device","","",null,null],[5,"snd_ctl_event_elem_get_subdevice","","",null,null],[5,"snd_ctl_event_elem_get_name","","",null,null],[5,"snd_ctl_event_elem_get_index","","",null,null],[5,"snd_ctl_elem_list_alloc_space","","",null,null],[5,"snd_ctl_elem_list_free_space","","",null,null],[5,"snd_ctl_ascii_elem_id_get","","",null,null],[5,"snd_ctl_ascii_elem_id_parse","","",null,null],[5,"snd_ctl_ascii_value_parse","","",null,null],[5,"snd_ctl_elem_id_sizeof","","",null,null],[5,"snd_ctl_elem_id_malloc","","",null,null],[5,"snd_ctl_elem_id_free","","",null,null],[5,"snd_ctl_elem_id_clear","","",null,null],[5,"snd_ctl_elem_id_copy","","",null,null],[5,"snd_ctl_elem_id_get_numid","","",null,null],[5,"snd_ctl_elem_id_get_interface","","",null,null],[5,"snd_ctl_elem_id_get_device","","",null,null],[5,"snd_ctl_elem_id_get_subdevice","","",null,null],[5,"snd_ctl_elem_id_get_name","","",null,null],[5,"snd_ctl_elem_id_get_index","","",null,null],[5,"snd_ctl_elem_id_set_numid","","",null,null],[5,"snd_ctl_elem_id_set_interface","","",null,null],[5,"snd_ctl_elem_id_set_device","","",null,null],[5,"snd_ctl_elem_id_set_subdevice","","",null,null],[5,"snd_ctl_elem_id_set_name","","",null,null],[5,"snd_ctl_elem_id_set_index","","",null,null],[5,"snd_ctl_card_info_sizeof","","",null,null],[5,"snd_ctl_card_info_malloc","","",null,null],[5,"snd_ctl_card_info_free","","",null,null],[5,"snd_ctl_card_info_clear","","",null,null],[5,"snd_ctl_card_info_copy","","",null,null],[5,"snd_ctl_card_info_get_card","","",null,null],[5,"snd_ctl_card_info_get_id","","",null,null],[5,"snd_ctl_card_info_get_driver","","",null,null],[5,"snd_ctl_card_info_get_name","","",null,null],[5,"snd_ctl_card_info_get_longname","","",null,null],[5,"snd_ctl_card_info_get_mixername","","",null,null],[5,"snd_ctl_card_info_get_components","","",null,null],[5,"snd_ctl_event_sizeof","","",null,null],[5,"snd_ctl_event_malloc","","",null,null],[5,"snd_ctl_event_free","","",null,null],[5,"snd_ctl_event_clear","","",null,null],[5,"snd_ctl_event_copy","","",null,null],[5,"snd_ctl_event_get_type","","",null,null],[5,"snd_ctl_elem_list_sizeof","","",null,null],[5,"snd_ctl_elem_list_malloc","","",null,null],[5,"snd_ctl_elem_list_free","","",null,null],[5,"snd_ctl_elem_list_clear","","",null,null],[5,"snd_ctl_elem_list_copy","","",null,null],[5,"snd_ctl_elem_list_set_offset","","",null,null],[5,"snd_ctl_elem_list_get_used","","",null,null],[5,"snd_ctl_elem_list_get_count","","",null,null],[5,"snd_ctl_elem_list_get_id","","",null,null],[5,"snd_ctl_elem_list_get_numid","","",null,null],[5,"snd_ctl_elem_list_get_interface","","",null,null],[5,"snd_ctl_elem_list_get_device","","",null,null],[5,"snd_ctl_elem_list_get_subdevice","","",null,null],[5,"snd_ctl_elem_list_get_name","","",null,null],[5,"snd_ctl_elem_list_get_index","","",null,null],[5,"snd_ctl_elem_info_sizeof","","",null,null],[5,"snd_ctl_elem_info_malloc","","",null,null],[5,"snd_ctl_elem_info_free","","",null,null],[5,"snd_ctl_elem_info_clear","","",null,null],[5,"snd_ctl_elem_info_copy","","",null,null],[5,"snd_ctl_elem_info_get_type","","",null,null],[5,"snd_ctl_elem_info_is_readable","","",null,null],[5,"snd_ctl_elem_info_is_writable","","",null,null],[5,"snd_ctl_elem_info_is_volatile","","",null,null],[5,"snd_ctl_elem_info_is_inactive","","",null,null],[5,"snd_ctl_elem_info_is_locked","","",null,null],[5,"snd_ctl_elem_info_is_tlv_readable","","",null,null],[5,"snd_ctl_elem_info_is_tlv_writable","","",null,null],[5,"snd_ctl_elem_info_is_tlv_commandable","","",null,null],[5,"snd_ctl_elem_info_is_owner","","",null,null],[5,"snd_ctl_elem_info_is_user","","",null,null],[5,"snd_ctl_elem_info_get_owner","","",null,null],[5,"snd_ctl_elem_info_get_count","","",null,null],[5,"snd_ctl_elem_info_get_min","","",null,null],[5,"snd_ctl_elem_info_get_max","","",null,null],[5,"snd_ctl_elem_info_get_step","","",null,null],[5,"snd_ctl_elem_info_get_min64","","",null,null],[5,"snd_ctl_elem_info_get_max64","","",null,null],[5,"snd_ctl_elem_info_get_step64","","",null,null],[5,"snd_ctl_elem_info_get_items","","",null,null],[5,"snd_ctl_elem_info_set_item","","",null,null],[5,"snd_ctl_elem_info_get_item_name","","",null,null],[5,"snd_ctl_elem_info_get_dimensions","","",null,null],[5,"snd_ctl_elem_info_get_dimension","","",null,null],[5,"snd_ctl_elem_info_get_id","","",null,null],[5,"snd_ctl_elem_info_get_numid","","",null,null],[5,"snd_ctl_elem_info_get_interface","","",null,null],[5,"snd_ctl_elem_info_get_device","","",null,null],[5,"snd_ctl_elem_info_get_subdevice","","",null,null],[5,"snd_ctl_elem_info_get_name","","",null,null],[5,"snd_ctl_elem_info_get_index","","",null,null],[5,"snd_ctl_elem_info_set_id","","",null,null],[5,"snd_ctl_elem_info_set_numid","","",null,null],[5,"snd_ctl_elem_info_set_interface","","",null,null],[5,"snd_ctl_elem_info_set_device","","",null,null],[5,"snd_ctl_elem_info_set_subdevice","","",null,null],[5,"snd_ctl_elem_info_set_name","","",null,null],[5,"snd_ctl_elem_info_set_index","","",null,null],[5,"snd_ctl_elem_add_integer","","",null,null],[5,"snd_ctl_elem_add_integer64","","",null,null],[5,"snd_ctl_elem_add_boolean","","",null,null],[5,"snd_ctl_elem_add_enumerated","","",null,null],[5,"snd_ctl_elem_add_iec958","","",null,null],[5,"snd_ctl_elem_remove","","",null,null],[5,"snd_ctl_elem_value_sizeof","","",null,null],[5,"snd_ctl_elem_value_malloc","","",null,null],[5,"snd_ctl_elem_value_free","","",null,null],[5,"snd_ctl_elem_value_clear","","",null,null],[5,"snd_ctl_elem_value_copy","","",null,null],[5,"snd_ctl_elem_value_compare","","",null,null],[5,"snd_ctl_elem_value_get_id","","",null,null],[5,"snd_ctl_elem_value_get_numid","","",null,null],[5,"snd_ctl_elem_value_get_interface","","",null,null],[5,"snd_ctl_elem_value_get_device","","",null,null],[5,"snd_ctl_elem_value_get_subdevice","","",null,null],[5,"snd_ctl_elem_value_get_name","","",null,null],[5,"snd_ctl_elem_value_get_index","","",null,null],[5,"snd_ctl_elem_value_set_id","","",null,null],[5,"snd_ctl_elem_value_set_numid","","",null,null],[5,"snd_ctl_elem_value_set_interface","","",null,null],[5,"snd_ctl_elem_value_set_device","","",null,null],[5,"snd_ctl_elem_value_set_subdevice","","",null,null],[5,"snd_ctl_elem_value_set_name","","",null,null],[5,"snd_ctl_elem_value_set_index","","",null,null],[5,"snd_ctl_elem_value_get_boolean","","",null,null],[5,"snd_ctl_elem_value_get_integer","","",null,null],[5,"snd_ctl_elem_value_get_integer64","","",null,null],[5,"snd_ctl_elem_value_get_enumerated","","",null,null],[5,"snd_ctl_elem_value_get_byte","","",null,null],[5,"snd_ctl_elem_value_set_boolean","","",null,null],[5,"snd_ctl_elem_value_set_integer","","",null,null],[5,"snd_ctl_elem_value_set_integer64","","",null,null],[5,"snd_ctl_elem_value_set_enumerated","","",null,null],[5,"snd_ctl_elem_value_set_byte","","",null,null],[5,"snd_ctl_elem_set_bytes","","",null,null],[5,"snd_ctl_elem_value_get_bytes","","",null,null],[5,"snd_ctl_elem_value_get_iec958","","",null,null],[5,"snd_ctl_elem_value_set_iec958","","",null,null],[5,"snd_tlv_parse_dB_info","","",null,null],[5,"snd_tlv_get_dB_range","","",null,null],[5,"snd_tlv_convert_to_dB","","",null,null],[5,"snd_tlv_convert_from_dB","","",null,null],[5,"snd_ctl_get_dB_range","","",null,null],[5,"snd_ctl_convert_to_dB","","",null,null],[5,"snd_ctl_convert_from_dB","","",null,null],[5,"snd_hctl_compare_fast","","",null,null],[5,"snd_hctl_open","","",null,null],[5,"snd_hctl_open_ctl","","",null,null],[5,"snd_hctl_close","","",null,null],[5,"snd_hctl_nonblock","","",null,null],[5,"snd_hctl_poll_descriptors_count","","",null,null],[5,"snd_hctl_poll_descriptors","","",null,null],[5,"snd_hctl_poll_descriptors_revents","","",null,null],[5,"snd_hctl_get_count","","",null,null],[5,"snd_hctl_set_compare","","",null,null],[5,"snd_hctl_first_elem","","",null,null],[5,"snd_hctl_last_elem","","",null,null],[5,"snd_hctl_find_elem","","",null,null],[5,"snd_hctl_set_callback","","",null,null],[5,"snd_hctl_set_callback_private","","",null,null],[5,"snd_hctl_get_callback_private","","",null,null],[5,"snd_hctl_load","","",null,null],[5,"snd_hctl_free","","",null,null],[5,"snd_hctl_handle_events","","",null,null],[5,"snd_hctl_name","","",null,null],[5,"snd_hctl_wait","","",null,null],[5,"snd_hctl_ctl","","",null,null],[5,"snd_hctl_elem_next","","",null,null],[5,"snd_hctl_elem_prev","","",null,null],[5,"snd_hctl_elem_info","","",null,null],[5,"snd_hctl_elem_read","","",null,null],[5,"snd_hctl_elem_write","","",null,null],[5,"snd_hctl_elem_tlv_read","","",null,null],[5,"snd_hctl_elem_tlv_write","","",null,null],[5,"snd_hctl_elem_tlv_command","","",null,null],[5,"snd_hctl_elem_get_hctl","","",null,null],[5,"snd_hctl_elem_get_id","","",null,null],[5,"snd_hctl_elem_get_numid","","",null,null],[5,"snd_hctl_elem_get_interface","","",null,null],[5,"snd_hctl_elem_get_device","","",null,null],[5,"snd_hctl_elem_get_subdevice","","",null,null],[5,"snd_hctl_elem_get_name","","",null,null],[5,"snd_hctl_elem_get_index","","",null,null],[5,"snd_hctl_elem_set_callback","","",null,null],[5,"snd_hctl_elem_get_callback_private","","",null,null],[5,"snd_hctl_elem_set_callback_private","","",null,null],[5,"snd_sctl_build","","",null,null],[5,"snd_sctl_free","","",null,null],[5,"snd_sctl_install","","",null,null],[5,"snd_sctl_remove","","",null,null],[5,"snd_mixer_open","","",null,null],[5,"snd_mixer_close","","",null,null],[5,"snd_mixer_first_elem","","",null,null],[5,"snd_mixer_last_elem","","",null,null],[5,"snd_mixer_handle_events","","",null,null],[5,"snd_mixer_attach","","",null,null],[5,"snd_mixer_attach_hctl","","",null,null],[5,"snd_mixer_detach","","",null,null],[5,"snd_mixer_detach_hctl","","",null,null],[5,"snd_mixer_get_hctl","","",null,null],[5,"snd_mixer_poll_descriptors_count","","",null,null],[5,"snd_mixer_poll_descriptors","","",null,null],[5,"snd_mixer_poll_descriptors_revents","","",null,null],[5,"snd_mixer_load","","",null,null],[5,"snd_mixer_free","","",null,null],[5,"snd_mixer_wait","","",null,null],[5,"snd_mixer_set_compare","","",null,null],[5,"snd_mixer_set_callback","","",null,null],[5,"snd_mixer_get_callback_private","","",null,null],[5,"snd_mixer_set_callback_private","","",null,null],[5,"snd_mixer_get_count","","",null,null],[5,"snd_mixer_class_unregister","","",null,null],[5,"snd_mixer_elem_next","","",null,null],[5,"snd_mixer_elem_prev","","",null,null],[5,"snd_mixer_elem_set_callback","","",null,null],[5,"snd_mixer_elem_get_callback_private","","",null,null],[5,"snd_mixer_elem_set_callback_private","","",null,null],[5,"snd_mixer_elem_get_type","","",null,null],[5,"snd_mixer_class_register","","",null,null],[5,"snd_mixer_elem_new","","",null,null],[5,"snd_mixer_elem_add","","",null,null],[5,"snd_mixer_elem_remove","","",null,null],[5,"snd_mixer_elem_free","","",null,null],[5,"snd_mixer_elem_info","","",null,null],[5,"snd_mixer_elem_value","","",null,null],[5,"snd_mixer_elem_attach","","",null,null],[5,"snd_mixer_elem_detach","","",null,null],[5,"snd_mixer_elem_empty","","",null,null],[5,"snd_mixer_elem_get_private","","",null,null],[5,"snd_mixer_class_sizeof","","",null,null],[5,"snd_mixer_class_malloc","","",null,null],[5,"snd_mixer_class_free","","",null,null],[5,"snd_mixer_class_copy","","",null,null],[5,"snd_mixer_class_get_mixer","","",null,null],[5,"snd_mixer_class_get_event","","",null,null],[5,"snd_mixer_class_get_private","","",null,null],[5,"snd_mixer_class_get_compare","","",null,null],[5,"snd_mixer_class_set_event","","",null,null],[5,"snd_mixer_class_set_private","","",null,null],[5,"snd_mixer_class_set_private_free","","",null,null],[5,"snd_mixer_class_set_compare","","",null,null],[5,"snd_mixer_selem_channel_name","","",null,null],[5,"snd_mixer_selem_register","","",null,null],[5,"snd_mixer_selem_get_id","","",null,null],[5,"snd_mixer_selem_get_name","","",null,null],[5,"snd_mixer_selem_get_index","","",null,null],[5,"snd_mixer_find_selem","","",null,null],[5,"snd_mixer_selem_is_active","","",null,null],[5,"snd_mixer_selem_is_playback_mono","","",null,null],[5,"snd_mixer_selem_has_playback_channel","","",null,null],[5,"snd_mixer_selem_is_capture_mono","","",null,null],[5,"snd_mixer_selem_has_capture_channel","","",null,null],[5,"snd_mixer_selem_get_capture_group","","",null,null],[5,"snd_mixer_selem_has_common_volume","","",null,null],[5,"snd_mixer_selem_has_playback_volume","","",null,null],[5,"snd_mixer_selem_has_playback_volume_joined","","",null,null],[5,"snd_mixer_selem_has_capture_volume","","",null,null],[5,"snd_mixer_selem_has_capture_volume_joined","","",null,null],[5,"snd_mixer_selem_has_common_switch","","",null,null],[5,"snd_mixer_selem_has_playback_switch","","",null,null],[5,"snd_mixer_selem_has_playback_switch_joined","","",null,null],[5,"snd_mixer_selem_has_capture_switch","","",null,null],[5,"snd_mixer_selem_has_capture_switch_joined","","",null,null],[5,"snd_mixer_selem_has_capture_switch_exclusive","","",null,null],[5,"snd_mixer_selem_ask_playback_vol_dB","","",null,null],[5,"snd_mixer_selem_ask_capture_vol_dB","","",null,null],[5,"snd_mixer_selem_ask_playback_dB_vol","","",null,null],[5,"snd_mixer_selem_ask_capture_dB_vol","","",null,null],[5,"snd_mixer_selem_get_playback_volume","","",null,null],[5,"snd_mixer_selem_get_capture_volume","","",null,null],[5,"snd_mixer_selem_get_playback_dB","","",null,null],[5,"snd_mixer_selem_get_capture_dB","","",null,null],[5,"snd_mixer_selem_get_playback_switch","","",null,null],[5,"snd_mixer_selem_get_capture_switch","","",null,null],[5,"snd_mixer_selem_set_playback_volume","","",null,null],[5,"snd_mixer_selem_set_capture_volume","","",null,null],[5,"snd_mixer_selem_set_playback_dB","","",null,null],[5,"snd_mixer_selem_set_capture_dB","","",null,null],[5,"snd_mixer_selem_set_playback_volume_all","","",null,null],[5,"snd_mixer_selem_set_capture_volume_all","","",null,null],[5,"snd_mixer_selem_set_playback_dB_all","","",null,null],[5,"snd_mixer_selem_set_capture_dB_all","","",null,null],[5,"snd_mixer_selem_set_playback_switch","","",null,null],[5,"snd_mixer_selem_set_capture_switch","","",null,null],[5,"snd_mixer_selem_set_playback_switch_all","","",null,null],[5,"snd_mixer_selem_set_capture_switch_all","","",null,null],[5,"snd_mixer_selem_get_playback_volume_range","","",null,null],[5,"snd_mixer_selem_get_playback_dB_range","","",null,null],[5,"snd_mixer_selem_set_playback_volume_range","","",null,null],[5,"snd_mixer_selem_get_capture_volume_range","","",null,null],[5,"snd_mixer_selem_get_capture_dB_range","","",null,null],[5,"snd_mixer_selem_set_capture_volume_range","","",null,null],[5,"snd_mixer_selem_is_enumerated","","",null,null],[5,"snd_mixer_selem_is_enum_playback","","",null,null],[5,"snd_mixer_selem_is_enum_capture","","",null,null],[5,"snd_mixer_selem_get_enum_items","","",null,null],[5,"snd_mixer_selem_get_enum_item_name","","",null,null],[5,"snd_mixer_selem_get_enum_item","","",null,null],[5,"snd_mixer_selem_set_enum_item","","",null,null],[5,"snd_mixer_selem_id_sizeof","","",null,null],[5,"snd_mixer_selem_id_malloc","","",null,null],[5,"snd_mixer_selem_id_free","","",null,null],[5,"snd_mixer_selem_id_copy","","",null,null],[5,"snd_mixer_selem_id_get_name","","",null,null],[5,"snd_mixer_selem_id_get_index","","",null,null],[5,"snd_mixer_selem_id_set_name","","",null,null],[5,"snd_mixer_selem_id_set_index","","",null,null],[5,"snd_seq_open","","",null,null],[5,"snd_seq_open_lconf","","",null,null],[5,"snd_seq_name","","",null,null],[5,"snd_seq_type","","",null,null],[5,"snd_seq_close","","",null,null],[5,"snd_seq_poll_descriptors_count","","",null,null],[5,"snd_seq_poll_descriptors","","",null,null],[5,"snd_seq_poll_descriptors_revents","","",null,null],[5,"snd_seq_nonblock","","",null,null],[5,"snd_seq_client_id","","",null,null],[5,"snd_seq_get_output_buffer_size","","",null,null],[5,"snd_seq_get_input_buffer_size","","",null,null],[5,"snd_seq_set_output_buffer_size","","",null,null],[5,"snd_seq_set_input_buffer_size","","",null,null],[5,"snd_seq_system_info_sizeof","","",null,null],[5,"snd_seq_system_info_malloc","","",null,null],[5,"snd_seq_system_info_free","","",null,null],[5,"snd_seq_system_info_copy","","",null,null],[5,"snd_seq_system_info_get_queues","","",null,null],[5,"snd_seq_system_info_get_clients","","",null,null],[5,"snd_seq_system_info_get_ports","","",null,null],[5,"snd_seq_system_info_get_channels","","",null,null],[5,"snd_seq_system_info_get_cur_clients","","",null,null],[5,"snd_seq_system_info_get_cur_queues","","",null,null],[5,"snd_seq_system_info","","",null,null],[5,"snd_seq_client_info_sizeof","","",null,null],[5,"snd_seq_client_info_malloc","","",null,null],[5,"snd_seq_client_info_free","","",null,null],[5,"snd_seq_client_info_copy","","",null,null],[5,"snd_seq_client_info_get_client","","",null,null],[5,"snd_seq_client_info_get_type","","",null,null],[5,"snd_seq_client_info_get_name","","",null,null],[5,"snd_seq_client_info_get_broadcast_filter","","",null,null],[5,"snd_seq_client_info_get_error_bounce","","",null,null],[5,"snd_seq_client_info_get_event_filter","","",null,null],[5,"snd_seq_client_info_get_num_ports","","",null,null],[5,"snd_seq_client_info_get_event_lost","","",null,null],[5,"snd_seq_client_info_set_client","","",null,null],[5,"snd_seq_client_info_set_name","","",null,null],[5,"snd_seq_client_info_set_broadcast_filter","","",null,null],[5,"snd_seq_client_info_set_error_bounce","","",null,null],[5,"snd_seq_client_info_set_event_filter","","",null,null],[5,"snd_seq_client_info_event_filter_clear","","",null,null],[5,"snd_seq_client_info_event_filter_add","","",null,null],[5,"snd_seq_client_info_event_filter_del","","",null,null],[5,"snd_seq_client_info_event_filter_check","","",null,null],[5,"snd_seq_get_client_info","","",null,null],[5,"snd_seq_get_any_client_info","","",null,null],[5,"snd_seq_set_client_info","","",null,null],[5,"snd_seq_query_next_client","","",null,null],[5,"snd_seq_client_pool_sizeof","","",null,null],[5,"snd_seq_client_pool_malloc","","",null,null],[5,"snd_seq_client_pool_free","","",null,null],[5,"snd_seq_client_pool_copy","","",null,null],[5,"snd_seq_client_pool_get_client","","",null,null],[5,"snd_seq_client_pool_get_output_pool","","",null,null],[5,"snd_seq_client_pool_get_input_pool","","",null,null],[5,"snd_seq_client_pool_get_output_room","","",null,null],[5,"snd_seq_client_pool_get_output_free","","",null,null],[5,"snd_seq_client_pool_get_input_free","","",null,null],[5,"snd_seq_client_pool_set_output_pool","","",null,null],[5,"snd_seq_client_pool_set_input_pool","","",null,null],[5,"snd_seq_client_pool_set_output_room","","",null,null],[5,"snd_seq_get_client_pool","","",null,null],[5,"snd_seq_set_client_pool","","",null,null],[5,"snd_seq_port_info_sizeof","","",null,null],[5,"snd_seq_port_info_malloc","","",null,null],[5,"snd_seq_port_info_free","","",null,null],[5,"snd_seq_port_info_copy","","",null,null],[5,"snd_seq_port_info_get_client","","",null,null],[5,"snd_seq_port_info_get_port","","",null,null],[5,"snd_seq_port_info_get_addr","","",null,null],[5,"snd_seq_port_info_get_name","","",null,null],[5,"snd_seq_port_info_get_capability","","",null,null],[5,"snd_seq_port_info_get_type","","",null,null],[5,"snd_seq_port_info_get_midi_channels","","",null,null],[5,"snd_seq_port_info_get_midi_voices","","",null,null],[5,"snd_seq_port_info_get_synth_voices","","",null,null],[5,"snd_seq_port_info_get_read_use","","",null,null],[5,"snd_seq_port_info_get_write_use","","",null,null],[5,"snd_seq_port_info_get_port_specified","","",null,null],[5,"snd_seq_port_info_get_timestamping","","",null,null],[5,"snd_seq_port_info_get_timestamp_real","","",null,null],[5,"snd_seq_port_info_get_timestamp_queue","","",null,null],[5,"snd_seq_port_info_set_client","","",null,null],[5,"snd_seq_port_info_set_port","","",null,null],[5,"snd_seq_port_info_set_addr","","",null,null],[5,"snd_seq_port_info_set_name","","",null,null],[5,"snd_seq_port_info_set_capability","","",null,null],[5,"snd_seq_port_info_set_type","","",null,null],[5,"snd_seq_port_info_set_midi_channels","","",null,null],[5,"snd_seq_port_info_set_midi_voices","","",null,null],[5,"snd_seq_port_info_set_synth_voices","","",null,null],[5,"snd_seq_port_info_set_port_specified","","",null,null],[5,"snd_seq_port_info_set_timestamping","","",null,null],[5,"snd_seq_port_info_set_timestamp_real","","",null,null],[5,"snd_seq_port_info_set_timestamp_queue","","",null,null],[5,"snd_seq_create_port","","",null,null],[5,"snd_seq_delete_port","","",null,null],[5,"snd_seq_get_port_info","","",null,null],[5,"snd_seq_get_any_port_info","","",null,null],[5,"snd_seq_set_port_info","","",null,null],[5,"snd_seq_query_next_port","","",null,null],[5,"snd_seq_port_subscribe_sizeof","","",null,null],[5,"snd_seq_port_subscribe_malloc","","",null,null],[5,"snd_seq_port_subscribe_free","","",null,null],[5,"snd_seq_port_subscribe_copy","","",null,null],[5,"snd_seq_port_subscribe_get_sender","","",null,null],[5,"snd_seq_port_subscribe_get_dest","","",null,null],[5,"snd_seq_port_subscribe_get_queue","","",null,null],[5,"snd_seq_port_subscribe_get_exclusive","","",null,null],[5,"snd_seq_port_subscribe_get_time_update","","",null,null],[5,"snd_seq_port_subscribe_get_time_real","","",null,null],[5,"snd_seq_port_subscribe_set_sender","","",null,null],[5,"snd_seq_port_subscribe_set_dest","","",null,null],[5,"snd_seq_port_subscribe_set_queue","","",null,null],[5,"snd_seq_port_subscribe_set_exclusive","","",null,null],[5,"snd_seq_port_subscribe_set_time_update","","",null,null],[5,"snd_seq_port_subscribe_set_time_real","","",null,null],[5,"snd_seq_get_port_subscription","","",null,null],[5,"snd_seq_subscribe_port","","",null,null],[5,"snd_seq_unsubscribe_port","","",null,null],[5,"snd_seq_query_subscribe_sizeof","","",null,null],[5,"snd_seq_query_subscribe_malloc","","",null,null],[5,"snd_seq_query_subscribe_free","","",null,null],[5,"snd_seq_query_subscribe_copy","","",null,null],[5,"snd_seq_query_subscribe_get_client","","",null,null],[5,"snd_seq_query_subscribe_get_port","","",null,null],[5,"snd_seq_query_subscribe_get_root","","",null,null],[5,"snd_seq_query_subscribe_get_type","","",null,null],[5,"snd_seq_query_subscribe_get_index","","",null,null],[5,"snd_seq_query_subscribe_get_num_subs","","",null,null],[5,"snd_seq_query_subscribe_get_addr","","",null,null],[5,"snd_seq_query_subscribe_get_queue","","",null,null],[5,"snd_seq_query_subscribe_get_exclusive","","",null,null],[5,"snd_seq_query_subscribe_get_time_update","","",null,null],[5,"snd_seq_query_subscribe_get_time_real","","",null,null],[5,"snd_seq_query_subscribe_set_client","","",null,null],[5,"snd_seq_query_subscribe_set_port","","",null,null],[5,"snd_seq_query_subscribe_set_root","","",null,null],[5,"snd_seq_query_subscribe_set_type","","",null,null],[5,"snd_seq_query_subscribe_set_index","","",null,null],[5,"snd_seq_query_port_subscribers","","",null,null],[5,"snd_seq_queue_info_sizeof","","",null,null],[5,"snd_seq_queue_info_malloc","","",null,null],[5,"snd_seq_queue_info_free","","",null,null],[5,"snd_seq_queue_info_copy","","",null,null],[5,"snd_seq_queue_info_get_queue","","",null,null],[5,"snd_seq_queue_info_get_name","","",null,null],[5,"snd_seq_queue_info_get_owner","","",null,null],[5,"snd_seq_queue_info_get_locked","","",null,null],[5,"snd_seq_queue_info_get_flags","","",null,null],[5,"snd_seq_queue_info_set_name","","",null,null],[5,"snd_seq_queue_info_set_owner","","",null,null],[5,"snd_seq_queue_info_set_locked","","",null,null],[5,"snd_seq_queue_info_set_flags","","",null,null],[5,"snd_seq_create_queue","","",null,null],[5,"snd_seq_alloc_named_queue","","",null,null],[5,"snd_seq_alloc_queue","","",null,null],[5,"snd_seq_free_queue","","",null,null],[5,"snd_seq_get_queue_info","","",null,null],[5,"snd_seq_set_queue_info","","",null,null],[5,"snd_seq_query_named_queue","","",null,null],[5,"snd_seq_get_queue_usage","","",null,null],[5,"snd_seq_set_queue_usage","","",null,null],[5,"snd_seq_queue_status_sizeof","","",null,null],[5,"snd_seq_queue_status_malloc","","",null,null],[5,"snd_seq_queue_status_free","","",null,null],[5,"snd_seq_queue_status_copy","","",null,null],[5,"snd_seq_queue_status_get_queue","","",null,null],[5,"snd_seq_queue_status_get_events","","",null,null],[5,"snd_seq_queue_status_get_tick_time","","",null,null],[5,"snd_seq_queue_status_get_real_time","","",null,null],[5,"snd_seq_queue_status_get_status","","",null,null],[5,"snd_seq_get_queue_status","","",null,null],[5,"snd_seq_queue_tempo_sizeof","","",null,null],[5,"snd_seq_queue_tempo_malloc","","",null,null],[5,"snd_seq_queue_tempo_free","","",null,null],[5,"snd_seq_queue_tempo_copy","","",null,null],[5,"snd_seq_queue_tempo_get_queue","","",null,null],[5,"snd_seq_queue_tempo_get_tempo","","",null,null],[5,"snd_seq_queue_tempo_get_ppq","","",null,null],[5,"snd_seq_queue_tempo_get_skew","","",null,null],[5,"snd_seq_queue_tempo_get_skew_base","","",null,null],[5,"snd_seq_queue_tempo_set_tempo","","",null,null],[5,"snd_seq_queue_tempo_set_ppq","","",null,null],[5,"snd_seq_queue_tempo_set_skew","","",null,null],[5,"snd_seq_queue_tempo_set_skew_base","","",null,null],[5,"snd_seq_get_queue_tempo","","",null,null],[5,"snd_seq_set_queue_tempo","","",null,null],[5,"snd_seq_queue_timer_sizeof","","",null,null],[5,"snd_seq_queue_timer_malloc","","",null,null],[5,"snd_seq_queue_timer_free","","",null,null],[5,"snd_seq_queue_timer_copy","","",null,null],[5,"snd_seq_queue_timer_get_queue","","",null,null],[5,"snd_seq_queue_timer_get_type","","",null,null],[5,"snd_seq_queue_timer_get_id","","",null,null],[5,"snd_seq_queue_timer_get_resolution","","",null,null],[5,"snd_seq_queue_timer_set_type","","",null,null],[5,"snd_seq_queue_timer_set_id","","",null,null],[5,"snd_seq_queue_timer_set_resolution","","",null,null],[5,"snd_seq_get_queue_timer","","",null,null],[5,"snd_seq_set_queue_timer","","",null,null],[5,"snd_seq_free_event","","",null,null],[5,"snd_seq_event_length","","",null,null],[5,"snd_seq_event_output","","",null,null],[5,"snd_seq_event_output_buffer","","",null,null],[5,"snd_seq_event_output_direct","","",null,null],[5,"snd_seq_event_input","","",null,null],[5,"snd_seq_event_input_pending","","",null,null],[5,"snd_seq_drain_output","","",null,null],[5,"snd_seq_event_output_pending","","",null,null],[5,"snd_seq_extract_output","","",null,null],[5,"snd_seq_drop_output","","",null,null],[5,"snd_seq_drop_output_buffer","","",null,null],[5,"snd_seq_drop_input","","",null,null],[5,"snd_seq_drop_input_buffer","","",null,null],[5,"snd_seq_remove_events_sizeof","","",null,null],[5,"snd_seq_remove_events_malloc","","",null,null],[5,"snd_seq_remove_events_free","","",null,null],[5,"snd_seq_remove_events_copy","","",null,null],[5,"snd_seq_remove_events_get_condition","","",null,null],[5,"snd_seq_remove_events_get_queue","","",null,null],[5,"snd_seq_remove_events_get_time","","",null,null],[5,"snd_seq_remove_events_get_dest","","",null,null],[5,"snd_seq_remove_events_get_channel","","",null,null],[5,"snd_seq_remove_events_get_event_type","","",null,null],[5,"snd_seq_remove_events_get_tag","","",null,null],[5,"snd_seq_remove_events_set_condition","","",null,null],[5,"snd_seq_remove_events_set_queue","","",null,null],[5,"snd_seq_remove_events_set_time","","",null,null],[5,"snd_seq_remove_events_set_dest","","",null,null],[5,"snd_seq_remove_events_set_channel","","",null,null],[5,"snd_seq_remove_events_set_event_type","","",null,null],[5,"snd_seq_remove_events_set_tag","","",null,null],[5,"snd_seq_remove_events","","",null,null],[5,"snd_seq_set_bit","","",null,null],[5,"snd_seq_unset_bit","","",null,null],[5,"snd_seq_change_bit","","",null,null],[5,"snd_seq_get_bit","","",null,null],[5,"snd_seq_control_queue","","",null,null],[5,"snd_seq_create_simple_port","","",null,null],[5,"snd_seq_delete_simple_port","","",null,null],[5,"snd_seq_connect_from","","",null,null],[5,"snd_seq_connect_to","","",null,null],[5,"snd_seq_disconnect_from","","",null,null],[5,"snd_seq_disconnect_to","","",null,null],[5,"snd_seq_set_client_name","","",null,null],[5,"snd_seq_set_client_event_filter","","",null,null],[5,"snd_seq_set_client_pool_output","","",null,null],[5,"snd_seq_set_client_pool_output_room","","",null,null],[5,"snd_seq_set_client_pool_input","","",null,null],[5,"snd_seq_sync_output_queue","","",null,null],[5,"snd_seq_parse_address","","",null,null],[5,"snd_seq_reset_pool_output","","",null,null],[5,"snd_seq_reset_pool_input","","",null,null],[5,"snd_midi_event_new","","",null,null],[5,"snd_midi_event_resize_buffer","","",null,null],[5,"snd_midi_event_free","","",null,null],[5,"snd_midi_event_init","","",null,null],[5,"snd_midi_event_reset_encode","","",null,null],[5,"snd_midi_event_reset_decode","","",null,null],[5,"snd_midi_event_no_status","","",null,null],[5,"snd_midi_event_encode","","",null,null],[5,"snd_midi_event_encode_byte","","",null,null],[5,"snd_midi_event_decode","","",null,null],[6,"snd_async_callback_t","","",null,null],[6,"snd_timestamp_t","","",null,null],[6,"snd_htimestamp_t","","",null,null],[6,"snd_input_type_t","","",null,null],[6,"snd_output_type_t","","",null,null],[6,"snd_lib_error_handler_t","","",null,null],[6,"snd_config_type_t","","",null,null],[6,"snd_config_iterator_t","","",null,null],[6,"snd_pcm_class_t","","",null,null],[6,"snd_pcm_subclass_t","","",null,null],[6,"snd_pcm_stream_t","","",null,null],[6,"snd_pcm_access_t","","",null,null],[6,"snd_pcm_format_t","","",null,null],[6,"snd_pcm_subformat_t","","",null,null],[6,"snd_pcm_state_t","","",null,null],[6,"snd_pcm_start_t","","",null,null],[6,"snd_pcm_xrun_t","","",null,null],[6,"snd_pcm_tstamp_t","","",null,null],[6,"snd_pcm_uframes_t","","",null,null],[6,"snd_pcm_sframes_t","","",null,null],[6,"snd_pcm_type_t","","",null,null],[6,"snd_pcm_chmap_type","","",null,null],[6,"snd_pcm_chmap_position","","",null,null],[6,"snd_pcm_hook_type_t","","",null,null],[6,"snd_pcm_hook_func_t","","",null,null],[6,"snd_spcm_latency_t","","",null,null],[6,"snd_spcm_xrun_type_t","","",null,null],[6,"snd_spcm_duplex_type_t","","",null,null],[6,"snd_rawmidi_stream_t","","",null,null],[6,"snd_rawmidi_type_t","","",null,null],[6,"snd_timer_class_t","","",null,null],[6,"snd_timer_slave_class_t","","",null,null],[6,"snd_timer_event_t","","",null,null],[6,"snd_timer_type_t","","",null,null],[6,"snd_hwdep_iface_t","","",null,null],[6,"snd_hwdep_type_t","","",null,null],[6,"snd_ctl_elem_type_t","","",null,null],[6,"snd_ctl_elem_iface_t","","",null,null],[6,"snd_ctl_event_type_t","","",null,null],[6,"snd_ctl_type_t","","",null,null],[6,"snd_hctl_compare_t","","",null,null],[6,"snd_hctl_callback_t","","",null,null],[6,"snd_hctl_elem_callback_t","","",null,null],[6,"snd_mixer_callback_t","","",null,null],[6,"snd_mixer_elem_callback_t","","",null,null],[6,"snd_mixer_compare_t","","",null,null],[6,"snd_mixer_event_t","","",null,null],[6,"snd_mixer_elem_type_t","","",null,null],[6,"snd_mixer_selem_channel_id_t","","",null,null],[6,"snd_mixer_selem_regopt_abstract","","",null,null],[6,"snd_seq_event_type_t","","",null,null],[6,"snd_seq_tick_time_t","","",null,null],[6,"snd_seq_type_t","","",null,null],[6,"snd_seq_client_type_t","","",null,null],[6,"snd_seq_query_subs_type_t","","",null,null],[6,"snd_seq_queue_timer_type_t","","",null,null],[7,"SND_PCM_NONBLOCK","","",null,null],[7,"SND_PCM_ASYNC","","",null,null],[7,"SND_MIXER_SABSTRACT_NONE","","",null,null],[7,"SND_MIXER_SABSTRACT_BASIC","","",null,null],[17,"SND_INPUT_STDIO","","",null,null],[17,"SND_INPUT_BUFFER","","",null,null],[17,"SND_OUTPUT_STDIO","","",null,null],[17,"SND_OUTPUT_BUFFER","","",null,null],[17,"SND_CONFIG_TYPE_INTEGER","","",null,null],[17,"SND_CONFIG_TYPE_INTEGER64","","",null,null],[17,"SND_CONFIG_TYPE_REAL","","",null,null],[17,"SND_CONFIG_TYPE_STRING","","",null,null],[17,"SND_CONFIG_TYPE_POINTER","","",null,null],[17,"SND_CONFIG_TYPE_COMPOUND","","",null,null],[17,"SND_PCM_CLASS_GENERIC","","",null,null],[17,"SND_PCM_CLASS_MULTI","","",null,null],[17,"SND_PCM_CLASS_MODEM","","",null,null],[17,"SND_PCM_CLASS_DIGITIZER","","",null,null],[17,"SND_PCM_CLASS_LAST","","",null,null],[17,"SND_PCM_SUBCLASS_GENERIC_MIX","","",null,null],[17,"SND_PCM_SUBCLASS_MULTI_MIX","","",null,null],[17,"SND_PCM_SUBCLASS_LAST","","",null,null],[17,"SND_PCM_STREAM_PLAYBACK","","",null,null],[17,"SND_PCM_STREAM_CAPTURE","","",null,null],[17,"SND_PCM_STREAM_LAST","","",null,null],[17,"SND_PCM_ACCESS_MMAP_INTERLEAVED","","",null,null],[17,"SND_PCM_ACCESS_MMAP_NONINTERLEAVED","","",null,null],[17,"SND_PCM_ACCESS_MMAP_COMPLEX","","",null,null],[17,"SND_PCM_ACCESS_RW_INTERLEAVED","","",null,null],[17,"SND_PCM_ACCESS_RW_NONINTERLEAVED","","",null,null],[17,"SND_PCM_ACCESS_LAST","","",null,null],[17,"SND_PCM_FORMAT_UNKNOWN","","",null,null],[17,"SND_PCM_FORMAT_S8","","",null,null],[17,"SND_PCM_FORMAT_U8","","",null,null],[17,"SND_PCM_FORMAT_S16_LE","","",null,null],[17,"SND_PCM_FORMAT_S16_BE","","",null,null],[17,"SND_PCM_FORMAT_U16_LE","","",null,null],[17,"SND_PCM_FORMAT_U16_BE","","",null,null],[17,"SND_PCM_FORMAT_S24_LE","","",null,null],[17,"SND_PCM_FORMAT_S24_BE","","",null,null],[17,"SND_PCM_FORMAT_U24_LE","","",null,null],[17,"SND_PCM_FORMAT_U24_BE","","",null,null],[17,"SND_PCM_FORMAT_S32_LE","","",null,null],[17,"SND_PCM_FORMAT_S32_BE","","",null,null],[17,"SND_PCM_FORMAT_U32_LE","","",null,null],[17,"SND_PCM_FORMAT_U32_BE","","",null,null],[17,"SND_PCM_FORMAT_FLOAT_LE","","",null,null],[17,"SND_PCM_FORMAT_FLOAT_BE","","",null,null],[17,"SND_PCM_FORMAT_FLOAT64_LE","","",null,null],[17,"SND_PCM_FORMAT_FLOAT64_BE","","",null,null],[17,"SND_PCM_FORMAT_IEC958_SUBFRAME_LE","","",null,null],[17,"SND_PCM_FORMAT_IEC958_SUBFRAME_BE","","",null,null],[17,"SND_PCM_FORMAT_MU_LAW","","",null,null],[17,"SND_PCM_FORMAT_A_LAW","","",null,null],[17,"SND_PCM_FORMAT_IMA_ADPCM","","",null,null],[17,"SND_PCM_FORMAT_MPEG","","",null,null],[17,"SND_PCM_FORMAT_GSM","","",null,null],[17,"SND_PCM_FORMAT_SPECIAL","","",null,null],[17,"SND_PCM_FORMAT_S24_3LE","","",null,null],[17,"SND_PCM_FORMAT_S24_3BE","","",null,null],[17,"SND_PCM_FORMAT_U24_3LE","","",null,null],[17,"SND_PCM_FORMAT_U24_3BE","","",null,null],[17,"SND_PCM_FORMAT_S20_3LE","","",null,null],[17,"SND_PCM_FORMAT_S20_3BE","","",null,null],[17,"SND_PCM_FORMAT_U20_3LE","","",null,null],[17,"SND_PCM_FORMAT_U20_3BE","","",null,null],[17,"SND_PCM_FORMAT_S18_3LE","","",null,null],[17,"SND_PCM_FORMAT_S18_3BE","","",null,null],[17,"SND_PCM_FORMAT_U18_3LE","","",null,null],[17,"SND_PCM_FORMAT_U18_3BE","","",null,null],[17,"SND_PCM_FORMAT_G723_24","","",null,null],[17,"SND_PCM_FORMAT_G723_24_1B","","",null,null],[17,"SND_PCM_FORMAT_G723_40","","",null,null],[17,"SND_PCM_FORMAT_G723_40_1B","","",null,null],[17,"SND_PCM_FORMAT_DSD_U8","","",null,null],[17,"SND_PCM_FORMAT_DSD_U16_LE","","",null,null],[17,"SND_PCM_FORMAT_LAST","","",null,null],[17,"SND_PCM_FORMAT_S16","","",null,null],[17,"SND_PCM_FORMAT_U16","","",null,null],[17,"SND_PCM_FORMAT_S24","","",null,null],[17,"SND_PCM_FORMAT_U24","","",null,null],[17,"SND_PCM_FORMAT_S32","","",null,null],[17,"SND_PCM_FORMAT_U32","","",null,null],[17,"SND_PCM_FORMAT_FLOAT","","",null,null],[17,"SND_PCM_FORMAT_FLOAT64","","",null,null],[17,"SND_PCM_FORMAT_IEC958_SUBFRAME","","",null,null],[17,"SND_PCM_SUBFORMAT_STD","","",null,null],[17,"SND_PCM_SUBFORMAT_LAST","","",null,null],[17,"SND_PCM_STATE_OPEN","","",null,null],[17,"SND_PCM_STATE_SETUP","","",null,null],[17,"SND_PCM_STATE_PREPARED","","",null,null],[17,"SND_PCM_STATE_RUNNING","","",null,null],[17,"SND_PCM_STATE_XRUN","","",null,null],[17,"SND_PCM_STATE_DRAINING","","",null,null],[17,"SND_PCM_STATE_PAUSED","","",null,null],[17,"SND_PCM_STATE_SUSPENDED","","",null,null],[17,"SND_PCM_STATE_DISCONNECTED","","",null,null],[17,"SND_PCM_STATE_LAST","","",null,null],[17,"SND_PCM_START_DATA","","",null,null],[17,"SND_PCM_START_EXPLICIT","","",null,null],[17,"SND_PCM_START_LAST","","",null,null],[17,"SND_PCM_XRUN_NONE","","",null,null],[17,"SND_PCM_XRUN_STOP","","",null,null],[17,"SND_PCM_XRUN_LAST","","",null,null],[17,"SND_PCM_TSTAMP_NONE","","",null,null],[17,"SND_PCM_TSTAMP_ENABLE","","",null,null],[17,"SND_PCM_TSTAMP_MMAP","","",null,null],[17,"SND_PCM_TSTAMP_LAST","","",null,null],[17,"SND_PCM_TYPE_HW","","",null,null],[17,"SND_PCM_TYPE_HOOKS","","",null,null],[17,"SND_PCM_TYPE_MULTI","","",null,null],[17,"SND_PCM_TYPE_FILE","","",null,null],[17,"SND_PCM_TYPE_NULL","","",null,null],[17,"SND_PCM_TYPE_SHM","","",null,null],[17,"SND_PCM_TYPE_INET","","",null,null],[17,"SND_PCM_TYPE_COPY","","",null,null],[17,"SND_PCM_TYPE_LINEAR","","",null,null],[17,"SND_PCM_TYPE_ALAW","","",null,null],[17,"SND_PCM_TYPE_MULAW","","",null,null],[17,"SND_PCM_TYPE_ADPCM","","",null,null],[17,"SND_PCM_TYPE_RATE","","",null,null],[17,"SND_PCM_TYPE_ROUTE","","",null,null],[17,"SND_PCM_TYPE_PLUG","","",null,null],[17,"SND_PCM_TYPE_SHARE","","",null,null],[17,"SND_PCM_TYPE_METER","","",null,null],[17,"SND_PCM_TYPE_MIX","","",null,null],[17,"SND_PCM_TYPE_DROUTE","","",null,null],[17,"SND_PCM_TYPE_LBSERVER","","",null,null],[17,"SND_PCM_TYPE_LINEAR_FLOAT","","",null,null],[17,"SND_PCM_TYPE_LADSPA","","",null,null],[17,"SND_PCM_TYPE_DMIX","","",null,null],[17,"SND_PCM_TYPE_JACK","","",null,null],[17,"SND_PCM_TYPE_DSNOOP","","",null,null],[17,"SND_PCM_TYPE_DSHARE","","",null,null],[17,"SND_PCM_TYPE_IEC958","","",null,null],[17,"SND_PCM_TYPE_SOFTVOL","","",null,null],[17,"SND_PCM_TYPE_IOPLUG","","",null,null],[17,"SND_PCM_TYPE_EXTPLUG","","",null,null],[17,"SND_PCM_TYPE_MMAP_EMUL","","",null,null],[17,"SND_PCM_TYPE_LAST","","",null,null],[17,"SND_CHMAP_TYPE_NONE","","",null,null],[17,"SND_CHMAP_TYPE_FIXED","","",null,null],[17,"SND_CHMAP_TYPE_VAR","","",null,null],[17,"SND_CHMAP_TYPE_PAIRED","","",null,null],[17,"SND_CHMAP_TYPE_LAST","","",null,null],[17,"SND_CHMAP_UNKNOWN","","",null,null],[17,"SND_CHMAP_NA","","",null,null],[17,"SND_CHMAP_MONO","","",null,null],[17,"SND_CHMAP_FL","","",null,null],[17,"SND_CHMAP_FR","","",null,null],[17,"SND_CHMAP_RL","","",null,null],[17,"SND_CHMAP_RR","","",null,null],[17,"SND_CHMAP_FC","","",null,null],[17,"SND_CHMAP_LFE","","",null,null],[17,"SND_CHMAP_SL","","",null,null],[17,"SND_CHMAP_SR","","",null,null],[17,"SND_CHMAP_RC","","",null,null],[17,"SND_CHMAP_FLC","","",null,null],[17,"SND_CHMAP_FRC","","",null,null],[17,"SND_CHMAP_RLC","","",null,null],[17,"SND_CHMAP_RRC","","",null,null],[17,"SND_CHMAP_FLW","","",null,null],[17,"SND_CHMAP_FRW","","",null,null],[17,"SND_CHMAP_FLH","","",null,null],[17,"SND_CHMAP_FCH","","",null,null],[17,"SND_CHMAP_FRH","","",null,null],[17,"SND_CHMAP_TC","","",null,null],[17,"SND_CHMAP_TFL","","",null,null],[17,"SND_CHMAP_TFR","","",null,null],[17,"SND_CHMAP_TFC","","",null,null],[17,"SND_CHMAP_TRL","","",null,null],[17,"SND_CHMAP_TRR","","",null,null],[17,"SND_CHMAP_TRC","","",null,null],[17,"SND_CHMAP_TFLC","","",null,null],[17,"SND_CHMAP_TFRC","","",null,null],[17,"SND_CHMAP_TSL","","",null,null],[17,"SND_CHMAP_TSR","","",null,null],[17,"SND_CHMAP_LLFE","","",null,null],[17,"SND_CHMAP_RLFE","","",null,null],[17,"SND_CHMAP_BC","","",null,null],[17,"SND_CHMAP_BLC","","",null,null],[17,"SND_CHMAP_BRC","","",null,null],[17,"SND_CHMAP_LAST","","",null,null],[17,"SND_PCM_HOOK_TYPE_HW_PARAMS","","",null,null],[17,"SND_PCM_HOOK_TYPE_HW_FREE","","",null,null],[17,"SND_PCM_HOOK_TYPE_CLOSE","","",null,null],[17,"SND_PCM_HOOK_TYPE_LAST","","",null,null],[17,"SND_SPCM_LATENCY_STANDARD","","",null,null],[17,"SND_SPCM_LATENCY_MEDIUM","","",null,null],[17,"SND_SPCM_LATENCY_REALTIME","","",null,null],[17,"SND_SPCM_XRUN_IGNORE","","",null,null],[17,"SND_SPCM_XRUN_STOP","","",null,null],[17,"SND_SPCM_DUPLEX_LIBERAL","","",null,null],[17,"SND_SPCM_DUPLEX_PEDANTIC","","",null,null],[17,"SND_RAWMIDI_STREAM_OUTPUT","","",null,null],[17,"SND_RAWMIDI_STREAM_INPUT","","",null,null],[17,"SND_RAWMIDI_STREAM_LAST","","",null,null],[17,"SND_RAWMIDI_TYPE_HW","","",null,null],[17,"SND_RAWMIDI_TYPE_SHM","","",null,null],[17,"SND_RAWMIDI_TYPE_INET","","",null,null],[17,"SND_RAWMIDI_TYPE_VIRTUAL","","",null,null],[17,"SND_TIMER_CLASS_NONE","","",null,null],[17,"SND_TIMER_CLASS_SLAVE","","",null,null],[17,"SND_TIMER_CLASS_GLOBAL","","",null,null],[17,"SND_TIMER_CLASS_CARD","","",null,null],[17,"SND_TIMER_CLASS_PCM","","",null,null],[17,"SND_TIMER_CLASS_LAST","","",null,null],[17,"SND_TIMER_SCLASS_NONE","","",null,null],[17,"SND_TIMER_SCLASS_APPLICATION","","",null,null],[17,"SND_TIMER_SCLASS_SEQUENCER","","",null,null],[17,"SND_TIMER_SCLASS_OSS_SEQUENCER","","",null,null],[17,"SND_TIMER_SCLASS_LAST","","",null,null],[17,"SND_TIMER_EVENT_RESOLUTION","","",null,null],[17,"SND_TIMER_EVENT_TICK","","",null,null],[17,"SND_TIMER_EVENT_START","","",null,null],[17,"SND_TIMER_EVENT_STOP","","",null,null],[17,"SND_TIMER_EVENT_CONTINUE","","",null,null],[17,"SND_TIMER_EVENT_PAUSE","","",null,null],[17,"SND_TIMER_EVENT_EARLY","","",null,null],[17,"SND_TIMER_EVENT_SUSPEND","","",null,null],[17,"SND_TIMER_EVENT_RESUME","","",null,null],[17,"SND_TIMER_EVENT_MSTART","","",null,null],[17,"SND_TIMER_EVENT_MSTOP","","",null,null],[17,"SND_TIMER_EVENT_MCONTINUE","","",null,null],[17,"SND_TIMER_EVENT_MPAUSE","","",null,null],[17,"SND_TIMER_EVENT_MSUSPEND","","",null,null],[17,"SND_TIMER_EVENT_MRESUME","","",null,null],[17,"SND_TIMER_TYPE_HW","","",null,null],[17,"SND_TIMER_TYPE_SHM","","",null,null],[17,"SND_TIMER_TYPE_INET","","",null,null],[17,"SND_HWDEP_IFACE_OPL2","","",null,null],[17,"SND_HWDEP_IFACE_OPL3","","",null,null],[17,"SND_HWDEP_IFACE_OPL4","","",null,null],[17,"SND_HWDEP_IFACE_SB16CSP","","",null,null],[17,"SND_HWDEP_IFACE_EMU10K1","","",null,null],[17,"SND_HWDEP_IFACE_YSS225","","",null,null],[17,"SND_HWDEP_IFACE_ICS2115","","",null,null],[17,"SND_HWDEP_IFACE_SSCAPE","","",null,null],[17,"SND_HWDEP_IFACE_VX","","",null,null],[17,"SND_HWDEP_IFACE_MIXART","","",null,null],[17,"SND_HWDEP_IFACE_USX2Y","","",null,null],[17,"SND_HWDEP_IFACE_EMUX_WAVETABLE","","",null,null],[17,"SND_HWDEP_IFACE_BLUETOOTH","","",null,null],[17,"SND_HWDEP_IFACE_USX2Y_PCM","","",null,null],[17,"SND_HWDEP_IFACE_PCXHR","","",null,null],[17,"SND_HWDEP_IFACE_SB_RC","","",null,null],[17,"SND_HWDEP_IFACE_LAST","","",null,null],[17,"SND_HWDEP_TYPE_HW","","",null,null],[17,"SND_HWDEP_TYPE_SHM","","",null,null],[17,"SND_HWDEP_TYPE_INET","","",null,null],[17,"SND_CTL_ELEM_TYPE_NONE","","",null,null],[17,"SND_CTL_ELEM_TYPE_BOOLEAN","","",null,null],[17,"SND_CTL_ELEM_TYPE_INTEGER","","",null,null],[17,"SND_CTL_ELEM_TYPE_ENUMERATED","","",null,null],[17,"SND_CTL_ELEM_TYPE_BYTES","","",null,null],[17,"SND_CTL_ELEM_TYPE_IEC958","","",null,null],[17,"SND_CTL_ELEM_TYPE_INTEGER64","","",null,null],[17,"SND_CTL_ELEM_TYPE_LAST","","",null,null],[17,"SND_CTL_ELEM_IFACE_CARD","","",null,null],[17,"SND_CTL_ELEM_IFACE_HWDEP","","",null,null],[17,"SND_CTL_ELEM_IFACE_MIXER","","",null,null],[17,"SND_CTL_ELEM_IFACE_PCM","","",null,null],[17,"SND_CTL_ELEM_IFACE_RAWMIDI","","",null,null],[17,"SND_CTL_ELEM_IFACE_TIMER","","",null,null],[17,"SND_CTL_ELEM_IFACE_SEQUENCER","","",null,null],[17,"SND_CTL_ELEM_IFACE_LAST","","",null,null],[17,"SND_CTL_EVENT_ELEM","","",null,null],[17,"SND_CTL_EVENT_LAST","","",null,null],[17,"SND_CTL_TYPE_HW","","",null,null],[17,"SND_CTL_TYPE_SHM","","",null,null],[17,"SND_CTL_TYPE_INET","","",null,null],[17,"SND_CTL_TYPE_EXT","","",null,null],[17,"SND_MIXER_ELEM_SIMPLE","","",null,null],[17,"SND_MIXER_ELEM_LAST","","",null,null],[17,"SND_MIXER_SCHN_UNKNOWN","","",null,null],[17,"SND_MIXER_SCHN_FRONT_LEFT","","",null,null],[17,"SND_MIXER_SCHN_FRONT_RIGHT","","",null,null],[17,"SND_MIXER_SCHN_REAR_LEFT","","",null,null],[17,"SND_MIXER_SCHN_REAR_RIGHT","","",null,null],[17,"SND_MIXER_SCHN_FRONT_CENTER","","",null,null],[17,"SND_MIXER_SCHN_WOOFER","","",null,null],[17,"SND_MIXER_SCHN_SIDE_LEFT","","",null,null],[17,"SND_MIXER_SCHN_SIDE_RIGHT","","",null,null],[17,"SND_MIXER_SCHN_REAR_CENTER","","",null,null],[17,"SND_MIXER_SCHN_LAST","","",null,null],[17,"SND_MIXER_SCHN_MONO","","",null,null],[17,"SND_SEQ_EVENT_SYSTEM","","",null,null],[17,"SND_SEQ_EVENT_RESULT","","",null,null],[17,"SND_SEQ_EVENT_NOTE","","",null,null],[17,"SND_SEQ_EVENT_NOTEON","","",null,null],[17,"SND_SEQ_EVENT_NOTEOFF","","",null,null],[17,"SND_SEQ_EVENT_KEYPRESS","","",null,null],[17,"SND_SEQ_EVENT_CONTROLLER","","",null,null],[17,"SND_SEQ_EVENT_PGMCHANGE","","",null,null],[17,"SND_SEQ_EVENT_CHANPRESS","","",null,null],[17,"SND_SEQ_EVENT_PITCHBEND","","",null,null],[17,"SND_SEQ_EVENT_CONTROL14","","",null,null],[17,"SND_SEQ_EVENT_NONREGPARAM","","",null,null],[17,"SND_SEQ_EVENT_REGPARAM","","",null,null],[17,"SND_SEQ_EVENT_SONGPOS","","",null,null],[17,"SND_SEQ_EVENT_SONGSEL","","",null,null],[17,"SND_SEQ_EVENT_QFRAME","","",null,null],[17,"SND_SEQ_EVENT_TIMESIGN","","",null,null],[17,"SND_SEQ_EVENT_KEYSIGN","","",null,null],[17,"SND_SEQ_EVENT_START","","",null,null],[17,"SND_SEQ_EVENT_CONTINUE","","",null,null],[17,"SND_SEQ_EVENT_STOP","","",null,null],[17,"SND_SEQ_EVENT_SETPOS_TICK","","",null,null],[17,"SND_SEQ_EVENT_SETPOS_TIME","","",null,null],[17,"SND_SEQ_EVENT_TEMPO","","",null,null],[17,"SND_SEQ_EVENT_CLOCK","","",null,null],[17,"SND_SEQ_EVENT_TICK","","",null,null],[17,"SND_SEQ_EVENT_QUEUE_SKEW","","",null,null],[17,"SND_SEQ_EVENT_SYNC_POS","","",null,null],[17,"SND_SEQ_EVENT_TUNE_REQUEST","","",null,null],[17,"SND_SEQ_EVENT_RESET","","",null,null],[17,"SND_SEQ_EVENT_SENSING","","",null,null],[17,"SND_SEQ_EVENT_ECHO","","",null,null],[17,"SND_SEQ_EVENT_OSS","","",null,null],[17,"SND_SEQ_EVENT_CLIENT_START","","",null,null],[17,"SND_SEQ_EVENT_CLIENT_EXIT","","",null,null],[17,"SND_SEQ_EVENT_CLIENT_CHANGE","","",null,null],[17,"SND_SEQ_EVENT_PORT_START","","",null,null],[17,"SND_SEQ_EVENT_PORT_EXIT","","",null,null],[17,"SND_SEQ_EVENT_PORT_CHANGE","","",null,null],[17,"SND_SEQ_EVENT_PORT_SUBSCRIBED","","",null,null],[17,"SND_SEQ_EVENT_PORT_UNSUBSCRIBED","","",null,null],[17,"SND_SEQ_EVENT_USR0","","",null,null],[17,"SND_SEQ_EVENT_USR1","","",null,null],[17,"SND_SEQ_EVENT_USR2","","",null,null],[17,"SND_SEQ_EVENT_USR3","","",null,null],[17,"SND_SEQ_EVENT_USR4","","",null,null],[17,"SND_SEQ_EVENT_USR5","","",null,null],[17,"SND_SEQ_EVENT_USR6","","",null,null],[17,"SND_SEQ_EVENT_USR7","","",null,null],[17,"SND_SEQ_EVENT_USR8","","",null,null],[17,"SND_SEQ_EVENT_USR9","","",null,null],[17,"SND_SEQ_EVENT_SYSEX","","",null,null],[17,"SND_SEQ_EVENT_BOUNCE","","",null,null],[17,"SND_SEQ_EVENT_USR_VAR0","","",null,null],[17,"SND_SEQ_EVENT_USR_VAR1","","",null,null],[17,"SND_SEQ_EVENT_USR_VAR2","","",null,null],[17,"SND_SEQ_EVENT_USR_VAR3","","",null,null],[17,"SND_SEQ_EVENT_USR_VAR4","","",null,null],[17,"SND_SEQ_EVENT_NONE","","",null,null],[17,"SND_SEQ_TYPE_HW","","",null,null],[17,"SND_SEQ_TYPE_SHM","","",null,null],[17,"SND_SEQ_TYPE_INET","","",null,null],[17,"SND_SEQ_USER_CLIENT","","",null,null],[17,"SND_SEQ_KERNEL_CLIENT","","",null,null],[17,"SND_SEQ_QUERY_SUBS_READ","","",null,null],[17,"SND_SEQ_QUERY_SUBS_WRITE","","",null,null],[17,"SND_SEQ_TIMER_ALSA","","",null,null],[17,"SND_SEQ_TIMER_MIDI_CLOCK","","",null,null],[17,"SND_SEQ_TIMER_MIDI_TICK","","",null,null],[17,"SND_SEQ_EVFLG_RESULT","","",null,null],[17,"SND_SEQ_EVFLG_NOTE","","",null,null],[17,"SND_SEQ_EVFLG_CONTROL","","",null,null],[17,"SND_SEQ_EVFLG_QUEUE","","",null,null],[17,"SND_SEQ_EVFLG_SYSTEM","","",null,null],[17,"SND_SEQ_EVFLG_MESSAGE","","",null,null],[17,"SND_SEQ_EVFLG_CONNECTION","","",null,null],[17,"SND_SEQ_EVFLG_SAMPLE","","",null,null],[17,"SND_SEQ_EVFLG_USERS","","",null,null],[17,"SND_SEQ_EVFLG_INSTR","","",null,null],[17,"SND_SEQ_EVFLG_QUOTE","","",null,null],[17,"SND_SEQ_EVFLG_NONE","","",null,null],[17,"SND_SEQ_EVFLG_RAW","","",null,null],[17,"SND_SEQ_EVFLG_FIXED","","",null,null],[17,"SND_SEQ_EVFLG_VARIABLE","","",null,null],[17,"SND_SEQ_EVFLG_VARUSR","","",null,null],[17,"SND_SEQ_EVFLG_NOTE_ONEARG","","",null,null],[17,"SND_SEQ_EVFLG_NOTE_TWOARG","","",null,null],[17,"SND_SEQ_EVFLG_QUEUE_NOARG","","",null,null],[17,"SND_SEQ_EVFLG_QUEUE_TICK","","",null,null],[17,"SND_SEQ_EVFLG_QUEUE_TIME","","",null,null],[17,"SND_SEQ_EVFLG_QUEUE_VALUE","","",null,null],[11,"id","","",3,null],[11,"id16","","",3,null],[11,"id32","","",3,null],[11,"tick","","",14,null],[11,"time","","",14,null],[11,"value","","",23,null],[11,"time","","",23,null],[11,"position","","",23,null],[11,"skew","","",23,null],[11,"d32","","",23,null],[11,"d8","","",23,null],[11,"note","","",25,null],[11,"control","","",25,null],[11,"raw8","","",25,null],[11,"raw32","","",25,null],[11,"ext","","",25,null],[11,"queue","","",25,null],[11,"time","","",25,null],[11,"addr","","",25,null],[11,"connect","","",25,null],[11,"result","","",25,null]],"paths":[[3,"snd_dlsym_link"],[3,"snd_devname_t"],[3,"snd_pcm_channel_area_t"],[3,"snd_pcm_sync_id_t"],[3,"snd_pcm_chmap_t"],[3,"snd_pcm_chmap_query_t"],[3,"snd_pcm_scope_ops_t"],[3,"snd_timer_read_t"],[3,"snd_timer_tread_t"],[3,"snd_aes_iec958_t"],[3,"snd_mixer_selem_regopt"],[3,"snd_seq_addr_t"],[3,"snd_seq_connect_t"],[3,"snd_seq_real_time_t"],[3,"snd_seq_timestamp_t"],[3,"snd_seq_ev_note_t"],[3,"snd_seq_ev_ctrl_t"],[3,"snd_seq_ev_raw8_t"],[3,"snd_seq_ev_raw32_t"],[3,"snd_seq_ev_ext_t"],[3,"snd_seq_result_t"],[3,"snd_seq_queue_skew_t"],[3,"snd_seq_ev_queue_control_t"],[3,"Union_Unnamed9"],[3,"snd_seq_event_t"],[3,"Union_Unnamed10"]]};
searchIndex["amethyst"] = {"doc":"Amethyst is a free and open source game engine written in idiomatic [Rust][rs] for building video games and interactive multimedia applications. The source code is available for download on [GitHub][gh]. See the [online book][bk] for a complete guide to using Amethyst.","items":[[3,"Application","amethyst","An Application is the root object of the game engine. It binds the OS event loop, state machines, timers and other core components in a central place.",null,null],[12,"world","","The world",0,null],[3,"ApplicationBuilder","","`ApplicationBuilder` is an interface that allows for creation of an `Application` using a custom set of configuration. This is the normal way an `Application` object is created.",null,null],[12,"world","","Used by bundles to access the world directly",1,null],[3,"StateMachine","","A simple stack-based state machine (pushdown automaton).",null,null],[4,"Error","","Common error type.",null,null],[13,"Application","","Application error.",2,null],[13,"Config","","Asset management error. Configuration error.",2,null],[13,"Core","","Core error.",2,null],[4,"Trans","","Types of state transitions.",null,null],[13,"None","","Continue as normal.",3,null],[13,"Pop","","Remove the active state and resume the next state on the stack or stop if there are none.",3,null],[13,"Push","","Pause the active state and push a new state onto the stack.",3,null],[13,"Switch","","Remove the current state on the stack and insert a different one.",3,null],[13,"Quit","","Stop and remove all states and shut down the engine.",3,null],[0,"prelude","","Contains common types that can be glob-imported (`*`) for convenience.",null,null],[8,"Config","amethyst::prelude","Trait implemented by the `config!` macro.",null,null],[10,"load","","Loads a configuration structure from a file. Defaults if the file fails in any way.",4,{"inputs":[{"name":"p"}],"output":{"name":"self"}}],[10,"load_no_fallback","","Loads a configuration structure from a file.",4,{"inputs":[{"name":"p"}],"output":{"generics":["configerror"],"name":"result"}}],[10,"write","","Writes a configuration structure to a file.",4,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"generics":["configerror"],"name":"result"}}],[3,"World","","The `World` struct contains the component storages and other resources.",null,null],[12,"res","","The resources used for this world.",5,null],[3,"Application","","An Application is the root object of the game engine. It binds the OS event loop, state machines, timers and other core components in a central place.",null,null],[12,"world","","The world",0,null],[3,"ApplicationBuilder","","`ApplicationBuilder` is an interface that allows for creation of an `Application` using a custom set of configuration. This is the normal way an `Application` object is created.",null,null],[12,"world","","Used by bundles to access the world directly",1,null],[4,"Trans","","Types of state transitions.",null,null],[13,"None","","Continue as normal.",3,null],[13,"Pop","","Remove the active state and resume the next state on the stack or stop if there are none.",3,null],[13,"Push","","Pause the active state and push a new state onto the stack.",3,null],[13,"Switch","","Remove the current state on the stack and insert a different one.",3,null],[13,"Quit","","Stop and remove all states and shut down the engine.",3,null],[8,"State","","A trait which defines game states that can be used by the state machine.",null,null],[11,"on_start","","Executed when the game state begins.",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":null}],[11,"on_stop","","Executed when the game state exits.",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":null}],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":null}],[11,"on_resume","","Executed when the application returns to this game state once again.",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":null}],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",6,{"inputs":[{"name":"self"},{"name":"world"},{"name":"event"}],"output":{"name":"trans"}}],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default).",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":{"name":"trans"}}],[11,"update","","Executed on every frame immediately, as fast as the engine will allow.",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":{"name":"trans"}}],[11,"fmt","amethyst","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new Application with the given initial game state. This will create and allocate all the needed resources for the event loop of the game engine. It is a shortcut for convenience if you need more control over how the engine is configured you should be using build instead.",0,{"inputs":[{"name":"p"},{"name":"s"}],"output":{"generics":["application"],"name":"result"}}],[11,"build","","Creates a new ApplicationBuilder with the given initial game state.",0,{"inputs":[{"name":"p"},{"name":"s"}],"output":{"generics":["applicationbuilder"],"name":"result"}}],[11,"run","","Run the gameloop until the game state indicates that the game is no longer running. This is done via the `State` returning `Trans::Quit` or `Trans::Pop` on the last state in from the stack. See full documentation on this in State documentation.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new ApplicationBuilder instance that wraps the initial_state. This is the more verbose way of initializing your application if you require specific configuration details to be changed away from the default.",1,{"inputs":[{"name":"p"},{"name":"t"}],"output":{"name":"result"}}],[11,"register","","Registers a component into the entity-component-system. This method takes no options other than the component type which is defined using a 'turbofish'. See the example for what this looks like.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"with_resource","","Adds the supplied ECS resource which can be accessed from game systems.",1,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"self"}}],[11,"with_barrier","","Inserts a barrier which assures that all systems added before the barrier are executed before the ones after this barrier.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"with","","Adds a given system to the game loop.",1,null],[11,"with_thread_local","","Add a given thread-local system to the game loop.",1,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"with_local","","Add a local `RunNow` system.",1,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"with_bundle","","Add a given ECS bundle to the game loop.",1,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"result"}}],[11,"with_source","","Register an asset store with the loader logic of the Application.",1,{"inputs":[{"name":"self"},{"name":"i"},{"name":"s"}],"output":{"name":"self"}}],[11,"with_frame_limit","","Sets the maximum frames per second of this game.",1,{"inputs":[{"name":"self"},{"name":"frameratelimitstrategy"},{"name":"u32"}],"output":{"name":"self"}}],[11,"with_frame_limit_config","","Sets the maximum frames per second of this game, based on the given config.",1,{"inputs":[{"name":"self"},{"name":"frameratelimitconfig"}],"output":{"name":"self"}}],[11,"with_fixed_step_length","","Sets the duration between fixed updates, defaults to one sixtieth of a second.",1,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"self"}}],[11,"ignore_window_close","","Tells the resulting application window to ignore close events if ignore is true. This will make your game window unresponsive to operating system close commands. Use with caution.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"register_asset","","Register a new asset type with the Application. All required components related to the storage of this asset type will be registered. Since Amethyst uses AssetFutures to allow for async content loading, Amethyst needs to have a system that translates AssetFutures into Components as they resolve. Amethyst registers a system to accomplish this.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"build","","Build an `Application` object using the `ApplicationBuilder` as configured.",1,{"inputs":[{"name":"self"}],"output":{"generics":["application"],"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["stderror"],"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"from","","",2,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"on_start","amethyst::prelude","Executed when the game state begins.",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":null}],[11,"on_stop","","Executed when the game state exits.",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":null}],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":null}],[11,"on_resume","","Executed when the application returns to this game state once again.",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":null}],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",6,{"inputs":[{"name":"self"},{"name":"world"},{"name":"event"}],"output":{"name":"trans"}}],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default).",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":{"name":"trans"}}],[11,"update","","Executed on every frame immediately, as fast as the engine will allow.",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":{"name":"trans"}}],[11,"fmt","amethyst","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new state machine with the given initial state.",7,{"inputs":[{"name":"s"}],"output":{"name":"statemachine"}}],[11,"is_running","","Checks whether the state machine is running.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"start","","Initializes the state machine.",7,{"inputs":[{"name":"self"},{"name":"world"}],"output":null}],[11,"handle_event","","Passes a single event to the active state to handle.",7,{"inputs":[{"name":"self"},{"name":"world"},{"name":"event"}],"output":null}],[11,"fixed_update","","Updates the currently active state at a steady, fixed interval.",7,{"inputs":[{"name":"self"},{"name":"world"}],"output":null}],[11,"update","","Updates the currently active state immediately.",7,{"inputs":[{"name":"self"},{"name":"world"}],"output":null}],[6,"Result","","Engine result type.",null,null],[8,"State","","A trait which defines game states that can be used by the state machine.",null,null],[11,"on_start","amethyst::prelude","Executed when the game state begins.",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":null}],[11,"on_stop","","Executed when the game state exits.",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":null}],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":null}],[11,"on_resume","","Executed when the application returns to this game state once again.",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":null}],[11,"handle_event","","Executed on every frame before updating, for use in reacting to events.",6,{"inputs":[{"name":"self"},{"name":"world"},{"name":"event"}],"output":{"name":"trans"}}],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second by default).",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":{"name":"trans"}}],[11,"update","","Executed on every frame immediately, as fast as the engine will allow.",6,{"inputs":[{"name":"self"},{"name":"world"}],"output":{"name":"trans"}}],[11,"borrow","","",5,{"inputs":[{"name":"self"}],"output":{"name":"resources"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"world"}}],[11,"new","","Creates a new empty `World`.",5,{"inputs":[],"output":{"name":"world"}}],[11,"register","","Registers a new component.",5,null],[11,"register_with_id","","Registers a new component with a given id.",5,null],[11,"add_resource","","Adds a resource with the default ID (`0`).",5,null],[11,"add_resource_with_id","","Adds a resource with a given ID.",5,null],[11,"read","","Fetches a component's storage with the default id for reading.",5,{"inputs":[{"name":"self"}],"output":{"generics":["fetch"],"name":"storage"}}],[11,"write","","Fetches a component's storage with the default id for writing.",5,{"inputs":[{"name":"self"}],"output":{"generics":["fetchmut"],"name":"storage"}}],[11,"read_with_id","","Fetches a component's storage with a specified id for reading.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["fetch"],"name":"storage"}}],[11,"write_with_id","","Fetches a component's storage with a specified id for writing.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["fetchmut"],"name":"storage"}}],[11,"read_resource_with_id","","Fetches a resource with a specified id for reading.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"fetch"}}],[11,"write_resource_with_id","","Fetches a resource with a specified id for writing.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"fetchmut"}}],[11,"read_resource","","Fetches a resource with the default id for reading.",5,{"inputs":[{"name":"self"}],"output":{"name":"fetch"}}],[11,"write_resource","","Fetches a resource with the default id for writing.",5,{"inputs":[{"name":"self"}],"output":{"name":"fetchmut"}}],[11,"entities","","Convenience method for fetching entities.",5,{"inputs":[{"name":"self"}],"output":{"generics":["entitiesres"],"name":"fetch"}}],[11,"create_entity","","Allows building an entity with its components.",5,{"inputs":[{"name":"self"}],"output":{"name":"entitybuilder"}}],[11,"create_iter","","Returns an iterator for entity creation. This makes it easy to create a whole collection of them.",5,{"inputs":[{"name":"self"}],"output":{"name":"createiter"}}],[11,"delete_entity","","Deletes an entity and its components.",5,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"generics":["wronggeneration"],"name":"result"}}],[11,"delete_entities","","Deletes the specified entities and their components.",5,null],[11,"delete_all","","Deletes all entities and their components.",5,null],[11,"is_alive","","Checks if an entity is alive. Please note that atomically created or deleted entities (the ones created / deleted with the `Entities` struct) are not handled by this method. Therefore, you should have called `maintain()` before using this method.",5,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"bool"}}],[11,"maintain","","Merges in the appendix, recording all the dynamically created and deleted entities into the persistent generations vector. Also removes all the abandoned components.",5,null]],"paths":[[3,"Application"],[3,"ApplicationBuilder"],[4,"Error"],[4,"Trans"],[8,"Config"],[3,"World"],[8,"State"],[3,"StateMachine"]]};
searchIndex["amethyst_assets"] = {"doc":"amethyst_assets","items":[[3,"FormatValue","amethyst_assets","The `Ok` return value of `Format::import` for a given asset type `A`.",null,null],[12,"data","","The format data.",0,null],[12,"reload","","An optional reload structure",0,null],[3,"Cache","","A simple cache for asset handles of type `A`. This stores `WeakHandle`, so it doesn't keep the assets alive.",null,null],[3,"Error","","The Error type.",null,null],[12,"0","","The kind of the error.",1,null],[3,"Loader","","The asset loader, holding the sources and a reference to the `ThreadPool`.",null,null],[3,"ProgressCounter","","A progress tracker which is passed to the `Loader` in order to check how many assets are loaded.",null,null],[3,"HotReloadBundle","","This bundle activates hot reload for the `Loader`, adds a `HotReloadStrategy` and the `HotReloadSystem`.",null,null],[3,"HotReloadStrategy","","An ECS resource which allows to configure hot reloading.",null,null],[3,"HotReloadSystem","","System for updating `HotReloadStrategy`.",null,null],[3,"SingleFile","","An implementation of `Reload` which just stores the modification time and the path of the file.",null,null],[3,"Directory","","Directory source.",null,null],[3,"AssetStorage","","An asset storage, storing the actual assets and allocating handles to them.",null,null],[3,"Handle","","A handle to an asset. This is usually what the user deals with, the actual asset (`A`) is stored in an `AssetStorage`.",null,null],[3,"Processor","","A default implementation for an asset processing system which converts data to assets and maintains the asset storage for `A`.",null,null],[3,"WeakHandle","","A weak handle, which is useful if you don't directly need the asset like in caches. This way, the asset can still get dropped (if you want that).",null,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",2,null],[13,"FromUtf8","","Wraps a UTF-8 error",2,null],[13,"Utf8","","Wraps a UTF-8 error",2,null],[13,"Asset","","Returned if an asset with a given name failed to load.",2,null],[13,"Source","","Returned if a source could not retrieve something.",2,null],[13,"Format","","Returned if a format failed to load the asset data.",2,null],[4,"Completion","","Completion status, returned by `ProgressCounter::complete`.",null,null],[13,"Complete","","Loading is complete",3,null],[13,"Failed","","Some asset loads have failed",3,null],[13,"Loading","","Still loading assets",3,null],[11,"data","","Creates a `FormatValue` from only the data (setting `reload` to `None`).",0,null],[11,"default","","",4,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new `Cache` and initializes it with the default values.",4,{"inputs":[],"output":{"name":"self"}}],[11,"insert","","Inserts an asset with a given `key` and returns the old value (if any).",4,{"inputs":[{"name":"self"},{"name":"k"},{"name":"handle"}],"output":{"generics":["weakhandle"],"name":"option"}}],[11,"get","","Retrieves an asset handle using a given `key`.",4,{"inputs":[{"name":"self"},{"name":"k"}],"output":{"generics":["handle"],"name":"option"}}],[11,"clear_dead","","Deletes all cached handles which are invalid.",4,{"inputs":[{"name":"self"}],"output":null}],[11,"clear_all","","Clears all values.",4,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",1,{"inputs":[{"name":"errorkind"},{"name":"state"}],"output":{"name":"error"}}],[11,"from_kind","","",1,null],[11,"with_chain","","",1,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[11,"kind","","",1,null],[11,"iter","","",1,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"chain_err","","",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"backtrace","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"extract_backtrace","","",1,{"inputs":[{"name":"error"}],"output":{"generics":["arc"],"name":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",1,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",1,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"error"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",1,{"inputs":[{"generics":["error"],"name":"box"},{"name":"k"}],"output":{"name":"error"}}],[11,"kind","","Returns the kind of the error.",1,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"iter","","Iterates over the error chain.",1,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",1,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"error"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"utf8error"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"deref","","",1,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","A string describing the error kind.",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",2,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"new","","Creates a new asset loader, initializing the directory store with the given path.",5,{"inputs":[{"name":"p"},{"generics":["threadpool"],"name":"arc"}],"output":{"name":"self"}}],[11,"add_source","","Add a source to the `Loader`, given an id and the source.",5,{"inputs":[{"name":"self"},{"name":"i"},{"name":"s"}],"output":null}],[11,"set_hot_reload","","If set to `true`, this `Loader` will ask formats to generate \"reload instructions\" which allow reloading. Calling `set_hot_reload(true)` does not actually enable hot reloading; this is controlled by the `HotReloadStrategy` resource.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"load","","Loads an asset with a given format from the default (directory) source. If you want to load from a custom source instead, use `load_from`.",5,null],[11,"load_from","","Loads an asset with a given id and format from a custom source. The actual work is done in a worker thread, thus this method immediately returns a handle.",5,null],[11,"load_from_data","","Load an asset from data and return a handle.",5,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"completion"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"completion"}],"output":{"name":"bool"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"progresscounter"}}],[11,"new","","Creates a new `Progress` struct.",6,{"inputs":[],"output":{"name":"self"}}],[11,"errors","","Removes all errors and returns them.",6,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"vec"}}],[11,"num_assets","","Returns the number of assets this struct is tracking.",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"num_failed","","Returns the number of assets that have failed.",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"num_loading","","Returns the number of assets that are still loading.",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"num_finished","","Returns the number of assets this struct is tracking.",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"complete","","Returns `Completion::Complete` if all tracked assets are finished.",6,{"inputs":[{"name":"self"}],"output":{"name":"completion"}}],[11,"is_complete","","Returns `true` if all assets have been imported without error.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"hotreloadbundle"}}],[11,"new","","Creates a new bundle.",7,{"inputs":[{"name":"hotreloadstrategy"}],"output":{"name":"self"}}],[11,"build","","",7,{"inputs":[{"name":"self"},{"name":"world"},{"name":"dispatcherbuilder"}],"output":{"generics":["dispatcherbuilder"],"name":"result"}}],[11,"every","","Causes hot reloads every `n` seconds.",8,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"when_triggered","","This allows to use `trigger` for hot reloading.",8,{"inputs":[],"output":{"name":"self"}}],[11,"never","","Never do any hot-reloading.",8,{"inputs":[],"output":{"name":"self"}}],[11,"trigger","","The frame after calling this, all changed assets will be reloaded. Doesn't do anything if the strategy wasn't created with `when_triggered`.",8,{"inputs":[{"name":"self"}],"output":null}],[11,"default","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"run","","",9,null],[11,"new","","Creates a new `SingleFile` reload object.",10,null],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"needs_reload","","",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"reload","","",10,{"inputs":[{"name":"box"}],"output":{"generics":["formatvalue"],"name":"result"}}],[11,"name","","",10,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"format","","",10,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new directory storage.",11,{"inputs":[{"name":"p"}],"output":{"name":"self"}}],[11,"modified","","",11,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["u64"],"name":"result"}}],[11,"load","","",11,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["vec"],"name":"result"}}],[11,"new","","Creates a new asset storage.",12,{"inputs":[],"output":{"name":"self"}}],[11,"clone_asset","","When cloning an asset handle, you'll get another handle, but pointing to the same asset. If you instead want to indeed create a new asset, you can use this method. Note however, that it needs a mutable borrow of `self`, so it can't be used in parallel.",12,{"inputs":[{"name":"self"},{"name":"handle"}],"output":{"generics":["handle"],"name":"option"}}],[11,"get","","Get an asset from a given asset handle.",12,{"inputs":[{"name":"self"},{"name":"handle"}],"output":{"name":"option"}}],[11,"get_mut","","Get an asset mutably from a given asset handle.",12,{"inputs":[{"name":"self"},{"name":"handle"}],"output":{"name":"option"}}],[11,"process","","Process finished asset data and maintain the storage.",12,{"inputs":[{"name":"self"},{"name":"f"},{"name":"u64"},{"name":"threadpool"},{"generics":["hotreloadstrategy"],"name":"option"}],"output":null}],[11,"process_custom_drop","","Process finished asset data and maintain the storage. This calls the `drop_fn` closure for assets that were removed from the storage.",12,{"inputs":[{"name":"self"},{"name":"f"},{"name":"d"},{"name":"u64"},{"name":"threadpool"},{"generics":["hotreloadstrategy"],"name":"option"}],"output":null}],[11,"default","","",12,{"inputs":[],"output":{"name":"self"}}],[11,"drop","","",12,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new asset processor for assets of type `A`.",13,{"inputs":[],"output":{"name":"self"}}],[11,"run","","",13,null],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",14,{"inputs":[{"name":"self"},{"name":"__ha"}],"output":null}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"id","","Return the 32 bit id of this handle.",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"downgrade","","Downgrades the handle and creates a `WeakHandle`.",14,{"inputs":[{"name":"self"}],"output":{"name":"weakhandle"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"upgrade","","Tries to upgrade to a `Handle`.",15,{"inputs":[{"name":"self"}],"output":{"generics":["handle"],"name":"option"}}],[11,"is_dead","","Returns `true` if the original handle is dead.",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[6,"Result","","Convenient wrapper around `std::Result`.",null,null],[8,"Asset","","One of the three core traits of this crate.",null,null],[16,"Data","","The `Data` type the asset can be created from.",16,null],[16,"HandleStorage","","The ECS storage type to be used. You'll want to use `VecStorage` in most cases.",16,null],[8,"Format","","A format, providing a conversion from bytes to asset data, which is then in turn accepted by `Asset::from_data`. Examples for formats are `Png`, `Obj` and `Wave`.",null,null],[18,"NAME","","A unique identifier for this format.",17,null],[16,"Options","","Options specific to the format, which are passed to `import`. E.g. for textures this would be stuff like mipmap levels and sampler info.",17,null],[10,"import","","Reads the given bytes and produces asset data.",17,null],[8,"SimpleFormat","","This is a simplified version of `Format`, which doesn't give you as much freedom, but in return is simpler to implement. All `SimpleFormat` types automatically implement `Format`. This format assumes that the asset name is the full path and the asset is only contained in one file.",null,null],[18,"NAME","","A unique identifier for this format.",18,null],[16,"Options","","Options specific to the format, which are passed to `import`. E.g. for textures this would be stuff like mipmap levels and sampler info.",18,null],[10,"import","","Produces asset data from given bytes.",18,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns some type that can be converted to `ErrorKind`, boxes the original error to store as the cause, then returns a new error containing the original error.",19,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["error"],"name":"result"}}],[8,"Progress","","The `Progress` trait, allowing to track which assets are imported already.",null,null],[16,"Tracker","","The tracker this progress can create.",20,null],[10,"add_assets","","Add `num` assets to the progress. This should be done whenever a new asset is put in the queue.",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[10,"create_tracker","","Creates a `Tracker`.",20,null],[8,"Tracker","","The `Tracker` trait which will be used by the loader to report back to `Progress`.",null,null],[10,"success","","Called if the asset could be imported.",21,{"inputs":[{"name":"box"}],"output":null}],[10,"fail","","Called if the asset couldn't be imported to an error.",21,{"inputs":[{"name":"box"},{"name":"error"}],"output":null}],[8,"Reload","","The `Reload` trait provides a method which checks if an asset needs to be reloaded.",null,null],[10,"needs_reload","","Checks if a reload is necessary.",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"name","","Returns the asset name.",22,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[10,"format","","Returns the format name.",22,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[10,"reload","","Reloads the asset.",22,{"inputs":[{"name":"box"}],"output":{"generics":["formatvalue"],"name":"result"}}],[8,"Source","","A trait for asset sources, which provides methods for loading bytes.",null,null],[10,"modified","","This is called to check if an asset has been modified.",23,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["u64"],"name":"result"}}],[10,"load","","Loads the bytes given a path.",23,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["vec"],"name":"result"}}],[11,"load_with_metadata","","Returns both the result of `load` and `modified` as a tuple. There's a default implementation which just calls both methods, but you may be able to provide a more optimized version yourself.",23,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[18,"NAME","","A unique identifier for this format.",17,null],[18,"NAME","","A unique identifier for this format.",18,null],[11,"load_with_metadata","","Returns both the result of `load` and `modified` as a tuple. There's a default implementation which just calls both methods, but you may be able to provide a more optimized version yourself.",23,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"FormatValue"],[3,"Error"],[4,"ErrorKind"],[4,"Completion"],[3,"Cache"],[3,"Loader"],[3,"ProgressCounter"],[3,"HotReloadBundle"],[3,"HotReloadStrategy"],[3,"HotReloadSystem"],[3,"SingleFile"],[3,"Directory"],[3,"AssetStorage"],[3,"Processor"],[3,"Handle"],[3,"WeakHandle"],[8,"Asset"],[8,"Format"],[8,"SimpleFormat"],[8,"ResultExt"],[8,"Progress"],[8,"Tracker"],[8,"Reload"],[8,"Source"]]};
searchIndex["amethyst_audio"] = {"doc":"Loading and playing of audio files.","items":[[3,"AudioBundle","amethyst_audio","Audio bundle",null,null],[3,"AudioEmitter","","An audio source, add this component to anything that emits sound.",null,null],[3,"AudioListener","","An audio listener, add this component to the local player character.",null,null],[12,"output","","Output used by this listener to emit sounds to",0,null],[12,"left_ear","","Position of the left_ear relative to the global transform on this entity.",0,null],[12,"right_ear","","Position of the right ear relative to the global transform on this entity.",0,null],[3,"FlacFormat","","Loads audio from Flac files.",null,null],[3,"OggFormat","","Loads audio from Ogg Vorbis files",null,null],[3,"WavFormat","","Loads audio from wav files.",null,null],[3,"AudioSink","","This structure provides a way to programmatically pick and play music.",null,null],[3,"Source","","A loaded audio file",null,null],[12,"bytes","","The bytes of this audio source.",1,null],[3,"AudioSystem","","Syncs 3D transform data with the audio engine to provide 3D audio.",null,null],[3,"DjSystem","","Calls a closure if the `AudioSink` is empty.",null,null],[3,"DecoderError","","An error occurred while decoding the source.",null,null],[0,"output","","Provides structures and functions used to get audio outputs.",null,null],[3,"Output","amethyst_audio::output","A speaker(s) through which audio can be played.",null,null],[3,"OutputIterator","","An iterator over outputs",null,null],[5,"default_output","","Get the default output, returns none if no outputs are available.",null,{"inputs":[],"output":{"generics":["output"],"name":"option"}}],[5,"outputs","","Get a list of outputs available to the system.",null,{"inputs":[],"output":{"name":"outputiterator"}}],[11,"name","","Gets the name of the output",2,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"try_play_once","","Play a sound once.  A volume of 1.0 is unchanged, while 0.0 is silent.",2,{"inputs":[{"name":"self"},{"name":"source"},{"name":"f32"}],"output":{"generics":["decodererror"],"name":"result"}}],[11,"play_once","","Play a sound once. A volume of 1.0 is unchanged, while 0.0 is silent.",2,{"inputs":[{"name":"self"},{"name":"source"},{"name":"f32"}],"output":null}],[11,"play_n_times","","Play a sound n times. A volume of 1.0 is unchanged, while 0.0 is silent.",2,{"inputs":[{"name":"self"},{"name":"source"},{"name":"f32"},{"name":"u16"}],"output":null}],[11,"try_play_n_times","","Play a sound n times. A volume of 1.0 is unchanged, while 0.0 is silent.",2,{"inputs":[{"name":"self"},{"name":"source"},{"name":"f32"},{"name":"u16"}],"output":{"generics":["decodererror"],"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["output"],"name":"option"}}],[11,"clone","amethyst_audio","",4,{"inputs":[{"name":"self"}],"output":{"name":"wavformat"}}],[11,"import","","",4,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"oggformat"}}],[11,"import","","",5,null],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"flacformat"}}],[11,"import","","",6,null],[11,"new","","Creates a new Dj using the given audio output.",7,{"inputs":[{"name":"output"}],"output":{"name":"audiosink"}}],[11,"append","","Adds a source to the sink's queue of music to play.",7,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"generics":["decodererror"],"name":"result"}}],[11,"empty","","Returns true if the sink has no more music to play.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"volume","","Retrieves the volume of the sink, between 0.0 and 1.0;",7,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"set_volume","","Sets the volume of the sink.",7,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"play","","Resumes playback of a paused sink. Has no effect if this sink was never paused.",7,{"inputs":[{"name":"self"}],"output":null}],[11,"pause","","Pauses playback, this can be resumed with `AudioSink::play`",7,{"inputs":[{"name":"self"}],"output":null}],[11,"is_paused","","Returns true if the sink is currently paused.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"stop","","Empties the sink's queue of all music.",7,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"source"}}],[11,"as_ref","","",1,null],[11,"default","","",8,{"inputs":[],"output":{"name":"audioemitter"}}],[11,"new","","Creates a new AudioEmitter component initialized to the given positions. These positions will stay synced with Transform if the Transform component is available on this entity.",8,{"inputs":[],"output":{"name":"audioemitter"}}],[11,"play","","Plays an audio source from this emitter.",8,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"generics":["decodererror"],"name":"result"}}],[11,"set_picker","","An emitter's picker will be called by the AudioSystem whenever the emitter runs out of sounds to play.",8,{"inputs":[{"name":"self"},{"generics":["fnmut"],"name":"box"}],"output":null}],[11,"clear_picker","","Clears the previously set picker.",8,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"audiosystem"}}],[11,"new","","Produces a new AudioSystem that uses the given listener.",9,{"inputs":[],"output":{"name":"audiosystem"}}],[11,"run","","",9,null],[11,"new","","Creates a new `DjSystem` with the music picker being `f`. The closure takes a parameter, which needs to be a reference to a resource type, e.g. `&MusicLibrary`. This resource will be fetched by the system and passed to the picker.",10,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"run","","",10,null],[11,"new","","Create a new DJ bundle",11,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"with_dep","","Set dependencies for the `DjSystem`",11,null],[11,"build","","",11,{"inputs":[{"name":"self"},{"name":"world"},{"name":"dispatcherbuilder"}],"output":{"generics":["dispatcherbuilder"],"name":"result"}}],[6,"SourceHandle","","A handle to a source asset.",null,null],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"description","","",12,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}]],"paths":[[3,"AudioListener"],[3,"Source"],[3,"Output"],[3,"OutputIterator"],[3,"WavFormat"],[3,"OggFormat"],[3,"FlacFormat"],[3,"AudioSink"],[3,"AudioEmitter"],[3,"AudioSystem"],[3,"DjSystem"],[3,"AudioBundle"],[3,"DecoderError"]]};
searchIndex["amethyst_config"] = {"doc":"Loads RON files into a structure for easy / statically typed usage.","items":[[4,"ConfigError","amethyst_config","Error related to anything that manages/creates configurations as well as \"workspace\"-related things.",null,null],[13,"File","","Forward to the `std::io::Error` error.",0,null],[13,"Parser","","Errors related to serde's parsing of configuration files.",0,null],[13,"Serializer","","Occurs if a value is ill-formed during serialization (like a poisoned mutex).",0,null],[13,"Extension","","Related to the path of the file.",0,null],[8,"Config","","Trait implemented by the `config!` macro.",null,null],[10,"load","","Loads a configuration structure from a file. Defaults if the file fails in any way.",1,{"inputs":[{"name":"p"}],"output":{"name":"self"}}],[10,"load_no_fallback","","Loads a configuration structure from a file.",1,{"inputs":[{"name":"p"}],"output":{"generics":["configerror"],"name":"result"}}],[10,"write","","Writes a configuration structure to a file.",1,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"generics":["configerror"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"configerror"}}],[11,"from","","",0,{"inputs":[{"name":"deerror"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"sererror"}],"output":{"name":"self"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}]],"paths":[[4,"ConfigError"],[8,"Config"]]};
searchIndex["amethyst_core"] = {"doc":"","items":[[0,"bundle","amethyst_core","",null,null],[3,"Error","amethyst_core::bundle","The Error type.",null,null],[12,"0","","The kind of the error.",0,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",1,null],[6,"Result","","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns some type that can be converted to `ErrorKind`, boxes the original error to store as the cause, then returns a new error containing the original error.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["error"],"name":"result"}}],[8,"ECSBundle","","A bundle of ECS components, resources and systems.",null,null],[10,"build","","Build and add ECS resources, register components, add systems etc to the Application.",3,{"inputs":[{"name":"self"},{"name":"world"},{"name":"dispatcherbuilder"}],"output":{"generics":["dispatcherbuilder"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",0,{"inputs":[{"name":"errorkind"},{"name":"state"}],"output":{"name":"error"}}],[11,"from_kind","","",0,null],[11,"with_chain","","",0,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[11,"kind","","",0,null],[11,"iter","","",0,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"chain_err","","",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"backtrace","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"extract_backtrace","","",0,{"inputs":[{"name":"error"}],"output":{"generics":["arc"],"name":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",0,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",0,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"error"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",0,{"inputs":[{"generics":["error"],"name":"box"},{"name":"k"}],"output":{"name":"error"}}],[11,"kind","","Returns the kind of the error.",0,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"iter","","Iterates over the error chain.",0,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",0,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"error"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"deref","","",0,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","A string describing the error kind.",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[0,"orientation","amethyst_core","Orientation of objects",null,null],[3,"Orientation","amethyst_core::orientation","Orientation struct.",null,null],[12,"forward","","Forward vector [x, y, z]",4,null],[12,"right","","Right vector [x, y, z]",4,null],[12,"up","","Up vector [x, y, z]",4,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":{"name":"bool"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"self"}}],[0,"transform","amethyst_core","`amethyst` transform ecs module",null,null],[0,"components","amethyst_core::transform","Components for the transform processor.",null,null],[3,"LocalTransform","amethyst_core::transform::components","Local position, rotation, and scale (from parent if it exists).",null,null],[12,"rotation","","Quaternion [w (scalar), x, y, z]",5,null],[12,"scale","","Scale vector [x, y, z]",5,null],[12,"translation","","Translation/position vector [x, y, z]",5,null],[3,"Parent","","Component for defining a parent entity.",null,null],[12,"entity","","The parent entity",6,null],[3,"Transform","","Performs a global transformation on the entity (transform from origin).",null,null],[12,"0","","",7,null],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"parent"}}],[11,"cmp","","",6,{"inputs":[{"name":"self"},{"name":"parent"}],"output":{"name":"ordering"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"parent"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"parent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"parent"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"self"},{"name":"parent"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"self"},{"name":"parent"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"self"},{"name":"parent"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"self"},{"name":"parent"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"localtransform"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"localtransform"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"localtransform"}],"output":{"name":"bool"}}],[11,"look_at","","Rotate to look at a point in space (without rolling)",5,{"inputs":[{"name":"self"},{"name":"orientation"},{"generics":["f32"],"name":"point3"}],"output":{"name":"self"}}],[11,"matrix","","Returns the local object matrix for the transform.",5,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"matrix4"}}],[11,"move_forward","","Move relatively to its current position and orientation.",5,{"inputs":[{"name":"self"},{"name":"orientation"},{"name":"f32"}],"output":{"name":"self"}}],[11,"move_global","","Move relatively to its current position, but independently from its orientation. Ideally, first normalize the direction and then multiply it by whatever amount you want to move before passing the vector to this method",5,{"inputs":[{"name":"self"},{"generics":["f32"],"name":"vector3"}],"output":{"name":"self"}}],[11,"move_local","","Move relatively to its current position and orientation.",5,{"inputs":[{"name":"self"},{"generics":["f32"],"name":"vector3"},{"name":"f32"}],"output":{"name":"self"}}],[11,"move_right","","Move relatively to its current position and orientation.",5,{"inputs":[{"name":"self"},{"name":"orientation"},{"name":"f32"}],"output":{"name":"self"}}],[11,"move_up","","Move relatively to its current position and orientation.",5,{"inputs":[{"name":"self"},{"name":"orientation"},{"name":"f32"}],"output":{"name":"self"}}],[11,"pitch_global","","Pitch relatively to the world.",5,{"inputs":[{"name":"self"},{"name":"orientation"},{"generics":["f32"],"name":"deg"}],"output":{"name":"self"}}],[11,"pitch_local","","Pitch relatively to its own rotation.",5,{"inputs":[{"name":"self"},{"name":"orientation"},{"generics":["f32"],"name":"deg"}],"output":{"name":"self"}}],[11,"roll_global","","Roll relatively to the world.",5,{"inputs":[{"name":"self"},{"name":"orientation"},{"generics":["f32"],"name":"deg"}],"output":{"name":"self"}}],[11,"roll_local","","Roll relatively to its own rotation.",5,{"inputs":[{"name":"self"},{"name":"orientation"},{"generics":["f32"],"name":"deg"}],"output":{"name":"self"}}],[11,"rotate","","Add a rotation to the current rotation",5,{"inputs":[{"name":"self"},{"generics":["f32"],"name":"quaternion"}],"output":{"name":"self"}}],[11,"rotate_global","","Rotate relatively to the world",5,{"inputs":[{"name":"self"},{"generics":["f32"],"name":"vector3"},{"generics":["f32"],"name":"deg"}],"output":{"name":"self"}}],[11,"rotate_local","","Rotate relatively to the current orientation",5,{"inputs":[{"name":"self"},{"generics":["f32"],"name":"vector3"},{"generics":["f32"],"name":"deg"}],"output":{"name":"self"}}],[11,"set_position","","Set the position.",5,{"inputs":[{"name":"self"},{"generics":["f32"],"name":"vector3"}],"output":{"name":"self"}}],[11,"set_rotation","","Set the rotation using Euler x, y, z.",5,{"inputs":[{"name":"self"},{"name":"d"},{"name":"d"},{"name":"d"}],"output":{"name":"self"}}],[11,"to_view_matrix","","Calculate the view matrix from the given data.",5,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":{"generics":["f32"],"name":"matrix4"}}],[11,"yaw_global","","Yaw relatively to the world.",5,{"inputs":[{"name":"self"},{"name":"orientation"},{"generics":["f32"],"name":"deg"}],"output":{"name":"self"}}],[11,"yaw_local","","Yaw relatively to its own rotation.",5,{"inputs":[{"name":"self"},{"name":"orientation"},{"generics":["f32"],"name":"deg"}],"output":{"name":"self"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Create a new `LocalTransform`.",5,{"inputs":[],"output":{"name":"self"}}],[11,"one","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"look_at","","",5,{"inputs":[{"generics":["f32"],"name":"point3"},{"generics":["f32"],"name":"point3"},{"generics":["f32"],"name":"vector3"}],"output":{"name":"self"}}],[11,"transform_vector","","",5,{"inputs":[{"name":"self"},{"generics":["f32"],"name":"vector3"}],"output":{"generics":["f32"],"name":"vector3"}}],[11,"transform_point","","",5,{"inputs":[{"name":"self"},{"generics":["f32"],"name":"point3"}],"output":{"generics":["f32"],"name":"point3"}}],[11,"concat","","",5,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"inverse_transform","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"transform"}}],[11,"is_finite","","Checks whether each `f32` of the `Transform` is finite (not NaN or inf).",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new `Transform` in the form of an identity matrix.",7,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",7,null],[11,"into","","",7,null],[11,"as_ref","","",7,null],[11,"borrow","","",7,null],[0,"systems","amethyst_core::transform","Scene graph system and types",null,null],[3,"TransformSystem","amethyst_core::transform::systems","Handles updating `Transform` components based on the `LocalTransform` component and parents.",null,null],[11,"default","","",8,{"inputs":[],"output":{"name":"transformsystem"}}],[11,"new","","Creates a new transform processor.",8,{"inputs":[],"output":{"name":"transformsystem"}}],[11,"run","","",8,null],[0,"bundle","amethyst_core::transform","ECS transform bundle",null,null],[3,"TransformBundle","amethyst_core::transform::bundle","Transform bundle",null,null],[11,"default","","",9,{"inputs":[],"output":{"name":"transformbundle"}}],[11,"new","","Create a new transform bundle",9,{"inputs":[],"output":{"name":"self"}}],[11,"with_dep","","Set dependencies for the `TransformSystem`",9,null],[11,"build","","",9,{"inputs":[{"name":"self"},{"name":"world"},{"name":"dispatcherbuilder"}],"output":{"generics":["dispatcherbuilder"],"name":"result"}}],[0,"timing","amethyst_core","Utilities for working with time.",null,null],[3,"Time","amethyst_core::timing","Frame timing values.",null,null],[12,"last_fixed_update","","Time at which `State::fixed_update` was last called.",10,null],[4,"Stopwatch","","A stopwatch which accurately measures elapsed time.",null,null],[13,"Waiting","","Initial state with an elapsed time value of 0 seconds.",11,null],[13,"Started","","Stopwatch has started counting the elapsed time since this `Instant` and accumuluated time from previous start/stop cycles `Duration`.",11,null],[13,"Ended","","Stopwatch has been stopped and reports the elapsed time `Duration`.",11,null],[5,"duration_to_secs","","Converts a Duration to the time in seconds.",null,{"inputs":[{"name":"duration"}],"output":{"name":"f32"}}],[5,"duration_to_secs_f64","","Converts a Duration to the time in seconds in an f64.",null,{"inputs":[{"name":"duration"}],"output":{"name":"f64"}}],[5,"secs_to_duration","","Converts a time in seconds to a duration",null,{"inputs":[{"name":"f32"}],"output":{"name":"duration"}}],[5,"duration_to_nanos","","Converts a Duration to nanoseconds",null,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[5,"nanos_to_duration","","Converts nanoseconds to a Duration",null,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"time"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"time"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"time"}],"output":{"name":"bool"}}],[11,"delta_seconds","","Gets the time difference between frames in seconds.",10,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"delta_time","","Gets the time difference between frames.",10,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"delta_real_seconds","","Gets the time difference between frames in seconds ignoring the time speed multiplier.",10,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"delta_real_time","","Gets the time difference between frames ignoring the time speed multiplier.",10,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"fixed_seconds","","Gets the fixed time step in seconds.",10,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"fixed_time","","Gets the fixed time step.",10,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"frame_number","","Gets the current frame number.  This increments by 1 every frame.  There is no frame 0.",10,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"last_fixed_update","","Gets the time at which the last fixed update was called.",10,{"inputs":[{"name":"self"}],"output":{"name":"instant"}}],[11,"absolute_time","","Gets the time since the start of the game, taking into account the speed multiplier.",10,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"absolute_time_seconds","","Gets the time since the start of the game as seconds, taking into account the speed multiplier.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"absolute_real_time","","Gets the time since the start of the game, ignoring the speed multiplier.",10,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"absolute_real_time_seconds","","Gets the time since the start of the game as seconds, ignoring the speed multiplier.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"time_scale","","Gets the current time speed multiplier.",10,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"set_delta_seconds","","Gets the total number of frames that have been played in this session. Sets both `delta_seconds` and `delta_time` based on the seconds given.",10,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"set_delta_time","","Sets both `delta_time` and `delta_seconds` based on the duration given.",10,{"inputs":[{"name":"self"},{"name":"duration"}],"output":null}],[11,"set_fixed_seconds","","Sets both `fixed_seconds` and `fixed_time` based on the seconds given.",10,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"set_fixed_time","","Sets both `fixed_time` and `fixed_seconds` based on the duration given.",10,{"inputs":[{"name":"self"},{"name":"duration"}],"output":null}],[11,"increment_frame_number","","Increments the current frame number by 1.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"set_time_scale","","Sets the time multiplier that affects how time values are computed, effectively slowing or speeding up your game.",10,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"finish_fixed_update","","Indicates a fixed update just finished.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"default","","",10,{"inputs":[],"output":{"name":"time"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"stopwatch"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"stopwatch"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"stopwatch"}],"output":{"name":"bool"}}],[11,"default","","",11,{"inputs":[],"output":{"name":"stopwatch"}}],[11,"new","","Creates a new stopwatch.",11,{"inputs":[],"output":{"name":"stopwatch"}}],[11,"elapsed","","Retrieves the elapsed time.",11,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"restart","","Stops, resets, and starts the stopwatch again.",11,{"inputs":[{"name":"self"}],"output":null}],[11,"start","","Starts, or resumes, measuring elapsed time. If the stopwatch has been started and stopped before, the new results are compounded onto the existing elapsed time value.",11,{"inputs":[{"name":"self"}],"output":null}],[11,"stop","","Stops measuring elapsed time.",11,{"inputs":[{"name":"self"}],"output":null}],[11,"reset","","Clears the current elapsed time value.",11,{"inputs":[{"name":"self"}],"output":null}],[0,"frame_limiter","amethyst_core","Frame limiter",null,null],[3,"FrameRateLimitConfig","amethyst_core::frame_limiter","Frame limit config",null,null],[3,"FrameLimiter","","Frame limiter",null,null],[4,"FrameRateLimitStrategy","","Frame rate limiting strategy",null,null],[13,"Unlimited","","No limit, will do a single yield, and then continue with the next frame",12,null],[13,"Yield","","Use yield until the full frame duration has passed",12,null],[13,"Sleep","","Use sleep until the full frame duration has passed",12,null],[13,"SleepAndYield","","Use sleep and yield combined, will use sleep strategy until the given duration remains, and then swap to yield strategy.",12,null],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"frameratelimitstrategy"}}],[11,"default","","",12,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"frameratelimitconfig"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Create a new frame limiter with the given config",14,{"inputs":[{"name":"frameratelimitstrategy"},{"name":"u32"}],"output":{"name":"self"}}],[11,"set_rate","","Set the strategy and fps",14,{"inputs":[{"name":"self"},{"name":"frameratelimitstrategy"},{"name":"u32"}],"output":null}],[11,"from_config","","Create a new frame limiter with the given config",14,{"inputs":[{"name":"frameratelimitconfig"}],"output":{"name":"self"}}],[11,"start","","Start the limiter",14,{"inputs":[{"name":"self"}],"output":null}],[11,"wait","","Wait until the frame has passed",14,{"inputs":[{"name":"self"}],"output":null}],[6,"ThreadPool","amethyst_core","A rayon thread pool wrapped in an `Arc`. This should be used as resource in `World`.",null,null]],"paths":[[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[8,"ECSBundle"],[3,"Orientation"],[3,"LocalTransform"],[3,"Parent"],[3,"Transform"],[3,"TransformSystem"],[3,"TransformBundle"],[3,"Time"],[4,"Stopwatch"],[4,"FrameRateLimitStrategy"],[3,"FrameRateLimitConfig"],[3,"FrameLimiter"]]};
searchIndex["amethyst_input"] = {"doc":"","items":[[3,"Axis","amethyst_input","Represents an emulated analogue axis made up of digital inputs, like W and S or A and D. Two of these could be analogous to a DPAD.",null,null],[12,"pos","","Positive button, when pressed down axis value will return 1 if `neg` is not pressed down.",0,null],[12,"neg","","Negative button, when pressed down axis value will return -1 if `pos` is not pressed down.",0,null],[3,"Bindings","","Used for saving and loading input settings.",null,null],[3,"InputBundle","","Bundle for adding the `InputHandler`.",null,null],[3,"InputHandler","","This struct holds state information about input devices.",null,null],[12,"bindings","","Maps inputs to actions and axes.",1,null],[3,"InputSystem","","Input system",null,null],[3,"Buttons","","An iterator over buttons",null,null],[4,"Button","","A Button is any kind of digital input that the engine supports.",null,null],[13,"Key","","Virtual Keyboard keys, use this when the letter on the key matters more than the position of the key.",2,null],[13,"ScanCode","","Scan code from keyboard, use this when the position of the key matters more than letter on the key.",2,null],[13,"Mouse","","Mouse buttons",2,null],[4,"InputEvent","","Events generated by the input system",null,null],[13,"KeyPressed","","A key was pressed down, sent exactly once per key press.",3,null],[12,"key_code","amethyst_input::InputEvent","",3,null],[12,"scancode","","",3,null],[13,"KeyReleased","amethyst_input","A key was released, sent exactly once per key release.",3,null],[12,"key_code","amethyst_input::InputEvent","",3,null],[12,"scancode","","",3,null],[13,"KeyTyped","amethyst_input","A unicode character was received by the window.  Good for typing.",3,null],[13,"MouseButtonPressed","","A mouse button was pressed down, sent exactly once per press.",3,null],[13,"MouseButtonReleased","","A mouse button was released, sent exactly once per release.",3,null],[13,"ButtonPressed","","A button was pressed.",3,null],[13,"ButtonReleased","","A button was released.",3,null],[13,"MouseMoved","","The mouse pointer moved on screen",3,null],[12,"delta_x","amethyst_input::InputEvent","",3,null],[12,"delta_y","","",3,null],[13,"ActionPressed","amethyst_input","The associated action had one of its keys pressed.",3,null],[13,"ActionReleased","","The associated action had one of its keys released.",3,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"axis"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bindings"}}],[11,"new","","Creates a new empty Bindings structure",4,{"inputs":[],"output":{"name":"self"}}],[11,"insert_axis","","Assign an axis to an ID value",4,{"inputs":[{"name":"self"},{"name":"a"},{"name":"axis"}],"output":{"generics":["axis"],"name":"option"}}],[11,"remove_axis","","Removes an axis, this will return the removed axis if successful.",4,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"generics":["axis"],"name":"option"}}],[11,"axis","","Returns a reference to an axis.",4,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"generics":["axis"],"name":"option"}}],[11,"axes","","Gets a list of all axes",4,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"insert_action_binding","","Add a button to an action.",4,{"inputs":[{"name":"self"},{"name":"a"},{"name":"button"}],"output":null}],[11,"remove_action_binding","","Removes an action binding that was assigned previously.",4,{"inputs":[{"name":"self"},{"name":"t"},{"name":"button"}],"output":null}],[11,"action_bindings","","Returns an action's bindings.",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[11,"actions","","Gets a list of all action bindings",4,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"button"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"button"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"button"}}],[11,"from","","",2,{"inputs":[{"name":"virtualkeycode"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"mousebutton"}],"output":{"name":"self"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new input handler.",1,{"inputs":[],"output":{"name":"self"}}],[11,"send_event","","Updates the input handler with a new engine event.",1,{"inputs":[{"name":"self"},{"name":"windowevent"},{"name":"eventchannel"}],"output":null}],[11,"keys_that_are_down","","Returns an iterator over all keys that are down.",1,{"inputs":[{"name":"self"}],"output":{"name":"keycodes"}}],[11,"key_is_down","","Checks if a key is down.",1,{"inputs":[{"name":"self"},{"name":"virtualkeycode"}],"output":{"name":"bool"}}],[11,"mouse_buttons_that_are_down","","Returns an iterator over all pressed mouse buttons",1,{"inputs":[{"name":"self"}],"output":{"name":"mousebuttons"}}],[11,"mouse_button_is_down","","Checks if a mouse button is down.",1,{"inputs":[{"name":"self"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"scan_codes_that_are_down","","Returns an iterator over all pressed scan codes",1,{"inputs":[{"name":"self"}],"output":{"name":"scancodes"}}],[11,"scan_code_is_down","","Checks if the key corresponding to a scan code is down.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"mouse_position","","Gets the current mouse position.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"buttons_that_are_down","","Returns an iterator over all buttons that are down.",1,{"inputs":[{"name":"self"}],"output":{"name":"buttons"}}],[11,"button_is_down","","Checks if a button is down.",1,{"inputs":[{"name":"self"},{"name":"button"}],"output":{"name":"bool"}}],[11,"axis_value","","Returns the value of an axis by the string id, if the id doesn't exist this returns None.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["f64"],"name":"option"}}],[11,"action_is_down","","Returns true if any of the action keys are down.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["bool"],"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"inputevent"}}],[11,"new","","Create a new input system. Needs a reader id for `EventHandler<winit::Event>`.",5,{"inputs":[{"generics":["event"],"name":"readerid"}],"output":{"name":"self"}}],[11,"run","","",5,null],[11,"default","","",6,{"inputs":[],"output":{"name":"inputbundle"}}],[11,"new","","Create a new input bundle with no bindings",6,{"inputs":[],"output":{"name":"self"}}],[11,"with_bindings","","Use the provided bindings with the `InputHandler`",6,{"inputs":[{"name":"self"},{"name":"bindings"}],"output":{"name":"self"}}],[11,"with_bindings_from_file","","Load bindings from file",6,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"self"}}],[11,"build","","",6,{"inputs":[{"name":"self"},{"name":"world"},{"name":"dispatcherbuilder"}],"output":{"generics":["dispatcherbuilder"],"name":"result"}}],[6,"KeyCodes","","Iterator over keycodes",null,null],[6,"ScanCodes","","Iterator over key scan codes",null,null],[6,"MouseButtons","","Iterator over MouseButtons",null,null],[11,"next","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"Axis"],[3,"InputHandler"],[4,"Button"],[4,"InputEvent"],[3,"Bindings"],[3,"InputSystem"],[3,"InputBundle"],[3,"Buttons"]]};
searchIndex["amethyst_renderer"] = {"doc":"A data parallel rendering engine developed by the [Amethyst][am] project. The source code is available for download on [GitHub][gh]. See the [online book][bk] for a complete guide to using Amethyst.","items":[[4,"ImageError","amethyst_renderer","Error.",null,null],[13,"InvalidData","","",0,null],[13,"InvalidArg","","",0,null],[13,"Unsupported","","",0,null],[13,"Internal","","",0,null],[13,"Io","","",0,null],[4,"ElementState","","",null,null],[13,"Pressed","","",1,null],[13,"Released","","",1,null],[4,"Event","","",null,null],[13,"WindowEvent","","",2,null],[12,"window_id","amethyst_renderer::Event","",2,null],[12,"event","","",2,null],[13,"DeviceEvent","amethyst_renderer","",2,null],[12,"device_id","amethyst_renderer::Event","",2,null],[12,"event","","",2,null],[13,"Awakened","amethyst_renderer","",2,null],[3,"KeyboardInput","","",null,null],[12,"scancode","","Identifies the physical key pressed",3,null],[12,"state","","",3,null],[12,"virtual_keycode","","Identifies the semantic meaning of the key",3,null],[12,"modifiers","","Modifier keys active at the time of this input.",3,null],[4,"MouseButton","","",null,null],[13,"Left","","",4,null],[13,"Right","","",4,null],[13,"Middle","","",4,null],[13,"Other","","",4,null],[4,"VirtualKeyCode","","",null,null],[13,"Key1","","The '1' key over the letters.",5,null],[13,"Key2","","The '2' key over the letters.",5,null],[13,"Key3","","The '3' key over the letters.",5,null],[13,"Key4","","The '4' key over the letters.",5,null],[13,"Key5","","The '5' key over the letters.",5,null],[13,"Key6","","The '6' key over the letters.",5,null],[13,"Key7","","The '7' key over the letters.",5,null],[13,"Key8","","The '8' key over the letters.",5,null],[13,"Key9","","The '9' key over the letters.",5,null],[13,"Key0","","The '0' key over the 'O' and 'P' keys.",5,null],[13,"A","","",5,null],[13,"B","","",5,null],[13,"C","","",5,null],[13,"D","","",5,null],[13,"E","","",5,null],[13,"F","","",5,null],[13,"G","","",5,null],[13,"H","","",5,null],[13,"I","","",5,null],[13,"J","","",5,null],[13,"K","","",5,null],[13,"L","","",5,null],[13,"M","","",5,null],[13,"N","","",5,null],[13,"O","","",5,null],[13,"P","","",5,null],[13,"Q","","",5,null],[13,"R","","",5,null],[13,"S","","",5,null],[13,"T","","",5,null],[13,"U","","",5,null],[13,"V","","",5,null],[13,"W","","",5,null],[13,"X","","",5,null],[13,"Y","","",5,null],[13,"Z","","",5,null],[13,"Escape","","The Escape key, next to F1.",5,null],[13,"F1","","",5,null],[13,"F2","","",5,null],[13,"F3","","",5,null],[13,"F4","","",5,null],[13,"F5","","",5,null],[13,"F6","","",5,null],[13,"F7","","",5,null],[13,"F8","","",5,null],[13,"F9","","",5,null],[13,"F10","","",5,null],[13,"F11","","",5,null],[13,"F12","","",5,null],[13,"F13","","",5,null],[13,"F14","","",5,null],[13,"F15","","",5,null],[13,"Snapshot","","Print Screen/SysRq.",5,null],[13,"Scroll","","Scroll Lock.",5,null],[13,"Pause","","Pause/Break key, next to Scroll lock.",5,null],[13,"Insert","","`Insert`, next to Backspace.",5,null],[13,"Home","","",5,null],[13,"Delete","","",5,null],[13,"End","","",5,null],[13,"PageDown","","",5,null],[13,"PageUp","","",5,null],[13,"Left","","",5,null],[13,"Up","","",5,null],[13,"Right","","",5,null],[13,"Down","","",5,null],[13,"Back","","The Backspace key, right over Enter.",5,null],[13,"Return","","The Enter key.",5,null],[13,"Space","","The space bar.",5,null],[13,"Compose","","The \"Compose\" key on Linux.",5,null],[13,"Numlock","","",5,null],[13,"Numpad0","","",5,null],[13,"Numpad1","","",5,null],[13,"Numpad2","","",5,null],[13,"Numpad3","","",5,null],[13,"Numpad4","","",5,null],[13,"Numpad5","","",5,null],[13,"Numpad6","","",5,null],[13,"Numpad7","","",5,null],[13,"Numpad8","","",5,null],[13,"Numpad9","","",5,null],[13,"AbntC1","","",5,null],[13,"AbntC2","","",5,null],[13,"Add","","",5,null],[13,"Apostrophe","","",5,null],[13,"Apps","","",5,null],[13,"At","","",5,null],[13,"Ax","","",5,null],[13,"Backslash","","",5,null],[13,"Calculator","","",5,null],[13,"Capital","","",5,null],[13,"Colon","","",5,null],[13,"Comma","","",5,null],[13,"Convert","","",5,null],[13,"Decimal","","",5,null],[13,"Divide","","",5,null],[13,"Equals","","",5,null],[13,"Grave","","",5,null],[13,"Kana","","",5,null],[13,"Kanji","","",5,null],[13,"LAlt","","",5,null],[13,"LBracket","","",5,null],[13,"LControl","","",5,null],[13,"LMenu","","",5,null],[13,"LShift","","",5,null],[13,"LWin","","",5,null],[13,"Mail","","",5,null],[13,"MediaSelect","","",5,null],[13,"MediaStop","","",5,null],[13,"Minus","","",5,null],[13,"Multiply","","",5,null],[13,"Mute","","",5,null],[13,"MyComputer","","",5,null],[13,"NavigateForward","","",5,null],[13,"NavigateBackward","","",5,null],[13,"NextTrack","","",5,null],[13,"NoConvert","","",5,null],[13,"NumpadComma","","",5,null],[13,"NumpadEnter","","",5,null],[13,"NumpadEquals","","",5,null],[13,"OEM102","","",5,null],[13,"Period","","",5,null],[13,"PlayPause","","",5,null],[13,"Power","","",5,null],[13,"PrevTrack","","",5,null],[13,"RAlt","","",5,null],[13,"RBracket","","",5,null],[13,"RControl","","",5,null],[13,"RMenu","","",5,null],[13,"RShift","","",5,null],[13,"RWin","","",5,null],[13,"Semicolon","","",5,null],[13,"Slash","","",5,null],[13,"Sleep","","",5,null],[13,"Stop","","",5,null],[13,"Subtract","","",5,null],[13,"Sysrq","","",5,null],[13,"Tab","","",5,null],[13,"Underline","","",5,null],[13,"Unlabeled","","",5,null],[13,"VolumeDown","","",5,null],[13,"VolumeUp","","",5,null],[13,"Wake","","",5,null],[13,"WebBack","","",5,null],[13,"WebFavorites","","",5,null],[13,"WebForward","","",5,null],[13,"WebHome","","",5,null],[13,"WebRefresh","","",5,null],[13,"WebSearch","","",5,null],[13,"WebStop","","",5,null],[13,"Yen","","",5,null],[4,"WindowEvent","","",null,null],[13,"Resized","","The size of the window has changed.",6,null],[13,"Moved","","The position of the window has changed.",6,null],[13,"Closed","","The window has been closed.",6,null],[13,"DroppedFile","","A file has been dropped into the window.",6,null],[13,"HoveredFile","","A file is being hovered over the window.",6,null],[13,"HoveredFileCancelled","","A file was hovered, but has exited the window.",6,null],[13,"ReceivedCharacter","","The window received a unicode character.",6,null],[13,"Focused","","The window gained or lost focus.",6,null],[13,"KeyboardInput","","An event from the keyboard has been received.",6,null],[12,"device_id","amethyst_renderer::WindowEvent","",6,null],[12,"input","","",6,null],[13,"MouseMoved","amethyst_renderer","The cursor has moved on the window.",6,null],[12,"device_id","amethyst_renderer::WindowEvent","",6,null],[12,"position","","",6,null],[13,"MouseEntered","amethyst_renderer","The cursor has entered the window.",6,null],[12,"device_id","amethyst_renderer::WindowEvent","",6,null],[13,"MouseLeft","amethyst_renderer","The cursor has left the window.",6,null],[12,"device_id","amethyst_renderer::WindowEvent","",6,null],[13,"MouseWheel","amethyst_renderer","A mouse wheel movement or touchpad scroll occurred.",6,null],[12,"device_id","amethyst_renderer::WindowEvent","",6,null],[12,"delta","","",6,null],[12,"phase","","",6,null],[13,"MouseInput","amethyst_renderer","An mouse button press has been received.",6,null],[12,"device_id","amethyst_renderer::WindowEvent","",6,null],[12,"state","","",6,null],[12,"button","","",6,null],[13,"TouchpadPressure","amethyst_renderer","Touchpad pressure event.",6,null],[12,"device_id","amethyst_renderer::WindowEvent","",6,null],[12,"pressure","","",6,null],[12,"stage","","",6,null],[13,"AxisMotion","amethyst_renderer","Motion on some analog axis not otherwise handled. May overlap with mouse motion.",6,null],[12,"device_id","amethyst_renderer::WindowEvent","",6,null],[12,"axis","","",6,null],[12,"value","","",6,null],[13,"Refresh","amethyst_renderer","The window needs to be redrawn.",6,null],[13,"Suspended","","App has been suspended or resumed.",6,null],[13,"Touch","","Touch event has been received",6,null],[3,"RenderBundle","","Rendering bundle",null,null],[3,"ActiveCamera","","Active camera resource, used by the renderer to choose which camera to get the view matrix from. If no active camera is found, the first camera will be used as a fallback.",null,null],[12,"entity","","Camera entity",7,null],[3,"Camera","","Camera struct.",null,null],[12,"proj","","Graphical projection of the camera.",8,null],[3,"Rgba","","An RGBA color value.",null,null],[12,"0","","",9,null],[12,"1","","",9,null],[12,"2","","",9,null],[12,"3","","",9,null],[3,"DisplayConfig","","Structure for holding the renderer configuration.",null,null],[12,"title","","Name of the application window.",10,null],[12,"fullscreen","","Enables or disables fullscreen mode.",10,null],[12,"dimensions","","Current window dimensions, measured in pixels (px).",10,null],[12,"min_dimensions","","Minimum window dimensions, measured in pixels (px).",10,null],[12,"max_dimensions","","Maximum window dimensions, measured in pixels (px).",10,null],[12,"vsync","","Enables or disables vertical synchronization.",10,null],[12,"multisampling","","Level of MSAA anti-aliasing.",10,null],[12,"visibility","","Sets the visibility of the window.",10,null],[3,"BmpFormat","","Allows loading of BMP files.",null,null],[3,"ComboMeshCreator","","Mesh creator for `VertexBufferCombination`.",null,null],[3,"ImageData","","ImageData provided by formats, can be interpreted as a texture.",null,null],[12,"raw","","The raw image data.",11,null],[3,"JpgFormat","","Allows loading of jpg or jpeg files.",null,null],[3,"ObjFormat","","Allows loading from Wavefront files see: https://en.wikipedia.org/wiki/Wavefront_.obj_file",null,null],[3,"PngFormat","","Allows loading of PNG files.",null,null],[3,"TextureMetadata","","Texture metadata, used while loading",null,null],[12,"sampler","","Sampler info",12,null],[12,"mip_levels","","Mipmapping",12,null],[12,"size","","Texture size",12,null],[12,"dynamic","","Dynamic texture",12,null],[12,"format","","Surface type",12,null],[12,"channel","","Channel type",12,null],[3,"DirectionalLight","","A directional light source.",null,null],[12,"color","","Color of the light in RGBA8 format.",13,null],[12,"direction","","Direction that the light is pointing.",13,null],[3,"PointLight","","A point light source.",null,null],[12,"center","","Location of the light source in three dimensional space.",14,null],[12,"color","","Color of the light in RGBA8 format.",14,null],[12,"intensity","","Brightness of the light source, in lumens.",14,null],[12,"radius","","Maximum radius of the point light's affected area.",14,null],[12,"smoothness","","Smoothness of the light-to-dark transition from the center to the radius.",14,null],[3,"SpotLight","","A spot light source.",null,null],[12,"angle","","Opening angle of the light cone in degrees.",15,null],[12,"center","","Location of the light source in three dimensional space.",15,null],[12,"color","","Color of the light in RGBA8 format.",15,null],[12,"direction","","Direction that the light is pointing.",15,null],[12,"intensity","","Brightness of the light source, in lumens.",15,null],[12,"radius","","Maximum radius of the point light's affected area.",15,null],[12,"smoothness","","Smoothness of the light-to-dark transition from the center to the radius.",15,null],[3,"SunLight","","A realistic disk-shaped sun light source.",null,null],[12,"ang_rad","","The sun's angular radius in degrees.",16,null],[12,"color","","Color of the light in RGBA8 format.",16,null],[12,"direction","","Direction that the light is pointing.",16,null],[12,"intensity","","Brightness of the sun light, in lux.",16,null],[3,"Mesh","","Represents a polygonal mesh.",null,null],[3,"VertexBuffer","","Raw buffer with its attributes",null,null],[3,"Material","","Material struct.",null,null],[12,"albedo","","Diffuse map.",17,null],[12,"emission","","Emission map.",17,null],[12,"normal","","Normal map.",17,null],[12,"metallic","","Metallic map.",17,null],[12,"roughness","","Roughness map.",17,null],[12,"ambient_occlusion","","Ambient occlusion map.",17,null],[12,"caveat","","Caveat map.",17,null],[3,"MaterialDefaults","","A resource providing default textures for `Material`. These will be be used by the renderer in case a texture handle points to a texture which is not loaded already. Additionally, you can use it to fill up the fields of `Material` you don't want to specify.",null,null],[12,"0","","",18,null],[3,"DrawFlat","","Draw mesh without lighting `V` is `VertexFormat`",null,null],[3,"DrawFlatSeparate","","Draw mesh without lighting",null,null],[3,"DrawPbm","","Draw mesh with physically based lighting `V` is `VertexFormat`",null,null],[3,"DrawPbmSeparate","","Draw mesh with physically based lighting",null,null],[3,"DrawShaded","","Draw mesh with simple lighting technique `V` is `VertexFormat`",null,null],[3,"DrawShadedSeparate","","Draw mesh with simple lighting technique",null,null],[3,"ColorBuffer","","Target color buffer.",null,null],[12,"as_input","","Shader resource view.",19,null],[12,"as_output","","Target view.",19,null],[3,"Data","","",null,null],[12,"const_bufs","","",20,null],[12,"globals","","",20,null],[12,"out_colors","","",20,null],[12,"out_blends","","",20,null],[12,"out_depth","","",20,null],[12,"samplers","","",20,null],[12,"textures","","",20,null],[12,"vertex_bufs","","",20,null],[3,"DepthBuffer","","Target depth-stencil buffer.",null,null],[12,"as_input","","Shader resource view.",21,null],[12,"as_output","","Target view.",21,null],[3,"Effect","","",null,null],[12,"pso","","",22,null],[12,"data","","",22,null],[3,"EffectBuilder","","",null,null],[3,"Init","","FIXME: Cannot `Deserialize` for some reason.",null,null],[12,"const_bufs","","",23,null],[12,"globals","","",23,null],[12,"out_colors","","",23,null],[12,"out_blends","","",23,null],[12,"out_depth","","",23,null],[12,"samplers","","",23,null],[12,"textures","","",23,null],[12,"vertex_bufs","","",23,null],[3,"Meta","","",null,null],[3,"NewEffect","","",null,null],[3,"Pipeline","","Defines how the rendering pipeline should be configured.",null,null],[3,"PipelineBuilder","","Constructs a new pipeline with the given render targets and layers.",null,null],[3,"Stage","","A stage in the rendering pipeline.",null,null],[3,"StageBuilder","","Constructs a new rendering stage.",null,null],[3,"Target","","A render target.",null,null],[3,"TargetBuilder","","Builds new render targets.",null,null],[3,"Renderer","","Generic renderer.",null,null],[12,"factory","","The gfx factory used for creation of buffers.",24,null],[3,"AmbientColor","","The ambient color of a scene",null,null],[12,"0","","",25,null],[3,"ScreenDimensions","","World resource that stores screen dimensions.",null,null],[3,"WindowMessages","","This specs resource with id 0 permits sending commands to the renderer internal window.",null,null],[3,"RenderSystem","","Rendering system.",null,null],[3,"Texture","","Handle to a GPU texture resource.",null,null],[3,"TextureBuilder","","Builds new textures.",null,null],[3,"PosColor","","Vertex format with position and RGBA8 color attributes.",null,null],[12,"position","","Position of the vertex in 3D space.",26,null],[12,"color","","RGBA color value of the vertex.",26,null],[3,"PosNormTangTex","","Vertex format with position, normal, and UV texture coordinate attributes.",null,null],[12,"position","","Position of the vertex in 3D space.",27,null],[12,"normal","","Normal vector of the vertex.",27,null],[12,"tangent","","Tangent vector of the vertex.",27,null],[12,"tex_coord","","UV texture coordinates used by the vertex.",27,null],[3,"PosNormTex","","Vertex format with position, normal, and UV texture coordinate attributes.",null,null],[12,"position","","Position of the vertex in 3D space.",28,null],[12,"normal","","Normal vector of the vertex.",28,null],[12,"tex_coord","","UV texture coordinates used by the vertex.",28,null],[3,"PosTex","","Vertex format with position and UV texture coordinate attributes.",null,null],[12,"position","","Position of the vertex in 3D space.",29,null],[12,"tex_coord","","UV texture coordinates used by the vertex.",29,null],[3,"Separate","","Vertex format for attributes in separate buffers",null,null],[4,"Projection","","The projection mode of a `Camera`.",null,null],[13,"Orthographic","","An [orthographic projection][op].",30,null],[13,"Perspective","","A realistic [perspective projection][pp].",30,null],[4,"MeshData","","Mesh data for loading",null,null],[13,"PosColor","","Position and color",31,null],[13,"PosTex","","Position and texture coordinates",31,null],[13,"PosNormTex","","Position, normal and texture coordinates",31,null],[13,"PosNormTangTex","","Position, normal, tangent and texture coordinates",31,null],[13,"Creator","","Create a mesh from a given creator",31,null],[4,"TextureData","","Texture data for loading",null,null],[13,"Image","","Image data",32,null],[13,"Rgba","","Color",32,null],[13,"F32","","Float data",32,null],[13,"F64","","Float data",32,null],[13,"U8","","Byte data",32,null],[13,"U16","","Byte data",32,null],[13,"U32","","Byte data",32,null],[13,"U64","","Byte data",32,null],[4,"Light","","A light source.",null,null],[13,"Area","","An area light. FIXME: Missing implementation!",33,null],[13,"Directional","","A directional light.",33,null],[13,"Point","","A point light.",33,null],[13,"Spot","","A spot light.",33,null],[13,"Sun","","A sun light.",33,null],[4,"DepthMode","","",null,null],[13,"LessEqualTest","","",34,null],[13,"LessEqualWrite","","",34,null],[4,"Color","","Type for color attribute of vertex",null,null],[4,"Normal","","Type for texture coord attribute of vertex",null,null],[4,"Position","","Type for position attribute of vertex",null,null],[4,"Tangent","","Type for tangent attribute of vertex",null,null],[4,"TexCoord","","Type for texture coord attribute of vertex",null,null],[5,"build_mesh_with_combo","","Build Mesh with vertex buffer combination",null,{"inputs":[{"name":"vertexbuffercombination"},{"name":"renderer"}],"output":{"generics":["mesh"],"name":"result"}}],[5,"create_mesh_asset","","Create mesh",null,{"inputs":[{"name":"meshdata"},{"name":"renderer"}],"output":{"generics":["mesh"],"name":"result"}}],[5,"create_texture_asset","","Create a texture asset.",null,{"inputs":[{"name":"texturedata"},{"name":"renderer"}],"output":{"generics":["texture"],"name":"result"}}],[5,"vertex_data","","Construct new vertex data from raw data and vertex format",null,null],[0,"error","","Renderer error types.",null,null],[4,"Error","amethyst_renderer::error","Common renderer error type.",null,null],[13,"BufferCreation","","Failed to create a buffer.",35,null],[13,"NoSuchTarget","","A render target with the given name does not exist.",35,null],[13,"PassInit","","Failed to initialize a render pass.",35,null],[13,"PipelineCreation","","Failed to create a pipeline state object (PSO).",35,null],[13,"PoolCreation","","Failed to create thread pool.",35,null],[13,"ProgramCreation","","Failed to create and link a shader program.",35,null],[13,"ResViewCreation","","Failed to create a resource view.",35,null],[13,"TargetCreation","","Failed to create a render target.",35,null],[13,"TextureCreation","","Failed to create a texture resource.",35,null],[13,"WindowDestroyed","","The window handle associated with the renderer has been destroyed.",35,null],[6,"Result","","Renderer result type.",null,null],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",35,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",35,{"inputs":[{"name":"self"}],"output":{"generics":["stderror"],"name":"option"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"from","","",35,{"inputs":[{"name":"combinederror"}],"output":{"name":"error"}}],[11,"from","","",35,{"inputs":[{"generics":["string"],"name":"pipelinestateerror"}],"output":{"name":"error"}}],[11,"from","","",35,{"inputs":[{"name":"resourceviewerror"}],"output":{"name":"error"}}],[11,"from","","",35,{"inputs":[{"name":"creationerror"}],"output":{"name":"error"}}],[11,"from","","",35,{"inputs":[{"name":"programerror"}],"output":{"name":"error"}}],[11,"from","","",35,{"inputs":[{"name":"creationerror"}],"output":{"name":"error"}}],[11,"from","","",35,{"inputs":[{"name":"creationerror"}],"output":{"name":"error"}}],[0,"pipe","amethyst_renderer","Renderer pipeline configuration.",null,null],[3,"Data","amethyst_renderer::pipe","",null,null],[12,"const_bufs","","",20,null],[12,"globals","","",20,null],[12,"out_colors","","",20,null],[12,"out_blends","","",20,null],[12,"out_depth","","",20,null],[12,"samplers","","",20,null],[12,"textures","","",20,null],[12,"vertex_bufs","","",20,null],[3,"Effect","","",null,null],[12,"pso","","",22,null],[12,"data","","",22,null],[3,"EffectBuilder","","",null,null],[3,"Init","","FIXME: Cannot `Deserialize` for some reason.",null,null],[12,"const_bufs","","",23,null],[12,"globals","","",23,null],[12,"out_colors","","",23,null],[12,"out_blends","","",23,null],[12,"out_depth","","",23,null],[12,"samplers","","",23,null],[12,"textures","","",23,null],[12,"vertex_bufs","","",23,null],[3,"Meta","","",null,null],[3,"NewEffect","","",null,null],[3,"Pipeline","","Defines how the rendering pipeline should be configured.",null,null],[3,"PipelineBuilder","","Constructs a new pipeline with the given render targets and layers.",null,null],[3,"Stage","","A stage in the rendering pipeline.",null,null],[3,"StageBuilder","","Constructs a new rendering stage.",null,null],[3,"ColorBuffer","","Target color buffer.",null,null],[12,"as_input","","Shader resource view.",19,null],[12,"as_output","","Target view.",19,null],[3,"DepthBuffer","","Target depth-stencil buffer.",null,null],[12,"as_input","","Shader resource view.",21,null],[12,"as_output","","Target view.",21,null],[3,"Target","","A render target.",null,null],[3,"TargetBuilder","","Builds new render targets.",null,null],[4,"DepthMode","","",null,null],[13,"LessEqualTest","","",34,null],[13,"LessEqualWrite","","",34,null],[0,"pass","","Types for constructing render passes.",null,null],[3,"CompiledPass","amethyst_renderer::pipe::pass","A compiled pass.  These are created and managed by the `Renderer`.  This should not be used directly outside of the renderer.",null,null],[8,"PassData","","Used to fetch data from the game world for rendering in the pass.",null,null],[16,"Data","","The data itself.",36,null],[8,"Pass","","Structures implementing this provide a renderer pass.",null,null],[10,"compile","","The pass is given an opportunity to compile shaders and store them in an `Effect` which is then passed to the pass in `apply`.",37,{"inputs":[{"name":"self"},{"name":"neweffect"}],"output":{"generics":["effect"],"name":"result"}}],[10,"apply","","Called whenever the renderer is ready to apply the pass.  Feed commands into the encoder here.",37,null],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"compiledpass"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"apply","","Applies the inner pass.",38,null],[11,"new_target","","Distributes new target data to the pass.",38,{"inputs":[{"name":"self"},{"name":"target"}],"output":null}],[11,"clone","amethyst_renderer","",39,{"inputs":[{"name":"self"}],"output":{"name":"meta"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",39,{"inputs":[],"output":{"name":"meta"}}],[11,"hash","","",39,null],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"meta"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"meta"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"init"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",23,{"inputs":[],"output":{"name":"init"}}],[11,"hash","","",23,null],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"init"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"self"},{"name":"init"}],"output":{"name":"bool"}}],[11,"link_to","","",23,{"inputs":[{"name":"self"},{"name":"descriptor"},{"name":"programinfo"}],"output":{"generics":["meta","initerror"],"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"data"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",20,{"inputs":[],"output":{"name":"data"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"data"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"data"}],"output":{"name":"bool"}}],[11,"bake_to","","",20,{"inputs":[{"name":"self"},{"name":"rawdataset"},{"name":"meta"},{"name":"manager"},{"name":"accessinfo"}],"output":null}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"depthmode"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",34,null],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"depthmode"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"update_global","","",22,{"inputs":[{"name":"self"},{"name":"n"},{"name":"t"}],"output":null}],[11,"update_buffer","","FIXME: Update raw buffer without transmute, use `Result` somehow.",22,null],[11,"update_constant_buffer","","FIXME: Update raw buffer without transmute.",22,{"inputs":[{"name":"self"},{"name":"n"},{"name":"t"},{"name":"encoder"}],"output":null}],[11,"clear","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"draw","","",22,{"inputs":[{"name":"self"},{"name":"slice"},{"name":"encoder"}],"output":null}],[11,"simple","","",40,{"inputs":[{"name":"self"},{"name":"s"},{"name":"s"}],"output":{"name":"effectbuilder"}}],[11,"geom","","",40,{"inputs":[{"name":"self"},{"name":"s"},{"name":"s"},{"name":"s"}],"output":{"name":"effectbuilder"}}],[11,"tess","","",40,{"inputs":[{"name":"self"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"}],"output":{"name":"effectbuilder"}}],[11,"with_raw_global","","Adds a global constant to this `Effect`.",41,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"with_raw_constant_buffer","","Adds a raw uniform constant to this `Effect`.",41,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"with_primitive_type","","Set the pipeline primitive type.",41,{"inputs":[{"name":"self"},{"name":"primitive"}],"output":{"name":"self"}}],[11,"with_output","","Sets the output target of the PSO.",41,{"inputs":[{"name":"self"},{"name":"str"},{"generics":["depthmode"],"name":"option"}],"output":{"name":"self"}}],[11,"with_blended_output","","Sets the output target of the PSO.",41,{"inputs":[{"name":"self"},{"name":"str"},{"name":"colormask"},{"name":"blend"},{"generics":["depthmode"],"name":"option"}],"output":{"name":"self"}}],[11,"with_texture","","Adds a texture sampler to this `Effect`.",41,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"with_raw_vertex_buffer","","Adds a vertex buffer to this `Effect`.",41,{"inputs":[{"name":"self"},{"name":"attributes"},{"name":"elemstride"},{"name":"instancerate"}],"output":{"name":"self"}}],[11,"build","","TODO: Support render targets as inputs.",41,{"inputs":[{"name":"self"}],"output":{"generics":["effect"],"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"stage"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"with_target","","Builds a new `PolyStage` which outputs to the `Target` with the given name.",42,{"inputs":[{"name":"n"}],"output":{"generics":["queue"],"name":"stagebuilder"}}],[11,"with_backbuffer","","Builds a new `PolyStage` which outputs straight into the backbuffer.",42,{"inputs":[],"output":{"generics":["queue"],"name":"stagebuilder"}}],[11,"enable","","Enables the `PolyStage` so it will execute on every frame.",42,{"inputs":[{"name":"self"}],"output":null}],[11,"disable","","Disables the `PolyStage`, preventing it from being executed on every frame.",42,{"inputs":[{"name":"self"}],"output":null}],[11,"is_enabled","","Returns whether this `PolyStage` is enabled.",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"apply","","",42,null],[11,"new_targets","","",42,{"inputs":[{"name":"self"},{"name":"hashmap"}],"output":null}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `StageBuilder` using the given target.",43,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"clear_target","","Clears the stage's target.",43,{"inputs":[{"name":"self"},{"name":"c"},{"name":"d"}],"output":{"name":"self"}}],[11,"enabled","","Sets whether the `PolyStage` is turned on by default.",43,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"with_pass","","Appends another `Pass` to the stage.",43,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"generics":["queue"],"name":"stagebuilder"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"pipeline"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"build","","Builds a new renderer pipeline.",44,{"inputs":[],"output":{"generics":["queue"],"name":"pipelinebuilder"}}],[11,"targets","","Returns an immutable reference to all targets and their name strings.",44,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[11,"apply","","",44,null],[11,"new_targets","","",44,{"inputs":[{"name":"self"},{"generics":["string","target"],"name":"hashmap"}],"output":null}],[11,"targets","","Returns an immutable reference to all targets and their name strings.",44,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"pipelinebuilder"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new PipelineBuilder.",45,{"inputs":[],"output":{"name":"self"}}],[11,"default","","",45,{"inputs":[],"output":{"name":"self"}}],[11,"with_stage","","Constructs a new stage in this pipeline.",45,{"inputs":[{"name":"self"},{"name":"stagebuilder"}],"output":{"generics":["queue"],"name":"pipelinebuilder"}}],[11,"with_target","","Constructs a new render target for this pipeline.",45,{"inputs":[{"name":"self"},{"name":"targetbuilder"}],"output":{"name":"self"}}],[11,"build","","",45,{"inputs":[{"name":"self"},{"name":"factory"},{"name":"target"},{"name":"u16"}],"output":{"generics":["pipeline"],"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"colorbuffer"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"colorbuffer"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"self"},{"name":"colorbuffer"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"depthbuffer"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"depthbuffer"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"depthbuffer"}],"output":{"name":"bool"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"target"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"target"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"self"},{"name":"target"}],"output":{"name":"bool"}}],[11,"named","","Creates a new TargetBuilder with the given name.",46,{"inputs":[{"name":"n"}],"output":{"name":"targetbuilder"}}],[11,"clear_color","","Clears all color buffers to the given value.",46,{"inputs":[{"name":"self"},{"name":"encoder"},{"name":"v"}],"output":null}],[11,"clear_depth_stencil","","Clears the depth stencil buffer to the given value.",46,{"inputs":[{"name":"self"},{"name":"encoder"},{"name":"v"}],"output":null}],[11,"size","","Returns the width and height of the render target, measured in pixels.",46,null],[11,"color_buf","","Returns the color buffer with index `i`.",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["colorbuffer"],"name":"option"}}],[11,"color_bufs","","Returns an array slice of the render target's color buffers.",46,null],[11,"depth_buf","","Returns the render target's depth-stencil buffer, if it has one.",46,{"inputs":[{"name":"self"}],"output":{"generics":["depthbuffer"],"name":"option"}}],[11,"resize_main_target","","Creates the OpenGL backend.",46,{"inputs":[{"name":"self"},{"name":"glwindow"}],"output":null}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"targetbuilder"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"targetbuilder"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"self"},{"name":"targetbuilder"}],"output":{"name":"bool"}}],[11,"new","","Creates a new TargetBuilder.",47,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"with_depth_buf","","Sets whether this render target should have a depth-stencil buffer.",47,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"with_num_color_bufs","","Sets how many color buffers the render target will have. This number must be greater than zero or else `build()` will fail.",47,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"with_size","","Specifies a custom target size.",47,null],[6,"Targets","amethyst_renderer::pipe","A hash map containing named render targets.",null,null],[8,"PipelineBuild","","",null,null],[16,"Pipeline","","Resuling pipeline",48,null],[10,"build","","Build pipeline",48,{"inputs":[{"name":"self"},{"name":"factory"},{"name":"target"},{"name":"u16"}],"output":{"name":"result"}}],[8,"PipelineData","","The data requested from the `specs::World` by the Pipeline.",null,null],[16,"Data","","The data itself",49,null],[8,"PolyPipeline","","Trait used for the pipeline.",null,null],[10,"apply","","Retuns `ParallelIterator` which apply data to all stages",50,null],[10,"new_targets","","Resizes the pipeline targets",50,{"inputs":[{"name":"self"},{"generics":["string","target"],"name":"hashmap"}],"output":null}],[10,"targets","","Returns an immutable reference to all targets and their name strings.",50,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[8,"PolyStages","","",null,null],[10,"apply","","",51,null],[10,"new_targets","","Distributes new targets",51,{"inputs":[{"name":"self"},{"name":"hashmap"}],"output":null}],[8,"PolyStage","","A stage in the rendering.  Contains multiple passes.",null,null],[10,"apply","","",52,null],[10,"new_targets","","Distributes new targets",52,{"inputs":[{"name":"self"},{"name":"hashmap"}],"output":null}],[11,"default","amethyst_renderer","",53,{"inputs":[],"output":{"name":"renderbundle"}}],[11,"new","","Create a new render bundle",53,{"inputs":[],"output":{"name":"self"}}],[11,"build","","",53,{"inputs":[{"name":"self"},{"name":"world"},{"name":"dispatcherbuilder"}],"output":{"generics":["dispatcherbuilder"],"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"projection"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"projection"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"projection"}],"output":{"name":"bool"}}],[11,"orthographic","","Creates an orthographic projection with the given left, right, top, and bottom plane distances.",30,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"projection"}}],[11,"perspective","","Creates a perspective projection with the given aspect ratio and field-of-view.",30,{"inputs":[{"name":"f32"},{"name":"d"}],"output":{"name":"projection"}}],[11,"from","","",8,{"inputs":[{"name":"projection"}],"output":{"name":"self"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"camera"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"camera"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"camera"}],"output":{"name":"bool"}}],[11,"standard_2d","","Create a normalized camera for 2D.",8,{"inputs":[],"output":{"name":"self"}}],[11,"standard_3d","","Create a standard camera for 3D.",8,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"activecamera"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"activecamera"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"activecamera"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"rgba"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"rgba"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"rgba"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"rgba"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"self"},{"name":"rgba"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"self"},{"name":"rgba"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"self"},{"name":"rgba"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"self"},{"name":"rgba"}],"output":{"name":"bool"}}],[11,"black","","Returns a solid black color value.",9,{"inputs":[],"output":{"name":"rgba"}}],[11,"blue","","Returns a solid blue color value.",9,{"inputs":[],"output":{"name":"rgba"}}],[11,"green","","Returns a solid green color value.",9,{"inputs":[],"output":{"name":"rgba"}}],[11,"red","","Returns a solid red color value.",9,{"inputs":[],"output":{"name":"rgba"}}],[11,"transparent","","Returns a transparent color value.",9,{"inputs":[],"output":{"name":"rgba"}}],[11,"white","","Returns a solid white color value.",9,{"inputs":[],"output":{"name":"rgba"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"rgba"}}],[11,"from","","",9,null],[11,"from","","",9,null],[11,"from","","",9,null],[11,"from","","",9,null],[11,"get_format","","",9,null],[11,"convert","","",9,{"inputs":[{"name":"self"}],"output":{"name":"uniformvalue"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"displayconfig"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"displayconfig"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"displayconfig"}],"output":{"name":"bool"}}],[11,"default","","",10,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",10,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"self"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",31,{"inputs":[{"generics":["poscolor"],"name":"vec"}],"output":{"name":"self"}}],[11,"from","","",31,{"inputs":[{"generics":["postex"],"name":"vec"}],"output":{"name":"self"}}],[11,"from","","",31,{"inputs":[{"generics":["posnormtex"],"name":"vec"}],"output":{"name":"self"}}],[11,"from","","",31,{"inputs":[{"generics":["posnormtangtex"],"name":"vec"}],"output":{"name":"self"}}],[11,"from","","",31,{"inputs":[{"name":"m"}],"output":{"name":"self"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"objformat"}}],[11,"import","","",54,null],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new combo mesh creator with the given combo",55,{"inputs":[{"name":"vertexbuffercombination"}],"output":{"name":"self"}}],[11,"build","","",55,{"inputs":[{"name":"box"},{"name":"renderer"}],"output":{"generics":["mesh"],"name":"result"}}],[11,"from","","",55,{"inputs":[{"name":"vertexbuffercombination"}],"output":{"name":"self"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"texturemetadata"}}],[11,"default","","",12,{"inputs":[],"output":{"name":"self"}}],[11,"with_sampler","","Sampler info",12,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"self"}}],[11,"with_mip_levels","","Mipmapping",12,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"self"}}],[11,"with_size","","Texture size",12,{"inputs":[{"name":"self"},{"name":"u16"},{"name":"u16"}],"output":{"name":"self"}}],[11,"with_format","","Surface type",12,{"inputs":[{"name":"self"},{"name":"surfacetype"}],"output":{"name":"self"}}],[11,"with_channel","","Channel type",12,{"inputs":[{"name":"self"},{"name":"channeltype"}],"output":{"name":"self"}}],[11,"dynamic","","Texture is dynamic",12,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"texturedata"}}],[11,"from","","",32,null],[11,"color","","Creates texture data from color.",32,null],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"jpgformat"}}],[11,"from_data","","Load Jpg from memory buffer",56,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"},{"name":"texturemetadata"}],"output":{"generics":["texturedata"],"name":"result"}}],[11,"import","","",56,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"},{"name":"texturemetadata"}],"output":{"generics":["texturedata"],"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"pngformat"}}],[11,"from_data","","Load Png from memory buffer",57,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"},{"name":"texturemetadata"}],"output":{"generics":["texturedata"],"name":"result"}}],[11,"import","","",57,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"},{"name":"texturemetadata"}],"output":{"generics":["texturedata"],"name":"result"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"bmpformat"}}],[11,"import","","",58,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"},{"name":"texturemetadata"}],"output":{"generics":["texturedata"],"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"light"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"light"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"light"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"directionallight"}}],[11,"query","","",13,{"inputs":[{"name":"str"}],"output":{"generics":["element"],"name":"option"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"directionallight"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"directionallight"}],"output":{"name":"bool"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",33,{"inputs":[{"name":"directionallight"}],"output":{"name":"self"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"pointlight"}}],[11,"query","","",14,{"inputs":[{"name":"str"}],"output":{"generics":["element"],"name":"option"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"pointlight"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"pointlight"}],"output":{"name":"bool"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",33,{"inputs":[{"name":"pointlight"}],"output":{"name":"self"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"spotlight"}}],[11,"query","","",15,{"inputs":[{"name":"str"}],"output":{"generics":["element"],"name":"option"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"spotlight"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"spotlight"}],"output":{"name":"bool"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",33,{"inputs":[{"name":"spotlight"}],"output":{"name":"self"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"sunlight"}}],[11,"query","","",16,{"inputs":[{"name":"str"}],"output":{"generics":["element"],"name":"option"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"sunlight"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"sunlight"}],"output":{"name":"bool"}}],[11,"default","","",16,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",33,{"inputs":[{"name":"sunlight"}],"output":{"name":"self"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"vertexbuffer"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"mesh"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"build","","Builds a new mesh from the given vertices.",60,{"inputs":[{"name":"d"}],"output":{"name":"meshbuilder"}}],[11,"buffer","","Returns the mesh's vertex buffer which matches requested attributes",60,{"inputs":[{"name":"self"},{"name":"attributes"}],"output":{"generics":["rawbuffer"],"name":"option"}}],[11,"slice","","Returns associated `Slice`",60,{"inputs":[{"name":"self"}],"output":{"name":"slice"}}],[11,"transform","","Returns the transformation matrix of the mesh.",60,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"matrix4"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"material"}}],[11,"hash","","",17,null],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"material"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"material"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"materialdefaults"}}],[11,"default","","",61,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"drawflat"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"drawflat"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"self"},{"name":"drawflat"}],"output":{"name":"bool"}}],[11,"new","","Create instance of `DrawFlat` pass",61,{"inputs":[],"output":{"name":"self"}}],[11,"compile","","",61,{"inputs":[{"name":"self"},{"name":"neweffect"}],"output":{"generics":["effect"],"name":"result"}}],[11,"apply","","",61,null],[11,"default","","",62,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"drawflatseparate"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"drawflatseparate"}],"output":{"name":"bool"}}],[11,"new","","Create instance of `DrawFlat` pass",62,{"inputs":[],"output":{"name":"self"}}],[11,"compile","","",62,{"inputs":[{"name":"self"},{"name":"neweffect"}],"output":{"generics":["effect"],"name":"result"}}],[11,"apply","","",62,null],[11,"default","","",63,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"drawpbm"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",63,{"inputs":[{"name":"self"},{"name":"drawpbm"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"self"},{"name":"drawpbm"}],"output":{"name":"bool"}}],[11,"new","","Create instance of `DrawPbm` pass",63,{"inputs":[],"output":{"name":"self"}}],[11,"compile","","",63,{"inputs":[{"name":"self"},{"name":"neweffect"}],"output":{"generics":["effect"],"name":"result"}}],[11,"apply","","",63,null],[11,"default","","",64,{"inputs":[],"output":{"name":"drawpbmseparate"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"drawpbmseparate"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"drawpbmseparate"}],"output":{"name":"bool"}}],[11,"new","","Create instance of `DrawPbm` pass",64,{"inputs":[],"output":{"name":"self"}}],[11,"compile","","",64,{"inputs":[{"name":"self"},{"name":"neweffect"}],"output":{"generics":["effect"],"name":"result"}}],[11,"apply","","",64,null],[11,"default","","",65,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"drawshaded"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"drawshaded"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"self"},{"name":"drawshaded"}],"output":{"name":"bool"}}],[11,"new","","Create instance of `DrawShaded` pass",65,{"inputs":[],"output":{"name":"self"}}],[11,"compile","","",65,{"inputs":[{"name":"self"},{"name":"neweffect"}],"output":{"generics":["effect"],"name":"result"}}],[11,"apply","","",65,null],[11,"default","","",66,{"inputs":[],"output":{"name":"drawshadedseparate"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"drawshadedseparate"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",66,{"inputs":[{"name":"self"},{"name":"drawshadedseparate"}],"output":{"name":"bool"}}],[11,"new","","Create instance of `DrawShaded` pass",66,{"inputs":[],"output":{"name":"self"}}],[11,"compile","","",66,{"inputs":[{"name":"self"},{"name":"neweffect"}],"output":{"generics":["effect"],"name":"result"}}],[11,"apply","","",66,null],[11,"new","","Creates a `Renderer` with default window settings.",24,{"inputs":[],"output":{"generics":["renderer"],"name":"result"}}],[11,"build_with_loop","","Creates a new `RendererBuilder`, equivalent to `RendererBuilder::new()`.",24,{"inputs":[{"name":"eventsloop"}],"output":{"name":"rendererbuilder"}}],[11,"build","","Creates a new `RendererBuilder`, equivalent to `RendererBuilder::new()`.",24,{"inputs":[],"output":{"name":"rendererbuilder"}}],[11,"create_mesh","","Builds a new mesh from the given vertices.",24,{"inputs":[{"name":"self"},{"name":"meshbuilder"}],"output":{"generics":["mesh"],"name":"result"}}],[11,"create_texture","","Builds a new texture resource.",24,{"inputs":[{"name":"self"},{"name":"texturebuilder"}],"output":{"generics":["texture"],"name":"result"}}],[11,"create_pipe","","Builds a new renderer pipeline.",24,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"result"}}],[11,"draw","","Draws a scene with the given pipeline.",24,null],[11,"events_mut","","Retrieve a mutable borrow of the events loop",24,{"inputs":[{"name":"self"}],"output":{"name":"eventsloop"}}],[11,"resize","","Resize the targets associated with this renderer and pipeline.",24,null],[11,"window","","Retrieves an immutable borrow of the window.",24,{"inputs":[{"name":"self"}],"output":{"name":"winitwindow"}}],[11,"drop","","",24,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"ambientcolor"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",25,{"inputs":[],"output":{"name":"ambientcolor"}}],[11,"as_ref","","",25,{"inputs":[{"name":"self"}],"output":{"name":"rgba"}}],[11,"default","","",67,{"inputs":[],"output":{"name":"windowmessages"}}],[11,"new","","Create a new `WindowMessages`",67,{"inputs":[],"output":{"name":"self"}}],[11,"send_command","","Execute this closure on the `winit::Window` next frame.",67,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new screen dimensions object with the given width and height.",68,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"screendimensions"}}],[11,"width","","Returns the current width of the window.",68,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"height","","Returns the current height of the window.",68,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"aspect_ratio","","Returns the current aspect ratio of the window.",68,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"update","","Updates the width and height of the screen and recomputes the aspect ratio.",68,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"build","","Build a new `RenderSystem` from the given pipeline builder and config",69,{"inputs":[{"name":"b"},{"generics":["displayconfig"],"name":"option"}],"output":{"name":"result"}}],[11,"new","","Create a new render system",69,{"inputs":[{"name":"p"},{"name":"renderer"}],"output":{"name":"self"}}],[11,"run_now","","",69,{"inputs":[{"name":"self"},{"name":"resources"}],"output":null}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"texture"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",70,null],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"self"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"from_data","","Builds a new texture with the given raw texture data.",70,{"inputs":[{"name":"d"}],"output":{"name":"texturebuilder"}}],[11,"from_color_val","","Builds a new texture with the given raw texture data.",70,{"inputs":[{"name":"c"}],"output":{"generics":["u8"],"name":"texturebuilder"}}],[11,"sampler","","Returns the sampler for the texture.",70,{"inputs":[{"name":"self"}],"output":{"name":"sampler"}}],[11,"view","","Returns the texture's raw shader resource view.",70,{"inputs":[{"name":"self"}],"output":{"name":"rawshaderresourceview"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"texturebuilder"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",71,null],[11,"eq","","",71,{"inputs":[{"name":"self"},{"name":"texturebuilder"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"self"},{"name":"texturebuilder"}],"output":{"name":"bool"}}],[11,"from_color_val","","Creates a new `TextureBuilder` from the given RGBA color value.",71,{"inputs":[{"name":"c"}],"output":{"name":"self"}}],[11,"new","","Creates a new `TextureBuilder` with the given raw texture data.",71,{"inputs":[{"name":"d"}],"output":{"name":"self"}}],[11,"with_sampler","","Sets the `SamplerInfo` for the texture",71,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"self"}}],[11,"mip_levels","","Sets the number of mipmap levels to generate.",71,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"self"}}],[11,"with_size","","Sets the texture width and height in pixels.",71,{"inputs":[{"name":"self"},{"name":"u16"},{"name":"u16"}],"output":{"name":"self"}}],[11,"dynamic","","Sets whether the texture is mutable or not.",71,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"with_format","","Sets the texture format",71,{"inputs":[{"name":"self"},{"name":"surfacetype"}],"output":{"name":"self"}}],[11,"with_channel_type","","Sets the texture channel type",71,{"inputs":[{"name":"self"},{"name":"channeltype"}],"output":{"name":"self"}}],[11,"build","","Builds and returns the new texture.",71,{"inputs":[{"name":"self"},{"name":"factory"}],"output":{"generics":["texture"],"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"texcoord"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"normal"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"tangent"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"separate"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",77,{"inputs":[{"name":"self"},{"name":"separate"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"self"},{"name":"separate"}],"output":{"name":"bool"}}],[11,"new","","Create a new Separate vertex attribute",77,null],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"poscolor"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"poscolor"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"poscolor"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"postex"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"postex"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"postex"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"posnormtex"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"posnormtex"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"posnormtex"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"posnormtangtex"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"posnormtangtex"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"posnormtangtex"}],"output":{"name":"bool"}}],[6,"MeshHandle","","A handle to a mesh.",null,null],[6,"Targets","","A hash map containing named render targets.",null,null],[6,"TextureHandle","","A handle to a `Texture` asset.",null,null],[6,"Encoder","","Command buffer encoder type.",null,null],[6,"Factory","","Graphics factory type.",null,null],[6,"PipelineState","","Statically-typed pipeline state object (PSO).",null,null],[6,"Resources","","Graphics resource type.",null,null],[6,"AttributeFormat","","Format for vertex attribute",null,null],[6,"Attributes","","Slice of attributes",null,null],[6,"VertexBufferCombination","","Vertex combo",null,null],[8,"MeshCreator","","Trait used by the asset processor to convert any user supplied mesh representation into an actual `Mesh`.",null,null],[10,"build","","Build a mesh given a `Renderer`",78,{"inputs":[{"name":"box"},{"name":"renderer"}],"output":{"generics":["mesh"],"name":"result"}}],[8,"PipelineBuild","","",null,null],[16,"Pipeline","","Resuling pipeline",48,null],[10,"build","","Build pipeline",48,{"inputs":[{"name":"self"},{"name":"factory"},{"name":"target"},{"name":"u16"}],"output":{"name":"result"}}],[8,"PipelineData","","The data requested from the `specs::World` by the Pipeline.",null,null],[16,"Data","","The data itself",49,null],[8,"PolyPipeline","","Trait used for the pipeline.",null,null],[10,"apply","","Retuns `ParallelIterator` which apply data to all stages",50,null],[10,"new_targets","","Resizes the pipeline targets",50,{"inputs":[{"name":"self"},{"generics":["string","target"],"name":"hashmap"}],"output":null}],[10,"targets","","Returns an immutable reference to all targets and their name strings.",50,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[8,"PolyStage","","A stage in the rendering.  Contains multiple passes.",null,null],[10,"apply","","",52,null],[10,"new_targets","","Distributes new targets",52,{"inputs":[{"name":"self"},{"name":"hashmap"}],"output":null}],[8,"PolyStages","","",null,null],[10,"apply","","",51,null],[10,"new_targets","","Distributes new targets",51,{"inputs":[{"name":"self"},{"name":"hashmap"}],"output":null}],[8,"Attribute","","Trait for vertex attributes to implement",null,null],[18,"NAME","","Name of the attribute It is used to bind to the attributes in shaders",79,null],[18,"FORMAT","","Format of the attribute defines arity and type",79,null],[18,"SIZE","","Size of the attribue",79,null],[16,"Repr","","Representation of the attribute usually it is `[f32; N]`",79,null],[8,"Query","","Allows to query specific `Attribute`s of `VertexFormat`",null,null],[18,"QUERIED_ATTRIBUTES","","Attributes from tuple `T`",80,null],[8,"VertexFormat","","Trait implemented by all valid vertex formats.",null,null],[18,"ATTRIBUTES","","List of all attributes formats with name and offset.",81,null],[11,"size","","Returns the size of a single vertex in bytes.",81,{"inputs":[],"output":{"name":"usize"}}],[11,"attribute","","Returns attribute of vertex by type",81,{"inputs":[],"output":{"name":"attributeformat"}}],[8,"With","","Trait implemented by all valid vertex formats for each field",null,null],[18,"FORMAT","","Individual format of the attribute for this vertex format",82,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"keyboardinput"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"elementstate"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"windowevent"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"virtualkeycode"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"mousebutton"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"virtualkeycode"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"elementstate"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"hash","","",1,null],[11,"hash","","",5,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[18,"NAME","","Name of the attribute It is used to bind to the attributes in shaders",79,null],[18,"FORMAT","","Format of the attribute defines arity and type",79,null],[18,"SIZE","","Size of the attribue",79,null],[18,"ATTRIBUTES","","List of all attributes formats with name and offset.",81,null],[11,"size","","Returns the size of a single vertex in bytes.",81,{"inputs":[],"output":{"name":"usize"}}],[11,"attribute","","Returns attribute of vertex by type",81,{"inputs":[],"output":{"name":"attributeformat"}}],[18,"FORMAT","","Individual format of the attribute for this vertex format",82,null],[18,"QUERIED_ATTRIBUTES","","Attributes from tuple `T`",80,null]],"paths":[[4,"ImageError"],[4,"ElementState"],[4,"Event"],[3,"KeyboardInput"],[4,"MouseButton"],[4,"VirtualKeyCode"],[4,"WindowEvent"],[3,"ActiveCamera"],[3,"Camera"],[3,"Rgba"],[3,"DisplayConfig"],[3,"ImageData"],[3,"TextureMetadata"],[3,"DirectionalLight"],[3,"PointLight"],[3,"SpotLight"],[3,"SunLight"],[3,"Material"],[3,"MaterialDefaults"],[3,"ColorBuffer"],[3,"Data"],[3,"DepthBuffer"],[3,"Effect"],[3,"Init"],[3,"Renderer"],[3,"AmbientColor"],[3,"PosColor"],[3,"PosNormTangTex"],[3,"PosNormTex"],[3,"PosTex"],[4,"Projection"],[4,"MeshData"],[4,"TextureData"],[4,"Light"],[4,"DepthMode"],[4,"Error"],[8,"PassData"],[8,"Pass"],[3,"CompiledPass"],[3,"Meta"],[3,"NewEffect"],[3,"EffectBuilder"],[3,"Stage"],[3,"StageBuilder"],[3,"Pipeline"],[3,"PipelineBuilder"],[3,"Target"],[3,"TargetBuilder"],[8,"PipelineBuild"],[8,"PipelineData"],[8,"PolyPipeline"],[8,"PolyStages"],[8,"PolyStage"],[3,"RenderBundle"],[3,"ObjFormat"],[3,"ComboMeshCreator"],[3,"JpgFormat"],[3,"PngFormat"],[3,"BmpFormat"],[3,"VertexBuffer"],[3,"Mesh"],[3,"DrawFlat"],[3,"DrawFlatSeparate"],[3,"DrawPbm"],[3,"DrawPbmSeparate"],[3,"DrawShaded"],[3,"DrawShadedSeparate"],[3,"WindowMessages"],[3,"ScreenDimensions"],[3,"RenderSystem"],[3,"Texture"],[3,"TextureBuilder"],[4,"Position"],[4,"Color"],[4,"TexCoord"],[4,"Normal"],[4,"Tangent"],[3,"Separate"],[8,"MeshCreator"],[8,"Attribute"],[8,"Query"],[8,"VertexFormat"],[8,"With"]]};
searchIndex["amethyst_ui"] = {"doc":"Provides components and systems to create an in game user interface.","items":[[3,"UiBundle","amethyst_ui","UI bundle",null,null],[3,"UiFocused","","This resource stores the currently focused UI element.",null,null],[12,"entity","","The entity containing the focused UI element.",0,null],[3,"FontAsset","","A loaded set of fonts from a file.",null,null],[12,"0","","",1,null],[3,"TtfFormat","","Loads font files, supports TrueType and some OpenType files.",null,null],[3,"UiImage","","A component with the texture to display in this entity's `UiTransform`",null,null],[12,"texture","","The texture to display",2,null],[3,"DrawUi","","Draw Ui elements.  UI won't display without this.  It's recommended this be your last pass.",null,null],[3,"ResizeSystem","","This system rearranges UI elements whenever the screen is resized using their `UiResize` component.",null,null],[3,"UiResize","","Whenever the window is resized the function in this component will be called on this entity's UiTransform, along with the new width and height of the window.",null,null],[12,"0","","",3,null],[3,"TextEditing","","If this component is attached to an entity with a UiText then that UiText is editable. This component also controls how that editing works.",null,null],[12,"cursor_position","","The current editing cursor position, specified in terms of glyphs, not characters.",4,null],[12,"max_length","","The maximum graphemes permitted in this string.",4,null],[12,"highlight_vector","","The amount and direction of glyphs highlighted relative to the cursor.",4,null],[12,"selected_text_color","","The color of the text itself when highlighted.",4,null],[12,"selected_background_color","","The text background color when highlighted.",4,null],[12,"use_block_cursor","","If this is true the text will use a block cursor for editing.  Otherwise this uses a standard line cursor.  This is not recommended if your font is not monospace.",4,null],[3,"UiSystem","","This system processes the underlying UI data as needed.",null,null],[3,"UiText","","A component used to display text in this entity's UiTransform",null,null],[12,"text","","The string rendered by this.",5,null],[12,"font_size","","The height of a line of text in pixels.",5,null],[12,"color","","The color of the rendered text, using a range of 0.0 to 1.0 per channel.",5,null],[12,"font","","The font used for rendering.",5,null],[12,"password","","If true this will be rendered as dots instead of the text.",5,null],[3,"UiTransform","","The raw pixels on screen that are populated.",null,null],[12,"id","","An identifier. Serves no purpose other than to help you distinguish between UI elements.",6,null],[12,"x","","X coordinate, 0 is the left edge, while the width of the screen is the right edge.",6,null],[12,"y","","Y coordinate, 0 is the top edge, while the height of the screen is the bottom edge.",6,null],[12,"z","","Z order, entities with a lower Z order will be rendered on top of entities with a higher Z order.",6,null],[12,"width","","The width of this UI element",6,null],[12,"height","","The height of this UI element",6,null],[12,"tab_order","","The UI element tab order.  When the player presses tab the UI focus will shift to the UI element with the next highest tab order, or if another element with the same tab_order as this one exists they are ordered according to Entity creation order.  Shift-tab walks this ordering backwards.",6,null],[11,"new","","Create a new UI bundle",7,{"inputs":[],"output":{"name":"self"}}],[11,"build","","",7,{"inputs":[{"name":"self"},{"name":"world"},{"name":"dispatcherbuilder"}],"output":{"generics":["dispatcherbuilder"],"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"ttfformat"}}],[11,"import","","",8,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"uiimage"}}],[11,"new","","Create instance of `DrawUi` pass",9,{"inputs":[{"name":"loader"},{"name":"assetstorage"}],"output":{"name":"self"}}],[11,"compile","","",9,{"inputs":[{"name":"self"},{"name":"neweffect"}],"output":{"generics":["effect"],"name":"result"}}],[11,"apply","","",9,null],[11,"new","","Creates a new ResizeSystem that listens with the given reader Id.",10,{"inputs":[{"generics":["event"],"name":"readerid"}],"output":{"name":"resizesystem"}}],[11,"run","","",10,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"uitext"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Initializes a new UiText",5,null],[11,"new","","Create a new TextEditing Component",4,null],[11,"new","","Initializes a new UiSystem that uses the given reader id.",11,{"inputs":[{"generics":["event"],"name":"readerid"}],"output":{"name":"self"}}],[11,"run","","",11,null],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"uitransform"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new UiTransform",6,{"inputs":[{"name":"string"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"i32"}],"output":{"name":"uitransform"}}],[6,"FontHandle","","A handle to font data stored with `amethyst_assets`.",null,null],[6,"OtfFormat","","Identical to TtfFormat.",null,null]],"paths":[[3,"UiFocused"],[3,"FontAsset"],[3,"UiImage"],[3,"UiResize"],[3,"TextEditing"],[3,"UiText"],[3,"UiTransform"],[3,"UiBundle"],[3,"TtfFormat"],[3,"DrawUi"],[3,"ResizeSystem"],[3,"UiSystem"]]};
searchIndex["amethyst_utils"] = {"doc":"","items":[[0,"fps_counter","amethyst_utils","Util Resources",null,null],[3,"FPSCounter","amethyst_utils::fps_counter","The FPSCounter resource needed by the FPSCounterSystem.",null,null],[3,"FPSCounterSystem","","Add this system to your game to automatically push FPS values to the FPSCounter resource with id 0",null,null],[3,"FPSCounterBundle","","Automatically adds a FPSCounterSystem and a FPSCounter resource with the specified sample size.",null,null],[11,"new","","Creates a new FPSCounter that calculates the average fps over samplesize values.",0,{"inputs":[{"name":"usize"}],"output":{"name":"fpscounter"}}],[11,"push","","Add a new delta time value.",0,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"frame_fps","","Get the fps of the this frame.",0,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"sampled_fps","","Get the average fps over the samplesize frames.",0,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"run","","",1,null],[11,"new","","Creates a new FPSCounterBundle with the specified sample size.",2,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"default","","Same as FPSCounterBundle::new(20).",2,{"inputs":[],"output":{"name":"self"}}],[11,"build","","",2,{"inputs":[{"name":"self"},{"name":"world"},{"name":"dispatcherbuilder"}],"output":{"generics":["dispatcherbuilder"],"name":"result"}}],[0,"circular_buffer","amethyst_utils","CircularBuffer",null,null],[3,"CircularBuffer","amethyst_utils::circular_buffer","A CircularBuffer that drops the oldest element inserted when full.",null,null],[11,"new","","Creates a new CircularBuffer with fixed size",3,{"inputs":[{"name":"usize"}],"output":{"name":"circularbuffer"}}],[11,"push","","Add a value to the CircularBuffer Returns the popped value if the buffer is full",3,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"option"}}],[11,"queue","","Get an immutable reference to the values inside the CircularBuffer",3,{"inputs":[{"name":"self"}],"output":{"name":"vecdeque"}}]],"paths":[[3,"FPSCounter"],[3,"FPSCounterSystem"],[3,"FPSCounterBundle"],[3,"CircularBuffer"]]};
searchIndex["approx"] = {"doc":"A crate that provides facilities for testing the approximate equality of floating-point based types, using either relative difference, or units in the last place (ULPs) comparisons.","items":[[3,"Relative","approx","The requisite parameters for testing for approximate equality.",null,null],[12,"lhs","","The left-hand side of the approximate equality comparison.",0,null],[12,"rhs","","The right-hand side of the approximate equality comparison.",0,null],[12,"epsilon","","The tolerance to use when testing values that are close together.",0,null],[12,"max_relative","","The relative tolerance for testing values that are far-apart.",0,null],[3,"Ulps","","The requisite parameters for testing for approximate equality.",null,null],[12,"lhs","","The left-hand side of the approximate equality comparison.",1,null],[12,"rhs","","The right-hand side of the approximate equality comparison.",1,null],[12,"epsilon","","The tolerance to use when testing values that are close together.",1,null],[12,"max_ulps","","The ULPs to tolerate when testing values that are far-apart.",1,null],[8,"ApproxEq","","Equality comparisons based on floating point tolerances.",null,null],[16,"Epsilon","","Used for specifying relative comparisons.",2,null],[10,"default_epsilon","","The default tolerance to use when testing values that are close together.",2,null],[10,"default_max_relative","","The default relative tolerance for testing values that are far-apart.",2,null],[10,"default_max_ulps","","The default ULPs to tolerate when testing values that are far-apart.",2,{"inputs":[],"output":{"name":"u32"}}],[10,"relative_eq","","A test for equality that uses a relative comparison if the values are far apart.",2,null],[11,"relative_ne","","The inverse of `ApproxEq::relative_eq`.",2,null],[10,"ulps_eq","","A test for equality that uses units in the last place (ULP) if the values are far apart.",2,null],[11,"ulps_ne","","The inverse of `ApproxEq::ulps_eq`.",2,null],[11,"new","","The beginning of a chained equality expression, using a relative based comparison.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"relative"}}],[11,"epsilon","","Replace the epsilon value with the one specified.",0,null],[11,"max_relative","","Replace the maximum relative value with the one specified.",0,null],[11,"eq","","Peform the equality comparison",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"ne","","Peform the inequality comparison",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","The beginning of a chained equality expression, using an ULPs based comparison.",1,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"ulps"}}],[11,"epsilon","","Replace the epsilon value with the one specified.",1,null],[11,"max_ulps","","Replace the max ulps value with the one specified.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"ulps"}}],[11,"eq","","Peform the equality comparison",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"ne","","Peform the inequality comparison",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[14,"relative_eq","","Predicate for testing the approximate equality of two values.",null,null],[14,"relative_ne","","Predicate for testing the approximate inequality of two values.",null,null],[14,"assert_relative_eq","","",null,null],[14,"assert_relative_ne","","",null,null],[14,"ulps_eq","","Predicate for testing the approximate equality of two values using a maximum ULPs (Units in Last Place).",null,null],[14,"ulps_ne","","Predicate for testing the approximate inequality of two values using a maximum ULPs (Units in Last Place).",null,null],[14,"assert_ulps_eq","","",null,null],[14,"assert_ulps_ne","","",null,null]],"paths":[[3,"Relative"],[3,"Ulps"],[8,"ApproxEq"]]};
searchIndex["arrayvec"] = {"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:  array-backed vector and string types, which store their contents inline.","items":[[8,"RangeArgument","arrayvec","IndexRange is implemented by Rust's built-in range types, produced by range syntax like `..`, `a..`, `..b` or `c..d`.",null,null],[11,"start","","Start index (inclusive)",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"end","","End index (exclusive)",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[3,"ArrayString","","A string with a fixed capacity.",null,null],[3,"ArrayVec","","A vector with a fixed capacity.",null,null],[3,"IntoIter","","By-value iterator for `ArrayVec`.",null,null],[3,"Drain","","A draining iterator for `ArrayVec`.",null,null],[3,"CapacityError","","Error value indicating insufficient capacity",null,null],[11,"new","","Create a new empty `ArrayString`.",1,{"inputs":[],"output":{"name":"arraystring"}}],[11,"from","","Create a new `ArrayString` from a `str`.",1,{"inputs":[{"name":"str"}],"output":{"generics":["capacityerror"],"name":"result"}}],[11,"from_byte_string","","Create a new `ArrayString` from a byte string literal.",1,{"inputs":[{"name":"a"}],"output":{"generics":["utf8error"],"name":"result"}}],[11,"capacity","","Return the capacity of the `ArrayString`.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_full","","Return if the `ArrayString` is completely filled.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Adds the given char to the end of the string.",1,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"generics":["capacityerror"],"name":"result"}}],[11,"push_str","","Adds the given string slice to the end of the string.",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["capacityerror"],"name":"result"}}],[11,"clear","","Make the string empty.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"set_len","","Set the strings's length.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"as_str","","Return a string slice of the whole `ArrayString`.",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"deref","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"deref_mut","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"hash","","",1,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"borrow","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"as_ref","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_char","","",1,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_str","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"arraystring"}}],[11,"clone_from","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[8,"Array","","Trait for fixed size arrays.",null,null],[16,"Item","","The array's element type",2,null],[11,"drop","","",3,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Create a new empty `ArrayVec`.",3,{"inputs":[],"output":{"name":"arrayvec"}}],[11,"len","","Return the number of elements in the `ArrayVec`.",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"capacity","","Return the capacity of the `ArrayVec`.",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_full","","Return if the `ArrayVec` is completely filled.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push `element` to the end of the vector.",3,null],[11,"insert","","Insert `element` in position `index`.",3,null],[11,"pop","","Remove the last element in the vector.",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"swap_remove","","Remove the element at `index` and swap the last element into its place.",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"remove","","Remove the element at `index` and shift down the following elements.",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clear","","Remove all elements in the vector.",3,{"inputs":[{"name":"self"}],"output":null}],[11,"retain","","Retains only the elements specified by the predicate.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"set_len","","Set the vector's length without dropping or moving out elements",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"drain","","Create a draining iterator that removes the specified range in the vector and yields the removed items from start to end. The element range is removed even if the iterator is not consumed until the end.",3,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_inner","","Return the inner fixed size array, if it is full to its capacity.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"dispose","","Dispose of `self` without the overwriting that is needed in Drop.",3,{"inputs":[{"name":"self"}],"output":null}],[11,"as_slice","","Return a slice containing all elements of the vector.",3,null],[11,"as_mut_slice","","Return a mutable slice containing all elements of the vector.",3,null],[11,"deref","","",3,null],[11,"deref_mut","","",3,null],[11,"from","","",3,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"into_iter","","",3,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",4,null],[11,"next_back","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"drop","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"next","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",5,null],[11,"next_back","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"drop","","",5,{"inputs":[{"name":"self"}],"output":null}],[11,"extend","","",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",3,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone_from","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"hash","","",3,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"eq","","",3,null],[11,"borrow","","",3,null],[11,"borrow_mut","","",3,null],[11,"as_ref","","",3,null],[11,"as_mut","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"arrayvec"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"arrayvec"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"arrayvec"}],"output":{"name":"ordering"}}],[11,"write","","",3,null],[11,"flush","","",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"capacityerror"}}],[11,"cmp","","",6,{"inputs":[{"name":"self"},{"name":"capacityerror"}],"output":{"name":"ordering"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"capacityerror"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"capacityerror"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"capacityerror"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"self"},{"name":"capacityerror"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"self"},{"name":"capacityerror"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"self"},{"name":"capacityerror"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"self"},{"name":"capacityerror"}],"output":{"name":"bool"}}],[11,"element","","Extract the overflowing element",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"simplify","","Convert into a `CapacityError` that does not carry an element.",6,{"inputs":[{"name":"self"}],"output":{"name":"capacityerror"}}],[11,"description","","",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[8,"RangeArgument"],[3,"ArrayString"],[8,"Array"],[3,"ArrayVec"],[3,"IntoIter"],[3,"Drain"],[3,"CapacityError"]]};
searchIndex["atom"] = {"doc":"","items":[[3,"Atom","atom","An Atom wraps an AtomicPtr, it allows for safe mutation of an atomic into common Rust Types.",null,null],[3,"AtomSetOnce","","This is a restricted version of the Atom. It allows for only `set_if_none` to be called.",null,null],[8,"IntoRawPtr","","Convert from into a raw pointer",null,null],[10,"into_raw","","",0,null],[8,"FromRawPtr","","Convert from a raw ptr into a pointer",null,null],[10,"from_raw","","",1,null],[8,"GetNextMut","","This is a utility Trait that fetches the next ptr from an object.",null,null],[16,"NextPtr","","",2,null],[10,"get_next","","",2,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"empty","","Create a empty Atom",3,{"inputs":[],"output":{"name":"atom"}}],[11,"new","","Create a new Atomic from Pointer P",3,{"inputs":[{"name":"p"}],"output":{"name":"atom"}}],[11,"swap","","Swap a new value into the Atom, This will try multiple times until it succeeds. The old value will be returned.",3,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[11,"take","","Take the value of the Atom replacing it with null pointer Returning the contents. If the contents was a `null` pointer the result will be `None`.",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_if_none","","This will do a `CAS` setting the value only if it is NULL this will return `None` if the value was written, otherwise a `Some(v)` will be returned, where the value was the same value that you passed into this function",3,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[11,"replace_and_set_next","","Take the current content, write it into P then do a CAS to extent this Atom with the previous contents. This can be used to create a LIFO",3,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[11,"is_none","","Check to see if an atom is None",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"drop","","",3,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Create a empty AtomSetOnce",4,{"inputs":[],"output":{"name":"atomsetonce"}}],[11,"new","","Create a new AtomSetOnce from Pointer P",4,{"inputs":[{"name":"p"}],"output":{"name":"atomsetonce"}}],[11,"set_if_none","","This will do a `CAS` setting the value only if it is NULL this will return `OK(())` if the value was written, otherwise a `Err(P)` will be returned, where the value was the same value that you passed into this function",4,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[11,"into_atom","","Convert an AtomSetOnce into an Atom",4,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"atom","","Allow access to the atom if exclusive access is granted",4,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"is_none","","Check to see if an atom is None",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get","","If the Atom is set, get the value",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_mut","","If the Atom is set, get the value",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"dup","","Duplicate the inner pointer if it is set",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[8,"IntoRawPtr"],[8,"FromRawPtr"],[8,"GetNextMut"],[3,"Atom"],[3,"AtomSetOnce"]]};
searchIndex["backtrace"] = {"doc":"A library for acquiring a backtrace at runtime","items":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to the `trace` function of this crate.",null,null],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",null,null],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic accessors to the demangled name, the raw bytes, the raw string, etc.",null,null],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",null,null],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",null,null],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",null,null],[5,"trace","","Inspects the current call-stack, passing all active frames into the closure provided to calculate a stack trace.",null,{"inputs":[{"name":"f"}],"output":null}],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the specified closure.",null,null],[11,"ip","","Returns the current instruction pointer of this frame.",0,null],[11,"symbol_address","","Returns the starting symbol address of the frame of this function.",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"name","","Returns the name of this function.",1,{"inputs":[{"name":"self"}],"output":{"generics":["symbolname"],"name":"option"}}],[11,"addr","","Returns the starting address of this function.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"filename","","Returns the file name where this function was defined.",1,{"inputs":[{"name":"self"}],"output":{"generics":["path"],"name":"option"}}],[11,"lineno","","Returns the line number for where this symbol is currently executing.",1,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new symbol name from the raw underlying bytes.",2,null],[11,"as_str","","Returns the raw symbol name as a `str` if the symbols is valid utf-8.",2,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",2,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"backtrace"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"backtraceframe"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"backtracesymbol"}}],[11,"new","","Captures a backtrace at the callsite of this function, returning an owned representation.",3,{"inputs":[],"output":{"name":"backtrace"}}],[11,"new_unresolved","","Similar to `new` except that this does not resolve any symbols, this simply captures the backtrace as a list of addresses.",3,{"inputs":[],"output":{"name":"backtrace"}}],[11,"frames","","Returns the frames from when this backtrace was captured.",3,null],[11,"resolve","","If this backtrace was created from `new_unresolved` then this function will resolve all addresses in the backtrace to their symbolic names.",3,{"inputs":[{"name":"self"}],"output":null}],[11,"from","","",3,{"inputs":[{"generics":["backtraceframe"],"name":"vec"}],"output":{"name":"self"}}],[11,"into","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["backtraceframe"],"name":"vec"}}],[11,"ip","","Same as `Frame::ip`",4,null],[11,"symbol_address","","Same as `Frame::symbol_address`",4,null],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",4,null],[11,"name","","Same as `Symbol::name`",5,{"inputs":[{"name":"self"}],"output":{"generics":["symbolname"],"name":"option"}}],[11,"addr","","Same as `Symbol::addr`",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"filename","","Same as `Symbol::filename`",5,{"inputs":[{"name":"self"}],"output":{"generics":["path"],"name":"option"}}],[11,"lineno","","Same as `Symbol::lineno`",5,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"backtrace"}}]],"paths":[[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]};
searchIndex["backtrace_sys"] = {"doc":"","items":[[4,"backtrace_state","backtrace_sys","",null,null],[5,"backtrace_create_state","","",null,null],[5,"backtrace_syminfo","","",null,null],[5,"backtrace_pcinfo","","",null,null],[6,"backtrace_syminfo_callback","","",null,null],[6,"backtrace_full_callback","","",null,null],[6,"backtrace_error_callback","","",null,null]],"paths":[]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator useful for sets of C-style bitmask flags. It can be used for creating typesafe wrappers around C APIs.","items":[[0,"example_generated","bitflags","This module shows an example of code generated by the macro. IT MUST NOT BE USED OUTSIDE THIS CRATE.",null,null],[3,"Flags","bitflags::example_generated","This is the same `Flags` struct defined in the crate level example. Note that this struct is just for documentation purposes only, it must not be used outside this crate.",null,null],[17,"FLAG_A","","",null,null],[17,"FLAG_B","","",null,null],[17,"FLAG_C","","",null,null],[17,"FLAG_ABC","","",null,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"ordering"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",0,{"inputs":[],"output":{"name":"flags"}}],[11,"all","","Returns the set containing all flags.",0,{"inputs":[],"output":{"name":"flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",0,{"inputs":[{"name":"u32"}],"output":{"generics":["flags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",0,{"inputs":[{"name":"u32"}],"output":{"name":"flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",0,{"inputs":[{"name":"self"},{"name":"flags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"bitor_assign","","Adds the set of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"bitxor_assign","","Toggles the set of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",0,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"extend","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",0,{"inputs":[{"name":"t"}],"output":{"name":"flags"}}],[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"paths":[[3,"Flags"]]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and decoding numbers in either big-endian or little-endian order.","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for `BigEndian`.",null,null],[6,"LE","","A type alias for `LittleEndian`.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"result"}}],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["u64"],"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["i64"],"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"result"}}],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,null],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,null],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,null],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,null],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,null],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,null],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f32_into_unchecked","","DEPRECATED.",0,null],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f64_into_unchecked","","DEPRECATED.",0,null],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[8,"ByteOrder","","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,null],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,null],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.",2,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,null],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,null],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,null],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,null],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,null],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,null],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,null],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,null],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,null],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,null],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,null],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,null],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,null],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,null],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,null],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point numbers from `src` into `dst`.",2,null],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a particular endianness.",2,null],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a particular endianness.",2,null],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a particular endianness.",2,null],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a particular endianness.",2,null],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a particular endianness.",2,null],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a particular endianness.",2,null],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 bytes) floating point numbers to a particular endianness.",2,null],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 bytes) floating point numbers to a particular endianness.",2,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bigendian"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"ordering"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"bigendian"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"littleendian"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"ordering"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"littleendian"}}],[11,"read_u16","","",3,null],[11,"read_u32","","",3,null],[11,"read_u64","","",3,null],[11,"read_uint","","",3,null],[11,"write_u16","","",3,null],[11,"write_u32","","",3,null],[11,"write_u64","","",3,null],[11,"write_uint","","",3,null],[11,"read_u16_into","","",3,null],[11,"read_u32_into","","",3,null],[11,"read_u64_into","","",3,null],[11,"write_u16_into","","",3,null],[11,"write_u32_into","","",3,null],[11,"write_u64_into","","",3,null],[11,"from_slice_u16","","",3,null],[11,"from_slice_u32","","",3,null],[11,"from_slice_u64","","",3,null],[11,"from_slice_f32","","",3,null],[11,"from_slice_f64","","",3,null],[11,"read_u16","","",4,null],[11,"read_u32","","",4,null],[11,"read_u64","","",4,null],[11,"read_uint","","",4,null],[11,"write_u16","","",4,null],[11,"write_u32","","",4,null],[11,"write_u64","","",4,null],[11,"write_uint","","",4,null],[11,"read_u16_into","","",4,null],[11,"read_u32_into","","",4,null],[11,"read_u64_into","","",4,null],[11,"write_u16_into","","",4,null],[11,"write_u32_into","","",4,null],[11,"write_u64_into","","",4,null],[11,"from_slice_u16","","",4,null],[11,"from_slice_u32","","",4,null],[11,"from_slice_u64","","",4,null],[11,"from_slice_f32","","",4,null],[11,"from_slice_f64","","",4,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"result"}}],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["u64"],"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["i64"],"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"result"}}],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,null],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,null],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,null],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,null],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,null],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,null],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f32_into_unchecked","","DEPRECATED.",0,null],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f64_into_unchecked","","DEPRECATED.",0,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining #[cfg] if-else statements.","items":[[14,"cfg_if","cfg_if","",null,null]],"paths":[]};
searchIndex["cgmath"] = {"doc":"A low-dimensional linear algebra library, targeted at computer graphics.","items":[[8,"One","cgmath","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",0,{"inputs":[],"output":{"name":"self"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",1,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[3,"Matrix2","","A 2 x 2, column major matrix",null,null],[12,"x","","The first column of the matrix.",2,null],[12,"y","","The second column of the matrix.",2,null],[3,"Matrix3","","A 3 x 3, column major matrix",null,null],[12,"x","","The first column of the matrix.",3,null],[12,"y","","The second column of the matrix.",3,null],[12,"z","","The third column of the matrix.",3,null],[3,"Matrix4","","A 4 x 4, column major matrix",null,null],[12,"x","","The first column of the matrix.",4,null],[12,"y","","The second column of the matrix.",4,null],[12,"z","","The third column of the matrix.",4,null],[12,"w","","The fourth column of the matrix.",4,null],[3,"Quaternion","","A quaternion in scalar/vector form.",null,null],[12,"s","","The scalar part of the quaternion.",5,null],[12,"v","","The vector part of the quaternion.",5,null],[3,"Vector1","","A 1-dimensional vector.",null,null],[12,"x","","The x component of the vector.",6,null],[3,"Vector2","","A 2-dimensional vector.",null,null],[12,"x","","The x component of the vector.",7,null],[12,"y","","The y component of the vector.",7,null],[3,"Vector3","","A 3-dimensional vector.",null,null],[12,"x","","The x component of the vector.",8,null],[12,"y","","The y component of the vector.",8,null],[12,"z","","The z component of the vector.",8,null],[3,"Vector4","","A 4-dimensional vector.",null,null],[12,"x","","The x component of the vector.",9,null],[12,"y","","The y component of the vector.",9,null],[12,"z","","The z component of the vector.",9,null],[12,"w","","The w component of the vector.",9,null],[3,"Deg","","An angle, in degrees.",null,null],[12,"0","","",10,null],[3,"Rad","","An angle, in radians.",null,null],[12,"0","","",11,null],[3,"Euler","","A set of [Euler angles] representing a rotation in three-dimensional space.",null,null],[12,"x","","The angle to apply around the x axis. Also known at the pitch.",12,null],[12,"y","","The angle to apply around the y axis. Also known at the yaw.",12,null],[12,"z","","The angle to apply around the z axis. Also known at the roll.",12,null],[3,"Point1","","A point in 1-dimensional space.",null,null],[12,"x","","",13,null],[3,"Point2","","A point in 2-dimensional space.",null,null],[12,"x","","",14,null],[12,"y","","",14,null],[3,"Point3","","A point in 3-dimensional space.",null,null],[12,"x","","",15,null],[12,"y","","",15,null],[12,"z","","",15,null],[3,"Basis2","","A two-dimensional rotation matrix.",null,null],[3,"Basis3","","A three-dimensional rotation matrix.",null,null],[3,"Decomposed","","A generic transformation consisting of a rotation, displacement vector and scale amount.",null,null],[12,"scale","","",16,null],[12,"rot","","",16,null],[12,"disp","","",16,null],[3,"PerspectiveFov","","A perspective projection based on a vertical field-of-view angle.",null,null],[12,"fovy","","",17,null],[12,"aspect","","",17,null],[12,"near","","",17,null],[12,"far","","",17,null],[3,"Perspective","","A perspective projection with arbitrary left/right/bottom/top distances",null,null],[12,"left","","",18,null],[12,"right","","",18,null],[12,"bottom","","",18,null],[12,"top","","",18,null],[12,"near","","",18,null],[12,"far","","",18,null],[3,"Ortho","","An orthographic projection with arbitrary left/right/bottom/top distances",null,null],[12,"left","","",19,null],[12,"right","","",19,null],[12,"bottom","","",19,null],[12,"top","","",19,null],[12,"near","","",19,null],[12,"far","","",19,null],[5,"dot","","Dot product of two vectors.",null,null],[5,"vec1","","The short constructor.",null,{"inputs":[{"name":"s"}],"output":{"name":"vector1"}}],[5,"vec2","","The short constructor.",null,{"inputs":[{"name":"s"},{"name":"s"}],"output":{"name":"vector2"}}],[5,"vec3","","The short constructor.",null,{"inputs":[{"name":"s"},{"name":"s"},{"name":"s"}],"output":{"name":"vector3"}}],[5,"vec4","","The short constructor.",null,{"inputs":[{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"}],"output":{"name":"vector4"}}],[5,"perspective","","Create a perspective projection matrix.",null,{"inputs":[{"name":"a"},{"name":"s"},{"name":"s"},{"name":"s"}],"output":{"name":"matrix4"}}],[5,"frustum","","Create a perspective matrix from a view frustrum.",null,{"inputs":[{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"}],"output":{"name":"matrix4"}}],[5,"ortho","","Create an orthographic projection matrix.",null,{"inputs":[{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"}],"output":{"name":"matrix4"}}],[0,"conv","","Constrained conversion functions for assisting in situations where type inference is difficult.",null,null],[5,"array2","cgmath::conv","Force a conversion into a 2-element array.",null,null],[5,"array3","","Force a conversion into a 3-element array.",null,null],[5,"array4","","Force a conversion into a 4-element array.",null,null],[5,"array2x2","","Force a conversion into a 2x2-element array.",null,null],[5,"array3x3","","Force a conversion into a 3x3-element array.",null,null],[5,"array4x4","","Force a conversion into a 4x4-element array.",null,null],[0,"prelude","cgmath","This module contains the most common traits used in `cgmath`. By glob-importing this module, you can avoid the need to import each trait individually, while still being selective about what types you import.",null,null],[8,"One","cgmath::prelude","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",0,{"inputs":[],"output":{"name":"self"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",1,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Array","","An array containing elements of type `Element`",null,null],[16,"Element","","",20,null],[10,"from_value","","Construct a vector from a single value, replicating it.",20,null],[11,"as_ptr","","Get the pointer to the first element of the array.",20,null],[11,"as_mut_ptr","","Get a mutable pointer to the first element of the array.",20,null],[11,"swap_elements","","Swap the elements at indices `i` and `j` in-place.",20,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[10,"sum","","The sum of the elements of the array.",20,null],[10,"product","","The product of the elements of the array.",20,null],[8,"ElementWise","","Element-wise arithmetic operations. These are supplied for pragmatic reasons, but will usually fall outside of traditional algebraic properties.",null,null],[10,"add_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":{"name":"self"}}],[10,"sub_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":{"name":"self"}}],[10,"mul_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":{"name":"self"}}],[10,"div_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":{"name":"self"}}],[10,"rem_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":{"name":"self"}}],[10,"add_assign_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":null}],[10,"sub_assign_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":null}],[10,"mul_assign_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":null}],[10,"div_assign_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":null}],[10,"rem_assign_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":null}],[8,"VectorSpace","","Vectors that can be added together and multiplied by scalars.",null,null],[16,"Scalar","","The associated scalar.",22,null],[8,"MetricSpace","","A type with a distance function between values.",null,null],[16,"Metric","","The metric to be returned by the `distance` function.",23,null],[10,"distance2","","Returns the squared distance.",23,null],[11,"distance","","The distance between two values.",23,null],[8,"InnerSpace","","Vectors that also have a dot (or inner) product.",null,null],[10,"dot","","Vector dot (or inner) product.",24,null],[11,"is_perpendicular","","Returns `true` if the vector is perpendicular (at right angles) to the other vector.",24,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"magnitude2","","Returns the squared magnitude.",24,null],[11,"magnitude","","The distance from the tail to the tip of the vector.",24,null],[11,"angle","","Returns the angle between two vectors in radians.",24,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"rad"}}],[11,"normalize","","Returns a vector with the same direction, but with a magnitude of `1`.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"normalize_to","","Returns a vector with the same direction and a given magnitude.",24,null],[11,"lerp","","Returns the result of linearly interpolating the magnitude of the vector towards the magnitude of `other` by the specified amount.",24,null],[8,"EuclideanSpace","","Points in a Euclidean space with an associated space of displacement vectors.",null,null],[16,"Scalar","","The associated scalar over which the space is defined.",25,null],[16,"Diff","","The associated space of displacement vectors.",25,null],[10,"origin","","The point at the origin of the Euclidean space.",25,{"inputs":[],"output":{"name":"self"}}],[10,"from_vec","","Convert a displacement vector to a point.",25,null],[10,"to_vec","","Convert a point to a displacement vector.",25,null],[11,"midpoint","","Returns the middle point between two other points.",25,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"centroid","","Returns the average position of all points in the slice.",25,null],[10,"dot","","This is a weird one, but its useful for plane calculations.",25,null],[8,"Matrix","","A column-major matrix of arbitrary dimensions.",null,null],[16,"Row","","The row vector of the matrix.",26,null],[16,"Column","","The column vector of the matrix.",26,null],[16,"Transpose","","The result of transposing the matrix",26,null],[11,"as_ptr","","Get the pointer to the first element of the array.",26,null],[11,"as_mut_ptr","","Get a mutable pointer to the first element of the array.",26,null],[11,"replace_col","","Replace a column in the array.",26,null],[10,"row","","Get a row from this matrix by-value.",26,null],[10,"swap_rows","","Swap two rows of this array.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[10,"swap_columns","","Swap two columns of this array.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[10,"swap_elements","","Swap the values at index `a` and `b`",26,null],[10,"transpose","","Transpose this matrix, returning a new matrix.",26,null],[8,"SquareMatrix","","A column-major major matrix where the rows and column vectors are of the same dimensions.",null,null],[16,"ColumnRow","","The row/column vector of the matrix.",27,null],[10,"from_value","","Create a new diagonal matrix using the supplied value.",27,null],[10,"from_diagonal","","Create a matrix from a non-uniform scale",27,null],[11,"identity","","The [identity matrix]. Multiplying this matrix with another should have no effect.",27,{"inputs":[],"output":{"name":"self"}}],[10,"transpose_self","","Transpose this matrix in-place.",27,{"inputs":[{"name":"self"}],"output":null}],[10,"determinant","","Take the determinant of this matrix.",27,null],[10,"diagonal","","Return a vector containing the diagonal of this matrix.",27,null],[11,"trace","","Return the trace of this matrix. That is, the sum of the diagonal.",27,null],[10,"invert","","Invert this matrix, returning a new matrix. `m.mul_m(m.invert())` is the identity matrix. Returns `None` if this matrix is not invertible (has a determinant of zero).",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_invertible","","Test if this matrix is invertible.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_identity","","Test if this matrix is the identity matrix. That is, it is diagonal and every element in the diagonal is one.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_diagonal","","Test if this is a diagonal matrix. That is, every element outside of the diagonal is 0.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_symmetric","","Test if this matrix is symmetric. That is, it is equal to its transpose.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Angle","","Angles and their associated trigonometric functions.",null,null],[16,"Unitless","","",28,null],[11,"normalize","","Return the angle, normalized to the range `[0, full_turn)`.",28,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"opposite","","Return the angle rotated by half a turn.",28,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"bisect","","Returns the interior bisector of the two angles.",28,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"full_turn","","A full rotation.",28,{"inputs":[],"output":{"name":"self"}}],[11,"turn_div_2","","Half of a full rotation.",28,{"inputs":[],"output":{"name":"self"}}],[11,"turn_div_3","","A third of a full rotation.",28,{"inputs":[],"output":{"name":"self"}}],[11,"turn_div_4","","A quarter of a full rotation.",28,{"inputs":[],"output":{"name":"self"}}],[11,"turn_div_6","","A sixth of a full rotation.",28,{"inputs":[],"output":{"name":"self"}}],[10,"sin","","Compute the sine of the angle, returning a unitless ratio.",28,null],[10,"cos","","Compute the cosine of the angle, returning a unitless ratio.",28,null],[10,"tan","","Compute the tangent of the angle, returning a unitless ratio.",28,null],[10,"sin_cos","","Compute the sine and cosine of the angle, returning the result as a pair.",28,null],[11,"csc","","Compute the cosecant of the angle.",28,null],[11,"cot","","Compute the cotangent of the angle.",28,null],[11,"sec","","Compute the secant of the angle.",28,null],[10,"asin","","Compute the arcsine of the ratio, returning the resulting angle.",28,null],[10,"acos","","Compute the arccosine of the ratio, returning the resulting angle.",28,null],[10,"atan","","Compute the arctangent of the ratio, returning the resulting angle.",28,null],[10,"atan2","","",28,null],[8,"Rotation","","A trait for a generic rotation. A rotation is a transformation that creates a circular motion, and preserves at least one point in the space.",null,null],[10,"look_at","","Create a rotation to a given direction with an 'up' vector.",29,null],[10,"between_vectors","","Create a shortest rotation to transform vector 'a' into 'b'. Both given vectors are assumed to have unit length.",29,null],[10,"rotate_vector","","Rotate a vector using this rotation.",29,null],[11,"rotate_point","","Rotate a point using this rotation, by converting it to its representation as a vector.",29,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"p"}}],[10,"invert","","Create a new rotation which \"un-does\" this rotation. That is, `r * r.invert()` is the identity.",29,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[8,"Rotation2","","A two-dimensional rotation.",null,null],[10,"from_angle","","Create a rotation by a given angle. Thus is a redundant case of both from_axis_angle() and from_euler() for 2D space.",30,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[8,"Rotation3","","A three-dimensional rotation.",null,null],[10,"from_axis_angle","","Create a rotation using an angle around a given axis.",31,{"inputs":[{"name":"vector3"},{"name":"a"}],"output":{"name":"self"}}],[11,"from_angle_x","","Create a rotation from an angle around the `x` axis (pitch).",31,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"from_angle_y","","Create a rotation from an angle around the `y` axis (yaw).",31,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"from_angle_z","","Create a rotation from an angle around the `z` axis (roll).",31,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[8,"Transform","","A trait representing an affine transformation that can be applied to points or vectors. An affine transformation is one which",null,null],[10,"one","","Create an identity transformation. That is, a transformation which does nothing.",32,{"inputs":[],"output":{"name":"self"}}],[10,"look_at","","Create a transformation that rotates a vector to look at `center` from `eye`, using `up` for orientation.",32,null],[10,"transform_vector","","Transform a vector using this transform.",32,null],[10,"transform_point","","Transform a point using this transform.",32,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"p"}}],[10,"concat","","Combine this transform with another, yielding a new transformation which has the effects of both.",32,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"inverse_transform","","Create a transform that \"un-does\" this one.",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"concat_self","","Combine this transform with another, in-place.",32,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[8,"Transform2","","",null,null],[8,"Transform3","","",null,null],[11,"as_ptr","","Get the pointer to the first element of the array.",20,null],[11,"as_mut_ptr","","Get a mutable pointer to the first element of the array.",20,null],[11,"swap_elements","","Swap the elements at indices `i` and `j` in-place.",20,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"distance","","The distance between two values.",23,null],[11,"is_perpendicular","","Returns `true` if the vector is perpendicular (at right angles) to the other vector.",24,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"magnitude2","","Returns the squared magnitude.",24,null],[11,"magnitude","","The distance from the tail to the tip of the vector.",24,null],[11,"angle","","Returns the angle between two vectors in radians.",24,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"rad"}}],[11,"normalize","","Returns a vector with the same direction, but with a magnitude of `1`.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"normalize_to","","Returns a vector with the same direction and a given magnitude.",24,null],[11,"lerp","","Returns the result of linearly interpolating the magnitude of the vector towards the magnitude of `other` by the specified amount.",24,null],[11,"midpoint","","Returns the middle point between two other points.",25,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"centroid","","Returns the average position of all points in the slice.",25,null],[11,"as_ptr","","Get the pointer to the first element of the array.",26,null],[11,"as_mut_ptr","","Get a mutable pointer to the first element of the array.",26,null],[11,"replace_col","","Replace a column in the array.",26,null],[11,"identity","","The [identity matrix]. Multiplying this matrix with another should have no effect.",27,{"inputs":[],"output":{"name":"self"}}],[11,"trace","","Return the trace of this matrix. That is, the sum of the diagonal.",27,null],[11,"is_invertible","","Test if this matrix is invertible.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_identity","","Test if this matrix is the identity matrix. That is, it is diagonal and every element in the diagonal is one.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"normalize","","Return the angle, normalized to the range `[0, full_turn)`.",28,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"opposite","","Return the angle rotated by half a turn.",28,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"bisect","","Returns the interior bisector of the two angles.",28,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"turn_div_2","","Half of a full rotation.",28,{"inputs":[],"output":{"name":"self"}}],[11,"turn_div_3","","A third of a full rotation.",28,{"inputs":[],"output":{"name":"self"}}],[11,"turn_div_4","","A quarter of a full rotation.",28,{"inputs":[],"output":{"name":"self"}}],[11,"turn_div_6","","A sixth of a full rotation.",28,{"inputs":[],"output":{"name":"self"}}],[11,"csc","","Compute the cosecant of the angle.",28,null],[11,"cot","","Compute the cotangent of the angle.",28,null],[11,"sec","","Compute the secant of the angle.",28,null],[11,"clone","cgmath","",2,{"inputs":[{"name":"self"}],"output":{"name":"matrix2"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"matrix2"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"matrix2"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"matrix3"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"matrix3"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"matrix3"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"matrix4"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"matrix4"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"matrix4"}],"output":{"name":"bool"}}],[11,"new","","Create a new matrix, providing values for each index.",2,{"inputs":[{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"}],"output":{"name":"matrix2"}}],[11,"from_cols","","Create a new matrix, providing columns.",2,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"matrix2"}}],[11,"look_at","","Create a transformation matrix that will cause a vector to point at `dir`, using `up` for orientation.",2,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"matrix2"}}],[11,"from_angle","","",2,{"inputs":[{"name":"a"}],"output":{"name":"matrix2"}}],[11,"new","","Create a new matrix, providing values for each index.",3,{"inputs":[{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"}],"output":{"name":"matrix3"}}],[11,"from_cols","","Create a new matrix, providing columns.",3,{"inputs":[{"name":"vector3"},{"name":"vector3"},{"name":"vector3"}],"output":{"name":"matrix3"}}],[11,"look_at","","Create a rotation matrix that will cause a vector to point at `dir`, using `up` for orientation.",3,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"matrix3"}}],[11,"from_angle_x","","Create a rotation matrix from a rotation around the `x` axis (pitch).",3,{"inputs":[{"name":"a"}],"output":{"name":"matrix3"}}],[11,"from_angle_y","","Create a rotation matrix from a rotation around the `y` axis (yaw).",3,{"inputs":[{"name":"a"}],"output":{"name":"matrix3"}}],[11,"from_angle_z","","Create a rotation matrix from a rotation around the `z` axis (roll).",3,{"inputs":[{"name":"a"}],"output":{"name":"matrix3"}}],[11,"from_axis_angle","","Create a rotation matrix from an angle around an arbitrary axis.",3,{"inputs":[{"name":"vector3"},{"name":"a"}],"output":{"name":"matrix3"}}],[11,"new","","Create a new matrix, providing values for each index.",4,{"inputs":[{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"}],"output":{"name":"matrix4"}}],[11,"from_cols","","Create a new matrix, providing columns.",4,{"inputs":[{"name":"vector4"},{"name":"vector4"},{"name":"vector4"},{"name":"vector4"}],"output":{"name":"matrix4"}}],[11,"from_translation","","Create a homogeneous transformation matrix from a translation vector.",4,{"inputs":[{"name":"vector3"}],"output":{"name":"matrix4"}}],[11,"from_scale","","Create a homogeneous transformation matrix from a scale value.",4,{"inputs":[{"name":"s"}],"output":{"name":"matrix4"}}],[11,"from_nonuniform_scale","","Create a homogeneous transformation matrix from a set of scale values.",4,{"inputs":[{"name":"s"},{"name":"s"},{"name":"s"}],"output":{"name":"matrix4"}}],[11,"look_at","","Create a homogeneous transformation matrix that will cause a vector to point at `dir`, using `up` for orientation.",4,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"matrix4"}}],[11,"from_angle_x","","Create a homogeneous transformation matrix from a rotation around the `x` axis (pitch).",4,{"inputs":[{"name":"a"}],"output":{"name":"matrix4"}}],[11,"from_angle_y","","Create a homogeneous transformation matrix from a rotation around the `y` axis (yaw).",4,{"inputs":[{"name":"a"}],"output":{"name":"matrix4"}}],[11,"from_angle_z","","Create a homogeneous transformation matrix from a rotation around the `z` axis (roll).",4,{"inputs":[{"name":"a"}],"output":{"name":"matrix4"}}],[11,"from_axis_angle","","Create a homogeneous transformation matrix from an angle around an arbitrary axis.",4,{"inputs":[{"name":"vector3"},{"name":"a"}],"output":{"name":"matrix4"}}],[11,"zero","","",2,{"inputs":[],"output":{"name":"matrix2"}}],[11,"is_zero","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",3,{"inputs":[],"output":{"name":"matrix3"}}],[11,"is_zero","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",4,{"inputs":[],"output":{"name":"matrix4"}}],[11,"is_zero","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",2,{"inputs":[],"output":{"name":"matrix2"}}],[11,"one","","",3,{"inputs":[],"output":{"name":"matrix3"}}],[11,"one","","",4,{"inputs":[],"output":{"name":"matrix4"}}],[11,"row","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"vector2"}}],[11,"swap_rows","","",2,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"swap_columns","","",2,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"swap_elements","","",2,null],[11,"transpose","","",2,{"inputs":[{"name":"self"}],"output":{"name":"matrix2"}}],[11,"from_value","","",2,{"inputs":[{"name":"s"}],"output":{"name":"matrix2"}}],[11,"from_diagonal","","",2,{"inputs":[{"name":"vector2"}],"output":{"name":"matrix2"}}],[11,"transpose_self","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"determinant","","",2,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"diagonal","","",2,{"inputs":[{"name":"self"}],"output":{"name":"vector2"}}],[11,"invert","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["matrix2"],"name":"option"}}],[11,"is_diagonal","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_symmetric","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"row","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"vector3"}}],[11,"swap_rows","","",3,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"swap_columns","","",3,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"swap_elements","","",3,null],[11,"transpose","","",3,{"inputs":[{"name":"self"}],"output":{"name":"matrix3"}}],[11,"from_value","","",3,{"inputs":[{"name":"s"}],"output":{"name":"matrix3"}}],[11,"from_diagonal","","",3,{"inputs":[{"name":"vector3"}],"output":{"name":"matrix3"}}],[11,"transpose_self","","",3,{"inputs":[{"name":"self"}],"output":null}],[11,"determinant","","",3,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"diagonal","","",3,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"invert","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["matrix3"],"name":"option"}}],[11,"is_diagonal","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_symmetric","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"row","","",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"vector4"}}],[11,"swap_rows","","",4,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"swap_columns","","",4,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"swap_elements","","",4,null],[11,"transpose","","",4,{"inputs":[{"name":"self"}],"output":{"name":"matrix4"}}],[11,"from_value","","",4,{"inputs":[{"name":"s"}],"output":{"name":"matrix4"}}],[11,"from_diagonal","","",4,{"inputs":[{"name":"vector4"}],"output":{"name":"matrix4"}}],[11,"transpose_self","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"determinant","","",4,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"diagonal","","",4,{"inputs":[{"name":"self"}],"output":{"name":"vector4"}}],[11,"invert","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["matrix4"],"name":"option"}}],[11,"is_diagonal","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_symmetric","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"default_epsilon","","",2,null],[11,"default_max_relative","","",2,null],[11,"default_max_ulps","","",2,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",2,null],[11,"ulps_eq","","",2,null],[11,"default_epsilon","","",3,null],[11,"default_max_relative","","",3,null],[11,"default_max_ulps","","",3,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",3,null],[11,"ulps_eq","","",3,null],[11,"default_epsilon","","",4,null],[11,"default_max_relative","","",4,null],[11,"default_max_ulps","","",4,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",4,null],[11,"ulps_eq","","",4,null],[11,"one","","",3,{"inputs":[],"output":{"name":"matrix3"}}],[11,"look_at","","",3,{"inputs":[{"name":"point2"},{"name":"point2"},{"name":"vector2"}],"output":{"name":"matrix3"}}],[11,"transform_vector","","",3,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"transform_point","","",3,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"point2"}}],[11,"concat","","",3,{"inputs":[{"name":"self"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[11,"inverse_transform","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["matrix3"],"name":"option"}}],[11,"one","","",3,{"inputs":[],"output":{"name":"matrix3"}}],[11,"look_at","","",3,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"matrix3"}}],[11,"transform_vector","","",3,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"transform_point","","",3,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"point3"}}],[11,"concat","","",3,{"inputs":[{"name":"self"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[11,"inverse_transform","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["matrix3"],"name":"option"}}],[11,"one","","",4,{"inputs":[],"output":{"name":"matrix4"}}],[11,"look_at","","",4,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"matrix4"}}],[11,"transform_vector","","",4,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"transform_point","","",4,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"point3"}}],[11,"concat","","",4,{"inputs":[{"name":"self"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[11,"inverse_transform","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["matrix4"],"name":"option"}}],[11,"neg","","",2,{"inputs":[{"name":"self"}],"output":{"name":"matrix2"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"matrix2"}}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"matrix2"}}],[11,"rem","","",2,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"matrix2"}}],[11,"mul_assign","","",2,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div_assign","","",2,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"rem_assign","","",2,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"matrix2"}],"output":{"name":"matrix2"}}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"matrix2"}],"output":{"name":"matrix2"}}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"matrix2"}],"output":{"name":"matrix2"}}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"matrix2"}],"output":{"name":"matrix2"}}],[11,"add_assign","","",2,{"inputs":[{"name":"self"},{"name":"matrix2"}],"output":null}],[11,"sub_assign","","",2,{"inputs":[{"name":"self"},{"name":"matrix2"}],"output":null}],[11,"sum","","",2,{"inputs":[{"name":"i"}],"output":{"name":"matrix2"}}],[11,"sum","","",2,{"inputs":[{"name":"i"}],"output":{"name":"matrix2"}}],[11,"product","","",2,{"inputs":[{"name":"i"}],"output":{"name":"matrix2"}}],[11,"product","","",2,{"inputs":[{"name":"i"}],"output":{"name":"matrix2"}}],[11,"cast","","Component-wise casting to another type",2,{"inputs":[{"name":"self"}],"output":{"name":"matrix2"}}],[11,"neg","","",3,{"inputs":[{"name":"self"}],"output":{"name":"matrix3"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"matrix3"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"matrix3"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"matrix3"}}],[11,"mul_assign","","",3,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div_assign","","",3,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"rem_assign","","",3,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[11,"add_assign","","",3,{"inputs":[{"name":"self"},{"name":"matrix3"}],"output":null}],[11,"sub_assign","","",3,{"inputs":[{"name":"self"},{"name":"matrix3"}],"output":null}],[11,"sum","","",3,{"inputs":[{"name":"i"}],"output":{"name":"matrix3"}}],[11,"sum","","",3,{"inputs":[{"name":"i"}],"output":{"name":"matrix3"}}],[11,"product","","",3,{"inputs":[{"name":"i"}],"output":{"name":"matrix3"}}],[11,"product","","",3,{"inputs":[{"name":"i"}],"output":{"name":"matrix3"}}],[11,"cast","","Component-wise casting to another type",3,{"inputs":[{"name":"self"}],"output":{"name":"matrix3"}}],[11,"neg","","",4,{"inputs":[{"name":"self"}],"output":{"name":"matrix4"}}],[11,"mul","","",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"matrix4"}}],[11,"div","","",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"matrix4"}}],[11,"rem","","",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"matrix4"}}],[11,"mul_assign","","",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div_assign","","",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"rem_assign","","",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"add","","",4,{"inputs":[{"name":"self"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[11,"add","","",4,{"inputs":[{"name":"self"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[11,"sub","","",4,{"inputs":[{"name":"self"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[11,"sub","","",4,{"inputs":[{"name":"self"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[11,"add_assign","","",4,{"inputs":[{"name":"self"},{"name":"matrix4"}],"output":null}],[11,"sub_assign","","",4,{"inputs":[{"name":"self"},{"name":"matrix4"}],"output":null}],[11,"sum","","",4,{"inputs":[{"name":"i"}],"output":{"name":"matrix4"}}],[11,"sum","","",4,{"inputs":[{"name":"i"}],"output":{"name":"matrix4"}}],[11,"product","","",4,{"inputs":[{"name":"i"}],"output":{"name":"matrix4"}}],[11,"product","","",4,{"inputs":[{"name":"i"}],"output":{"name":"matrix4"}}],[11,"cast","","Component-wise casting to another type",4,{"inputs":[{"name":"self"}],"output":{"name":"matrix4"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"mul","","",4,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"vector4"}}],[11,"mul","","",4,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"vector4"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"matrix2"}],"output":{"name":"matrix2"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"matrix2"}],"output":{"name":"matrix2"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[11,"mul","","",4,{"inputs":[{"name":"self"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[11,"mul","","",4,{"inputs":[{"name":"self"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[11,"index","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"vector2"}}],[11,"index_mut","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"vector2"}}],[11,"index","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"vector3"}}],[11,"index_mut","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"vector3"}}],[11,"index","","",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"vector4"}}],[11,"index_mut","","",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"vector4"}}],[11,"from","","",3,{"inputs":[{"name":"euler"}],"output":{"name":"matrix3"}}],[11,"from","","",4,{"inputs":[{"name":"euler"}],"output":{"name":"matrix4"}}],[11,"into","","",2,null],[11,"as_ref","","",2,null],[11,"as_mut","","",2,null],[11,"from","","",2,null],[11,"as_ref","","",2,null],[11,"as_mut","","",2,null],[11,"into","","",3,null],[11,"as_ref","","",3,null],[11,"as_mut","","",3,null],[11,"from","","",3,null],[11,"as_ref","","",3,null],[11,"as_mut","","",3,null],[11,"into","","",4,null],[11,"as_ref","","",4,null],[11,"as_mut","","",4,null],[11,"from","","",4,null],[11,"as_ref","","",4,null],[11,"as_mut","","",4,null],[11,"into","","",2,{"inputs":[{"name":"self"}],"output":{"name":"columnmatrix2"}}],[11,"from","","",2,{"inputs":[{"name":"columnmatrix2"}],"output":{"name":"self"}}],[11,"into","","",3,{"inputs":[{"name":"self"}],"output":{"name":"columnmatrix3"}}],[11,"from","","",3,{"inputs":[{"name":"columnmatrix3"}],"output":{"name":"self"}}],[11,"into","","",4,{"inputs":[{"name":"self"}],"output":{"name":"columnmatrix4"}}],[11,"from","","",4,{"inputs":[{"name":"columnmatrix4"}],"output":{"name":"self"}}],[11,"from","","Clone the elements of a 2-dimensional matrix into the top-left corner of a 3-dimensional identity matrix.",3,{"inputs":[{"name":"matrix2"}],"output":{"name":"matrix3"}}],[11,"from","","Clone the elements of a 2-dimensional matrix into the top-left corner of a 4-dimensional identity matrix.",4,{"inputs":[{"name":"matrix2"}],"output":{"name":"matrix4"}}],[11,"from","","Clone the elements of a 3-dimensional matrix into the top-left corner of a 4-dimensional identity matrix.",4,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix4"}}],[11,"from","","Convert the matrix to a quaternion",5,{"inputs":[{"name":"matrix3"}],"output":{"name":"quaternion"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"rand","","",2,{"inputs":[{"name":"r"}],"output":{"name":"matrix2"}}],[11,"rand","","",3,{"inputs":[{"name":"r"}],"output":{"name":"matrix3"}}],[11,"rand","","",4,{"inputs":[{"name":"r"}],"output":{"name":"matrix4"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"name":"bool"}}],[11,"new","","Construct a new quaternion from one scalar component and three imaginary components.",5,{"inputs":[{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"}],"output":{"name":"quaternion"}}],[11,"from_sv","","Construct a new quaternion from a scalar and a vector.",5,{"inputs":[{"name":"s"},{"name":"vector3"}],"output":{"name":"quaternion"}}],[11,"from_arc","","Construct a new quaternion as a closest arc between two vectors",5,{"inputs":[{"name":"vector3"},{"name":"vector3"},{"generics":["vector3"],"name":"option"}],"output":{"name":"quaternion"}}],[11,"conjugate","","The conjugate of the quaternion.",5,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"nlerp","","Do a normalized linear interpolation with `other`, by `amount`.",5,{"inputs":[{"name":"self"},{"name":"quaternion"},{"name":"s"}],"output":{"name":"quaternion"}}],[11,"slerp","","Spherical Linear Intoperlation",5,{"inputs":[{"name":"self"},{"name":"quaternion"},{"name":"s"}],"output":{"name":"quaternion"}}],[11,"zero","","",5,{"inputs":[],"output":{"name":"quaternion"}}],[11,"is_zero","","",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",5,{"inputs":[],"output":{"name":"quaternion"}}],[11,"sum","","",5,{"inputs":[{"name":"i"}],"output":{"name":"quaternion"}}],[11,"sum","","",5,{"inputs":[{"name":"i"}],"output":{"name":"quaternion"}}],[11,"product","","",5,{"inputs":[{"name":"i"}],"output":{"name":"quaternion"}}],[11,"product","","",5,{"inputs":[{"name":"i"}],"output":{"name":"quaternion"}}],[11,"distance2","","",5,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"s"}}],[11,"cast","","Component-wise casting to another type.",5,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"dot","","",5,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"name":"s"}}],[11,"from","","",5,{"inputs":[{"name":"euler"}],"output":{"name":"quaternion"}}],[11,"neg","","",5,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"mul","","",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"quaternion"}}],[11,"mul_assign","","",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div","","",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"quaternion"}}],[11,"div_assign","","",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"rem","","",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"quaternion"}}],[11,"rem_assign","","",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"mul","","",5,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"mul","","",5,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"add","","",5,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"name":"quaternion"}}],[11,"add","","",5,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"name":"quaternion"}}],[11,"add_assign","","",5,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":null}],[11,"sub","","",5,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"name":"quaternion"}}],[11,"sub","","",5,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"name":"quaternion"}}],[11,"sub_assign","","",5,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":null}],[11,"mul","","",5,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"name":"quaternion"}}],[11,"mul","","",5,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"name":"quaternion"}}],[11,"default_epsilon","","",5,null],[11,"default_max_relative","","",5,null],[11,"default_max_ulps","","",5,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",5,null],[11,"ulps_eq","","",5,null],[11,"from","","Convert the quaternion to a 3 x 3 rotation matrix.",3,{"inputs":[{"name":"quaternion"}],"output":{"name":"matrix3"}}],[11,"from","","Convert the quaternion to a 4 x 4 rotation matrix.",4,{"inputs":[{"name":"quaternion"}],"output":{"name":"matrix4"}}],[11,"from","","",33,{"inputs":[{"name":"quaternion"}],"output":{"name":"basis3"}}],[11,"look_at","","",5,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"quaternion"}}],[11,"between_vectors","","",5,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"quaternion"}}],[11,"rotate_vector","","",5,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"invert","","",5,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"from_axis_angle","","",5,{"inputs":[{"name":"vector3"},{"name":"a"}],"output":{"name":"quaternion"}}],[11,"into","","",5,null],[11,"as_ref","","",5,null],[11,"as_mut","","",5,null],[11,"from","","",5,null],[11,"into","","",5,null],[11,"as_ref","","",5,null],[11,"as_mut","","",5,null],[11,"from","","",5,null],[11,"index","","",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"s"}}],[11,"index_mut","","",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"s"}}],[11,"index","","",5,null],[11,"index_mut","","",5,null],[11,"index","","",5,null],[11,"index_mut","","",5,null],[11,"index","","",5,null],[11,"index_mut","","",5,null],[11,"index","","",5,null],[11,"index_mut","","",5,null],[11,"rand","","",5,{"inputs":[{"name":"r"}],"output":{"name":"quaternion"}}],[11,"from","","",5,{"inputs":[{"name":"quaternion"}],"output":{"name":"self"}}],[11,"into","","",5,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"vector1"}}],[11,"hash","","",6,null],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"vector2"}}],[11,"hash","","",7,null],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"hash","","",8,null],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"vector4"}}],[11,"hash","","",9,null],[11,"new","","Construct a new vector, using the provided values.",6,{"inputs":[{"name":"s"}],"output":{"name":"vector1"}}],[11,"cast","","Component-wise casting to another type.",6,{"inputs":[{"name":"self"}],"output":{"name":"vector1"}}],[11,"distance2","","",6,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"s"}}],[11,"from_value","","",6,{"inputs":[{"name":"s"}],"output":{"name":"vector1"}}],[11,"sum","","",6,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"product","","",6,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"zero","","",6,{"inputs":[],"output":{"name":"vector1"}}],[11,"is_zero","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"sum","","",6,{"inputs":[{"name":"i"}],"output":{"name":"vector1"}}],[11,"sum","","",6,{"inputs":[{"name":"i"}],"output":{"name":"vector1"}}],[11,"neg","","",6,{"inputs":[{"name":"self"}],"output":{"name":"vector1"}}],[11,"default_epsilon","","",6,null],[11,"default_max_relative","","",6,null],[11,"default_max_ulps","","",6,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",6,null],[11,"ulps_eq","","",6,null],[11,"rand","","",6,{"inputs":[{"name":"r"}],"output":{"name":"vector1"}}],[11,"add","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":{"name":"vector1"}}],[11,"add","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":{"name":"vector1"}}],[11,"add_assign","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":null}],[11,"sub","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":{"name":"vector1"}}],[11,"sub","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":{"name":"vector1"}}],[11,"sub_assign","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":null}],[11,"mul","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector1"}}],[11,"mul_assign","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector1"}}],[11,"div_assign","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"rem","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector1"}}],[11,"rem_assign","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"add_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":{"name":"vector1"}}],[11,"sub_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":{"name":"vector1"}}],[11,"mul_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":{"name":"vector1"}}],[11,"div_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":{"name":"vector1"}}],[11,"rem_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":{"name":"vector1"}}],[11,"add_assign_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":null}],[11,"sub_assign_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":null}],[11,"mul_assign_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":null}],[11,"div_assign_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":null}],[11,"rem_assign_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":null}],[11,"add_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector1"}}],[11,"sub_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector1"}}],[11,"mul_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector1"}}],[11,"div_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector1"}}],[11,"rem_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector1"}}],[11,"add_assign_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"sub_assign_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"mul_assign_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div_assign_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"rem_assign_element_wise","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"index","","",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"s"}}],[11,"index_mut","","",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"s"}}],[11,"index","","",6,null],[11,"index_mut","","",6,null],[11,"index","","",6,null],[11,"index_mut","","",6,null],[11,"index","","",6,null],[11,"index_mut","","",6,null],[11,"index","","",6,null],[11,"index_mut","","",6,null],[11,"new","","Construct a new vector, using the provided values.",7,{"inputs":[{"name":"s"},{"name":"s"}],"output":{"name":"vector2"}}],[11,"cast","","Component-wise casting to another type.",7,{"inputs":[{"name":"self"}],"output":{"name":"vector2"}}],[11,"distance2","","",7,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"s"}}],[11,"from_value","","",7,{"inputs":[{"name":"s"}],"output":{"name":"vector2"}}],[11,"sum","","",7,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"product","","",7,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"zero","","",7,{"inputs":[],"output":{"name":"vector2"}}],[11,"is_zero","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"sum","","",7,{"inputs":[{"name":"i"}],"output":{"name":"vector2"}}],[11,"sum","","",7,{"inputs":[{"name":"i"}],"output":{"name":"vector2"}}],[11,"neg","","",7,{"inputs":[{"name":"self"}],"output":{"name":"vector2"}}],[11,"default_epsilon","","",7,null],[11,"default_max_relative","","",7,null],[11,"default_max_ulps","","",7,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",7,null],[11,"ulps_eq","","",7,null],[11,"rand","","",7,{"inputs":[{"name":"r"}],"output":{"name":"vector2"}}],[11,"add","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"add","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"add_assign","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":null}],[11,"sub","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"sub","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"sub_assign","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":null}],[11,"mul","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector2"}}],[11,"mul_assign","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector2"}}],[11,"div_assign","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"rem","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector2"}}],[11,"rem_assign","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"add_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"sub_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"mul_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"div_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"rem_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"add_assign_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":null}],[11,"sub_assign_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":null}],[11,"mul_assign_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":null}],[11,"div_assign_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":null}],[11,"rem_assign_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":null}],[11,"add_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector2"}}],[11,"sub_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector2"}}],[11,"mul_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector2"}}],[11,"div_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector2"}}],[11,"rem_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector2"}}],[11,"add_assign_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"sub_assign_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"mul_assign_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div_assign_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"rem_assign_element_wise","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"index","","",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"s"}}],[11,"index_mut","","",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"s"}}],[11,"index","","",7,null],[11,"index_mut","","",7,null],[11,"index","","",7,null],[11,"index_mut","","",7,null],[11,"index","","",7,null],[11,"index_mut","","",7,null],[11,"index","","",7,null],[11,"index_mut","","",7,null],[11,"new","","Construct a new vector, using the provided values.",8,{"inputs":[{"name":"s"},{"name":"s"},{"name":"s"}],"output":{"name":"vector3"}}],[11,"cast","","Component-wise casting to another type.",8,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"distance2","","",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"s"}}],[11,"from_value","","",8,{"inputs":[{"name":"s"}],"output":{"name":"vector3"}}],[11,"sum","","",8,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"product","","",8,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"zero","","",8,{"inputs":[],"output":{"name":"vector3"}}],[11,"is_zero","","",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"sum","","",8,{"inputs":[{"name":"i"}],"output":{"name":"vector3"}}],[11,"sum","","",8,{"inputs":[{"name":"i"}],"output":{"name":"vector3"}}],[11,"neg","","",8,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"default_epsilon","","",8,null],[11,"default_max_relative","","",8,null],[11,"default_max_ulps","","",8,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",8,null],[11,"ulps_eq","","",8,null],[11,"rand","","",8,{"inputs":[{"name":"r"}],"output":{"name":"vector3"}}],[11,"add","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"add","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"add_assign","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":null}],[11,"sub","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"sub","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"sub_assign","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":null}],[11,"mul","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector3"}}],[11,"mul_assign","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector3"}}],[11,"div_assign","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"rem","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector3"}}],[11,"rem_assign","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"add_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"sub_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"mul_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"div_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"rem_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"add_assign_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":null}],[11,"sub_assign_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":null}],[11,"mul_assign_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":null}],[11,"div_assign_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":null}],[11,"rem_assign_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":null}],[11,"add_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector3"}}],[11,"sub_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector3"}}],[11,"mul_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector3"}}],[11,"div_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector3"}}],[11,"rem_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector3"}}],[11,"add_assign_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"sub_assign_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"mul_assign_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div_assign_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"rem_assign_element_wise","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"index","","",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"s"}}],[11,"index_mut","","",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"s"}}],[11,"index","","",8,null],[11,"index_mut","","",8,null],[11,"index","","",8,null],[11,"index_mut","","",8,null],[11,"index","","",8,null],[11,"index_mut","","",8,null],[11,"index","","",8,null],[11,"index_mut","","",8,null],[11,"new","","Construct a new vector, using the provided values.",9,{"inputs":[{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"}],"output":{"name":"vector4"}}],[11,"cast","","Component-wise casting to another type.",9,{"inputs":[{"name":"self"}],"output":{"name":"vector4"}}],[11,"distance2","","",9,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"s"}}],[11,"from_value","","",9,{"inputs":[{"name":"s"}],"output":{"name":"vector4"}}],[11,"sum","","",9,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"product","","",9,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"zero","","",9,{"inputs":[],"output":{"name":"vector4"}}],[11,"is_zero","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"sum","","",9,{"inputs":[{"name":"i"}],"output":{"name":"vector4"}}],[11,"sum","","",9,{"inputs":[{"name":"i"}],"output":{"name":"vector4"}}],[11,"neg","","",9,{"inputs":[{"name":"self"}],"output":{"name":"vector4"}}],[11,"default_epsilon","","",9,null],[11,"default_max_relative","","",9,null],[11,"default_max_ulps","","",9,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",9,null],[11,"ulps_eq","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"vector4"}}],[11,"add","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"vector4"}}],[11,"add","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"vector4"}}],[11,"add_assign","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":null}],[11,"sub","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"vector4"}}],[11,"sub","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"vector4"}}],[11,"sub_assign","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":null}],[11,"mul","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector4"}}],[11,"mul_assign","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector4"}}],[11,"div_assign","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"rem","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector4"}}],[11,"rem_assign","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"add_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"vector4"}}],[11,"sub_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"vector4"}}],[11,"mul_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"vector4"}}],[11,"div_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"vector4"}}],[11,"rem_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"vector4"}}],[11,"add_assign_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":null}],[11,"sub_assign_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":null}],[11,"mul_assign_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":null}],[11,"div_assign_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":null}],[11,"rem_assign_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":null}],[11,"add_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector4"}}],[11,"sub_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector4"}}],[11,"mul_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector4"}}],[11,"div_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector4"}}],[11,"rem_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector4"}}],[11,"add_assign_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"sub_assign_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"mul_assign_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div_assign_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"rem_assign_element_wise","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"index","","",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"s"}}],[11,"index_mut","","",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"s"}}],[11,"index","","",9,null],[11,"index_mut","","",9,null],[11,"index","","",9,null],[11,"index_mut","","",9,null],[11,"index","","",9,null],[11,"index_mut","","",9,null],[11,"index","","",9,null],[11,"index_mut","","",9,null],[11,"into","","",6,null],[11,"as_ref","","",6,null],[11,"as_mut","","",6,null],[11,"from","","",6,null],[11,"into","","",7,null],[11,"as_ref","","",7,null],[11,"as_mut","","",7,null],[11,"from","","",7,null],[11,"into","","",8,null],[11,"as_ref","","",8,null],[11,"as_mut","","",8,null],[11,"from","","",8,null],[11,"into","","",9,null],[11,"as_ref","","",9,null],[11,"as_mut","","",9,null],[11,"from","","",9,null],[11,"into","","",6,null],[11,"as_ref","","",6,null],[11,"as_mut","","",6,null],[11,"from","","",6,null],[11,"into","","",7,null],[11,"as_ref","","",7,null],[11,"as_mut","","",7,null],[11,"from","","",7,null],[11,"into","","",8,null],[11,"as_ref","","",8,null],[11,"as_mut","","",8,null],[11,"from","","",8,null],[11,"into","","",9,null],[11,"as_ref","","",9,null],[11,"as_mut","","",9,null],[11,"from","","",9,null],[11,"unit_x","","A unit vector in the `x` direction.",6,{"inputs":[],"output":{"name":"vector1"}}],[11,"unit_x","","A unit vector in the `x` direction.",7,{"inputs":[],"output":{"name":"vector2"}}],[11,"unit_y","","A unit vector in the `y` direction.",7,{"inputs":[],"output":{"name":"vector2"}}],[11,"perp_dot","","The perpendicular dot product of the vector and `other`.",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"s"}}],[11,"extend","","Create a `Vector3`, using the `x` and `y` values from this vector, and the provided `z`.",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector3"}}],[11,"unit_x","","A unit vector in the `x` direction.",8,{"inputs":[],"output":{"name":"vector3"}}],[11,"unit_y","","A unit vector in the `y` direction.",8,{"inputs":[],"output":{"name":"vector3"}}],[11,"unit_z","","A unit vector in the `w` direction.",8,{"inputs":[],"output":{"name":"vector3"}}],[11,"cross","","Returns the cross product of the vector and `other`.",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"extend","","Create a `Vector4`, using the `x`, `y` and `z` values from this vector, and the provided `w`.",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"vector4"}}],[11,"truncate","","Create a `Vector2`, dropping the `z` value.",8,{"inputs":[{"name":"self"}],"output":{"name":"vector2"}}],[11,"unit_x","","A unit vector in the `x` direction.",9,{"inputs":[],"output":{"name":"vector4"}}],[11,"unit_y","","A unit vector in the `y` direction.",9,{"inputs":[],"output":{"name":"vector4"}}],[11,"unit_z","","A unit vector in the `z` direction.",9,{"inputs":[],"output":{"name":"vector4"}}],[11,"unit_w","","A unit vector in the `w` direction.",9,{"inputs":[],"output":{"name":"vector4"}}],[11,"truncate","","Create a `Vector3`, dropping the `w` value.",9,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"truncate_n","","Create a `Vector3`, dropping the nth element.",9,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"vector3"}}],[11,"dot","","",6,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":{"name":"s"}}],[11,"dot","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"s"}}],[11,"angle","","",7,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"rad"}}],[11,"dot","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"s"}}],[11,"angle","","",8,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"rad"}}],[11,"dot","","",9,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"s"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into","","",7,{"inputs":[{"name":"self"}],"output":{"name":"vector2"}}],[11,"from","","",7,{"inputs":[{"name":"vector2"}],"output":{"name":"self"}}],[11,"into","","",8,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"from","","",8,{"inputs":[{"name":"vector3"}],"output":{"name":"self"}}],[11,"into","","",9,{"inputs":[{"name":"self"}],"output":{"name":"vector4"}}],[11,"from","","",9,{"inputs":[{"name":"vector4"}],"output":{"name":"self"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"rad"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"deg"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":{"name":"bool"}}],[11,"from","","",10,{"inputs":[{"name":"rad"}],"output":{"name":"deg"}}],[11,"from","","",11,{"inputs":[{"name":"deg"}],"output":{"name":"rad"}}],[11,"zero","","",11,{"inputs":[],"output":{"name":"rad"}}],[11,"is_zero","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"sum","","",11,{"inputs":[{"name":"i"}],"output":{"name":"rad"}}],[11,"sum","","",11,{"inputs":[{"name":"i"}],"output":{"name":"rad"}}],[11,"full_turn","","",11,{"inputs":[],"output":{"name":"rad"}}],[11,"sin","","",11,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"cos","","",11,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"tan","","",11,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"sin_cos","","",11,null],[11,"asin","","",11,{"inputs":[{"name":"s"}],"output":{"name":"rad"}}],[11,"acos","","",11,{"inputs":[{"name":"s"}],"output":{"name":"rad"}}],[11,"atan","","",11,{"inputs":[{"name":"s"}],"output":{"name":"rad"}}],[11,"atan2","","",11,{"inputs":[{"name":"s"},{"name":"s"}],"output":{"name":"rad"}}],[11,"neg","","",11,{"inputs":[{"name":"self"}],"output":{"name":"rad"}}],[11,"add","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":{"name":"rad"}}],[11,"add","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":{"name":"rad"}}],[11,"sub","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":{"name":"rad"}}],[11,"sub","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":{"name":"rad"}}],[11,"div","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":{"name":"s"}}],[11,"div","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":{"name":"s"}}],[11,"rem","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":{"name":"rad"}}],[11,"rem","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":{"name":"rad"}}],[11,"add_assign","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":null}],[11,"sub_assign","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":null}],[11,"rem_assign","","",11,{"inputs":[{"name":"self"},{"name":"rad"}],"output":null}],[11,"mul","","",11,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"rad"}}],[11,"div","","",11,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"rad"}}],[11,"mul_assign","","",11,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div_assign","","",11,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"default_epsilon","","",11,null],[11,"default_max_relative","","",11,null],[11,"default_max_ulps","","",11,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",11,null],[11,"ulps_eq","","",11,null],[11,"rand","","",11,{"inputs":[{"name":"r"}],"output":{"name":"rad"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"zero","","",10,{"inputs":[],"output":{"name":"deg"}}],[11,"is_zero","","",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"sum","","",10,{"inputs":[{"name":"i"}],"output":{"name":"deg"}}],[11,"sum","","",10,{"inputs":[{"name":"i"}],"output":{"name":"deg"}}],[11,"full_turn","","",10,{"inputs":[],"output":{"name":"deg"}}],[11,"sin","","",10,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"cos","","",10,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"tan","","",10,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"sin_cos","","",10,null],[11,"asin","","",10,{"inputs":[{"name":"s"}],"output":{"name":"deg"}}],[11,"acos","","",10,{"inputs":[{"name":"s"}],"output":{"name":"deg"}}],[11,"atan","","",10,{"inputs":[{"name":"s"}],"output":{"name":"deg"}}],[11,"atan2","","",10,{"inputs":[{"name":"s"},{"name":"s"}],"output":{"name":"deg"}}],[11,"neg","","",10,{"inputs":[{"name":"self"}],"output":{"name":"deg"}}],[11,"add","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":{"name":"deg"}}],[11,"add","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":{"name":"deg"}}],[11,"sub","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":{"name":"deg"}}],[11,"sub","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":{"name":"deg"}}],[11,"div","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":{"name":"s"}}],[11,"div","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":{"name":"s"}}],[11,"rem","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":{"name":"deg"}}],[11,"rem","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":{"name":"deg"}}],[11,"add_assign","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":null}],[11,"sub_assign","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":null}],[11,"rem_assign","","",10,{"inputs":[{"name":"self"},{"name":"deg"}],"output":null}],[11,"mul","","",10,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"deg"}}],[11,"div","","",10,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"deg"}}],[11,"mul_assign","","",10,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div_assign","","",10,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"default_epsilon","","",10,null],[11,"default_max_relative","","",10,null],[11,"default_max_ulps","","",10,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",10,null],[11,"ulps_eq","","",10,null],[11,"rand","","",10,{"inputs":[{"name":"r"}],"output":{"name":"deg"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"euler"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"euler"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"euler"}],"output":{"name":"bool"}}],[11,"new","","Construct a set of euler angles.",12,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"euler"}}],[11,"from","","",12,{"inputs":[{"name":"quaternion"}],"output":{"generics":["rad"],"name":"euler"}}],[11,"default_epsilon","","",12,null],[11,"default_max_relative","","",12,null],[11,"default_max_ulps","","",12,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",12,null],[11,"ulps_eq","","",12,null],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"euler"}}],[11,"from","","",12,{"inputs":[{"generics":["intraxyz"],"name":"eulerangles"}],"output":{"name":"self"}}],[11,"into","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["intraxyz"],"name":"eulerangles"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"point1"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"point1"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"point1"}}],[11,"hash","","",13,null],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"point2"}}],[11,"hash","","",14,null],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"point3"}}],[11,"hash","","",15,null],[11,"new","","",13,{"inputs":[{"name":"s"}],"output":{"name":"point1"}}],[11,"new","","",14,{"inputs":[{"name":"s"},{"name":"s"}],"output":{"name":"point2"}}],[11,"new","","",15,{"inputs":[{"name":"s"},{"name":"s"},{"name":"s"}],"output":{"name":"point3"}}],[11,"from_homogeneous","","",15,{"inputs":[{"name":"vector4"}],"output":{"name":"point3"}}],[11,"to_homogeneous","","",15,{"inputs":[{"name":"self"}],"output":{"name":"vector4"}}],[11,"from_value","","",13,{"inputs":[{"name":"s"}],"output":{"name":"point1"}}],[11,"sum","","",13,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"product","","",13,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"cast","","Component-wise casting to another type",13,{"inputs":[{"name":"self"}],"output":{"name":"point1"}}],[11,"distance2","","",13,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"s"}}],[11,"origin","","",13,{"inputs":[],"output":{"name":"point1"}}],[11,"from_vec","","",13,{"inputs":[{"name":"vector1"}],"output":{"name":"point1"}}],[11,"to_vec","","",13,{"inputs":[{"name":"self"}],"output":{"name":"vector1"}}],[11,"dot","","",13,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":{"name":"s"}}],[11,"default_epsilon","","",13,null],[11,"default_max_relative","","",13,null],[11,"default_max_ulps","","",13,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",13,null],[11,"ulps_eq","","",13,null],[11,"add","","",13,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":{"name":"point1"}}],[11,"add","","",13,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":{"name":"point1"}}],[11,"add_assign","","",13,{"inputs":[{"name":"self"},{"name":"vector1"}],"output":null}],[11,"sub","","",13,{"inputs":[{"name":"self"},{"name":"point1"}],"output":{"name":"vector1"}}],[11,"sub","","",13,{"inputs":[{"name":"self"},{"name":"point1"}],"output":{"name":"vector1"}}],[11,"mul","","",13,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"point1"}}],[11,"div","","",13,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"point1"}}],[11,"rem","","",13,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"point1"}}],[11,"mul_assign","","",13,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div_assign","","",13,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"rem_assign","","",13,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"index","","",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"s"}}],[11,"index_mut","","",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"s"}}],[11,"index","","",13,null],[11,"index_mut","","",13,null],[11,"index","","",13,null],[11,"index_mut","","",13,null],[11,"index","","",13,null],[11,"index_mut","","",13,null],[11,"index","","",13,null],[11,"index_mut","","",13,null],[11,"from_value","","",14,{"inputs":[{"name":"s"}],"output":{"name":"point2"}}],[11,"sum","","",14,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"product","","",14,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"cast","","Component-wise casting to another type",14,{"inputs":[{"name":"self"}],"output":{"name":"point2"}}],[11,"distance2","","",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"s"}}],[11,"origin","","",14,{"inputs":[],"output":{"name":"point2"}}],[11,"from_vec","","",14,{"inputs":[{"name":"vector2"}],"output":{"name":"point2"}}],[11,"to_vec","","",14,{"inputs":[{"name":"self"}],"output":{"name":"vector2"}}],[11,"dot","","",14,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"s"}}],[11,"default_epsilon","","",14,null],[11,"default_max_relative","","",14,null],[11,"default_max_ulps","","",14,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",14,null],[11,"ulps_eq","","",14,null],[11,"add","","",14,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"point2"}}],[11,"add","","",14,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"point2"}}],[11,"add_assign","","",14,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":null}],[11,"sub","","",14,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"vector2"}}],[11,"sub","","",14,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"vector2"}}],[11,"mul","","",14,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"point2"}}],[11,"div","","",14,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"point2"}}],[11,"rem","","",14,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"point2"}}],[11,"mul_assign","","",14,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div_assign","","",14,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"rem_assign","","",14,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"index","","",14,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"s"}}],[11,"index_mut","","",14,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"s"}}],[11,"index","","",14,null],[11,"index_mut","","",14,null],[11,"index","","",14,null],[11,"index_mut","","",14,null],[11,"index","","",14,null],[11,"index_mut","","",14,null],[11,"index","","",14,null],[11,"index_mut","","",14,null],[11,"from_value","","",15,{"inputs":[{"name":"s"}],"output":{"name":"point3"}}],[11,"sum","","",15,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"product","","",15,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"cast","","Component-wise casting to another type",15,{"inputs":[{"name":"self"}],"output":{"name":"point3"}}],[11,"distance2","","",15,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"s"}}],[11,"origin","","",15,{"inputs":[],"output":{"name":"point3"}}],[11,"from_vec","","",15,{"inputs":[{"name":"vector3"}],"output":{"name":"point3"}}],[11,"to_vec","","",15,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"dot","","",15,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"s"}}],[11,"default_epsilon","","",15,null],[11,"default_max_relative","","",15,null],[11,"default_max_ulps","","",15,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",15,null],[11,"ulps_eq","","",15,null],[11,"add","","",15,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"point3"}}],[11,"add","","",15,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"point3"}}],[11,"add_assign","","",15,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":null}],[11,"sub","","",15,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"vector3"}}],[11,"sub","","",15,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"vector3"}}],[11,"mul","","",15,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"point3"}}],[11,"div","","",15,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"point3"}}],[11,"rem","","",15,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"point3"}}],[11,"mul_assign","","",15,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"div_assign","","",15,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"rem_assign","","",15,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"index","","",15,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"s"}}],[11,"index_mut","","",15,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"s"}}],[11,"index","","",15,null],[11,"index_mut","","",15,null],[11,"index","","",15,null],[11,"index_mut","","",15,null],[11,"index","","",15,null],[11,"index_mut","","",15,null],[11,"index","","",15,null],[11,"index_mut","","",15,null],[11,"into","","",13,null],[11,"as_ref","","",13,null],[11,"as_mut","","",13,null],[11,"from","","",13,null],[11,"into","","",14,null],[11,"as_ref","","",14,null],[11,"as_mut","","",14,null],[11,"from","","",14,null],[11,"into","","",15,null],[11,"as_ref","","",15,null],[11,"as_mut","","",15,null],[11,"from","","",15,null],[11,"into","","",13,null],[11,"as_ref","","",13,null],[11,"as_mut","","",13,null],[11,"from","","",13,null],[11,"into","","",14,null],[11,"as_ref","","",14,null],[11,"as_mut","","",14,null],[11,"from","","",14,null],[11,"into","","",15,null],[11,"as_ref","","",15,null],[11,"as_mut","","",15,null],[11,"from","","",15,null],[11,"into","","",14,{"inputs":[{"name":"self"}],"output":{"name":"point2"}}],[11,"from","","",14,{"inputs":[{"name":"point2"}],"output":{"name":"self"}}],[11,"into","","",15,{"inputs":[{"name":"self"}],"output":{"name":"point3"}}],[11,"from","","",15,{"inputs":[{"name":"point3"}],"output":{"name":"self"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"rotate_point","cgmath::prelude","Rotate a point using this rotation, by converting it to its representation as a vector.",29,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"p"}}],[11,"from_angle_x","","Create a rotation from an angle around the `x` axis (pitch).",31,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"from_angle_y","","Create a rotation from an angle around the `y` axis (yaw).",31,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"from_angle_z","","Create a rotation from an angle around the `z` axis (roll).",31,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"eq","cgmath","",34,{"inputs":[{"name":"self"},{"name":"basis2"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"self"},{"name":"basis2"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"basis2"}}],[11,"as_ref","","",34,{"inputs":[{"name":"self"}],"output":{"name":"matrix2"}}],[11,"from","","",2,{"inputs":[{"name":"basis2"}],"output":{"name":"matrix2"}}],[11,"product","","",34,{"inputs":[{"name":"i"}],"output":{"name":"basis2"}}],[11,"product","","",34,{"inputs":[{"name":"i"}],"output":{"name":"basis2"}}],[11,"look_at","","",34,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"basis2"}}],[11,"between_vectors","","",34,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"basis2"}}],[11,"rotate_vector","","",34,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"invert","","",34,{"inputs":[{"name":"self"}],"output":{"name":"basis2"}}],[11,"one","","",34,{"inputs":[],"output":{"name":"basis2"}}],[11,"mul","","",34,{"inputs":[{"name":"self"},{"name":"basis2"}],"output":{"name":"basis2"}}],[11,"mul","","",34,{"inputs":[{"name":"self"},{"name":"basis2"}],"output":{"name":"basis2"}}],[11,"default_epsilon","","",34,null],[11,"default_max_relative","","",34,null],[11,"default_max_ulps","","",34,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",34,null],[11,"ulps_eq","","",34,null],[11,"from_angle","","",34,{"inputs":[{"name":"a"}],"output":{"name":"basis2"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"basis3"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"basis3"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"basis3"}}],[11,"from_quaternion","","Create a new rotation matrix from a quaternion.",33,{"inputs":[{"name":"quaternion"}],"output":{"name":"basis3"}}],[11,"as_ref","","",33,{"inputs":[{"name":"self"}],"output":{"name":"matrix3"}}],[11,"from","","",3,{"inputs":[{"name":"basis3"}],"output":{"name":"matrix3"}}],[11,"from","","",5,{"inputs":[{"name":"basis3"}],"output":{"name":"quaternion"}}],[11,"product","","",33,{"inputs":[{"name":"i"}],"output":{"name":"basis3"}}],[11,"product","","",33,{"inputs":[{"name":"i"}],"output":{"name":"basis3"}}],[11,"look_at","","",33,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"basis3"}}],[11,"between_vectors","","",33,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"basis3"}}],[11,"rotate_vector","","",33,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"invert","","",33,{"inputs":[{"name":"self"}],"output":{"name":"basis3"}}],[11,"one","","",33,{"inputs":[],"output":{"name":"basis3"}}],[11,"mul","","",33,{"inputs":[{"name":"self"},{"name":"basis3"}],"output":{"name":"basis3"}}],[11,"mul","","",33,{"inputs":[{"name":"self"},{"name":"basis3"}],"output":{"name":"basis3"}}],[11,"default_epsilon","","",33,null],[11,"default_max_relative","","",33,null],[11,"default_max_ulps","","",33,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",33,null],[11,"ulps_eq","","",33,null],[11,"from_axis_angle","","",33,{"inputs":[{"name":"vector3"},{"name":"a"}],"output":{"name":"basis3"}}],[11,"from_angle_x","","",33,{"inputs":[{"name":"a"}],"output":{"name":"basis3"}}],[11,"from_angle_y","","",33,{"inputs":[{"name":"a"}],"output":{"name":"basis3"}}],[11,"from_angle_z","","",33,{"inputs":[{"name":"a"}],"output":{"name":"basis3"}}],[11,"from","","Create a three-dimensional rotation matrix from a set of euler angles.",33,{"inputs":[{"name":"euler"}],"output":{"name":"basis3"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",16,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",16,{"inputs":[{"name":"d"}],"output":{"generics":["decomposed"],"name":"result"}}],[11,"concat_self","cgmath::prelude","Combine this transform with another, in-place.",32,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"clone","cgmath","",16,{"inputs":[{"name":"self"}],"output":{"name":"decomposed"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"one","","",16,{"inputs":[],"output":{"name":"decomposed"}}],[11,"look_at","","",16,null],[11,"transform_vector","","",16,null],[11,"transform_point","","",16,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"p"}}],[11,"concat","","",16,{"inputs":[{"name":"self"},{"name":"decomposed"}],"output":{"name":"decomposed"}}],[11,"inverse_transform","","",16,{"inputs":[{"name":"self"}],"output":{"generics":["decomposed"],"name":"option"}}],[11,"from","","",3,{"inputs":[{"generics":["vector2"],"name":"decomposed"}],"output":{"name":"matrix3"}}],[11,"from","","",4,{"inputs":[{"generics":["vector3"],"name":"decomposed"}],"output":{"name":"matrix4"}}],[11,"default_epsilon","","",16,{"inputs":[],"output":{"name":"e"}}],[11,"default_max_relative","","",16,{"inputs":[],"output":{"name":"e"}}],[11,"default_max_ulps","","",16,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",16,{"inputs":[{"name":"self"},{"name":"self"},{"name":"e"},{"name":"e"}],"output":{"name":"bool"}}],[11,"ulps_eq","","",16,{"inputs":[{"name":"self"},{"name":"self"},{"name":"e"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"perspectivefov"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"perspectivefov"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"perspectivefov"}],"output":{"name":"bool"}}],[11,"to_perspective","","",17,{"inputs":[{"name":"self"}],"output":{"name":"perspective"}}],[11,"from","","",4,{"inputs":[{"name":"perspectivefov"}],"output":{"name":"matrix4"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"perspective"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"perspective"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"perspective"}],"output":{"name":"bool"}}],[11,"from","","",4,{"inputs":[{"name":"perspective"}],"output":{"name":"matrix4"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"ortho"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"ortho"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"self"},{"name":"ortho"}],"output":{"name":"bool"}}],[11,"from","","",4,{"inputs":[{"name":"ortho"}],"output":{"name":"matrix4"}}],[8,"BaseNum","","Base numeric types with partial ordering",null,null],[8,"BaseFloat","","Base floating point types",null,null],[8,"Array","","An array containing elements of type `Element`",null,null],[16,"Element","","",20,null],[10,"from_value","","Construct a vector from a single value, replicating it.",20,null],[11,"as_ptr","cgmath::prelude","Get the pointer to the first element of the array.",20,null],[11,"as_mut_ptr","","Get a mutable pointer to the first element of the array.",20,null],[11,"swap_elements","","Swap the elements at indices `i` and `j` in-place.",20,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[10,"sum","cgmath","The sum of the elements of the array.",20,null],[10,"product","","The product of the elements of the array.",20,null],[8,"ElementWise","","Element-wise arithmetic operations. These are supplied for pragmatic reasons, but will usually fall outside of traditional algebraic properties.",null,null],[10,"add_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":{"name":"self"}}],[10,"sub_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":{"name":"self"}}],[10,"mul_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":{"name":"self"}}],[10,"div_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":{"name":"self"}}],[10,"rem_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":{"name":"self"}}],[10,"add_assign_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":null}],[10,"sub_assign_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":null}],[10,"mul_assign_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":null}],[10,"div_assign_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":null}],[10,"rem_assign_element_wise","","",21,{"inputs":[{"name":"self"},{"name":"rhs"}],"output":null}],[8,"VectorSpace","","Vectors that can be added together and multiplied by scalars.",null,null],[16,"Scalar","","The associated scalar.",22,null],[8,"MetricSpace","","A type with a distance function between values.",null,null],[16,"Metric","","The metric to be returned by the `distance` function.",23,null],[10,"distance2","","Returns the squared distance.",23,null],[11,"distance","cgmath::prelude","The distance between two values.",23,null],[8,"InnerSpace","cgmath","Vectors that also have a dot (or inner) product.",null,null],[10,"dot","","Vector dot (or inner) product.",24,null],[11,"is_perpendicular","cgmath::prelude","Returns `true` if the vector is perpendicular (at right angles) to the other vector.",24,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"magnitude2","","Returns the squared magnitude.",24,null],[11,"magnitude","","The distance from the tail to the tip of the vector.",24,null],[11,"angle","","Returns the angle between two vectors in radians.",24,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"rad"}}],[11,"normalize","","Returns a vector with the same direction, but with a magnitude of `1`.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"normalize_to","","Returns a vector with the same direction and a given magnitude.",24,null],[11,"lerp","","Returns the result of linearly interpolating the magnitude of the vector towards the magnitude of `other` by the specified amount.",24,null],[8,"EuclideanSpace","cgmath","Points in a Euclidean space with an associated space of displacement vectors.",null,null],[16,"Scalar","","The associated scalar over which the space is defined.",25,null],[16,"Diff","","The associated space of displacement vectors.",25,null],[10,"origin","","The point at the origin of the Euclidean space.",25,{"inputs":[],"output":{"name":"self"}}],[10,"from_vec","","Convert a displacement vector to a point.",25,null],[10,"to_vec","","Convert a point to a displacement vector.",25,null],[11,"midpoint","cgmath::prelude","Returns the middle point between two other points.",25,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"centroid","","Returns the average position of all points in the slice.",25,null],[10,"dot","cgmath","This is a weird one, but its useful for plane calculations.",25,null],[8,"Matrix","","A column-major matrix of arbitrary dimensions.",null,null],[16,"Row","","The row vector of the matrix.",26,null],[16,"Column","","The column vector of the matrix.",26,null],[16,"Transpose","","The result of transposing the matrix",26,null],[11,"as_ptr","cgmath::prelude","Get the pointer to the first element of the array.",26,null],[11,"as_mut_ptr","","Get a mutable pointer to the first element of the array.",26,null],[11,"replace_col","","Replace a column in the array.",26,null],[10,"row","cgmath","Get a row from this matrix by-value.",26,null],[10,"swap_rows","","Swap two rows of this array.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[10,"swap_columns","","Swap two columns of this array.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[10,"swap_elements","","Swap the values at index `a` and `b`",26,null],[10,"transpose","","Transpose this matrix, returning a new matrix.",26,null],[8,"SquareMatrix","","A column-major major matrix where the rows and column vectors are of the same dimensions.",null,null],[16,"ColumnRow","","The row/column vector of the matrix.",27,null],[10,"from_value","","Create a new diagonal matrix using the supplied value.",27,null],[10,"from_diagonal","","Create a matrix from a non-uniform scale",27,null],[11,"identity","cgmath::prelude","The [identity matrix]. Multiplying this matrix with another should have no effect.",27,{"inputs":[],"output":{"name":"self"}}],[10,"transpose_self","cgmath","Transpose this matrix in-place.",27,{"inputs":[{"name":"self"}],"output":null}],[10,"determinant","","Take the determinant of this matrix.",27,null],[10,"diagonal","","Return a vector containing the diagonal of this matrix.",27,null],[11,"trace","cgmath::prelude","Return the trace of this matrix. That is, the sum of the diagonal.",27,null],[10,"invert","cgmath","Invert this matrix, returning a new matrix. `m.mul_m(m.invert())` is the identity matrix. Returns `None` if this matrix is not invertible (has a determinant of zero).",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_invertible","cgmath::prelude","Test if this matrix is invertible.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_identity","","Test if this matrix is the identity matrix. That is, it is diagonal and every element in the diagonal is one.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_diagonal","cgmath","Test if this is a diagonal matrix. That is, every element outside of the diagonal is 0.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_symmetric","","Test if this matrix is symmetric. That is, it is equal to its transpose.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Angle","","Angles and their associated trigonometric functions.",null,null],[16,"Unitless","","",28,null],[11,"normalize","cgmath::prelude","Return the angle, normalized to the range `[0, full_turn)`.",28,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"opposite","","Return the angle rotated by half a turn.",28,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"bisect","","Returns the interior bisector of the two angles.",28,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"full_turn","cgmath","A full rotation.",28,{"inputs":[],"output":{"name":"self"}}],[11,"turn_div_2","cgmath::prelude","Half of a full rotation.",28,{"inputs":[],"output":{"name":"self"}}],[11,"turn_div_3","","A third of a full rotation.",28,{"inputs":[],"output":{"name":"self"}}],[11,"turn_div_4","","A quarter of a full rotation.",28,{"inputs":[],"output":{"name":"self"}}],[11,"turn_div_6","","A sixth of a full rotation.",28,{"inputs":[],"output":{"name":"self"}}],[10,"sin","cgmath","Compute the sine of the angle, returning a unitless ratio.",28,null],[10,"cos","","Compute the cosine of the angle, returning a unitless ratio.",28,null],[10,"tan","","Compute the tangent of the angle, returning a unitless ratio.",28,null],[10,"sin_cos","","Compute the sine and cosine of the angle, returning the result as a pair.",28,null],[11,"csc","cgmath::prelude","Compute the cosecant of the angle.",28,null],[11,"cot","","Compute the cotangent of the angle.",28,null],[11,"sec","","Compute the secant of the angle.",28,null],[10,"asin","cgmath","Compute the arcsine of the ratio, returning the resulting angle.",28,null],[10,"acos","","Compute the arccosine of the ratio, returning the resulting angle.",28,null],[10,"atan","","Compute the arctangent of the ratio, returning the resulting angle.",28,null],[10,"atan2","","",28,null],[8,"Rotation","","A trait for a generic rotation. A rotation is a transformation that creates a circular motion, and preserves at least one point in the space.",null,null],[10,"look_at","","Create a rotation to a given direction with an 'up' vector.",29,null],[10,"between_vectors","","Create a shortest rotation to transform vector 'a' into 'b'. Both given vectors are assumed to have unit length.",29,null],[10,"rotate_vector","","Rotate a vector using this rotation.",29,null],[11,"rotate_point","cgmath::prelude","Rotate a point using this rotation, by converting it to its representation as a vector.",29,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"p"}}],[10,"invert","cgmath","Create a new rotation which \"un-does\" this rotation. That is, `r * r.invert()` is the identity.",29,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[8,"Rotation2","","A two-dimensional rotation.",null,null],[10,"from_angle","","Create a rotation by a given angle. Thus is a redundant case of both from_axis_angle() and from_euler() for 2D space.",30,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[8,"Rotation3","","A three-dimensional rotation.",null,null],[10,"from_axis_angle","","Create a rotation using an angle around a given axis.",31,{"inputs":[{"name":"vector3"},{"name":"a"}],"output":{"name":"self"}}],[11,"from_angle_x","cgmath::prelude","Create a rotation from an angle around the `x` axis (pitch).",31,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"from_angle_y","","Create a rotation from an angle around the `y` axis (yaw).",31,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"from_angle_z","","Create a rotation from an angle around the `z` axis (roll).",31,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[8,"Transform","cgmath","A trait representing an affine transformation that can be applied to points or vectors. An affine transformation is one which",null,null],[10,"one","","Create an identity transformation. That is, a transformation which does nothing.",32,{"inputs":[],"output":{"name":"self"}}],[10,"look_at","","Create a transformation that rotates a vector to look at `center` from `eye`, using `up` for orientation.",32,null],[10,"transform_vector","","Transform a vector using this transform.",32,null],[10,"transform_point","","Transform a point using this transform.",32,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"p"}}],[10,"concat","","Combine this transform with another, yielding a new transformation which has the effects of both.",32,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"inverse_transform","","Create a transform that \"un-does\" this one.",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"concat_self","cgmath::prelude","Combine this transform with another, in-place.",32,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[8,"Transform2","cgmath","",null,null],[8,"Transform3","","",null,null],[14,"ulps_ne","","Predicate for testing the approximate inequality of two values using a maximum ULPs (Units in Last Place).",null,null],[14,"assert_relative_eq","","",null,null],[14,"ulps_eq","","Predicate for testing the approximate equality of two values using a maximum ULPs (Units in Last Place).",null,null],[14,"assert_relative_ne","","",null,null],[14,"assert_ulps_ne","","",null,null],[14,"relative_eq","","Predicate for testing the approximate equality of two values.",null,null],[14,"assert_ulps_eq","","",null,null],[14,"relative_ne","","Predicate for testing the approximate inequality of two values.",null,null]],"paths":[[8,"One"],[8,"Zero"],[3,"Matrix2"],[3,"Matrix3"],[3,"Matrix4"],[3,"Quaternion"],[3,"Vector1"],[3,"Vector2"],[3,"Vector3"],[3,"Vector4"],[3,"Deg"],[3,"Rad"],[3,"Euler"],[3,"Point1"],[3,"Point2"],[3,"Point3"],[3,"Decomposed"],[3,"PerspectiveFov"],[3,"Perspective"],[3,"Ortho"],[8,"Array"],[8,"ElementWise"],[8,"VectorSpace"],[8,"MetricSpace"],[8,"InnerSpace"],[8,"EuclideanSpace"],[8,"Matrix"],[8,"SquareMatrix"],[8,"Angle"],[8,"Rotation"],[8,"Rotation2"],[8,"Rotation3"],[8,"Transform"],[3,"Basis3"],[3,"Basis2"]]};
searchIndex["chaser"] = {"doc":"","items":[],"paths":[]};
searchIndex["claxon"] = {"doc":"Claxon, a FLAC decoding library.","items":[[3,"FlacReader","claxon","A FLAC decoder that can decode the stream from the underlying reader.",null,null],[3,"FlacSamples","","An iterator that yields samples read from a `FlacReader`.",null,null],[4,"Error","","An error that prevents succesful decoding of the FLAC stream.",null,null],[13,"IoError","","Not a decoding error, but a problem with the underlying IO.",0,null],[13,"FormatError","","An ill-formed FLAC stream was encountered.",0,null],[13,"TooWide","","The audio stream has more bits per sample than the provided sample buffer to decode into.",0,null],[13,"Unsupported","","A currently unsupported feature of the FLAC format was encountered.",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[0,"frame","","The `frame` module deals with the frames that make up a FLAC stream.",null,null],[3,"Block","claxon::frame","A block of raw audio samples.",null,null],[3,"StereoSamples","","An iterator over the stereo sample pairs in a block.",null,null],[3,"FrameReader","","Reads frames from a stream and exposes decoded blocks as an iterator.",null,null],[6,"FrameResult","","Either a `Block` or an `Error`.",null,null],[11,"empty","","Returns a block with 0 channels and 0 samples.",1,{"inputs":[],"output":{"name":"block"}}],[11,"time","","Returns the sample number of the first sample in the block.",1,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"len","","Returns the total number of samples in this block.",1,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"duration","","Returns the number of inter-channel samples in the block.",1,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"channels","","Returns the number of channels in the block.",1,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"channel","","Returns the (zero-based) `ch`-th channel as a slice.",1,null],[11,"sample","","Returns a sample in this block.",1,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"i32"}}],[11,"into_buffer","","Returns the underlying buffer that stores the samples in this block.",1,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"vec"}}],[11,"stereo_samples","","Returns an iterator that produces left and right channel samples.",1,{"inputs":[{"name":"self"}],"output":{"name":"stereosamples"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","Creates a new frame reader that will yield at least one element.",3,{"inputs":[{"name":"r"}],"output":{"name":"framereader"}}],[11,"read_next_or_eof","","Decodes the next frame or returns an error if the data was invalid.",3,{"inputs":[{"name":"self"},{"generics":["i32"],"name":"vec"}],"output":{"name":"frameresult"}}],[0,"subframe","claxon","The `subframe` module deals with subframes that make up a frame of the FLAC stream.",null,null],[5,"extend_sign_u32","claxon::subframe","Given a signed two's complement integer in the `bits` least significant bits of `val`, extends the sign bit to a valid 32-bit signed integer.",null,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"i32"}}],[5,"decode","","Decodes a subframe into the provided block-size buffer.",null,null],[0,"metadata","claxon","The `metadata` module deals with metadata at the beginning of a FLAC stream.",null,null],[3,"StreamInfo","claxon::metadata","The streaminfo metadata block, with important information about the stream.",null,null],[12,"min_block_size","","The minimum block size (in samples) used in the stream.",4,null],[12,"max_block_size","","The maximum block size (in samples) used in the stream.",4,null],[12,"min_frame_size","","The minimum frame size (in bytes) used in the stream.",4,null],[12,"max_frame_size","","The maximum frame size (in bytes) used in the stream.",4,null],[12,"sample_rate","","The sample rate in Hz.",4,null],[12,"channels","","The number of channels.",4,null],[12,"bits_per_sample","","The number of bits per sample.",4,null],[12,"samples","","The total number of inter-channel samples in the stream.",4,null],[12,"md5sum","","MD5 signature of the unencoded audio data.",4,null],[3,"SeekPoint","","A seek point in the seek table.",null,null],[12,"sample","","Sample number of the first sample in the target frame, or 2^64 - 1 for a placeholder.",5,null],[12,"offset","","Offset in bytes from the first byte of the first frame header to the first byte of the target frame's header.",5,null],[12,"samples","","Number of samples in the target frame.",5,null],[3,"SeekTable","","A seek table to aid seeking in the stream.",null,null],[3,"MetadataBlockReader","","Reads metadata blocks from a stream and exposes them as an iterator.",null,null],[4,"MetadataBlock","","A metadata about the flac stream.",null,null],[13,"StreamInfo","","A stream info block.",6,null],[13,"Padding","","A padding block (with no meaningful data).",6,null],[12,"length","claxon::metadata::MetadataBlock","The number of padding bytes.",6,null],[13,"Application","claxon::metadata","An application block with application-specific data.",6,null],[12,"id","claxon::metadata::MetadataBlock","The registered application ID.",6,null],[12,"data","","The contents of the application block.",6,null],[13,"SeekTable","claxon::metadata","A seek table block.",6,null],[13,"VorbisComment","","A Vorbis comment block, also known as FLAC tags.",6,null],[13,"CueSheet","","A CUE sheet block.",6,null],[13,"Picture","","A picture block.",6,null],[13,"Reserved","","A block with a reserved block type, not supported by this library.",6,null],[6,"MetadataBlockResult","","Either a `MetadataBlock` or an `Error`.",null,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"streaminfo"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"seekpoint"}}],[11,"new","","Creates a metadata block reader that will yield at least one element.",7,{"inputs":[{"name":"r"}],"output":{"name":"metadatablockreader"}}],[11,"next","","",7,{"inputs":[{"name":"self"}],"output":{"generics":["metadatablockresult"],"name":"option"}}],[11,"size_hint","","",7,null],[6,"Result","claxon","A type for results generated by Claxon where the error type is hard-wired.",null,null],[11,"new","","Attempts to create a reader that reads the FLAC format.",8,{"inputs":[{"name":"r"}],"output":{"generics":["flacreader"],"name":"result"}}],[11,"streaminfo","","Returns the streaminfo metadata.",8,{"inputs":[{"name":"self"}],"output":{"name":"streaminfo"}}],[11,"blocks","","Returns an iterator that decodes a single frame on every iteration. TODO: It is not an iterator.",8,{"inputs":[{"name":"self"}],"output":{"generics":["bufferedreader"],"name":"framereader"}}],[11,"samples","","Returns an iterator over all samples.",8,{"inputs":[{"name":"self"}],"output":{"generics":["bufferedreader"],"name":"flacsamples"}}],[11,"into_inner","","Destroys the FLAC reader and returns the underlying reader.",8,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"open","","Attempts to create a reader that reads from the specified file.",8,{"inputs":[{"name":"p"}],"output":{"generics":["flacreader"],"name":"result"}}],[11,"next","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}]],"paths":[[4,"Error"],[3,"Block"],[3,"StereoSamples"],[3,"FrameReader"],[3,"StreamInfo"],[3,"SeekPoint"],[4,"MetadataBlock"],[3,"MetadataBlockReader"],[3,"FlacReader"],[3,"FlacSamples"]]};
searchIndex["clipboard"] = {"doc":"","items":[[0,"x11_clipboard","clipboard","",null,null],[3,"Primary","clipboard::x11_clipboard","",null,null],[3,"Clipboard","","",null,null],[3,"X11ClipboardContext","","",null,null],[8,"Selection","","",null,null],[10,"atom","","",0,{"inputs":[{"name":"atoms"}],"output":{"name":"atom"}}],[11,"atom","","",1,{"inputs":[{"name":"atoms"}],"output":{"name":"atom"}}],[11,"atom","","",2,{"inputs":[{"name":"atoms"}],"output":{"name":"atom"}}],[11,"new","","",3,{"inputs":[],"output":{"generics":["x11clipboardcontext","box"],"name":"result"}}],[11,"get_contents","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["string","box"],"name":"result"}}],[11,"set_contents","","",3,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["box"],"name":"result"}}],[0,"nop_clipboard","clipboard","",null,null],[3,"NopClipboardContext","clipboard::nop_clipboard","",null,null],[11,"new","","",4,{"inputs":[],"output":{"generics":["nopclipboardcontext","box"],"name":"result"}}],[11,"get_contents","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["string","box"],"name":"result"}}],[11,"set_contents","","",4,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["box"],"name":"result"}}],[6,"ClipboardContext","clipboard","",null,null],[8,"ClipboardProvider","","Trait for clipboard access",null,null],[10,"new","","Create a context with which to access the clipboard",5,{"inputs":[],"output":{"generics":["box"],"name":"result"}}],[10,"get_contents","","Method to get the clipboard contents as a String",5,{"inputs":[{"name":"self"}],"output":{"generics":["string","box"],"name":"result"}}],[10,"set_contents","","Method to set the clipboard contents as a String",5,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["box"],"name":"result"}}]],"paths":[[8,"Selection"],[3,"Primary"],[3,"Clipboard"],[3,"X11ClipboardContext"],[3,"NopClipboardContext"],[8,"ClipboardProvider"]]};
searchIndex["coco"] = {"doc":"Concurrent collections.","items":[[0,"deque","coco","A lock-free work-stealing deque.",null,null],[3,"Worker","coco::deque","Worker side of a work-stealing deque.",null,null],[3,"Stealer","","Stealer side of a work-stealing deque.",null,null],[5,"new","","Returns a new work-stealing deque.",null,null],[11,"len","","Returns the number of elements in the deque.",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"push","","Pushes an element onto the bottom of the deque.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"pop","","Pops an element from the bottom of the deque.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"steal","","Steals an element from the top of the deque.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"len","","Returns the number of elements in the deque.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"steal","","Steals an element from the top of the deque.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"epoch","coco","Epoch-based garbage collection.",null,null],[3,"Atomic","coco::epoch","A tagged atomic nullable pointer.",null,null],[3,"Ptr","","A tagged nullable pointer.",null,null],[3,"Garbage","","A garbage queue.",null,null],[3,"Pin","","A witness that the current thread is pinned.",null,null],[5,"defer_free","","Stashes away an object that will later be freed.",null,null],[5,"flush","","Flushes the buffered thread-local garbage.",null,{"inputs":[{"name":"pin"}],"output":null}],[5,"is_pinned","","Returns `true` if the current thread is pinned.",null,{"inputs":[],"output":{"name":"bool"}}],[5,"pin","","Pins the current thread.",null,{"inputs":[{"name":"f"}],"output":{"name":"t"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"null","","Returns a new, null atomic pointer tagged with `tag`.",2,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"new","","Allocates `data` on the heap and returns a new atomic pointer that points to it and is tagged with `tag`.",2,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"self"}}],[11,"from_ptr","","Returns a new atomic pointer initialized with `ptr`.",2,{"inputs":[{"name":"ptr"}],"output":{"name":"self"}}],[11,"from_box","","Returns a new atomic pointer initialized with `b` and `tag`.",2,{"inputs":[{"name":"box"},{"name":"usize"}],"output":{"name":"self"}}],[11,"from_raw","","Returns a new atomic pointer initialized with `raw` and `tag`.",2,null],[11,"load","","Loads the tagged atomic pointer.",2,{"inputs":[{"name":"self"},{"name":"pin"}],"output":{"name":"ptr"}}],[11,"load_raw","","Loads the tagged atomic pointer as a raw pointer and a tag.",2,null],[11,"store","","Stores `new` tagged with `tag` into the atomic.",2,{"inputs":[{"name":"self"},{"name":"ptr"}],"output":null}],[11,"store_box","","Stores `new` tagged with `tag` into the atomic and returns it.",2,{"inputs":[{"name":"self"},{"name":"box"},{"name":"usize"},{"name":"pin"}],"output":{"name":"ptr"}}],[11,"store_raw","","Stores `new` tagged with `tag` into the atomic.",2,null],[11,"swap","","Stores `new` into the atomic, returning the old tagged pointer.",2,{"inputs":[{"name":"self"},{"name":"ptr"}],"output":{"name":"ptr"}}],[11,"swap_box","","Stores `new` tagged with `tag` into the atomic, returning the old tagged pointer.",2,{"inputs":[{"name":"self"},{"name":"box"},{"name":"usize"},{"name":"pin"}],"output":{"name":"ptr"}}],[11,"swap_raw","","Stores `new` tagged with `tag` into the atomic, returning the old tagged pointer.",2,null],[11,"cas","","If the tagged atomic pointer is equal to `current`, stores `new`.",2,{"inputs":[{"name":"self"},{"name":"ptr"},{"name":"ptr"}],"output":{"generics":["ptr"],"name":"result"}}],[11,"cas_sc","","If the tagged atomic pointer is equal to `current`, stores `new`.",2,{"inputs":[{"name":"self"},{"name":"ptr"},{"name":"ptr"}],"output":{"generics":["ptr"],"name":"result"}}],[11,"cas_weak","","If the tagged atomic pointer is equal to `current`, stores `new`.",2,{"inputs":[{"name":"self"},{"name":"ptr"},{"name":"ptr"}],"output":{"generics":["ptr"],"name":"result"}}],[11,"cas_weak_sc","","If the tagged atomic pointer is equal to `current`, stores `new`.",2,{"inputs":[{"name":"self"},{"name":"ptr"},{"name":"ptr"}],"output":{"generics":["ptr"],"name":"result"}}],[11,"cas_box","","If the tagged atomic pointer is equal to `current`, stores `new` tagged with `tag`.",2,{"inputs":[{"name":"self"},{"name":"ptr"},{"name":"box"},{"name":"usize"}],"output":{"generics":["ptr"],"name":"result"}}],[11,"cas_box_sc","","If the tagged atomic pointer is equal to `current`, stores `new` tagged with `tag`.",2,{"inputs":[{"name":"self"},{"name":"ptr"},{"name":"box"},{"name":"usize"}],"output":{"generics":["ptr"],"name":"result"}}],[11,"cas_box_weak","","If the tagged atomic pointer is equal to `current`, stores `new` tagged with `tag`.",2,{"inputs":[{"name":"self"},{"name":"ptr"},{"name":"box"},{"name":"usize"}],"output":{"generics":["ptr"],"name":"result"}}],[11,"cas_box_weak_sc","","If the tagged atomic pointer is equal to `current`, stores `new` tagged with `tag`.",2,{"inputs":[{"name":"self"},{"name":"ptr"},{"name":"box"},{"name":"usize"}],"output":{"generics":["ptr"],"name":"result"}}],[11,"cas_raw","","If the tagged atomic pointer is equal to `current`, stores `new`.",2,null],[11,"cas_raw_weak","","If the tagged atomic pointer is equal to `current`, stores `new`.",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"null","","Returns a null pointer with a tag.",3,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from_raw","","Constructs a tagged pointer from a raw pointer and tag.",3,null],[11,"is_null","","Returns `true` if the pointer is null.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts the pointer to a reference.",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_raw","","Converts the pointer to a raw pointer.",3,null],[11,"unwrap","","Returns a reference to the pointing object.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"tag","","Returns the tag.",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_tag","","Constructs a new tagged pointer with a different tag.",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Returns a new, empty garbage queue.",4,{"inputs":[],"output":{"name":"self"}}],[11,"defer_free","","Adds an object that will later be freed.",4,null],[11,"defer_drop","","Adds an object that will later be dropped and freed.",4,null],[11,"defer_destroy","","Adds an object that will later be destroyed using `destroy`.",4,null],[11,"flush","","Flushes the buffered garbage.",4,{"inputs":[{"name":"self"},{"name":"pin"}],"output":null}],[11,"collect","","Collects some garbage from the queue and destroys it.",4,{"inputs":[{"name":"self"},{"name":"pin"}],"output":null}],[11,"drop","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"stack","coco","A lock-free stack.",null,null],[3,"Stack","coco::stack","A lock-free stack.",null,null],[11,"new","","Returns a new, empty stack.",6,{"inputs":[],"output":{"name":"self"}}],[11,"is_empty","","Returns `true` if the stack is empty.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Pushes a new value onto the stack.",6,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"pop","","Attemps to pop an value from the stack.",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"drop","","",6,{"inputs":[{"name":"self"}],"output":null}]],"paths":[[3,"Worker"],[3,"Stealer"],[3,"Atomic"],[3,"Ptr"],[3,"Garbage"],[3,"Pin"],[3,"Stack"]]};
searchIndex["cpal"] = {"doc":"How to use cpal","items":[[3,"EndpointsIterator","cpal","An iterator for the list of formats that are supported by the backend.",null,null],[3,"Endpoint","","An opaque type that identifies an end point.",null,null],[3,"SamplesRate","","",null,null],[12,"0","","",0,null],[3,"Format","","Describes a format.",null,null],[12,"channels","","",1,null],[12,"samples_rate","","",1,null],[12,"data_type","","",1,null],[3,"SupportedFormatsIterator","","An iterator that produces a list of formats supported by the endpoint.",null,null],[3,"EventLoop","","",null,null],[3,"Buffer","","Represents a buffer that must be filled with audio data.",null,null],[3,"Voice","","Controls a sound output. A typical application has one `Voice` for each sound it wants to output.",null,null],[3,"SamplesStream","","",null,null],[4,"SampleFormat","","Format that each sample has.",null,null],[13,"I16","","The value 0 corresponds to 0.",2,null],[13,"U16","","The value 0 corresponds to 32768.",2,null],[13,"F32","","The boundaries are (-1.0, 1.0).",2,null],[4,"ChannelPosition","","Possible position of a channel.",null,null],[13,"FrontLeft","","",3,null],[13,"FrontRight","","",3,null],[13,"FrontCenter","","",3,null],[13,"LowFrequency","","",3,null],[13,"BackLeft","","",3,null],[13,"BackRight","","",3,null],[13,"FrontLeftOfCenter","","",3,null],[13,"FrontRightOfCenter","","",3,null],[13,"BackCenter","","",3,null],[13,"SideLeft","","",3,null],[13,"SideRight","","",3,null],[13,"TopCenter","","",3,null],[13,"TopFrontLeft","","",3,null],[13,"TopFrontCenter","","",3,null],[13,"TopFrontRight","","",3,null],[13,"TopBackLeft","","",3,null],[13,"TopBackCenter","","",3,null],[13,"TopBackRight","","",3,null],[4,"UnknownTypeBuffer","","This is the struct that is provided to you by cpal when you want to write samples to a buffer.",null,null],[13,"U16","","Samples whose format is `u16`.",4,null],[13,"I16","","Samples whose format is `i16`.",4,null],[13,"F32","","Samples whose format is `f32`.",4,null],[4,"FormatsEnumerationError","","Error that can happen when enumerating the list of supported formats.",null,null],[13,"DeviceNotAvailable","","The device no longer exists. This can happen if the device is disconnected while the program is running.",5,null],[4,"CreationError","","Error that can happen when creating a `Voice`.",null,null],[13,"DeviceNotAvailable","","The device no longer exists. This can happen if the device is disconnected while the program is running.",6,null],[13,"FormatNotSupported","","The required format is not supported.",6,null],[5,"endpoints","","Return an iterator to the list of formats that are supported by the system.",null,{"inputs":[],"output":{"name":"endpointsiterator"}}],[5,"get_endpoints_list","","Deprecated. Use `endpoints()` instead.",null,{"inputs":[],"output":{"name":"endpointsiterator"}}],[5,"default_endpoint","","Return the default endpoint, or `None` if no device is available.",null,{"inputs":[],"output":{"generics":["endpoint"],"name":"option"}}],[5,"get_default_endpoint","","Deprecated. Use `default_endpoint()` instead.",null,{"inputs":[],"output":{"generics":["endpoint"],"name":"option"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"sampleformat"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"sampleformat"}],"output":{"name":"bool"}}],[11,"sample_size","","Returns the size in bytes of a sample of this format.",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get_sample_size","","Deprecated. Use `sample_size` instead.",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[6,"ChannelsCount","","Number of channels.",null,null],[8,"Sample","","Trait for containers that contain PCM data.",null,null],[10,"get_format","","Returns the `SampleFormat` corresponding to this data type.",7,{"inputs":[],"output":{"name":"sampleformat"}}],[11,"next","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["endpoint"],"name":"option"}}],[11,"size_hint","","",8,null],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"endpoint"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"endpoint"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"endpoint"}],"output":{"name":"bool"}}],[11,"supported_formats","","Returns an iterator that produces the list of formats that are supported by the backend.",9,{"inputs":[{"name":"self"}],"output":{"generics":["supportedformatsiterator","formatsenumerationerror"],"name":"result"}}],[11,"get_supported_formats_list","","Deprecated. Use `supported_formats` instead.",9,{"inputs":[{"name":"self"}],"output":{"generics":["supportedformatsiterator","formatsenumerationerror"],"name":"result"}}],[11,"name","","Returns the name of the endpoint.",9,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","Deprecated. Use `name()` instead.",9,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"channelposition"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"channelposition"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"samplesrate"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"samplesrate"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"samplesrate"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"samplesrate"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"samplesrate"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"samplesrate"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"samplesrate"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"samplesrate"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"samplesrate"}],"output":{"name":"ordering"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"format"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"next","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["format"],"name":"option"}}],[11,"size_hint","","",10,null],[11,"new","","",11,{"inputs":[],"output":{"name":"eventloop"}}],[11,"run","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"len","","Returns the length of the buffer in number of samples.",4,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"description","","",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"description","","",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"new","","Builds a new channel.",12,{"inputs":[{"name":"endpoint"},{"name":"format"},{"name":"eventloop"}],"output":{"generics":["creationerror"],"name":"result"}}],[11,"format","","Returns the format used by the voice.",12,{"inputs":[{"name":"self"}],"output":{"name":"format"}}],[11,"get_channels","","DEPRECATED: use `format` instead. Returns the number of channels.",12,{"inputs":[{"name":"self"}],"output":{"name":"channelscount"}}],[11,"get_samples_rate","","DEPRECATED: use `format` instead. Returns the number of samples that are played per second.",12,{"inputs":[{"name":"self"}],"output":{"name":"samplesrate"}}],[11,"get_samples_format","","DEPRECATED: use `format` instead. Returns the format of the samples that are accepted by the backend.",12,{"inputs":[{"name":"self"}],"output":{"name":"sampleformat"}}],[11,"play","","Sends a command to the audio device that it should start playing.",12,{"inputs":[{"name":"self"}],"output":null}],[11,"pause","","Sends a command to the audio device that it should stop playing.",12,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",13,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"deref","","",14,null],[11,"deref_mut","","",14,null],[11,"drop","","",14,{"inputs":[{"name":"self"}],"output":null}]],"paths":[[3,"SamplesRate"],[3,"Format"],[4,"SampleFormat"],[4,"ChannelPosition"],[4,"UnknownTypeBuffer"],[4,"FormatsEnumerationError"],[4,"CreationError"],[8,"Sample"],[3,"EndpointsIterator"],[3,"Endpoint"],[3,"SupportedFormatsIterator"],[3,"EventLoop"],[3,"Voice"],[3,"SamplesStream"],[3,"Buffer"]]};
searchIndex["crossbeam"] = {"doc":"Support for concurrent and parallel programming.","items":[[3,"Scope","crossbeam","",null,null],[3,"ScopedJoinHandle","","A handle to a scoped thread",null,null],[3,"CachePadded","","Pad `T` to the length of a cacheline.",null,null],[5,"scope","","Create a new `scope`, for deferred destructors.",null,{"inputs":[{"name":"f"}],"output":{"name":"r"}}],[5,"spawn_unsafe","","Like `std::thread::spawn`, but without the closure bounds.",null,{"inputs":[{"name":"f"}],"output":{"name":"joinhandle"}}],[5,"builder_spawn_unsafe","","Like `std::thread::Builder::spawn`, but without the closure bounds.",null,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"generics":["joinhandle"],"name":"result"}}],[0,"epoch","","Epoch-based memory management",null,null],[3,"Atomic","crossbeam::epoch","Like `std::sync::atomic::AtomicPtr`.",null,null],[3,"Guard","","An RAII-style guard for pinning the current epoch.",null,null],[3,"Owned","","Like `Box<T>`: an owned, heap-allocated data value of type `T`.",null,null],[3,"Shared","","Like `&'a T`: a shared reference valid for lifetime `'a`.",null,null],[5,"pin","","Pin the current epoch.",null,{"inputs":[],"output":{"name":"guard"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"null","","",0,{"inputs":[],"output":{"name":"atomic"}}],[11,"new","","Create a new atomic pointer",0,{"inputs":[{"name":"t"}],"output":{"name":"atomic"}}],[11,"load","","Do an atomic load with the given memory ordering.",0,{"inputs":[{"name":"self"},{"name":"ordering"},{"name":"guard"}],"output":{"generics":["shared"],"name":"option"}}],[11,"store","","Do an atomic store with the given memory ordering.",0,{"inputs":[{"name":"self"},{"generics":["owned"],"name":"option"},{"name":"ordering"}],"output":null}],[11,"store_and_ref","","Do an atomic store with the given memory ordering, immediately yielding a shared reference to the pointer that was stored.",0,{"inputs":[{"name":"self"},{"name":"owned"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"shared"}}],[11,"store_shared","","Do an atomic store of a `Shared` pointer with the given memory ordering.",0,{"inputs":[{"name":"self"},{"generics":["shared"],"name":"option"},{"name":"ordering"}],"output":null}],[11,"cas","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the given memory ordering.",0,{"inputs":[{"name":"self"},{"generics":["shared"],"name":"option"},{"generics":["owned"],"name":"option"},{"name":"ordering"}],"output":{"generics":["option"],"name":"result"}}],[11,"cas_and_ref","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the given memory ordering, immediatley acquiring a new `Shared` reference to the previously-owned pointer if successful.",0,{"inputs":[{"name":"self"},{"generics":["shared"],"name":"option"},{"name":"owned"},{"name":"ordering"},{"name":"guard"}],"output":{"generics":["shared","owned"],"name":"result"}}],[11,"cas_shared","","Do a compare-and-set from a `Shared` to another `Shared` pointer with the given memory ordering.",0,{"inputs":[{"name":"self"},{"generics":["shared"],"name":"option"},{"generics":["shared"],"name":"option"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"swap","","Do an atomic swap with an `Owned` pointer with the given memory ordering.",0,{"inputs":[{"name":"self"},{"generics":["owned"],"name":"option"},{"name":"ordering"},{"name":"guard"}],"output":{"generics":["shared"],"name":"option"}}],[11,"swap_shared","","Do an atomic swap with a `Shared` pointer with the given memory ordering.",0,{"inputs":[{"name":"self"},{"generics":["shared"],"name":"option"},{"name":"ordering"},{"name":"guard"}],"output":{"generics":["shared"],"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"unlinked","","Assert that the value is no longer reachable from a lock-free data structure and should be collected when sufficient epochs have passed.",1,{"inputs":[{"name":"self"},{"name":"shared"}],"output":null}],[11,"migrate_garbage","","Move the thread-local garbage into the global set of garbage.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Move `t` to a new heap allocation.",2,{"inputs":[{"name":"t"}],"output":{"name":"owned"}}],[11,"into_inner","","Move data out of the owned box, deallocating the box.",2,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref","","",2,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"shared"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"shared"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"shared"}}],[11,"deref","","",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"as_raw","","",3,null],[0,"sync","crossbeam","Synchronization primitives.",null,null],[3,"MsQueue","crossbeam::sync","A Michael-Scott lock-free queue, with support for blocking `pop`s.",null,null],[3,"AtomicOption","","",null,null],[3,"TreiberStack","","Treiber's lock-free stack.",null,null],[3,"SegQueue","","A Michael-Scott queue that allocates \"segments\" (arrays of nodes) for efficiency.",null,null],[3,"ArcCell","","A type providing atomic storage and retrieval of an `Arc<T>`.",null,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","",4,{"inputs":[],"output":{"name":"atomicoption"}}],[11,"swap_box","","",4,{"inputs":[{"name":"self"},{"name":"box"},{"name":"ordering"}],"output":{"generics":["box"],"name":"option"}}],[11,"swap","","",4,{"inputs":[{"name":"self"},{"name":"t"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"take","","",4,{"inputs":[{"name":"self"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new, empty queue.",5,{"inputs":[],"output":{"name":"msqueue"}}],[11,"push","","Add `t` to the back of the queue, possibly waking up threads blocked on `pop`.",5,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"is_empty","","Check if this queue is empty.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"try_pop","","Attempt to dequeue from the front.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"pop","","Dequeue an element from the front of the queue, blocking if the queue is empty.",5,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",5,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new, empty stack.",6,{"inputs":[],"output":{"name":"treiberstack"}}],[11,"push","","Push `t` on top of the stack.",6,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"pop","","Attempt to pop the top element of the stack. Deprecated method, use try_pop",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"try_pop","","Attempt to pop the top element of the stack.",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_empty","","Check if this queue is empty.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"drop","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"default","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new, empty queue.",7,{"inputs":[],"output":{"name":"segqueue"}}],[11,"push","","Add `t` to the back of the queue.",7,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"is_empty","","Judge if the queue is empty.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"try_pop","","Attempt to dequeue from the front.",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"drop","","",7,{"inputs":[{"name":"self"}],"output":null}],[0,"chase_lev","","A lock-free concurrent work-stealing deque",null,null],[3,"Worker","crossbeam::sync::chase_lev","Worker half of the work-stealing deque. This worker has exclusive access to one side of the deque, and uses `push` and `try_pop` method to manipulate it.",null,null],[3,"Stealer","","The stealing half of the work-stealing deque. Stealers have access to the opposite end of the deque from the worker, and they only have access to the `steal` method.",null,null],[4,"Steal","","When stealing some data, this is an enumeration of the possible outcomes.",null,null],[13,"Empty","","The deque was empty at the time of stealing",8,null],[13,"Abort","","The stealer lost the race for stealing data, and a retry may return more data.",8,null],[13,"Data","","The stealer has successfully stolen some data.",8,null],[5,"deque","","Creates a new empty deque",null,null],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"steal"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"steal"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"push","","Pushes data onto the front of this work queue.",9,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"try_pop","","Pops data off the front of the work queue, returning `None` on an empty queue.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"steal","","Steals work off the end of the queue (opposite of the worker's end)",10,{"inputs":[{"name":"self"}],"output":{"name":"steal"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"stealer"}}],[11,"fmt","crossbeam::sync","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new `ArcCell`.",11,{"inputs":[{"name":"arc"}],"output":{"name":"arccell"}}],[11,"set","","Stores a new value in the `ArcCell`, returning the previous value.",11,{"inputs":[{"name":"self"},{"name":"arc"}],"output":{"name":"arc"}}],[11,"get","","Returns a copy of the value stored by the `ArcCell`.",11,{"inputs":[{"name":"self"}],"output":{"name":"arc"}}],[11,"fmt","crossbeam","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"defer","","Schedule code to be executed when exiting the scope.",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"spawn","","Create a scoped thread.",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"scopedjoinhandle"}}],[11,"builder","","Generates the base configuration for spawning a scoped thread, from which configuration methods can be chained.",12,{"inputs":[{"name":"self"}],"output":{"name":"scopedthreadbuilder"}}],[11,"join","","Join the scoped thread, returning the result it produced.",13,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"thread","","Get the underlying thread handle.",13,{"inputs":[{"name":"self"}],"output":{"name":"thread"}}],[11,"drop","","",12,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"zeroed","","A const fn equivalent to mem::zeroed().",14,{"inputs":[],"output":{"name":"cachepadded"}}],[11,"new","","Wrap `t` with cacheline padding.",14,{"inputs":[{"name":"t"}],"output":{"name":"cachepadded"}}],[11,"deref","","",14,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",14,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[8,"ZerosValid","","Types for which mem::zeroed() is safe.",null,null]],"paths":[[3,"Atomic"],[3,"Guard"],[3,"Owned"],[3,"Shared"],[3,"AtomicOption"],[3,"MsQueue"],[3,"TreiberStack"],[3,"SegQueue"],[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"ArcCell"],[3,"Scope"],[3,"ScopedJoinHandle"],[3,"CachePadded"]]};
searchIndex["derivative"] = {"doc":"","items":[[5,"derivative","derivative","",null,{"inputs":[{"name":"tokenstream"}],"output":{"name":"tokenstream"}}]],"paths":[]};
searchIndex["dlib"] = {"doc":"","items":[[3,"Library","dlib","A loaded dynamic library.",null,null],[3,"Symbol","","Symbol from a library.",null,null],[4,"DlError","","",null,null],[13,"NotFound","","",0,null],[13,"MissingSymbol","","",0,null],[14,"ffi_dispatch","","",null,null],[14,"ffi_dispatch_static","","",null,null],[14,"link_external_library","","",null,null],[14,"dlopen_external_library","","",null,null],[14,"external_library","","",null,null],[11,"new","","Find and load a dynamic library.",1,{"inputs":[{"name":"p"}],"output":{"generics":["library","error"],"name":"result"}}],[11,"get","","Get a pointer to function or static variable by symbol name.",1,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"library"}],"output":{"name":"library"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"symbol"}}],[11,"deref","","",2,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_raw","","Extract the wrapped `os::platform::Symbol`.",2,{"inputs":[{"name":"self"}],"output":{"name":"symbol"}}],[11,"from_raw","","Wrap the `os::platform::Symbol` into this safe wrapper.",2,{"inputs":[{"name":"symbol"},{"name":"l"}],"output":{"name":"symbol"}}]],"paths":[[4,"DlError"],[3,"Library"],[3,"Symbol"]]};
searchIndex["draw_state"] = {"doc":"Graphics state blocks for gfx-rs","items":[[0,"preset","draw_state","State presets",null,null],[0,"blend","draw_state::preset","Blending preset modes.",null,null],[17,"REPLACE","draw_state::preset::blend","When combining two fragments, choose the source value",null,null],[17,"ADD","","When combining two fragments, add their values together, saturating at 1.0",null,null],[17,"MULTIPLY","","When combining two fragments, multiply their values together.",null,null],[17,"ALPHA","","When combining two fragments, add the value of the source times its alpha channel with the value of the destination multiplied by the inverse of the source alpha channel. Has the usual transparency effect: mixes the two colors using a fraction of each one specified by the alpha of the source.",null,null],[17,"INVERT","","When combining two fragments, subtract the destination color from a constant color using the source color as weight. Has an invert effect with the constant color as base and source color controlling displacement from the base color. A white source color and a white value results in plain invert. The output alpha is same as destination alpha.",null,null],[0,"depth","draw_state::preset","Depth preset modes.",null,null],[17,"PASS_TEST","draw_state::preset::depth","Always pass the depth test, no writes",null,null],[17,"LESS_EQUAL_TEST","","\"<=\" comparison with read-only depth",null,null],[17,"LESS_EQUAL_WRITE","","\"<=\" comparison with writable depth",null,null],[0,"state","draw_state","Fixed-function hardware state.",null,null],[3,"Offset","draw_state::state","How to offset vertices in screen space, if at all.",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[3,"MultiSample","","Multi-sampling rasterization mode",null,null],[3,"Rasterizer","","Primitive rasterization state. Note that GL allows different raster method to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",1,null],[12,"cull_face","","Which face should be culled.",1,null],[12,"method","","How to rasterize this primitive.",1,null],[12,"offset","","Any polygon offset to apply.",1,null],[12,"samples","","Multi-sampling mode.",1,null],[3,"StencilSide","","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",2,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they are read before doing the stencil test.",2,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",2,null],[12,"op_fail","","What operation to do if the stencil test fails.",2,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",2,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",2,null],[3,"Stencil","","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",3,null],[12,"back","","",3,null],[3,"Depth","","Depth test state.",null,null],[12,"fun","","Comparison function to use.",4,null],[12,"write","","Specify whether to write to the depth buffer or not.",4,null],[3,"BlendChannel","","",null,null],[12,"equation","","",5,null],[12,"source","","",5,null],[12,"destination","","",5,null],[3,"Blend","","",null,null],[12,"color","","",6,null],[12,"alpha","","",6,null],[3,"ColorMask","","",null,null],[3,"Color","","The state of an active color render target",null,null],[12,"mask","","Color mask to use.",7,null],[12,"blend","","Optional blending.",7,null],[3,"RefValues","","The complete set of the rasterizer reference values. Switching these doesn't roll the hardware context.",null,null],[12,"stencil","","Stencil front and back values.",8,null],[12,"blend","","Constant blend color.",8,null],[4,"FrontFace","","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",9,null],[13,"CounterClockwise","","Counter-clockwise winding order.",9,null],[4,"CullFace","","Which face, if any, to cull.",null,null],[13,"Nothing","","",10,null],[13,"Front","","",10,null],[13,"Back","","",10,null],[4,"RasterMethod","","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",11,null],[13,"Line","","Rasterize as a line with the given width.",11,null],[13,"Fill","","Rasterize as a face.",11,null],[4,"Comparison","","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",12,null],[13,"Less","","`x < y`",12,null],[13,"LessEqual","","`x <= y`",12,null],[13,"Equal","","`x == y`",12,null],[13,"GreaterEqual","","`x >= y`",12,null],[13,"Greater","","`x > y`",12,null],[13,"NotEqual","","`x != y`",12,null],[13,"Always","","`true`",12,null],[4,"StencilOp","","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",13,null],[13,"Zero","","Set the value in the stencil buffer to zero.",13,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",13,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",13,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",13,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",13,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",13,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",13,null],[4,"Equation","","",null,null],[13,"Add","","Adds source and destination. Source and destination are multiplied by blending parameters before addition.",14,null],[13,"Sub","","Subtracts destination from source. Source and destination are multiplied by blending parameters before subtraction.",14,null],[13,"RevSub","","Subtracts source from destination. Source and destination are multiplied by blending parameters before subtraction.",14,null],[13,"Min","","Component-wise minimum value of source and destination. Blending parameters are ignored.",14,null],[13,"Max","","Component-wise maximum value of source and destination. Blending parameters are ignored.",14,null],[4,"BlendValue","","",null,null],[13,"SourceColor","","",15,null],[13,"SourceAlpha","","",15,null],[13,"DestColor","","",15,null],[13,"DestAlpha","","",15,null],[13,"ConstColor","","",15,null],[13,"ConstAlpha","","",15,null],[4,"Factor","","",null,null],[13,"Zero","","",16,null],[13,"One","","",16,null],[13,"SourceAlphaSaturated","","",16,null],[13,"ZeroPlus","","",16,null],[13,"OneMinus","","",16,null],[6,"LineWidth","","Width of a line. Could be f32 if not for Hash deriving issues.",null,null],[6,"OffsetSlope","","Slope depth offset factor Could be f32 if not for Hash deriving issues.",null,null],[6,"OffsetUnits","","Number of units to offset, where the unit is the minimal difference in the depth value dictated by the precision of the depth buffer.",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"frontface"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",9,null],[11,"cmp","","",9,{"inputs":[{"name":"self"},{"name":"frontface"}],"output":{"name":"ordering"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"frontface"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"offset"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"cullface"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",10,null],[11,"cmp","","",10,{"inputs":[{"name":"self"},{"name":"cullface"}],"output":{"name":"ordering"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"self"},{"name":"cullface"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"rastermethod"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",11,null],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"multisample"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",17,null],[11,"cmp","","",17,{"inputs":[{"name":"self"},{"name":"multisample"}],"output":{"name":"ordering"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"self"},{"name":"multisample"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"rasterizer"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",1,null],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"new_fill","","Create a new filling rasterizer.",1,{"inputs":[],"output":{"name":"rasterizer"}}],[11,"with_cull_back","","Add back face culling.",1,{"inputs":[{"name":"self"}],"output":{"name":"rasterizer"}}],[11,"with_offset","","Add polygon offset.",1,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"offsetunits"}],"output":{"name":"rasterizer"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"comparison"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",12,null],[11,"cmp","","",12,{"inputs":[{"name":"self"},{"name":"comparison"}],"output":{"name":"ordering"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"self"},{"name":"comparison"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"stencilop"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",13,null],[11,"cmp","","",13,{"inputs":[{"name":"self"},{"name":"stencilop"}],"output":{"name":"ordering"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"self"},{"name":"stencilop"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"stencilside"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",2,null],[11,"cmp","","",2,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"ordering"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"stencilside"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"stencil"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"ordering"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"stencil"}}],[11,"new","","Create a new stencil state with a given function.",3,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"depth"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"ordering"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"depth"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"equation"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",14,null],[11,"cmp","","",14,{"inputs":[{"name":"self"},{"name":"equation"}],"output":{"name":"ordering"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"self"},{"name":"equation"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"blendvalue"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",15,null],[11,"cmp","","",15,{"inputs":[{"name":"self"},{"name":"blendvalue"}],"output":{"name":"ordering"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"self"},{"name":"blendvalue"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"factor"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",16,null],[11,"cmp","","",16,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"ordering"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"blendchannel"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",5,null],[11,"cmp","","",5,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"ordering"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"blendchannel"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"blend"}}],[11,"hash","","",6,null],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"blend"}}],[11,"new","","Create a new blend state with a given equation.",6,{"inputs":[{"name":"equation"},{"name":"factor"},{"name":"factor"}],"output":{"name":"blend"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"colormask"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"cmp","","",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"ordering"}}],[11,"hash","","",18,null],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",18,{"inputs":[],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",18,{"inputs":[],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",18,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",18,{"inputs":[{"name":"u8"}],"output":{"generics":["colormask"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",18,{"inputs":[{"name":"u8"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",18,{"inputs":[{"name":"self"},{"name":"colormask"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitor_assign","","Adds the set of flags.",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitxor_assign","","Toggles the set of flags.",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"sub_assign","","Disables all flags enabled in the set.",18,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",18,{"inputs":[{"name":"self"}],"output":{"name":"colormask"}}],[11,"extend","","",18,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",18,{"inputs":[{"name":"t"}],"output":{"name":"colormask"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",7,null],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"color"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"refvalues"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"refvalues"}}],[0,"target","draw_state","Render target specification.",null,null],[3,"Rect","draw_state::target","A screen space rectangle",null,null],[12,"x","","",19,null],[12,"y","","",19,null],[12,"w","","",19,null],[12,"h","","",19,null],[3,"Mirror","","Mirroring flags, used for blitting",null,null],[6,"Layer","","A depth value, specifying which plane to select out of a 3D texture.",null,null],[6,"Level","","Mipmap level to select in a texture.",null,null],[6,"Depth","","A single depth value from a depth buffer.",null,null],[6,"Stencil","","A single value from a stencil stencstencil buffer.",null,null],[6,"ColorValue","","A color with floating-point components.",null,null],[17,"MIRROR_X","","",null,null],[17,"MIRROR_Y","","",null,null],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"rect"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",19,null],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"mirror"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"le","","",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"gt","","",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ge","","",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"cmp","","",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"ordering"}}],[11,"hash","","",20,null],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",20,{"inputs":[],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",20,{"inputs":[],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",20,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",20,{"inputs":[{"name":"u8"}],"output":{"generics":["mirror"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",20,{"inputs":[{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",20,{"inputs":[{"name":"self"},{"name":"mirror"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitor_assign","","Adds the set of flags.",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitxor_assign","","Toggles the set of flags.",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"sub_assign","","Disables all flags enabled in the set.",20,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",20,{"inputs":[{"name":"self"}],"output":{"name":"mirror"}}],[11,"extend","","",20,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",20,{"inputs":[{"name":"t"}],"output":{"name":"mirror"}}]],"paths":[[3,"Offset"],[3,"Rasterizer"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[3,"BlendChannel"],[3,"Blend"],[3,"Color"],[3,"RefValues"],[4,"FrontFace"],[4,"CullFace"],[4,"RasterMethod"],[4,"Comparison"],[4,"StencilOp"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"MultiSample"],[3,"ColorMask"],[3,"Rect"],[3,"Mirror"]]};
searchIndex["either"] = {"doc":"The enum [`Either`] with variants `Left` and `Right` is a general purpose sum type with two cases.","items":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"ordering"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_left","","Return true if the value is the `Left` variant.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_right","","Return true if the value is the `Right` variant.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present rewrapping the result in `Left`.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present rewrapping the result in `Right`.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second function `g` is applied.",0,{"inputs":[{"name":"self"},{"name":"f"},{"name":"g"}],"output":{"name":"t"}}],[11,"either_with","","Like `either`, but provide some context to whichever of the functions ends up being called.",0,{"inputs":[{"name":"self"},{"name":"ctx"},{"name":"f"},{"name":"g"}],"output":{"name":"t"}}],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant if it is present.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant if it is present.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"into_iter","","Convert the inner value to an iterator.",0,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"from","","",0,{"inputs":[{"name":"result"}],"output":{"name":"self"}}],[11,"into","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"extend","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",0,null],[11,"fold","","",0,{"inputs":[{"name":"self"},{"name":"acc"},{"name":"g"}],"output":{"name":"acc"}}],[11,"count","","",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"last","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"nth","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"collect","","",0,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"all","","",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"bool"}}],[11,"next_back","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"read","","",0,null],[11,"read_to_end","","",0,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["usize"],"name":"result"}}],[11,"fill_buf","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"consume","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"write","","",0,null],[11,"flush","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"as_ref","","",0,{"inputs":[{"name":"self"}],"output":{"name":"target"}}],[11,"as_mut","","",0,{"inputs":[{"name":"self"}],"output":{"name":"target"}}],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which fails early with the opposite side. Can only be used in functions that return `Either` because of the early return of `Right` that it provides.",null,null],[14,"try_right","","Dual to `try_left!`, see its documentation for more information.",null,null]],"paths":[[4,"Either"]]};
searchIndex["env_logger"] = {"doc":"A logger configured via an environment variable which writes to standard error.","items":[[3,"Logger","env_logger","The logger.",null,null],[3,"LogBuilder","","LogBuilder acts as builder for initializing the Logger. It can be used to customize the log format, change the enviromental variable used to provide the logging directives and also set the default log level filter.",null,null],[5,"init","","Initializes the global logger with an env logger.",null,{"inputs":[],"output":{"generics":["setloggererror"],"name":"result"}}],[11,"new","","Initializes the log builder with defaults",0,{"inputs":[],"output":{"name":"logbuilder"}}],[11,"filter","","Adds filters to the logger",0,{"inputs":[{"name":"self"},{"generics":["str"],"name":"option"},{"name":"loglevelfilter"}],"output":{"name":"self"}}],[11,"format","","Sets the format function for formatting the log output.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"parse","","Parses the directives string in the same form as the RUST_LOG environment variable.",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"init","","Initializes the global logger with an env logger.",0,{"inputs":[{"name":"self"}],"output":{"generics":["setloggererror"],"name":"result"}}],[11,"build","","Build an env logger.",0,{"inputs":[{"name":"self"}],"output":{"name":"logger"}}],[11,"new","","",1,{"inputs":[],"output":{"name":"logger"}}],[11,"filter","","",1,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"enabled","","",1,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[11,"log","","",1,{"inputs":[{"name":"self"},{"name":"logrecord"}],"output":null}]],"paths":[[3,"LogBuilder"],[3,"Logger"]]};
searchIndex["error_chain"] = {"doc":"A library for consistent and reliable error handling","items":[[3,"Backtrace","error_chain","Representation of an owned and self-contained backtrace.",null,null],[3,"Iter","","Iterator over the error chain using the `Error::cause()` method.",null,null],[3,"DisplayChain","","A struct which formats an error for output.",null,null],[0,"example_generated","","These modules show an example of code generated by the macro. IT MUST NOT BE USED OUTSIDE THIS CRATE.",null,null],[3,"Error","error_chain::example_generated","The Error type.",null,null],[12,"0","","The kind of the error.",0,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",1,null],[13,"Inner","","Link to another `ErrorChain`.",1,null],[13,"Io","","Link to a `std::error::Error` type.",1,null],[13,"Custom","","A custom error kind.",1,null],[0,"inner","","Another code generated by the macro.",null,null],[3,"Error","error_chain::example_generated::inner","The Error type.",null,null],[12,"0","","The kind of the error.",2,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",3,null],[6,"Result","","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns some type that can be converted to `ErrorKind`, boxes the original error to store as the cause, then returns a new error containing the original error.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",2,{"inputs":[{"name":"errorkind"},{"name":"state"}],"output":{"name":"error"}}],[11,"from_kind","","",2,null],[11,"with_chain","","",2,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[11,"kind","","",2,null],[11,"iter","","",2,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"chain_err","","",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"backtrace","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"extract_backtrace","","",2,{"inputs":[{"name":"error"}],"output":{"generics":["arc"],"name":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",2,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",2,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"error"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",2,{"inputs":[{"generics":["error"],"name":"box"},{"name":"k"}],"output":{"name":"error"}}],[11,"kind","","Returns the kind of the error.",2,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"iter","","Iterates over the error chain.",2,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",2,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"error"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",2,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"deref","","",2,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","A string describing the error kind.",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",3,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[6,"Result","error_chain::example_generated","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns some type that can be converted to `ErrorKind`, boxes the original error to store as the cause, then returns a new error containing the original error.",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",0,{"inputs":[{"name":"errorkind"},{"name":"state"}],"output":{"name":"error"}}],[11,"from_kind","","",0,null],[11,"with_chain","","",0,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[11,"kind","","",0,null],[11,"iter","","",0,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"chain_err","","",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"backtrace","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"extract_backtrace","","",0,{"inputs":[{"name":"error"}],"output":{"generics":["arc"],"name":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",0,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",0,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"error"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",0,{"inputs":[{"generics":["error"],"name":"box"},{"name":"k"}],"output":{"name":"error"}}],[11,"kind","","Returns the kind of the error.",0,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"iter","","Iterates over the error chain.",0,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",0,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"error"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"deref","","",0,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","A string describing the error kind.",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[8,"ExitCode","error_chain","Represents a value that can be used as the exit status of the process. See `quick_main!`.",null,null],[10,"code","","Returns the value to use as the exit status.",6,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[8,"ChainedError","","This trait is implemented on all the errors generated by the `error_chain` macro.",null,null],[16,"ErrorKind","","Associated kind type.",7,null],[10,"from_kind","","Constructs an error from a kind, and generates a backtrace.",7,null],[10,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",7,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[10,"kind","","Returns the kind of the error.",7,null],[10,"iter","","Iterates over the error chain.",7,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[10,"backtrace","","Returns the backtrace associated with this error.",7,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"display_chain","","Returns an object which implements `Display` for printing the full context of this error.",7,{"inputs":[{"name":"self"}],"output":{"name":"displaychain"}}],[10,"chain_err","","Extends the error chain with a new entry.",7,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new iterator over the error chain using `Error::cause()`.",8,{"inputs":[{"generics":["error"],"name":"option"}],"output":{"name":"iter"}}],[11,"next","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"error_chain","","Macro for generating error types and traits. See crate level documentation for details.",null,null],[14,"quick_main","","Convenient wrapper to be able to use `?` and such in the main. You can use it with a separated function:",null,null],[14,"bail","","Exits a function early with an error",null,null],[14,"ensure","","Exits a function early with an error if the condition is not satisfied",null,null],[11,"new","","Captures a backtrace at the callsite of this function, returning an owned representation.",10,{"inputs":[],"output":{"name":"backtrace"}}],[11,"new_unresolved","","Similar to `new` except that this does not resolve any symbols, this simply captures the backtrace as a list of addresses.",10,{"inputs":[],"output":{"name":"backtrace"}}],[11,"frames","","Returns the frames from when this backtrace was captured.",10,null],[11,"resolve","","If this backtrace was created from `new_unresolved` then this function will resolve all addresses in the backtrace to their symbolic names.",10,null],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"into","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["backtraceframe"],"name":"vec"}}],[11,"default","","",10,{"inputs":[],"output":{"name":"backtrace"}}],[11,"from","","",10,{"inputs":[{"generics":["backtraceframe"],"name":"vec"}],"output":{"name":"backtrace"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"backtrace"}}]],"paths":[[3,"Error"],[4,"ErrorKind"],[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[8,"ResultExt"],[8,"ExitCode"],[8,"ChainedError"],[3,"Iter"],[3,"DisplayChain"],[3,"Backtrace"]]};
searchIndex["flate2"] = {"doc":"A DEFLATE-based stream compression/decompression library","items":[[3,"GzBuilder","flate2","A builder structure to create a new gzip Encoder.",null,null],[3,"GzHeader","","A structure representing the header of a gzip stream.",null,null],[3,"Compress","","Raw in-memory compression stream for blocks of data.",null,null],[3,"DataError","","Error returned when a decompression object finds that the input stream of bytes was not a valid input stream of bytes.",null,null],[3,"Decompress","","Raw in-memory decompression stream for blocks of data.",null,null],[3,"Crc","","The CRC calculated by a [`CrcReader`].",null,null],[3,"CrcReader","","A wrapper around a [`Read`] that calculates the CRC.",null,null],[4,"Flush","","Values which indicate the form of flushing to be used when compressing or decompressing in-memory data.",null,null],[13,"None","","A typical parameter for passing to compression/decompression functions, this indicates that the underlying stream to decide how much data to accumulate before producing output in order to maximize compression.",0,null],[13,"Sync","","All pending output is flushed to the output buffer and the output is aligned on a byte boundary so that the decompressor can get all input data available so far.",0,null],[13,"Partial","","All pending output is flushed to the output buffer, but the output is not aligned to a byte boundary.",0,null],[13,"Block","","A deflate block is completed and emitted, as for `Flush::Sync`, but the output is not aligned on a byte boundary and up to seven vits of the current block are held to be written as the next byte after the next deflate block is completed.",0,null],[13,"Full","","All output is flushed as with `Flush::Sync` and the compression state is reset so decompression can restart from this point if previous compressed data has been damaged or if random access is desired.",0,null],[13,"Finish","","Pending input is processed and pending output is flushed.",0,null],[4,"Status","","Possible status results of compressing some data or successfully decompressing a block of data.",null,null],[13,"Ok","","Indicates success.",1,null],[13,"BufError","","Indicates that forward progress is not possible due to input or output buffers being empty.",1,null],[13,"StreamEnd","","Indicates that all input has been consumed and all output bytes have been written. Decompression/compression should not be called again.",1,null],[4,"Compression","","When compressing data, the compression level can be specified by a value in this enum.",null,null],[13,"None","","No compression is to be performed, this may actually inflate data slightly when encoding.",2,null],[13,"Fast","","Optimize for the best speed of encoding.",2,null],[13,"Best","","Optimize for the size of data being encoded.",2,null],[13,"Default","","Choose the default compression, a balance between speed and size.",2,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new CRC.",3,{"inputs":[],"output":{"name":"crc"}}],[11,"sum","","bla",3,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"amount","","The number of bytes that have been used to calculate the CRC. This value is only accurate if the amount is lower than 2^32.",3,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"update","","Update the CRC with the bytes in `data`.",3,null],[11,"reset","","Reset the CRC.",3,{"inputs":[{"name":"self"}],"output":null}],[11,"combine","","Combine the CRC with the CRC for the subsequent block of bytes.",3,{"inputs":[{"name":"self"},{"name":"crc"}],"output":null}],[11,"new","","Create a new CrcReader.",4,{"inputs":[{"name":"r"}],"output":{"name":"crcreader"}}],[11,"crc","","Get the Crc for this CrcReader.",4,{"inputs":[{"name":"self"}],"output":{"name":"crc"}}],[11,"into_inner","","Get the reader that is wrapped by this CrcReader.",4,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_ref","","Get the reader that is wrapped by this CrcReader by reference.",4,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Get a mutable reference to the reader that is wrapped by this CrcReader.",4,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"reset","","Reset the Crc in this CrcReader.",4,{"inputs":[{"name":"self"}],"output":null}],[11,"read","","",4,null],[11,"fill_buf","","",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"consume","","",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"header"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"header"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"filename","","Returns the `filename` field of this gzip stream's header, if present.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"extra","","Returns the `extra` field of this gzip stream's header, if present.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"comment","","Returns the `comment` field of this gzip stream's header, if present.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"mtime","","This gives the most recent modification time of the original file being compressed.",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"mtime_as_datetime","","Returns the most recent modification time represented by a date-time type. Returns `None` if the value of the underlying counter is 0, indicating no time stamp is available.",5,{"inputs":[{"name":"self"}],"output":{"generics":["systemtime"],"name":"option"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new blank builder with no header by default.",6,{"inputs":[],"output":{"name":"builder"}}],[11,"mtime","","Configure the `mtime` field in the gzip header.",6,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"builder"}}],[11,"extra","","Configure the `extra` field in the gzip header.",6,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"builder"}}],[11,"filename","","Configure the `filename` field in the gzip header.",6,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"builder"}}],[11,"comment","","Configure the `comment` field in the gzip header.",6,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"builder"}}],[11,"write","","Consume this builder, creating a writer encoder in the process.",6,{"inputs":[{"name":"self"},{"name":"w"},{"name":"compression"}],"output":{"name":"gzencoder"}}],[11,"read","","Consume this builder, creating a reader encoder in the process.",6,{"inputs":[{"name":"self"},{"name":"r"},{"name":"compression"}],"output":{"name":"gzencoder"}}],[11,"buf_read","","Consume this builder, creating a reader encoder in the process.",6,{"inputs":[{"name":"self"},{"name":"r"},{"name":"compression"}],"output":{"name":"gzencoder"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"flush"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"flush"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"status"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"status"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new object ready for compressing data that it's given.",7,{"inputs":[{"name":"compression"},{"name":"bool"}],"output":{"name":"compress"}}],[11,"total_in","","Returns the total number of input bytes which have been processed by this compression object.",7,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Returns the total number of output bytes which have been produced by this compression object.",7,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"reset","","Quickly resets this compressor without having to reallocate anything.",7,{"inputs":[{"name":"self"}],"output":null}],[11,"compress","","Compresses the input data into the output, consuming only as much input as needed and writing as much output as possible.",7,null],[11,"compress_vec","","Compresses the input data into the extra space of the output, consuming only as much input as needed and writing as much output as possible.",7,null],[11,"new","","Creates a new object ready for decompressing data that it's given.",8,{"inputs":[{"name":"bool"}],"output":{"name":"decompress"}}],[11,"total_in","","Returns the total number of input bytes which have been processed by this decompression object.",8,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Returns the total number of output bytes which have been produced by this decompression object.",8,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"decompress","","Decompresses the input data into the output, consuming only as much input as needed and writing as much output as possible.",8,null],[11,"decompress_vec","","Decompresses the input data into the extra space in the output vector specified by `output`.",8,null],[11,"reset","","Performs the equivalent of replacing this decompression state with a freshly allocated copy.",8,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"description","","",9,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"read","","Types which operate over [`Read`] streams, both encoders and decoders for various formats.",null,null],[3,"DeflateEncoder","flate2::read","A DEFLATE encoder, or compressor.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a multistream",null,null],[0,"write","flate2","Types which operate over [`Write`] streams, both encoders and decoders for various formats.",null,null],[3,"DeflateEncoder","flate2::write","A DEFLATE encoder, or compressor.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[0,"bufread","flate2","Types which operate over [`BufRead`] streams, both encoders and decoders for various formats.",null,null],[3,"DeflateEncoder","flate2::bufread","A DEFLATE encoder, or compressor.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a multistream",null,null],[8,"FlateReadExt","flate2","A helper trait to create encoder/decoders with method syntax.",null,null],[11,"gz_encode","","Consume this reader to create a compression stream at the specified compression level.",10,{"inputs":[{"name":"self"},{"name":"compression"}],"output":{"name":"gzencoder"}}],[11,"gz_decode","","Consume this reader to create a decompression stream of this stream.",10,{"inputs":[{"name":"self"}],"output":{"generics":["gzdecoder"],"name":"result"}}],[11,"zlib_encode","","Consume this reader to create a compression stream at the specified compression level.",10,{"inputs":[{"name":"self"},{"name":"compression"}],"output":{"name":"zlibencoder"}}],[11,"zlib_decode","","Consume this reader to create a decompression stream of this stream.",10,{"inputs":[{"name":"self"}],"output":{"name":"zlibdecoder"}}],[11,"deflate_encode","","Consume this reader to create a compression stream at the specified compression level.",10,{"inputs":[{"name":"self"},{"name":"compression"}],"output":{"name":"deflateencoder"}}],[11,"deflate_decode","","Consume this reader to create a decompression stream of this stream.",10,{"inputs":[{"name":"self"}],"output":{"name":"deflatedecoder"}}],[8,"FlateWriteExt","","A helper trait to create encoder/decoders with method syntax.",null,null],[11,"gz_encode","","Consume this writer to create a compression stream at the specified compression level.",11,{"inputs":[{"name":"self"},{"name":"compression"}],"output":{"name":"gzencoder"}}],[11,"zlib_encode","","Consume this writer to create a compression stream at the specified compression level.",11,{"inputs":[{"name":"self"},{"name":"compression"}],"output":{"name":"zlibencoder"}}],[11,"zlib_decode","","Consume this writer to create a decompression stream of this stream.",11,{"inputs":[{"name":"self"}],"output":{"name":"zlibdecoder"}}],[11,"deflate_encode","","Consume this writer to create a compression stream at the specified compression level.",11,{"inputs":[{"name":"self"},{"name":"compression"}],"output":{"name":"deflateencoder"}}],[11,"deflate_decode","","Consume this writer to create a decompression stream of this stream.",11,{"inputs":[{"name":"self"}],"output":{"name":"deflatedecoder"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"compression"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"compression"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"compression"}}],[11,"fmt","flate2::bufread","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",12,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"deflateencoder"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input stream for another.",12,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"r"}}],[11,"get_ref","","Acquires a reference to the underlying reader",12,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",12,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",12,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"total_in","","Returns the number of bytes that have been read into this compressor.",12,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Returns the number of bytes that the compressor has produced.",12,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"read","","",12,null],[11,"write","","",12,null],[11,"flush","","",12,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder which will decompress data read from the given stream.",13,{"inputs":[{"name":"r"}],"output":{"name":"deflatedecoder"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input stream for another.",13,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"r"}}],[11,"reset_data","","Resets the state of this decoder's data",13,{"inputs":[{"name":"self"}],"output":null}],[11,"get_ref","","Acquires a reference to the underlying stream",13,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",13,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",13,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",13,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",13,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"read","","",13,null],[11,"write","","",13,null],[11,"flush","","",13,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","flate2::read","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",14,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"deflateencoder"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input stream for another.",14,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"r"}}],[11,"get_ref","","Acquires a reference to the underlying reader",14,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",14,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",14,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"total_in","","Returns the number of bytes that have been read into this compressor.",14,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Returns the number of bytes that the compressor has produced.",14,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"read","","",14,null],[11,"write","","",14,null],[11,"flush","","",14,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder which will decompress data read from the given stream.",15,{"inputs":[{"name":"r"}],"output":{"name":"deflatedecoder"}}],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is specified.",15,{"inputs":[{"name":"r"},{"generics":["u8"],"name":"vec"}],"output":{"name":"deflatedecoder"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input stream for another.",15,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"r"}}],[11,"get_ref","","Acquires a reference to the underlying stream",15,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",15,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",15,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",15,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",15,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"read","","",15,null],[11,"write","","",15,null],[11,"flush","","",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","flate2::write","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new encoder which will write compressed data to the stream given at the given compression level.",16,{"inputs":[{"name":"w"},{"name":"compression"}],"output":{"name":"deflateencoder"}}],[11,"get_ref","","Acquires a reference to the underlying writer.",16,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",16,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the output stream for another.",16,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",16,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"finish","","Consumes this encoder, flushing the output stream.",16,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",16,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"total_in","","Returns the number of bytes that have been written to this compresor.",16,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Returns the number of bytes that the compressor has produced.",16,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"write","","",16,null],[11,"flush","","",16,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read","","",16,null],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder which will write uncompressed data to the stream.",17,{"inputs":[{"name":"w"}],"output":{"name":"deflatedecoder"}}],[11,"get_ref","","Acquires a reference to the underlying writer.",17,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",17,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the output stream for another.",17,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",17,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"finish","","Consumes this encoder, flushing the output stream.",17,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"total_in","","Returns the number of bytes that the decompressor has consumed for decompression.",17,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Returns the number of bytes that the decompressor has written to its output stream.",17,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"write","","",17,null],[11,"flush","","",17,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read","","",17,null],[11,"fmt","flate2::bufread","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new encoder which will use the given compression level.",18,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"gzencoder"}}],[11,"get_ref","","Acquires a reference to the underlying reader.",18,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",18,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Returns the underlying stream, consuming this encoder",18,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"read","","",18,null],[11,"write","","",18,null],[11,"flush","","",18,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder from the given reader, immediately parsing the gzip header.",19,{"inputs":[{"name":"r"}],"output":{"generics":["gzdecoder"],"name":"result"}}],[11,"header","","Returns the header associated with this stream.",19,{"inputs":[{"name":"self"}],"output":{"name":"header"}}],[11,"get_ref","","Acquires a reference to the underlying reader.",19,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",19,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",19,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"read","","",19,null],[11,"write","","",19,null],[11,"flush","","",19,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder from the given reader, immediately parsing the (first) gzip header. If the gzip stream contains multiple members all will be decoded.",20,{"inputs":[{"name":"r"}],"output":{"generics":["multigzdecoder"],"name":"result"}}],[11,"header","","Returns the current header associated with this stream.",20,{"inputs":[{"name":"self"}],"output":{"name":"header"}}],[11,"get_ref","","Acquires a reference to the underlying reader.",20,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",20,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",20,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"read","","",20,null],[11,"write","","",20,null],[11,"flush","","",20,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","flate2::read","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new encoder which will use the given compression level.",21,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"gzencoder"}}],[11,"get_ref","","Acquires a reference to the underlying reader.",21,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",21,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Returns the underlying stream, consuming this encoder",21,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"read","","",21,null],[11,"write","","",21,null],[11,"flush","","",21,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder from the given reader, immediately parsing the gzip header.",22,{"inputs":[{"name":"r"}],"output":{"generics":["gzdecoder"],"name":"result"}}],[11,"header","","Returns the header associated with this stream.",22,{"inputs":[{"name":"self"}],"output":{"name":"header"}}],[11,"get_ref","","Acquires a reference to the underlying reader.",22,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",22,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",22,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"read","","",22,null],[11,"write","","",22,null],[11,"flush","","",22,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder from the given reader, immediately parsing the (first) gzip header. If the gzip stream contains multiple members all will be decoded.",23,{"inputs":[{"name":"r"}],"output":{"generics":["multigzdecoder"],"name":"result"}}],[11,"header","","Returns the current header associated with this stream.",23,{"inputs":[{"name":"self"}],"output":{"name":"header"}}],[11,"get_ref","","Acquires a reference to the underlying reader.",23,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",23,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",23,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"read","","",23,null],[11,"write","","",23,null],[11,"flush","","",23,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","flate2::write","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new encoder which will use the given compression level.",24,{"inputs":[{"name":"w"},{"name":"compression"}],"output":{"name":"gzencoder"}}],[11,"get_ref","","Acquires a reference to the underlying writer.",24,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",24,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",24,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"finish","","Finish encoding this stream, returning the underlying writer once the encoding is done.",24,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"write","","",24,null],[11,"flush","","",24,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read","","",24,null],[11,"drop","","",24,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","flate2::bufread","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",25,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"zlibencoder"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input stream for another.",25,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"r"}}],[11,"get_ref","","Acquires a reference to the underlying reader",25,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",25,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",25,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"total_in","","Returns the number of bytes that have been read into this compressor.",25,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Returns the number of bytes that the compressor has produced.",25,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"read","","",25,null],[11,"write","","",25,null],[11,"flush","","",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder which will decompress data read from the given stream.",26,{"inputs":[{"name":"r"}],"output":{"name":"zlibdecoder"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input stream for another.",26,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"r"}}],[11,"get_ref","","Acquires a reference to the underlying stream",26,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",26,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",26,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",26,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",26,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"read","","",26,null],[11,"write","","",26,null],[11,"flush","","",26,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","flate2::read","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",27,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"zlibencoder"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input stream for another.",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"r"}}],[11,"get_ref","","Acquires a reference to the underlying stream",27,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",27,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",27,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"total_in","","Returns the number of bytes that have been read into this compressor.",27,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Returns the number of bytes that the compressor has produced.",27,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"read","","",27,null],[11,"write","","",27,null],[11,"flush","","",27,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder which will decompress data read from the given stream.",28,{"inputs":[{"name":"r"}],"output":{"name":"zlibdecoder"}}],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is specified.",28,{"inputs":[{"name":"r"},{"generics":["u8"],"name":"vec"}],"output":{"name":"zlibdecoder"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input stream for another.",28,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"r"}}],[11,"get_ref","","Acquires a reference to the underlying stream",28,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",28,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",28,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",28,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",28,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"read","","",28,null],[11,"write","","",28,null],[11,"flush","","",28,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","flate2::write","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new encoder which will write compressed data to the stream given at the given compression level.",29,{"inputs":[{"name":"w"},{"name":"compression"}],"output":{"name":"zlibencoder"}}],[11,"get_ref","","Acquires a reference to the underlying writer.",29,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",29,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the output stream for another.",29,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",29,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"finish","","Consumes this encoder, flushing the output stream.",29,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",29,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"total_in","","Returns the number of bytes that have been written to this compresor.",29,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Returns the number of bytes that the compressor has produced.",29,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"write","","",29,null],[11,"flush","","",29,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read","","",29,null],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder which will write uncompressed data to the stream.",30,{"inputs":[{"name":"w"}],"output":{"name":"zlibdecoder"}}],[11,"get_ref","","Acquires a reference to the underlying writer.",30,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",30,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the output stream for another.",30,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",30,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"finish","","Consumes this encoder, flushing the output stream.",30,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"total_in","","Returns the number of bytes that the decompressor has consumed for decompression.",30,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Returns the number of bytes that the decompressor has written to its output stream.",30,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"write","","",30,null],[11,"flush","","",30,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read","","",30,null]],"paths":[[4,"Flush"],[4,"Status"],[4,"Compression"],[3,"Crc"],[3,"CrcReader"],[3,"GzHeader"],[3,"GzBuilder"],[3,"Compress"],[3,"Decompress"],[3,"DataError"],[8,"FlateReadExt"],[8,"FlateWriteExt"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzEncoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"]]};
searchIndex["fnv"] = {"doc":"An implementation of the [Fowler–Noll–Vo hash function][chongo].","items":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",null,null],[6,"FnvBuildHasher","","A builder for default FNV hashers.",null,null],[6,"FnvHashMap","","A `HashMap` using a default FNV hasher.",null,null],[6,"FnvHashSet","","A `HashSet` using a default FNV hasher.",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"fnvhasher"}}],[11,"with_key","","Create an FNV hasher starting with a state corresponding to the hash `key`.",0,{"inputs":[{"name":"u64"}],"output":{"name":"fnvhasher"}}],[11,"finish","","",0,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"write","","",0,null]],"paths":[[3,"FnvHasher"]]};
searchIndex["fs2"] = {"doc":"","items":[[5,"lock_contended_error","fs2","Returns the error that a call to a try lock method on a contended file will return.",null,{"inputs":[],"output":{"name":"error"}}],[5,"free_space","","Returns the number of free bytes in the file system containing the provided path.",null,{"inputs":[{"name":"p"}],"output":{"generics":["u64"],"name":"result"}}],[5,"available_space","","Returns the available space in bytes to non-priveleged users in the file system containing the provided path.",null,{"inputs":[{"name":"p"}],"output":{"generics":["u64"],"name":"result"}}],[5,"total_space","","Returns the total space in bytes in the file system containing the provided path.",null,{"inputs":[{"name":"p"}],"output":{"generics":["u64"],"name":"result"}}],[5,"allocation_granularity","","Returns the filesystem's disk space allocation granularity in bytes. The provided path may be for any file in the filesystem.",null,{"inputs":[{"name":"p"}],"output":{"generics":["u64"],"name":"result"}}],[8,"FileExt","","Extension trait for `std::fs::File` which provides allocation, duplication and locking methods.",null,null],[10,"duplicate","","Returns a duplicate instance of the file.",0,{"inputs":[{"name":"self"}],"output":{"generics":["file"],"name":"result"}}],[10,"allocated_size","","Returns the amount of physical space allocated for a file.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"result"}}],[10,"allocate","","Ensures that at least `len` bytes of disk space are allocated for the file, and the file size is at least `len` bytes. After a successful call to `allocate`, subsequent writes to the file within the specified length are guaranteed not to fail because of lack of disk space.",0,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[10,"lock_shared","","Locks the file for shared usage, blocking if the file is currently locked exclusively.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"lock_exclusive","","Locks the file for exclusive usage, blocking if the file is currently locked.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"try_lock_shared","","Locks the file for shared usage, or returns a an error if the file is currently locked (see `lock_contended_error`).",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"try_lock_exclusive","","Locks the file for shared usage, or returns a an error if the file is currently locked (see `lock_contended_error`).",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"unlock","","Unlocks the file.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}]],"paths":[[8,"FileExt"]]};
searchIndex["futures"] = {"doc":"Zero-cost Futures in Rust","items":[[4,"Async","futures","Return type of future, indicating whether a value is ready or not.",null,null],[13,"Ready","","Represents that a value is immediately ready.",0,null],[13,"NotReady","","Represents that a value is not ready yet, but may be so later.",0,null],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a sink.",null,null],[13,"Ready","","The `start_send` attempt succeeded, so the sending process has started; you must use `Sink::poll_complete` to drive the send to completion.",1,null],[13,"NotReady","","The `start_send` attempt failed due to the sink being full. The value being sent is returned, and the current `Task` will be automatically notified again once the sink has room.",1,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"async"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"async"}],"output":{"name":"bool"}}],[11,"map","","Change the success value of this `Async` with the closure provided",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"async"}}],[11,"is_ready","","Returns whether this is `Async::Ready`",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"async"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"asyncsink"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"asyncsink"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"asyncsink"}],"output":{"name":"bool"}}],[11,"map","","Change the NotReady value of this `AsyncSink` with the closure provided",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"asyncsink"}}],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[0,"future","","Futures",null,null],[3,"Empty","futures::future","A future which is never resolved.",null,null],[3,"Lazy","","A future which defers creation of the actual future until a callback is scheduled.",null,null],[3,"PollFn","","A future which adapts a function returning `Poll`.",null,null],[3,"FutureResult","","A future representing a value that is immediately ready.",null,null],[3,"LoopFn","","A future implementing a tail-recursive loop.",null,null],[3,"AndThen","","Future for the `and_then` combinator, chaining a computation onto the end of another future which completes successfully.",null,null],[3,"Flatten","","Future for the `flatten` combinator, flattening a future-of-a-future to get just the result of the final future.",null,null],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a future-of-a-stream to get just the result of the final stream as a stream.",null,null],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",null,null],[3,"IntoStream","","Future that forwards one element from the underlying future (whether it is success of error) and emits EOF after that.",null,null],[3,"Join","","Future for the `join` combinator, waiting for two futures to complete.",null,null],[3,"Join3","","Future for the `join3` combinator, waiting for three futures to complete.",null,null],[3,"Join4","","Future for the `join4` combinator, waiting for four futures to complete.",null,null],[3,"Join5","","Future for the `join5` combinator, waiting for five futures to complete.",null,null],[3,"Map","","Future for the `map` combinator, changing the type of a future.",null,null],[3,"MapErr","","Future for the `map_err` combinator, changing the error type of a future.",null,null],[3,"FromErr","","Future for the `from_err` combinator, changing the error type of a future.",null,null],[3,"OrElse","","Future for the `or_else` combinator, chaining a computation onto the end of a future which fails with an error.",null,null],[3,"Select","","Future for the `select` combinator, waiting for one of two futures to complete.",null,null],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",null,null],[3,"Select2","","Future for the `select2` combinator, waiting for one of two differently-typed futures to complete.",null,null],[3,"Then","","Future for the `then` combinator, chaining computations on the end of another future regardless of its outcome.",null,null],[3,"Inspect","","Do something with the item of a future, passing it on.",null,null],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",null,null],[3,"JoinAll","","A future which takes a list of futures and resolves with a vector of the completed values.",null,null],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of any of a list of futures to complete.",null,null],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of any of a list of futures to successfully complete. Unlike `select_all`, this future ignores all but the last error, if there are any.",null,null],[3,"Shared","","A future that is cloneable and can be polled in multiple threads. Use `Future::shared()` method to convert any future into a `Shared` future.",null,null],[3,"SharedItem","","A wrapped item of the original future that is cloneable and implements Deref for ease of use.",null,null],[3,"SharedError","","A wrapped error of the original future that is cloneable and implements Deref for ease of use.",null,null],[3,"ExecuteError","","Errors returned from the `Spawn::spawn` function.",null,null],[4,"Loop","","The status of a `loop_fn` loop.",null,null],[13,"Break","","Indicates that the loop has completed with output `T`.",2,null],[13,"Continue","","Indicates that the loop function should be called again with input state `S`.",2,null],[4,"Either","","Combines two different futures yielding the same item and error types into a single type.",null,null],[13,"A","","First branch of the type",3,null],[13,"B","","Second branch of the type",3,null],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the `Execute::spawn` function.",null,null],[13,"Shutdown","","This executor has shut down and will no longer accept new futures to spawn.",4,null],[13,"NoCapacity","","This executor has no more capacity to run more futures. Other futures need to finish before this executor can accept another.",4,null],[5,"empty","","Creates a future which never resolves, representing a computation that never finishes.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"lazy","","Creates a new future which will eventually be the same as the one created by the closure provided.",null,{"inputs":[{"name":"f"}],"output":{"name":"lazy"}}],[5,"poll_fn","","Creates a new future wrapping around a function returning `Poll`.",null,{"inputs":[{"name":"f"}],"output":{"name":"pollfn"}}],[5,"result","","Creates a new \"leaf future\" which will resolve with the given result.",null,{"inputs":[{"name":"result"}],"output":{"name":"futureresult"}}],[5,"ok","","Creates a \"leaf future\" from an immediate value of a finished and successful computation.",null,{"inputs":[{"name":"t"}],"output":{"name":"futureresult"}}],[5,"err","","Creates a \"leaf future\" from an immediate value of a failed computation.",null,{"inputs":[{"name":"e"}],"output":{"name":"futureresult"}}],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",null,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"name":"loopfn"}}],[5,"join_all","","Creates a future which represents a collection of the results of the futures given.",null,{"inputs":[{"name":"i"}],"output":{"name":"joinall"}}],[5,"select_all","","Creates a new future which will select over a list of futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectall"}}],[5,"select_ok","","Creates a new future which will select the first successful future over a list of futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectok"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",5,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",6,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",7,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"futureresult"}}],[11,"poll","","",8,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"from","","",8,{"inputs":[{"name":"result"}],"output":{"name":"self"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",9,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",10,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",11,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",13,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",15,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",16,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",17,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",18,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",19,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",20,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",21,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",22,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",23,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",24,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",25,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",26,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"split","","Splits out the homogeneous type from an either of tuples.",3,null],[11,"poll","","",3,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",27,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",28,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",29,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",30,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",31,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"peek","","If any clone of this `Shared` has completed execution, returns its result immediately without blocking. Otherwise, returns None without triggering the work represented by this `Shared`.",32,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"poll","","",32,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"drop","","",32,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"shareditem"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",33,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"sharederror"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",34,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",34,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",34,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[8,"Future","","Trait for types which are a placeholder of a value that may become available at some later point in time.",null,null],[16,"Item","","The type of value that this future will resolved with if it is successful.",35,null],[16,"Error","","The type of error that this future will resolve with if it fails in a normal fashion.",35,null],[10,"poll","","Query this future to see if its value has become available, registering interest if it is not.",35,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"wait","","Block the current thread until this future is resolved.",35,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Map this future's error to a different error, returning a new future.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"from_err","","Map this future's error to any error implementing `From` for this future's `Error`, returning a new future.",35,{"inputs":[{"name":"self"}],"output":{"name":"fromerr"}}],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Execute another future after this one has resolved successfully.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Execute another future if this one resolves with an error.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"select","","Waits for either one of two futures to complete.",35,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"select"}}],[11,"select2","","Waits for either one of two differently-typed futures to complete.",35,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"select2"}}],[11,"join","","Joins the result of two futures, waiting for them both to complete.",35,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"join"}}],[11,"join3","","Same as `join`, but with more futures.",35,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"}],"output":{"name":"join3"}}],[11,"join4","","Same as `join`, but with more futures.",35,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"}],"output":{"name":"join4"}}],[11,"join5","","Same as `join`, but with more futures.",35,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"},{"name":"e"}],"output":{"name":"join5"}}],[11,"into_stream","","Convert this future into a single element stream.",35,{"inputs":[{"name":"self"}],"output":{"name":"intostream"}}],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",35,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",35,{"inputs":[{"name":"self"}],"output":{"name":"flattenstream"}}],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",35,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"inspect","","Do something with the item of a future, passing it on.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"catch_unwind","","Catches unwinding panics while polling the future.",35,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",35,{"inputs":[{"name":"self"}],"output":{"name":"shared"}}],[8,"IntoFuture","","Class of types which can be converted into a future.",null,null],[16,"Future","","The future that this type can be converted into.",36,null],[16,"Item","","The item that the future may resolve with.",36,null],[16,"Error","","The error that the future may resolve with.",36,null],[10,"into_future","","Consumes this object and produces a future.",36,null],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",null,null],[16,"Future","","The future for the conversion.",37,null],[16,"Error","","Possible errors during conversion.",37,null],[10,"future_from","","Consume the given value, beginning the conversion.",37,null],[8,"Executor","","A trait for types which can spawn fresh futures.",null,null],[10,"execute","","Spawns a future to run on this `Executor`, typically in the \"background\".",38,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["executeerror"],"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"executeerrorkind"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"executeerrorkind"}],"output":{"name":"bool"}}],[11,"new","","Create a new `ExecuteError`",39,{"inputs":[{"name":"executeerrorkind"},{"name":"f"}],"output":{"name":"executeerror"}}],[11,"kind","","Returns the associated reason for the error",39,{"inputs":[{"name":"self"}],"output":{"name":"executeerrorkind"}}],[11,"into_future","","Consumes self and returns the original future that was spawned.",39,{"inputs":[{"name":"self"}],"output":{"name":"f"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"stream","futures","Asynchronous streams",null,null],[3,"Iter","futures::stream","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterStream","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterOk","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterResult","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"Repeat","","Stream that produces the same element repeatedly.",null,null],[3,"AndThen","","A stream combinator which chains a computation onto values produced by a stream.",null,null],[3,"Chain","","An adapter for chaining the output of two streams.",null,null],[3,"Concat","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[3,"Concat2","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[3,"Empty","","A stream which contains no elements.",null,null],[3,"Filter","","A stream combinator used to filter the results of a stream and only yield some values.",null,null],[3,"FilterMap","","A combinator used to filter the results of a stream and simultaneously map them to a different type.",null,null],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one long stream of elements.",null,null],[3,"Fold","","A future used to collect all the results of a stream into one generic type.",null,null],[3,"ForEach","","A stream combinator which executes a unit closure over each item on a stream.",null,null],[3,"FromErr","","A stream combinator to change the error type of a stream.",null,null],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",null,null],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a future.",null,null],[3,"Inspect","","Do something with the items of a stream, passing it on.",null,null],[3,"InspectErr","","Do something with the error of a stream, passing it on.",null,null],[3,"Map","","A stream combinator which will change the type of a stream from one type to another.",null,null],[3,"MapErr","","A stream combinator which will change the error type of a stream from one type to another.",null,null],[3,"Merge","","An adapter for merging the output of two streams.",null,null],[3,"Once","","A stream which emits single element and then EOF.",null,null],[3,"OrElse","","A stream combinator which chains a computation onto errors produced by a stream.",null,null],[3,"Peekable","","A `Stream` that implements a `peek` method.",null,null],[3,"PollFn","","A stream which adapts a function returning `Poll`.",null,null],[3,"Select","","An adapter for merging the output of two streams.",null,null],[3,"Skip","","A stream combinator which skips a number of elements before continuing.",null,null],[3,"SkipWhile","","A stream combinator which skips elements of a stream while a predicate holds.",null,null],[3,"Take","","A stream combinator which returns a maximum number of elements.",null,null],[3,"TakeWhile","","A stream combinator which takes elements from a stream while a predicate holds.",null,null],[3,"Then","","A stream combinator which chains a computation onto each item produced by a stream.",null,null],[3,"Unfold","","A stream which creates futures, polls them and return their result",null,null],[3,"Zip","","An adapter for merging the output of two streams.",null,null],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"Buffered","","An adaptor for a stream of futures to execute the futures concurrently, if possible.",null,null],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures concurrently, if possible, delivering results as they become available.",null,null],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",null,null],[3,"Chunks","","An adaptor that chunks up elements in a vector.",null,null],[3,"Collect","","A future which collects all of the values of a stream into a vector.",null,null],[3,"Wait","","A stream combinator which converts an asynchronous stream to a blocking iterator.",null,null],[3,"SplitStream","","A `Stream` part of the split pair",null,null],[3,"SplitSink","","A `Sink` part of the split pair",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[4,"MergedItem","","An item returned from a merge stream, which represents an item from one or both of the underlying streams.",null,null],[13,"First","","An item from the first stream",40,null],[13,"Second","","An item from the second stream",40,null],[13,"Both","","Items from both streams",40,null],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"j"}],"output":{"name":"iter"}}],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"i"}],"output":{"name":"iterok"}}],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"j"}],"output":{"name":"iterresult"}}],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,{"inputs":[{"name":"t"}],"output":{"name":"repeat"}}],[5,"empty","","Creates a stream which contains no elements.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"once","","Creates a stream of single element",null,{"inputs":[{"name":"result"}],"output":{"name":"once"}}],[5,"poll_fn","","Creates a new stream wrapping around a function returning `Poll`.",null,{"inputs":[{"name":"f"}],"output":{"name":"pollfn"}}],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a `Future`.",null,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"name":"unfold"}}],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"futuresordered"}}],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"futuresunordered"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",41,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",42,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",43,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",44,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",45,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",45,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",45,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",45,null],[11,"poll_complete","","",45,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",45,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",45,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",46,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"poll","","",47,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"poll","","",48,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",49,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",50,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",50,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",50,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",50,null],[11,"poll_complete","","",50,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",50,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",50,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",51,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",51,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",51,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",51,null],[11,"poll_complete","","",51,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",51,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",51,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",52,null],[11,"poll_complete","","",52,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",52,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",52,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",53,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",54,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",55,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",55,null],[11,"poll_complete","","",55,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",55,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",56,null],[11,"poll_complete","","",56,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",56,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",56,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"is_done","","Returns whether the underlying stream has finished or not.",56,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",57,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",58,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",58,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",58,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",58,null],[11,"poll_complete","","",58,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",58,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",58,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",59,null],[11,"poll_complete","","",59,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",59,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",59,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",60,null],[11,"poll_complete","","",60,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",60,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",60,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",61,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",61,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",61,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",61,null],[11,"poll_complete","","",61,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",61,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",61,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",63,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",64,null],[11,"poll_complete","","",64,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",64,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",64,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",65,null],[11,"poll_complete","","",65,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",65,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",65,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"peek","","Peek retrieves a reference to the next item in the stream.",65,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",66,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",67,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",68,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",68,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",68,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",68,null],[11,"poll_complete","","",68,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",68,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",68,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",69,null],[11,"poll_complete","","",69,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",69,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",69,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",70,null],[11,"poll_complete","","",70,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",70,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",70,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",71,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",71,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",71,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",71,null],[11,"poll_complete","","",71,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",71,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",71,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",72,null],[11,"poll_complete","","",72,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",72,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",72,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",73,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",74,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sink_ref","","Get a shared reference to the inner sink. If this combinator has already been polled to completion, None will be returned.",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"sink_mut","","Get a mutable reference to the inner sink. If this combinator has already been polled to completion, None will be returned.",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"stream_ref","","Get a shared reference to the inner stream. If this combinator has already been polled to completion, None will be returned.",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"stream_mut","","Get a mutable reference to the inner stream. If this combinator has already been polled to completion, None will be returned.",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"poll","","",75,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",76,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",76,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",76,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",76,null],[11,"poll_complete","","",76,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",76,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",76,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",77,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",77,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",77,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",77,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",77,null],[11,"poll_complete","","",77,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",77,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",78,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",79,null],[11,"poll_complete","","",79,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",79,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",79,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",79,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",79,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",79,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",80,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"poll"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",81,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",81,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",81,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"next","","",81,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",82,{"inputs":[{"name":"self"},{"name":"splitsink"}],"output":{"generics":["reuniteerror"],"name":"result"}}],[11,"poll","","",82,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",83,{"inputs":[{"name":"self"},{"name":"splitstream"}],"output":{"generics":["reuniteerror"],"name":"result"}}],[11,"start_send","","",83,null],[11,"poll_complete","","",83,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",83,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[0,"futures_unordered","","An unbounded set of futures.",null,null],[3,"FuturesUnordered","futures::stream::futures_unordered","An unbounded set of futures.",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[11,"new","","Constructs a new, empty `FuturesUnordered`",84,{"inputs":[],"output":{"name":"futuresunordered"}}],[11,"len","","Returns the number of futures contained in the set.",84,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the set contains no futures",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push a future into the set.",84,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"iter_mut","","Returns an iterator that allows modifying each future in the set.",84,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"poll","","",84,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"from_iter","","",84,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",85,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",85,null],[11,"new","futures::stream","Constructs a new, empty `FuturesOrdered`",86,{"inputs":[],"output":{"name":"futuresordered"}}],[11,"len","","Returns the number of futures contained in the queue.",86,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the queue contains no futures",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push a future into the queue.",86,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"poll","","",86,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",86,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"Stream","","A stream of values, not all of which may have been produced yet.",null,null],[16,"Item","","The type of item this stream will yield on success.",87,null],[16,"Error","","The type of error this stream may generate.",87,null],[10,"poll","","Attempt to pull out the next value of this stream, returning `None` if the stream is finished.",87,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"wait","","Creates an iterator which blocks the current thread until each item of this stream is resolved.",87,{"inputs":[{"name":"self"}],"output":{"name":"wait"}}],[11,"into_future","","Converts this stream into a `Future`.",87,{"inputs":[{"name":"self"}],"output":{"name":"streamfuture"}}],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",87,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Converts a stream of error type `T` to a stream of error type `U`.",87,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",87,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"filter"}}],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",87,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"filtermap"}}],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",87,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Chain on a computation for when a value is ready, passing the successful results to the provided closure `f`.",87,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Chain on a computation for when an error happens, passing the erroneous result to the provided closure `f`.",87,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",87,{"inputs":[{"name":"self"}],"output":{"name":"collect"}}],[11,"concat2","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",87,{"inputs":[{"name":"self"}],"output":{"name":"concat2"}}],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",87,{"inputs":[{"name":"self"}],"output":{"name":"concat"}}],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",87,{"inputs":[{"name":"self"},{"name":"t"},{"name":"f"}],"output":{"name":"fold"}}],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",87,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",87,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"skipwhile"}}],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",87,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"takewhile"}}],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",87,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"foreach"}}],[11,"from_err","","Map this stream's error to any error implementing `From` for this stream's `Error`, returning a new stream.",87,{"inputs":[{"name":"self"}],"output":{"name":"fromerr"}}],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",87,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"take"}}],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",87,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"skip"}}],[11,"fuse","","Fuse a stream such that `poll` will never again be called once it has finished.",87,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"by_ref","","Borrows a stream, rather than consuming it.",87,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",87,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",87,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffered"}}],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",87,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bufferunordered"}}],[11,"merge","","An adapter for merging the output of two streams.",87,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"merge"}}],[11,"zip","","An adapter for zipping two streams together.",87,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"zip"}}],[11,"chain","","Adapter for chaining two stream.",87,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"chain"}}],[11,"peekable","","Creates a new stream which exposes a `peek` method.",87,{"inputs":[{"name":"self"}],"output":{"name":"peekable"}}],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",87,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"chunks"}}],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",87,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"select"}}],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",87,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"forward"}}],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",87,null],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",87,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"inspect_err","","Do something with the error of this stream, afterwards passing it on.",87,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspecterr"}}],[0,"sink","futures","Asynchronous sinks",null,null],[3,"Buffer","futures::sink","Sink for the `Sink::buffer` combinator, which buffers up to some fixed number of values when the underlying sink is unable to accept them.",null,null],[3,"Wait","","A sink combinator which converts an asynchronous sink to a blocking sink.",null,null],[3,"With","","Sink for the `Sink::with` combinator, chaining a computation to run prior to pushing a value into the underlying sink.",null,null],[3,"WithFlatMap","","Sink for the `Sink::with_flat_map` combinator, chaining a computation that returns an iterator to run prior to pushing a value into the underlying sink",null,null],[3,"Flush","","Future for the `Sink::flush` combinator, which polls the sink until all data has been flushed.",null,null],[3,"Send","","Future for the `Sink::send` combinator, which sends a value to a sink and then waits until the sink has fully flushed.",null,null],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",null,null],[3,"SinkFromErr","","A sink combinator to change the error type of a sink.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two sinks at the same time.",null,null],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",88,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"get_ref","","Get a shared reference to the inner sink.",88,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",88,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",88,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",88,null],[11,"poll_complete","","",88,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",88,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",89,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",89,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",89,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",89,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",89,null],[11,"poll_complete","","",89,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",89,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",90,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",90,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consume the `Flush` and return the inner sink.",90,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",90,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",91,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",91,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",91,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",91,null],[11,"poll_complete","","",91,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",91,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",91,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",92,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",92,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",92,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",93,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",94,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",94,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",94,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",94,null],[11,"poll_complete","","",94,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",94,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",94,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",95,null],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"start_send","","",95,null],[11,"poll_complete","","",95,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",95,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",96,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",96,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",96,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",96,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",96,null],[11,"poll_complete","","",96,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",96,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Sends a value to this sink, blocking the current thread until it's able to do so.",97,null],[11,"flush","","Flushes any buffered data in this sink, blocking the current thread until it's entirely flushed.",97,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"close","","Close this sink, blocking the current thread until it's entirely closed.",97,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[6,"BoxSink","","A type alias for `Box<Sink + Send>`",null,null],[8,"Sink","","A `Sink` is a value into which other values can be sent, asynchronously.",null,null],[16,"SinkItem","","The type of value that the sink accepts.",98,null],[16,"SinkError","","The type of value produced by the sink when an error occurs.",98,null],[10,"start_send","","Begin the process of sending a value to the sink.",98,null],[10,"poll_complete","","Flush all output from this sink, if necessary.",98,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","A method to indicate that no more values will ever be pushed into this sink.",98,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"wait","","Creates a new object which will produce a synchronous sink.",98,{"inputs":[{"name":"self"}],"output":{"name":"wait"}}],[11,"with","","Composes a function in front of the sink.",98,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"with"}}],[11,"with_flat_map","","Composes a function in front of the sink.",98,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"withflatmap"}}],[11,"sink_map_err","","Transforms the error returned by the sink.",98,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"sinkmaperr"}}],[11,"sink_from_err","","Map this sink's error to any error implementing `From` for this sink's `Error`, returning a new sink.",98,{"inputs":[{"name":"self"}],"output":{"name":"sinkfromerr"}}],[11,"buffer","","Adds a fixed-size buffer to the current sink.",98,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffer"}}],[11,"fanout","","Fanout items to multiple sinks.",98,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"fanout"}}],[11,"flush","","A future that completes when the sink has finished processing all pending requests.",98,{"inputs":[{"name":"self"}],"output":{"name":"flush"}}],[11,"send","","A future that completes after the given item has been fully processed into the sink, including flushing.",98,null],[11,"send_all","","A future that completes after the given stream has been fully processed into the sink, including flushing.",98,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"sendall"}}],[0,"task","futures","Tasks used to drive a future computation",null,null],[3,"Task","futures::task","A handle to a \"task\", which represents a single lightweight \"thread\" of execution driving a future to completion.",null,null],[3,"AtomicTask","","A synchronization primitive for task notification.",null,null],[3,"LocalKey","","A key for task-local data stored in a future's task.",null,null],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",null,null],[5,"current","","Returns a handle to the current task to call `notify` at a later date.",null,{"inputs":[],"output":{"name":"task"}}],[5,"init","","Initialize the `futures` task system.",null,null],[5,"with_unpark_event","","For the duration of the given callback, add an \"unpark event\" to be triggered when the task handle is used to unpark the task.",null,{"inputs":[{"name":"unparkevent"},{"name":"f"}],"output":{"name":"r"}}],[8,"EventSet","","A concurrent set which allows for the insertion of `usize` values.",null,null],[10,"insert","","Insert the given ID into the set",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[0,"executor","futures","Executors",null,null],[3,"Run","futures::executor","Units of work submitted to an `Executor`, currently only created internally.",null,null],[3,"Spawn","","Representation of a spawned future/stream.",null,null],[3,"NotifyHandle","","A `NotifyHandle` is the core value through which notifications are routed in the `futures` crate.",null,null],[5,"spawn","","Spawns a future or stream, returning it and the new task responsible for running it to completion.",null,{"inputs":[{"name":"t"}],"output":{"name":"spawn"}}],[5,"with_notify","","Sets the `NotifyHandle` of the current task for the duration of the provided closure.",null,{"inputs":[{"name":"t"},{"name":"usize"},{"name":"f"}],"output":{"name":"r"}}],[8,"Unpark","","A trait which represents a sink of notifications that a future is ready to make progress.",null,null],[10,"unpark","","Indicates that an associated future and/or task are ready to make progress.",100,{"inputs":[{"name":"self"}],"output":null}],[8,"Executor","","A trait representing requests to poll futures.",null,null],[10,"execute","","Requests that `Run` is executed soon on the given executor.",101,{"inputs":[{"name":"self"},{"name":"run"}],"output":null}],[8,"Notify","","A trait which represents a sink of notifications that a future is ready to make progress.",null,null],[10,"notify","","Indicates that an associated future and/or task are ready to make progress.",102,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone_id","","This function is called whenever a new copy of `id` is needed.",102,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"drop_id","","All instances of `Task` store an `id` that they're going to internally notify with, and this function is called when the `Task` is dropped.",102,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[8,"UnsafeNotify","","An unsafe trait for implementing custom forms of memory management behind a `Task`.",null,null],[10,"clone_raw","","Creates a new `NotifyHandle` from this instance of `UnsafeNotify`.",103,{"inputs":[{"name":"self"}],"output":{"name":"notifyhandle"}}],[10,"drop_raw","","Drops this instance of `UnsafeNotify`, deallocating resources associated with it.",103,{"inputs":[{"name":"self"}],"output":null}],[0,"sync","futures","Future-aware synchronization",null,null],[3,"BiLock","futures::sync","A type of futures-powered synchronization primitive which is a mutex between two possible owners.",null,null],[3,"BiLockGuard","","Returned RAII guard from the `poll_lock` method.",null,null],[3,"BiLockAcquire","","Future returned by `BiLock::lock` which will resolve when the lock is acquired.",null,null],[3,"BiLockAcquired","","Resolved value of the `BiLockAcquire<T>` future.",null,null],[0,"oneshot","","A one-shot, futures-aware channel",null,null],[3,"Receiver","futures::sync::oneshot","A future representing the completion of a computation happening elsewhere in memory.",null,null],[3,"Sender","","Represents the completion half of a oneshot through which the result of a computation is signaled.",null,null],[3,"Canceled","","Error returned from a `Receiver<T>` whenever the corresponding `Sender<T>` is dropped.",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Execute` instances below must be able to spawn.",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,null],[5,"spawn","","Spawns a `future` onto the instance of `Executor` provided, `executor`, returning a handle representing the completion of the future.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided `s`.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Completes this oneshot with a successful result.",105,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has paired with has gone away.",105,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has gone away.",105,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"drop","","",105,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"canceled"}}],[11,"eq","","",106,{"inputs":[{"name":"self"},{"name":"canceled"}],"output":{"name":"bool"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",106,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",104,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",104,{"inputs":[{"name":"self"}],"output":{"generics":["canceled"],"name":"poll"}}],[11,"drop","","",104,{"inputs":[{"name":"self"}],"output":null}],[11,"forget","","Drop this future without canceling the underlying future.",107,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",107,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",107,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",108,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",108,{"inputs":[{"name":"self"}],"output":null}],[0,"mpsc","futures::sync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure.",null,null],[3,"Sender","futures::sync::mpsc","The transmission end of a channel which is used to send values.",null,null],[3,"UnboundedSender","","The transmission end of a channel which is used to send values.",null,null],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"UnboundedReceiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a channel is dropped",null,null],[3,"TrySendError","","Error type returned from `try_send`",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Executor` instances must be able to execute for `spawn`.",null,null],[5,"channel","","Creates an in-memory channel implementation of the `Stream` trait with bounded capacity.",null,null],[5,"unbounded","","Creates an in-memory channel implementation of the `Stream` trait with unbounded capacity.",null,null],[5,"spawn","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream.",null,{"inputs":[{"name":"s"},{"name":"e"},{"name":"usize"}],"output":{"name":"spawnhandle"}}],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream, with unbounded buffering.",null,{"inputs":[{"name":"s"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",113,{"inputs":[{"name":"self"}],"output":{"name":"senderror"}}],[11,"eq","","",113,{"inputs":[{"name":"self"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"self"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"clone","","",114,{"inputs":[{"name":"self"}],"output":{"name":"trysenderror"}}],[11,"eq","","",114,{"inputs":[{"name":"self"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"self"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",113,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",113,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",114,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_full","","Returns true if this error is a result of the channel being full",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_disconnected","","Returns true if this error is a result of the receiver being dropped",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",114,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"try_send","","Attempts to send a message on this `Sender<T>` without blocking.",109,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["trysenderror"],"name":"result"}}],[11,"poll_ready","","Polls the channel to determine if there is guaranteed to be capacity to send at least one item without waiting.",109,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"start_send","","",109,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"startsend"}}],[11,"poll_complete","","",109,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"close","","",109,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"unbounded_send","","Sends the provided message along this channel.",110,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"result"}}],[11,"start_send","","",110,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"startsend"}}],[11,"poll_complete","","",110,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"close","","",110,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"unboundedsender"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"sender"}}],[11,"drop","","",109,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Closes the receiving half",111,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",111,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"drop","","",111,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Closes the receiving half",112,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",112,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"poll","","",115,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",116,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","futures::sync","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BiLock` protecting the provided data.",117,null],[11,"poll_lock","","Attempt to acquire this lock, returning `NotReady` if it can't be acquired.",117,{"inputs":[{"name":"self"}],"output":{"generics":["bilockguard"],"name":"async"}}],[11,"lock","","Perform a \"blocking lock\" of this lock, consuming this lock handle and returning a future to the acquired lock.",117,{"inputs":[{"name":"self"}],"output":{"name":"bilockacquire"}}],[11,"reunite","","Attempts to put the two \"halves\" of a `BiLock<T>` back together and recover the original value. Succeeds only if the two `BiLock<T>`s originated from the same call to `BiLock::new`.",117,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["reuniteerror"],"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",118,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",118,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",118,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",119,{"inputs":[{"name":"self"}],"output":{"generics":["bilockacquired"],"name":"poll"}}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"unlock","","Recovers the original `BiLock<T>`, unlocking this lock.",120,{"inputs":[{"name":"self"}],"output":{"name":"bilock"}}],[11,"deref","","",120,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",120,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",120,{"inputs":[{"name":"self"}],"output":null}],[0,"unsync","futures","Future-aware single-threaded synchronization",null,null],[0,"mpsc","futures::unsync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure, for use communicating between tasks on the same thread.",null,null],[3,"Sender","futures::unsync::mpsc","The transmission end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded channel.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a channel is dropped",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Executor` instances must be able to execute for `spawn`.",null,null],[5,"channel","","Creates a bounded in-memory channel with buffered storage.",null,null],[5,"unbounded","","Creates an unbounded in-memory channel with buffered storage.",null,null],[5,"spawn","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream.",null,{"inputs":[{"name":"s"},{"name":"e"},{"name":"usize"}],"output":{"name":"spawnhandle"}}],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream, with unbounded buffering.",null,{"inputs":[{"name":"s"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",121,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"start_send","","",121,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"startsend"}}],[11,"poll_complete","","",121,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"close","","",121,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"drop","","",121,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"close","","Closes the receiving half",122,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",122,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"drop","","",122,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",123,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"start_send","","",123,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"startsend"}}],[11,"poll_complete","","",123,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"close","","",123,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"unbounded_send","","Sends the provided message along this channel.",123,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"result"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"close","","Closes the receiving half",124,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",124,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",125,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",125,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll","","",126,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",127,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"oneshot","futures::unsync","A one-shot, futures-aware channel",null,null],[3,"Sender","futures::unsync::oneshot","Represents the completion half of a oneshot through which the result of a computation is signaled.",null,null],[3,"Receiver","","A future representing the completion of a computation happening elsewhere in memory.",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Spawn` instances below must be able to spawn.",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,null],[5,"spawn","","Spawns a `future` onto the instance of `Executor` provided, `executor`, returning a handle representing the completion of the future.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided `s`.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Completes this oneshot with a successful result.",128,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has paired with has gone away.",128,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has gone away.",128,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"drop","","",128,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",129,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",129,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","",129,{"inputs":[{"name":"self"}],"output":null}],[11,"forget","","Drop this future without canceling the underlying future.",130,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",130,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",131,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"prelude","futures","A \"prelude\" for crates using the `futures` crate.",null,null],[6,"Poll","","Return type of the `Future::poll` method, indicates whether a future's value is ready or not.",null,null],[6,"StartSend","","Return type of the `Sink::start_send` method, indicating the outcome of a send attempt. See `AsyncSink` for more details.",null,null],[14,"try_ready","","A macro for extracting the successful type of a `Poll<T, E>`.",null,null],[14,"task_local","","A macro to create a `static` of type `LocalKey`",null,null],[11,"from","futures::executor","",132,{"inputs":[{"name":"nodetohandle"}],"output":{"name":"notifyhandle"}}],[11,"new","futures::task","Create an `AtomicTask` initialized with the given `Task`",133,{"inputs":[],"output":{"name":"atomictask"}}],[11,"register","","Registers the current task to be notified on calls to `notify`.",133,{"inputs":[{"name":"self"}],"output":null}],[11,"notify","","Notifies the task that last called `register`.",133,{"inputs":[{"name":"self"}],"output":null}],[11,"default","","",133,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"with","","Access this task-local key, running the provided closure with a reference to the value.",134,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"r"}}],[11,"poll_future","futures::executor","Polls the internal future, scheduling notifications to be sent to the `unpark` argument.",135,{"inputs":[{"name":"self"},{"generics":["unpark"],"name":"arc"}],"output":{"name":"poll"}}],[11,"wait_future","","Waits for the internal future to complete, blocking this thread's execution until it does.",135,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"execute","","A specialized function to request running a future to completion on the specified executor.",135,{"inputs":[{"name":"self"},{"generics":["executor"],"name":"arc"}],"output":null}],[11,"poll_stream","","Like `poll_future`, except polls the underlying stream.",135,{"inputs":[{"name":"self"},{"generics":["unpark"],"name":"arc"}],"output":{"generics":["option"],"name":"poll"}}],[11,"wait_stream","","Like `wait_future`, except only waits for the next element to arrive on the underlying stream.",135,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"start_send","","Invokes the underlying `start_send` method with this task in place.",135,null],[11,"poll_flush","","Invokes the underlying `poll_complete` method with this task in place.",135,{"inputs":[{"name":"self"},{"name":"arc"}],"output":{"name":"poll"}}],[11,"wait_send","","Blocks the current thread until it's able to send `value` on this sink.",135,null],[11,"wait_flush","","Blocks the current thread until it's able to flush this sink.",135,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"wait_close","","Blocks the current thread until it's able to close this sink.",135,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"run","","Actually run the task (invoking `poll` on its future) on the current thread.",136,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","futures::task","",137,{"inputs":[{"name":"self"}],"output":{"name":"unparkevent"}}],[11,"new","","Construct an unpark event that will insert `id` into `set` when triggered.",137,{"inputs":[{"generics":["eventset"],"name":"arc"},{"name":"usize"}],"output":{"name":"unparkevent"}}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","futures::executor","",132,{"inputs":[{"name":"arc"}],"output":{"name":"notifyhandle"}}],[11,"clone_id","","This function is called whenever a new copy of `id` is needed.",102,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"drop_id","","All instances of `Task` store an `id` that they're going to internally notify with, and this function is called when the `Task` is dropped.",102,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone","futures::task","",138,{"inputs":[{"name":"self"}],"output":{"name":"task"}}],[11,"notify","","Indicate that the task should attempt to poll its future in a timely fashion.",138,{"inputs":[{"name":"self"}],"output":null}],[11,"is_current","","Returns `true` when called from within the context of the task.",138,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"will_notify_current","","This function is intended as a performance optimization for structures which store a `Task` internally.",138,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",138,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","futures::executor","Get a shared reference to the object the Spawn is wrapping.",135,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",135,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consume the Spawn, returning its inner object",135,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be sent to the `notify` argument.",135,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"name":"poll"}}],[11,"poll_stream_notify","","Like `poll_future_notify`, except polls the underlying stream.",135,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send_notify","","Invokes the underlying `start_send` method with this task in place.",135,null],[11,"poll_flush_notify","","Invokes the underlying `poll_complete` method with this task in place.",135,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"name":"poll"}}],[11,"close_notify","","Invokes the underlying `close` method with this task in place.",135,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"name":"poll"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `NotifyHandle` directly.",132,null],[11,"notify","","Invokes the underlying instance of `Notify` with the provided `id`.",132,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone","","",132,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",132,{"inputs":[{"name":"self"}],"output":null}],[11,"from","","",132,{"inputs":[{"name":"t"}],"output":{"name":"notifyhandle"}}]],"paths":[[4,"Async"],[4,"AsyncSink"],[4,"Loop"],[4,"Either"],[4,"ExecuteErrorKind"],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,"FutureResult"],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,"FlattenStream"],[3,"Fuse"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,"SelectNext"],[3,"Select2"],[3,"Then"],[3,"Inspect"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"SelectAll"],[3,"SelectOk"],[3,"Shared"],[3,"SharedItem"],[3,"SharedError"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[3,"ExecuteError"],[4,"MergedItem"],[3,"Iter"],[3,"IterOk"],[3,"IterResult"],[3,"Repeat"],[3,"AndThen"],[3,"Chain"],[3,"Concat2"],[3,"Concat"],[3,"Empty"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fold"],[3,"ForEach"],[3,"FromErr"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"InspectErr"],[3,"Map"],[3,"MapErr"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"Peekable"],[3,"PollFn"],[3,"Select"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"Forward"],[3,"Buffered"],[3,"BufferUnordered"],[3,"CatchUnwind"],[3,"Chunks"],[3,"Collect"],[3,"Wait"],[3,"SplitStream"],[3,"SplitSink"],[3,"FuturesUnordered"],[3,"IterMut"],[3,"FuturesOrdered"],[8,"Stream"],[3,"With"],[3,"WithFlatMap"],[3,"Flush"],[3,"SinkFromErr"],[3,"Send"],[3,"SendAll"],[3,"SinkMapErr"],[3,"Fanout"],[3,"Buffer"],[3,"Wait"],[8,"Sink"],[8,"EventSet"],[8,"Unpark"],[8,"Executor"],[8,"Notify"],[8,"UnsafeNotify"],[3,"Receiver"],[3,"Sender"],[3,"Canceled"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"TrySendError"],[3,"SpawnHandle"],[3,"Execute"],[3,"BiLock"],[3,"BiLockGuard"],[3,"BiLockAcquire"],[3,"BiLockAcquired"],[3,"Sender"],[3,"Receiver"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"Execute"],[3,"NotifyHandle"],[3,"AtomicTask"],[3,"LocalKey"],[3,"Spawn"],[3,"Run"],[3,"UnparkEvent"],[3,"Task"]]};
searchIndex["gfx"] = {"doc":"An efficient, low-level, bindless graphics API for Rust. See the blog for explanations and annotated examples.","items":[[0,"preset","gfx","State presets",null,null],[0,"blend","gfx::preset","Blending preset modes.",null,null],[17,"REPLACE","gfx::preset::blend","When combining two fragments, choose the source value",null,null],[17,"ADD","","When combining two fragments, add their values together, saturating at 1.0",null,null],[17,"MULTIPLY","","When combining two fragments, multiply their values together.",null,null],[17,"ALPHA","","When combining two fragments, add the value of the source times its alpha channel with the value of the destination multiplied by the inverse of the source alpha channel. Has the usual transparency effect: mixes the two colors using a fraction of each one specified by the alpha of the source.",null,null],[17,"INVERT","","When combining two fragments, subtract the destination color from a constant color using the source color as weight. Has an invert effect with the constant color as base and source color controlling displacement from the base color. A white source color and a white value results in plain invert. The output alpha is same as destination alpha.",null,null],[0,"depth","gfx::preset","Depth preset modes.",null,null],[17,"PASS_TEST","gfx::preset::depth","Always pass the depth test, no writes",null,null],[17,"LESS_EQUAL_TEST","","\"<=\" comparison with read-only depth",null,null],[17,"LESS_EQUAL_WRITE","","\"<=\" comparison with writable depth",null,null],[0,"state","gfx","Fixed-function hardware state.",null,null],[4,"FrontFace","gfx::state","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",0,null],[13,"CounterClockwise","","Counter-clockwise winding order.",0,null],[6,"LineWidth","","Width of a line. Could be f32 if not for Hash deriving issues.",null,null],[6,"OffsetSlope","","Slope depth offset factor Could be f32 if not for Hash deriving issues.",null,null],[6,"OffsetUnits","","Number of units to offset, where the unit is the minimal difference in the depth value dictated by the precision of the depth buffer.",null,null],[3,"Offset","","How to offset vertices in screen space, if at all.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[4,"CullFace","","Which face, if any, to cull.",null,null],[13,"Nothing","","",2,null],[13,"Front","","",2,null],[13,"Back","","",2,null],[4,"RasterMethod","","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",3,null],[13,"Line","","Rasterize as a line with the given width.",3,null],[13,"Fill","","Rasterize as a face.",3,null],[3,"MultiSample","","Multi-sampling rasterization mode",null,null],[3,"Rasterizer","","Primitive rasterization state. Note that GL allows different raster method to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",4,null],[12,"cull_face","","Which face should be culled.",4,null],[12,"method","","How to rasterize this primitive.",4,null],[12,"offset","","Any polygon offset to apply.",4,null],[12,"samples","","Multi-sampling mode.",4,null],[4,"Comparison","","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",5,null],[13,"Less","","`x < y`",5,null],[13,"LessEqual","","`x <= y`",5,null],[13,"Equal","","`x == y`",5,null],[13,"GreaterEqual","","`x >= y`",5,null],[13,"Greater","","`x > y`",5,null],[13,"NotEqual","","`x != y`",5,null],[13,"Always","","`true`",5,null],[4,"StencilOp","","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",6,null],[13,"Zero","","Set the value in the stencil buffer to zero.",6,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",6,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",6,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",6,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",6,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",6,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",6,null],[3,"StencilSide","","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",7,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they are read before doing the stencil test.",7,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",7,null],[12,"op_fail","","What operation to do if the stencil test fails.",7,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",7,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",7,null],[3,"Stencil","","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",8,null],[12,"back","","",8,null],[3,"Depth","","Depth test state.",null,null],[12,"fun","","Comparison function to use.",9,null],[12,"write","","Specify whether to write to the depth buffer or not.",9,null],[4,"Equation","","",null,null],[13,"Add","","Adds source and destination. Source and destination are multiplied by blending parameters before addition.",10,null],[13,"Sub","","Subtracts destination from source. Source and destination are multiplied by blending parameters before subtraction.",10,null],[13,"RevSub","","Subtracts source from destination. Source and destination are multiplied by blending parameters before subtraction.",10,null],[13,"Min","","Component-wise minimum value of source and destination. Blending parameters are ignored.",10,null],[13,"Max","","Component-wise maximum value of source and destination. Blending parameters are ignored.",10,null],[4,"BlendValue","","",null,null],[13,"SourceColor","","",11,null],[13,"SourceAlpha","","",11,null],[13,"DestColor","","",11,null],[13,"DestAlpha","","",11,null],[13,"ConstColor","","",11,null],[13,"ConstAlpha","","",11,null],[4,"Factor","","",null,null],[13,"Zero","","",12,null],[13,"One","","",12,null],[13,"SourceAlphaSaturated","","",12,null],[13,"ZeroPlus","","",12,null],[13,"OneMinus","","",12,null],[3,"BlendChannel","","",null,null],[12,"equation","","",13,null],[12,"source","","",13,null],[12,"destination","","",13,null],[3,"Blend","","",null,null],[12,"color","","",14,null],[12,"alpha","","",14,null],[3,"ColorMask","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[3,"Color","","The state of an active color render target",null,null],[12,"mask","","Color mask to use.",15,null],[12,"blend","","Optional blending.",15,null],[3,"RefValues","","The complete set of the rasterizer reference values. Switching these doesn't roll the hardware context.",null,null],[12,"stencil","","Stencil front and back values.",16,null],[12,"blend","","Constant blend color.",16,null],[8,"Device","gfx","A `Device` is responsible for submitting `CommandBuffer`s to the GPU. ",null,null],[16,"Resources","","Associated `Resources` type.",17,null],[16,"CommandBuffer","","Associated `CommandBuffer` type. Every `Device` type can only work with one `CommandBuffer` type.",17,null],[10,"get_capabilities","","Returns the capabilities of this `Ðevice`.",17,{"inputs":[{"name":"self"}],"output":{"name":"capabilities"}}],[10,"pin_submitted_resources","","Pin everything from this handle manager to live for a frame.",17,null],[10,"submit","","Submits a `CommandBuffer` to the GPU for execution.",17,null],[10,"fenced_submit","","Submits a `CommandBuffer` to the GPU for execution. returns a fence that is signaled after the GPU has executed all commands",17,null],[10,"wait_fence","","Stalls the current thread until the fence is satisfied",17,null],[10,"cleanup","","Cleanup unused resources. This should be called between frames. ",17,null],[4,"Primitive","","Describes what geometric primitives are created from vertex data.",null,null],[13,"PointList","","Each vertex represents a single point.",18,null],[13,"LineList","","Each pair of vertices represent a single line segment. For example, with `[a, b, c, d, e]`, `a` and `b` form a line, `c` and `d` form a line, and `e` is discarded.",18,null],[13,"LineStrip","","Every two consecutive vertices represent a single line segment. Visually forms a \"path\" of lines, as they are all connected. For example, with `[a, b, c]`, `a` and `b` form a line line, and `b` and `c` form a line.",18,null],[13,"TriangleList","","Each triplet of vertices represent a single triangle. For example, with `[a, b, c, d, e]`, `a`, `b`, and `c` form a triangle, `d` and `e` are discarded.",18,null],[13,"TriangleStrip","","Every three consecutive vertices represent a single triangle. For example, with `[a, b, c, d]`, `a`, `b`, and `c` form a triangle, and `b`, `c`, and `d` form a triangle.",18,null],[13,"LineListAdjacency","","Each quadtruplet of vertices represent a single line segment with adjacency information. For example, with `[a, b, c, d]`, `b` and `c` form a line, and `a` and `d` are the adjacent vertices.",18,null],[13,"LineStripAdjacency","","Every four consecutive vertices represent a single line segment with adjacency information. For example, with `[a, b, c, d, e]`, `[a, b, c, d]` form a line segment with adjacency, and `[b, c, d, e]` form a line segment with adjacency.",18,null],[13,"TriangleListAdjacency","","Each sextuplet of vertices represent a single traingle with adjacency information. For example, with `[a, b, c, d, e, f]`, `a`, `c`, and `e` form a traingle, and `b`, `d`, and `f` are the adjacent vertices, where `b` is adjacent to the edge formed by `a` and `c`, `d` is adjacent to the edge `c` and `e`, and `f` is adjacent to the edge `e` and `a`.",18,null],[13,"TriangleStripAdjacency","","Every even-numbered vertex (every other starting from the first) represents an additional vertex for the triangle strip, while odd-numbered vertices (every other starting from the second) represent adjacent vertices. For example, with `[a, b, c, d, e, f, g, h]`, `[a, c, e, g]` form a triangle strip, and `[b, d, f, h]` are the adjacent vertices, where `b`, `d`, and `f` are adjacent to the first triangle in the strip, and `d`, `f`, and `h` are adjacent to the second.",18,null],[13,"PatchList","","Patch list, used with shaders capable of producing primitives on their own (tessellation)",18,null],[8,"Resources","","Different types of a specific API. ",null,null],[16,"Buffer","","",19,null],[16,"Shader","","",19,null],[16,"Program","","",19,null],[16,"PipelineStateObject","","",19,null],[16,"Texture","","",19,null],[16,"ShaderResourceView","","",19,null],[16,"UnorderedAccessView","","",19,null],[16,"RenderTargetView","","",19,null],[16,"DepthStencilView","","",19,null],[16,"Sampler","","",19,null],[16,"Fence","","",19,null],[16,"Mapping","","",19,null],[4,"SubmissionError","","",null,null],[13,"AccessOverlap","","",20,null],[6,"SubmissionResult","","",null,null],[6,"VertexCount","","Draw vertex count.",null,null],[6,"InstanceCount","","Draw number of instances",null,null],[4,"ShaderSet","","A complete set of shaders to link a program.",null,null],[13,"Simple","","Simple program: Vs-Ps",21,null],[13,"Geometry","","Geometry shader programs: Vs-Gs-Ps",21,null],[13,"Tessellated","","Tessellated TODO: Tessellated, TessellatedGeometry, TransformFeedback",21,null],[3,"VertexShader","","",null,null],[3,"HullShader","","",null,null],[3,"DomainShader","","",null,null],[3,"GeometryShader","","",null,null],[3,"PixelShader","","",null,null],[0,"buffer","","Memory buffers",null,null],[3,"Raw","gfx::buffer","Untyped buffer",null,null],[4,"Role","","Role of the memory buffer.",null,null],[13,"Vertex","","Generic vertex buffer",22,null],[13,"Index","","Index buffer",22,null],[13,"Constant","","Constant buffer",22,null],[13,"Staging","","Staging buffer",22,null],[3,"Info","","An information block that is immutable and associated to each buffer.",null,null],[12,"role","","Role",23,null],[12,"usage","","Usage hint",23,null],[12,"bind","","Bind flags",23,null],[12,"size","","Size in bytes",23,null],[12,"stride","","Stride of a single element, in bytes. Only used for structured buffers that you use via shader resource / unordered access views.",23,null],[4,"CreationError","","Error creating a buffer.",null,null],[13,"UnsupportedBind","","Some of the bind flags are not supported.",24,null],[13,"Other","","Unknown other error.",24,null],[13,"UnsupportedUsage","","Usage mode is not supported",24,null],[0,"format","gfx","Universal format specification. Applicable to textures, views, and vertex buffers.",null,null],[4,"ChannelType","gfx::format","Type of a surface channel. This is how we interpret the storage allocated with `SurfaceType`.",null,null],[13,"Int","","",25,null],[13,"Uint","","",25,null],[13,"Inorm","","",25,null],[13,"Unorm","","",25,null],[13,"Float","","",25,null],[13,"Srgb","","",25,null],[4,"Int","","",null,null],[4,"Uint","","",null,null],[4,"Inorm","","",null,null],[4,"Unorm","","",null,null],[4,"Float","","",null,null],[4,"Srgb","","",null,null],[4,"SurfaceType","","Type of the allocated texture surface. It is supposed to only carry information about the number of bits per each channel. The actual types are up to the views to decide and interpret. The actual components are up to the swizzle to define.",null,null],[13,"R4_G4","","",26,null],[13,"R4_G4_B4_A4","","",26,null],[13,"R5_G5_B5_A1","","",26,null],[13,"R5_G6_B5","","",26,null],[13,"R8","","",26,null],[13,"R8_G8","","",26,null],[13,"R8_G8_B8_A8","","",26,null],[13,"R10_G10_B10_A2","","",26,null],[13,"R11_G11_B10","","",26,null],[13,"R16","","",26,null],[13,"R16_G16","","",26,null],[13,"R16_G16_B16","","",26,null],[13,"R16_G16_B16_A16","","",26,null],[13,"R32","","",26,null],[13,"R32_G32","","",26,null],[13,"R32_G32_B32","","",26,null],[13,"R32_G32_B32_A32","","",26,null],[13,"B8_G8_R8_A8","","",26,null],[13,"D16","","",26,null],[13,"D24","","",26,null],[13,"D24_S8","","",26,null],[13,"D32","","",26,null],[4,"R4_G4","","",null,null],[4,"R4_G4_B4_A4","","",null,null],[4,"R5_G5_B5_A1","","",null,null],[4,"R5_G6_B5","","",null,null],[4,"R8","","",null,null],[4,"R8_G8","","",null,null],[4,"R8_G8_B8_A8","","",null,null],[4,"R10_G10_B10_A2","","",null,null],[4,"R11_G11_B10","","",null,null],[4,"R16","","",null,null],[4,"R16_G16","","",null,null],[4,"R16_G16_B16","","",null,null],[4,"R16_G16_B16_A16","","",null,null],[4,"R32","","",null,null],[4,"R32_G32","","",null,null],[4,"R32_G32_B32","","",null,null],[4,"R32_G32_B32_A32","","",null,null],[4,"B8_G8_R8_A8","","",null,null],[4,"D16","","",null,null],[4,"D24","","",null,null],[4,"D24_S8","","",null,null],[4,"D32","","",null,null],[4,"ChannelSource","","Source channel in a swizzle configuration. Some may redirect onto different physical channels, some may be hardcoded to 0 or 1.",null,null],[13,"Zero","","",27,null],[13,"One","","",27,null],[13,"X","","",27,null],[13,"Y","","",27,null],[13,"Z","","",27,null],[13,"W","","",27,null],[3,"Swizzle","","Channel swizzle configuration for the resource views. Note: It's not currently mirrored at compile-time, thus providing less safety and convenience.",null,null],[12,"0","","",28,null],[12,"1","","",28,null],[12,"2","","",28,null],[12,"3","","",28,null],[3,"Format","","Complete run-time surface format.",null,null],[12,"0","","",29,null],[12,"1","","",29,null],[8,"SurfaceTyped","","Compile-time surface type trait.",null,null],[16,"DataType","","The corresponding data type to be passed from CPU.",30,null],[10,"get_surface_type","","Return the run-time value of the type.",30,{"inputs":[],"output":{"name":"surfacetype"}}],[8,"BufferSurface","","An ability of a surface type to be used for vertex buffers.",null,null],[8,"TextureSurface","","An ability of a surface type to be used for textures.",null,null],[8,"RenderSurface","","An ability of a surface type to be used for render targets.",null,null],[8,"DepthSurface","","An ability of a surface type to be used for depth targets.",null,null],[8,"StencilSurface","","An ability of a surface type to be used for stencil targets.",null,null],[8,"ChannelTyped","","Compile-time channel type trait.",null,null],[16,"ShaderType","","Shader-visible type that corresponds to this channel. For example, normalized integers are visible as floats.",31,null],[10,"get_channel_type","","Return the run-time value of the type.",31,{"inputs":[],"output":{"name":"channeltype"}}],[8,"TextureChannel","","An ability of a channel type to be used for textures.",null,null],[8,"RenderChannel","","An ability of a channel type to be used for render targets.",null,null],[8,"BlendChannel","","An ability of a channel type to be used for blended render targets.",null,null],[8,"Formatted","","Compile-time full format trait.",null,null],[16,"Surface","","Associated surface type.",32,null],[16,"Channel","","Associated channel type.",32,null],[16,"View","","Shader view type of this format.",32,null],[11,"get_format","","Return the run-time value of the type.",32,{"inputs":[],"output":{"name":"format"}}],[8,"BufferFormat","","Ability to be used for vertex buffers.",null,null],[8,"DepthFormat","","Ability to be used for depth targets.",null,null],[8,"StencilFormat","","Ability to be used for vertex buffers.",null,null],[8,"DepthStencilFormat","","Ability to be used for depth+stencil targets.",null,null],[8,"TextureFormat","","Ability to be used for textures.",null,null],[8,"RenderFormat","","Ability to be used for render targets.",null,null],[8,"BlendFormat","","Ability to be used for blended render targets.",null,null],[3,"U8Norm","","",null,null],[12,"0","","",33,null],[3,"I8Norm","","",null,null],[12,"0","","",34,null],[3,"U16Norm","","",null,null],[12,"0","","",35,null],[3,"I16Norm","","",null,null],[12,"0","","",36,null],[3,"F16","","",null,null],[12,"0","","",37,null],[6,"Vec1","","Abstracted 1-element container for macro internal use",null,null],[6,"Vec2","","Abstracted 2-element container for macro internal use",null,null],[6,"Vec3","","Abstracted 3-element container for macro internal use",null,null],[6,"Vec4","","Abstracted 4-element container for macro internal use",null,null],[6,"Rgba8","","Standard 8bits RGBA format.",null,null],[6,"Srgba8","","Standard 8bit gamma transforming RGB format.",null,null],[6,"Rgb10a2F","","Standard HDR floating-point format with 10 bits for RGB components and 2 bits for the alpha.",null,null],[6,"Rgba16F","","Standard 16-bit floating-point RGBA format.",null,null],[6,"Rgba32F","","Standard 32-bit floating-point RGBA format.",null,null],[6,"Bgra8","","Standard 8bits BGRA format.",null,null],[6,"Depth","","Standard 24-bit depth format.",null,null],[6,"DepthStencil","","Standard 24-bit depth format with 8-bit stencil.",null,null],[6,"Depth32F","","Standard 32-bit floating-point depth format.",null,null],[0,"handle","gfx","Resource handles",null,null],[3,"RawBuffer","gfx::handle","Untyped buffer handle",null,null],[3,"Buffer","","Type-safe buffer handle",null,null],[3,"Shader","","Shader Handle",null,null],[3,"Program","","Program Handle",null,null],[3,"RawPipelineState","","Raw Pipeline State Handle",null,null],[3,"RawTexture","","Raw texture handle",null,null],[3,"Texture","","Typed texture object",null,null],[3,"RawShaderResourceView","","Raw Shader Resource View Handle",null,null],[3,"ShaderResourceView","","Type-safe Shader Resource View Handle",null,null],[3,"RawUnorderedAccessView","","Raw Unordered Access View Handle",null,null],[3,"UnorderedAccessView","","Type-safe Unordered Access View Handle",null,null],[3,"RawRenderTargetView","","Raw RTV",null,null],[3,"RawDepthStencilView","","Raw DSV",null,null],[3,"RenderTargetView","","Typed RTV",null,null],[3,"DepthStencilView","","Typed DSV",null,null],[3,"Sampler","","Sampler Handle",null,null],[3,"Fence","","Fence Handle",null,null],[3,"Manager","","Stores reference-counted resources used in a command buffer. Seals actual resource names behind the interface, automatically referencing them both by the Factory on resource creation and the Renderer during CommandBuffer population.",null,null],[0,"texture","gfx","Texture creation and modification.",null,null],[17,"MAX_LEVEL","gfx::texture","Maximum accessible mipmap level of a texture.",null,null],[3,"Raw","","Untyped texture",null,null],[4,"CreationError","","Pure texture object creation error.",null,null],[13,"Format","","Failed to map a given format to the device.",38,null],[13,"Kind","","The kind doesn't support a particular operation.",38,null],[13,"Samples","","Failed to map a given multisampled kind to the device.",38,null],[13,"Size","","Unsupported size in one of the dimensions.",38,null],[13,"Data","","The given data has a different size than the target texture slice.",38,null],[13,"Usage","","The mentioned usage mode is not supported",38,null],[4,"LayerError","","An error associated with selected texture layer.",null,null],[13,"NotExpected","","The source texture kind doesn't support array slices.",39,null],[13,"OutOfBounds","","Selected layer is outside of the provided range.",39,null],[6,"Size","","Dimension size",null,null],[6,"Bits","","Number of bits per component",null,null],[6,"NumSamples","","Number of MSAA samples",null,null],[6,"NumFragments","","Number of EQAA fragments",null,null],[6,"Dimensions","","Dimensions: width, height, depth, and samples.",null,null],[4,"AaMode","","Describes the configuration of samples inside each texel.",null,null],[13,"Single","","No additional sample information",40,null],[13,"Multi","","MultiSampled Anti-Aliasing (MSAA)",40,null],[13,"Coverage","","Coverage Sampling Anti-Aliasing (CSAA/EQAA)",40,null],[4,"FilterMethod","","How to filter the texture when sampling. They correspond to increasing levels of quality, but also cost. They \"layer\" on top of each other: it is not possible to have bilinear filtering without mipmapping, for example.",null,null],[13,"Scale","","The dumbest filtering possible, nearest-neighbor interpolation.",41,null],[13,"Mipmap","","Add simple mipmapping.",41,null],[13,"Bilinear","","Sample multiple texels within a single mipmap level to increase quality.",41,null],[13,"Trilinear","","Sample multiple texels across two mipmap levels to increase quality.",41,null],[13,"Anisotropic","","Anisotropic filtering with a given \"max\", must be between 1 and 16, inclusive.",41,null],[4,"CubeFace","","The face of a cube texture to do an operation on.",null,null],[13,"PosX","","",42,null],[13,"NegX","","",42,null],[13,"PosY","","",42,null],[13,"NegY","","",42,null],[13,"PosZ","","",42,null],[13,"NegZ","","",42,null],[17,"CUBE_FACES","","A constant array of cube faces in the order they map to the hardware.",null,null],[4,"Kind","","Specifies the kind of a texture storage to be allocated.",null,null],[13,"D1","","A single row of texels.",43,null],[13,"D1Array","","An array of rows of texels. Equivalent to Texture2D except that texels in a different row are not sampled.",43,null],[13,"D2","","A traditional 2D texture, with rows arranged contiguously.",43,null],[13,"D2Array","","An array of 2D textures. Equivalent to Texture3D except that texels in a different depth level are not sampled.",43,null],[13,"D3","","A volume texture, with each 2D layer arranged contiguously.",43,null],[13,"Cube","","A set of 6 2D textures, one for each face of a cube.",43,null],[13,"CubeArray","","An array of Cube textures.",43,null],[3,"ImageInfoCommon","","Describes a subvolume of a texture, which image data can be uploaded into.",null,null],[12,"xoffset","","",44,null],[12,"yoffset","","",44,null],[12,"zoffset","","",44,null],[12,"width","","",44,null],[12,"height","","",44,null],[12,"depth","","",44,null],[12,"format","","Format of each texel.",44,null],[12,"mipmap","","Which mipmap to select.",44,null],[6,"RawImageInfo","","New raw image info based on the universal format spec.",null,null],[6,"NewImageInfo","","New image info based on the universal format spec. The format is suppsed to come from compile-time information as opposed to run-time enum values.",null,null],[4,"WrapMode","","Specifies how texture coordinates outside the range `[0, 1]` are handled.",null,null],[13,"Tile","","Tile the texture. That is, sample the coordinate modulo `1.0`. This is the default.",45,null],[13,"Mirror","","Mirror the texture. Like tile, but uses abs(coord) before the modulo.",45,null],[13,"Clamp","","Clamp the texture to the value at `0.0` or `1.0` respectively.",45,null],[13,"Border","","Use border color.",45,null],[3,"Lod","","A wrapper for the LOD level of a texture.",null,null],[3,"PackedColor","","A wrapper for the 8bpp RGBA color, encoded as u32.",null,null],[12,"0","","",46,null],[3,"SamplerInfo","","Specifies how to sample from a texture.",null,null],[12,"filter","","Filter method to use.",47,null],[12,"wrap_mode","","Wrapping mode for each of the U, V, and W axis (S, T, and R in OpenGL speak).",47,null],[12,"lod_bias","","This bias is added to every computed mipmap level (N + lod_bias). For example, if it would select mipmap level 2 and lod_bias is 1, it will use mipmap level 3.",47,null],[12,"lod_range","","This range is used to clamp LOD level used for sampling.",47,null],[12,"comparison","","Comparison mode, used primary for a shadow map.",47,null],[12,"border","","Border color is used when one of the wrap modes is set to border.",47,null],[3,"Info","","Texture storage descriptor.",null,null],[12,"kind","","",48,null],[12,"levels","","",48,null],[12,"format","","",48,null],[12,"bind","","",48,null],[12,"usage","","",48,null],[3,"ResourceDesc","","Texture resource view descriptor.",null,null],[12,"channel","","",49,null],[12,"layer","","",49,null],[12,"min","","",49,null],[12,"max","","",49,null],[12,"swizzle","","",49,null],[3,"RenderDesc","","Texture render view descriptor.",null,null],[12,"channel","","",50,null],[12,"level","","",50,null],[12,"layer","","",50,null],[3,"DepthStencilFlags","","Depth-stencil read-only flags",null,null],[17,"RO_DEPTH","","Depth is read-only in the view.",null,null],[17,"RO_STENCIL","","Stencil is read-only in the view.",null,null],[17,"RO_DEPTH_STENCIL","","Both depth and stencil are read-only.",null,null],[3,"DepthStencilDesc","","Texture depth-stencil view descriptor.",null,null],[12,"level","","",51,null],[12,"layer","","",51,null],[12,"flags","","",51,null],[6,"Layer","","A depth value, specifying which plane to select out of a 3D texture.",null,null],[6,"Level","","Mipmap level to select in a texture.",null,null],[0,"mapping","gfx","Memory mapping",null,null],[4,"Error","gfx::mapping","Error accessing a mapping.",null,null],[13,"InvalidAccess","","The requested mapping access did not match the expected usage.",52,null],[13,"AccessOverlap","","The requested mapping access overlaps with another.",52,null],[3,"Reader","","Mapping reader",null,null],[3,"Writer","","Mapping writer. Currently is not possible to make write-only slice so while it is technically possible to read from Writer, it will lead to an undefined behavior. Please do not read from it.",null,null],[8,"Factory","gfx","A `Factory` is responsible for creating and managing resources for the context it was created with. ",null,null],[10,"get_capabilities","","Returns the capabilities of this `Factory`. This usually depends on the graphics API being used.",53,{"inputs":[{"name":"self"}],"output":{"name":"capabilities"}}],[10,"create_buffer_raw","","",53,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"generics":["rawbuffer","creationerror"],"name":"result"}}],[10,"create_buffer_immutable_raw","","",53,null],[11,"create_buffer_immutable","","",53,null],[11,"create_buffer","","",53,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"role"},{"name":"usage"},{"name":"bind"}],"output":{"generics":["buffer","creationerror"],"name":"result"}}],[10,"create_pipeline_state_raw","","Creates a new `RawPipelineState`. To create a safely typed `PipelineState`, see the `FactoryExt` trait and `pso` module, both in the `gfx` crate.",53,{"inputs":[{"name":"self"},{"name":"program"},{"name":"descriptor"}],"output":{"generics":["rawpipelinestate","creationerror"],"name":"result"}}],[10,"create_program","","Creates a new shader `Program` for the supplied `ShaderSet`.",53,{"inputs":[{"name":"self"},{"name":"shaderset"}],"output":{"generics":["program","createprogramerror"],"name":"result"}}],[10,"create_shader","","Compiles a shader source into a `Shader` object that can be used to create a shader `Program`.",53,null],[11,"create_shader_vertex","","Compiles a `VertexShader` from source.",53,null],[11,"create_shader_hull","","Compiles a `HullShader` from source.",53,null],[11,"create_shader_domain","","Compiles a `VertexShader` from source.",53,null],[11,"create_shader_geometry","","Compiles a `GeometryShader` from source.",53,null],[11,"create_shader_pixel","","Compiles a `PixelShader` from source. This is the same as what some APIs call a fragment shader.",53,null],[10,"create_sampler","","",53,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"sampler"}}],[10,"read_mapping","","Acquire a mapping Reader",53,{"inputs":[{"name":"self"},{"name":"buffer"}],"output":{"generics":["reader","error"],"name":"result"}}],[10,"write_mapping","","Acquire a mapping Writer",53,{"inputs":[{"name":"self"},{"name":"buffer"}],"output":{"generics":["writer","error"],"name":"result"}}],[10,"create_texture_raw","","Create a new empty raw texture with no data. The channel type parameter is a hint, required to assist backends that have no concept of typeless formats (OpenGL). The initial data, if given, has to be provided for all mip levels and slices: Slice0.Mip0, Slice0.Mip1, ..., Slice1.Mip0, ...",53,{"inputs":[{"name":"self"},{"name":"info"},{"generics":["channeltype"],"name":"option"},{"name":"option"}],"output":{"generics":["rawtexture","creationerror"],"name":"result"}}],[10,"view_buffer_as_shader_resource_raw","","",53,{"inputs":[{"name":"self"},{"name":"rawbuffer"}],"output":{"generics":["rawshaderresourceview","resourceviewerror"],"name":"result"}}],[10,"view_buffer_as_unordered_access_raw","","",53,{"inputs":[{"name":"self"},{"name":"rawbuffer"}],"output":{"generics":["rawunorderedaccessview","resourceviewerror"],"name":"result"}}],[10,"view_texture_as_shader_resource_raw","","",53,{"inputs":[{"name":"self"},{"name":"rawtexture"},{"name":"resourcedesc"}],"output":{"generics":["rawshaderresourceview","resourceviewerror"],"name":"result"}}],[10,"view_texture_as_unordered_access_raw","","",53,{"inputs":[{"name":"self"},{"name":"rawtexture"}],"output":{"generics":["rawunorderedaccessview","resourceviewerror"],"name":"result"}}],[10,"view_texture_as_render_target_raw","","",53,{"inputs":[{"name":"self"},{"name":"rawtexture"},{"name":"renderdesc"}],"output":{"generics":["rawrendertargetview","targetviewerror"],"name":"result"}}],[10,"view_texture_as_depth_stencil_raw","","",53,{"inputs":[{"name":"self"},{"name":"rawtexture"},{"name":"depthstencildesc"}],"output":{"generics":["rawdepthstencilview","targetviewerror"],"name":"result"}}],[11,"create_texture","","",53,{"inputs":[{"name":"self"},{"name":"kind"},{"name":"u8"},{"name":"bind"},{"name":"usage"},{"generics":["channeltype"],"name":"option"}],"output":{"generics":["texture","creationerror"],"name":"result"}}],[11,"view_buffer_as_shader_resource","","",53,{"inputs":[{"name":"self"},{"name":"buffer"}],"output":{"generics":["shaderresourceview","resourceviewerror"],"name":"result"}}],[11,"view_buffer_as_unordered_access","","",53,{"inputs":[{"name":"self"},{"name":"buffer"}],"output":{"generics":["unorderedaccessview","resourceviewerror"],"name":"result"}}],[11,"view_texture_as_shader_resource","","",53,null],[11,"view_texture_as_unordered_access","","",53,{"inputs":[{"name":"self"},{"name":"texture"}],"output":{"generics":["unorderedaccessview","resourceviewerror"],"name":"result"}}],[11,"view_texture_as_render_target","","",53,{"inputs":[{"name":"self"},{"name":"texture"},{"name":"u8"},{"generics":["u16"],"name":"option"}],"output":{"generics":["rendertargetview","targetviewerror"],"name":"result"}}],[11,"view_texture_as_depth_stencil","","",53,{"inputs":[{"name":"self"},{"name":"texture"},{"name":"u8"},{"generics":["u16"],"name":"option"},{"name":"depthstencilflags"}],"output":{"generics":["depthstencilview","targetviewerror"],"name":"result"}}],[11,"view_texture_as_depth_stencil_trivial","","",53,{"inputs":[{"name":"self"},{"name":"texture"}],"output":{"generics":["depthstencilview","targetviewerror"],"name":"result"}}],[11,"create_texture_immutable_u8","","",53,null],[11,"create_texture_immutable","","",53,null],[11,"create_render_target","","",53,{"inputs":[{"name":"self"},{"name":"u16"},{"name":"u16"}],"output":{"generics":["combinederror"],"name":"result"}}],[11,"create_depth_stencil","","",53,{"inputs":[{"name":"self"},{"name":"u16"},{"name":"u16"}],"output":{"generics":["combinederror"],"name":"result"}}],[11,"create_depth_stencil_view_only","","",53,{"inputs":[{"name":"self"},{"name":"u16"},{"name":"u16"}],"output":{"generics":["depthstencilview","combinederror"],"name":"result"}}],[4,"ResourceViewError","","Error creating either a ShaderResourceView, or UnorderedAccessView.",null,null],[13,"NoBindFlag","","The corresponding bind flag is not present in the texture.",54,null],[13,"Channel","","Selected channel type is not supported for this texture.",54,null],[13,"Layer","","Selected layer can not be viewed for this texture.",54,null],[13,"Unsupported","","The backend was refused for some reason.",54,null],[4,"TargetViewError","","Error creating either a RenderTargetView, or DepthStencilView.",null,null],[13,"NoBindFlag","","The `RENDER_TARGET`/`DEPTH_STENCIL` flag is not present in the texture.",55,null],[13,"Level","","Selected mip level doesn't exist.",55,null],[13,"Layer","","Selected array layer doesn't exist.",55,null],[13,"Channel","","Selected channel type is not supported for this texture.",55,null],[13,"Unsupported","","The backend was refused for some reason.",55,null],[13,"NotDetached","","The RTV cannot be changed due to the references to it existing.",55,null],[4,"CombinedError","","An error from creating textures with views at the same time.",null,null],[13,"Texture","","Failed to create the raw texture.",56,null],[13,"Resource","","Failed to create SRV or UAV.",56,null],[13,"Target","","Failed to create RTV or DSV.",56,null],[0,"memory","","Memory stuff",null,null],[4,"Usage","gfx::memory","How this memory will be used.",null,null],[13,"Data","","Full speed GPU access. Optimal for render targets and resourced memory.",57,null],[13,"Dynamic","","CPU to GPU data flow with update commands. Used for dynamic buffer data, typically constant buffers.",57,null],[13,"Upload","","CPU to GPU data flow with mapping. Used for staging for upload to GPU.",57,null],[13,"Download","","GPU to CPU data flow with mapping. Used for staging for download from GPU.",57,null],[3,"Access","","Memory access",null,null],[17,"READ","","Read access",null,null],[17,"WRITE","","Write access",null,null],[17,"RW","","Full access",null,null],[3,"Bind","","Bind flags",null,null],[17,"RENDER_TARGET","","Can be rendered into.",null,null],[17,"DEPTH_STENCIL","","Can serve as a depth/stencil target.",null,null],[17,"SHADER_RESOURCE","","Can be bound to the shader for reading.",null,null],[17,"UNORDERED_ACCESS","","Can be bound to the shader for writing.",null,null],[17,"TRANSFER_SRC","","Can be transfered from.",null,null],[17,"TRANSFER_DST","","Can be transfered into.",null,null],[8,"Pod","","A trait for plain-old-data types.",null,null],[5,"cast_slice","","Cast a slice from one POD type to another.",null,null],[3,"Bind","gfx","Bind flags",null,null],[17,"TRANSFER_SRC","","Can be transfered from.",null,null],[17,"TRANSFER_DST","","Can be transfered into.",null,null],[17,"RENDER_TARGET","","Can be rendered into.",null,null],[17,"DEPTH_STENCIL","","Can serve as a depth/stencil target.",null,null],[17,"SHADER_RESOURCE","","Can be bound to the shader for reading.",null,null],[17,"UNORDERED_ACCESS","","Can be bound to the shader for writing.",null,null],[8,"CommandBuffer","","An interface of the abstract command buffer. It collects commands in an efficient API-specific manner, to be ready for execution on the device.",null,null],[10,"reset","","Reset the command buffer contents, retain the allocated storage",58,null],[10,"bind_pipeline_state","","Bind a pipeline state object",58,null],[10,"bind_vertex_buffers","","Bind a complete set of vertex buffers",58,null],[10,"bind_constant_buffers","","Bind a complete set of constant buffers",58,null],[10,"bind_global_constant","","Bind a global constant",58,null],[10,"bind_resource_views","","Bind a complete set of shader resource views",58,null],[10,"bind_unordered_views","","Bind a complete set of unordered access views",58,null],[10,"bind_samplers","","Bind a complete set of samplers",58,null],[10,"bind_pixel_targets","","Bind a complete set of pixel targets, including multiple colors views and an optional depth/stencil view.",58,null],[10,"bind_index","","Bind an index buffer",58,null],[10,"set_scissor","","Set scissor rectangle",58,null],[10,"set_ref_values","","Set reference values for the blending and stencil front/back",58,null],[10,"copy_buffer","","Copy part of a buffer to another",58,null],[10,"copy_buffer_to_texture","","Copy part of a buffer to a texture",58,null],[10,"copy_texture_to_buffer","","Copy part of a texture to a buffer",58,null],[10,"update_buffer","","Update a vertex/index/uniform buffer",58,null],[10,"update_texture","","Update a texture",58,null],[10,"generate_mipmap","","",58,null],[10,"clear_color","","Clear color target",58,null],[10,"clear_depth_stencil","","",58,null],[10,"call_draw","","Draw a primitive",58,null],[10,"call_draw_indexed","","Draw a primitive with index buffer",58,null],[6,"InstanceParams","","Optional instance parameters: (instance count, buffer offset)",null,null],[3,"ProgramInfo","","Metadata about a program.",null,null],[12,"vertex_attributes","","Attributes in the program",59,null],[12,"globals","","Global constants in the program",59,null],[12,"constant_buffers","","Constant buffers in the program",59,null],[12,"textures","","Textures in the program",59,null],[12,"unordereds","","Unordered access resources in the program",59,null],[12,"samplers","","Samplers in the program",59,null],[12,"outputs","","Output targets in the program",59,null],[12,"output_depth","","A flag indicating that the pixel shader manually assigns the depth.",59,null],[12,"knows_outputs","","A hacky flag to make sure the clients know we are unable to actually get the output variable info",59,null],[4,"UniformValue","","A value that can be uploaded to the device as a uniform.",null,null],[13,"I32","","",60,null],[13,"F32","","",60,null],[13,"I32Vector2","","",60,null],[13,"I32Vector3","","",60,null],[13,"I32Vector4","","",60,null],[13,"F32Vector2","","",60,null],[13,"F32Vector3","","",60,null],[13,"F32Vector4","","",60,null],[13,"F32Matrix2","","",60,null],[13,"F32Matrix3","","",60,null],[13,"F32Matrix4","","",60,null],[3,"Encoder","","Graphics Command Encoder",null,null],[3,"Slice","","A `Slice` dictates in which and in what order vertices get processed. It is required for processing a PSO.",null,null],[12,"start","","The start index of the index-buffer. Processing will start at this location in the index-buffer. ",61,null],[12,"end","","The end index in the index-buffer. Processing will stop at this location (exclusive) in the index buffer.",61,null],[12,"base_vertex","","This is the index of the first vertex in the `VertexBuffer`. This value will be added to every index in the index-buffer, effectively moving the start of the `VertexBuffer` to this base-vertex.",61,null],[12,"instances","","Instancing configuration.",61,null],[12,"buffer","","Represents the type of index-buffer used. ",61,null],[4,"CopyError","","An error occuring in memory copies.",null,null],[13,"OutOfSrcBounds","","",62,null],[12,"size","gfx::CopyError","",62,null],[12,"copy_end","","",62,null],[13,"OutOfDstBounds","gfx","",62,null],[12,"size","gfx::CopyError","",62,null],[12,"copy_end","","",62,null],[13,"Overlap","gfx","",62,null],[12,"src_offset","gfx::CopyError","",62,null],[12,"dst_offset","","",62,null],[12,"size","","",62,null],[13,"NoSrcBindFlag","gfx","",62,null],[13,"NoDstBindFlag","","",62,null],[4,"UpdateError","","An error occuring in buffer/texture updates.",null,null],[13,"OutOfBounds","","",63,null],[12,"target","gfx::UpdateError","",63,null],[12,"source","","",63,null],[13,"UnitCountMismatch","gfx","",63,null],[12,"target","gfx::UpdateError","",63,null],[12,"slice","","",63,null],[13,"InvalidUsage","gfx","",63,null],[4,"PipelineStateError","","Error creating a PipelineState",null,null],[13,"Program","","Shader program failed to link.",64,null],[13,"DescriptorInit","","Unable to create PSO descriptor due to mismatched formats.",64,null],[13,"DeviceCreate","","Device failed to create the handle give the descriptor.",64,null],[4,"IndexBuffer","","Type of index-buffer used in a Slice.",null,null],[13,"Auto","","Represents a hypothetical index-buffer from 0 to infinity. In other words, all vertices get processed in order.",65,null],[13,"Index16","","An index-buffer with unsigned 16 bit indices.",65,null],[13,"Index32","","An index-buffer with unsigned 32 bit indices.",65,null],[0,"traits","","public re-exported traits",null,null],[8,"Device","gfx::traits","A `Device` is responsible for submitting `CommandBuffer`s to the GPU. ",null,null],[16,"Resources","","Associated `Resources` type.",17,null],[16,"CommandBuffer","","Associated `CommandBuffer` type. Every `Device` type can only work with one `CommandBuffer` type.",17,null],[10,"get_capabilities","","Returns the capabilities of this `Ðevice`.",17,{"inputs":[{"name":"self"}],"output":{"name":"capabilities"}}],[10,"pin_submitted_resources","","Pin everything from this handle manager to live for a frame.",17,null],[10,"submit","","Submits a `CommandBuffer` to the GPU for execution.",17,null],[10,"fenced_submit","","Submits a `CommandBuffer` to the GPU for execution. returns a fence that is signaled after the GPU has executed all commands",17,null],[10,"wait_fence","","Stalls the current thread until the fence is satisfied",17,null],[10,"cleanup","","Cleanup unused resources. This should be called between frames. ",17,null],[8,"Factory","","A `Factory` is responsible for creating and managing resources for the context it was created with. ",null,null],[10,"get_capabilities","","Returns the capabilities of this `Factory`. This usually depends on the graphics API being used.",53,{"inputs":[{"name":"self"}],"output":{"name":"capabilities"}}],[10,"create_buffer_raw","","",53,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"generics":["rawbuffer","creationerror"],"name":"result"}}],[10,"create_buffer_immutable_raw","","",53,null],[11,"create_buffer_immutable","","",53,null],[11,"create_buffer","","",53,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"role"},{"name":"usage"},{"name":"bind"}],"output":{"generics":["buffer","creationerror"],"name":"result"}}],[10,"create_pipeline_state_raw","","Creates a new `RawPipelineState`. To create a safely typed `PipelineState`, see the `FactoryExt` trait and `pso` module, both in the `gfx` crate.",53,{"inputs":[{"name":"self"},{"name":"program"},{"name":"descriptor"}],"output":{"generics":["rawpipelinestate","creationerror"],"name":"result"}}],[10,"create_program","","Creates a new shader `Program` for the supplied `ShaderSet`.",53,{"inputs":[{"name":"self"},{"name":"shaderset"}],"output":{"generics":["program","createprogramerror"],"name":"result"}}],[10,"create_shader","","Compiles a shader source into a `Shader` object that can be used to create a shader `Program`.",53,null],[11,"create_shader_vertex","","Compiles a `VertexShader` from source.",53,null],[11,"create_shader_hull","","Compiles a `HullShader` from source.",53,null],[11,"create_shader_domain","","Compiles a `VertexShader` from source.",53,null],[11,"create_shader_geometry","","Compiles a `GeometryShader` from source.",53,null],[11,"create_shader_pixel","","Compiles a `PixelShader` from source. This is the same as what some APIs call a fragment shader.",53,null],[10,"create_sampler","","",53,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"sampler"}}],[10,"read_mapping","","Acquire a mapping Reader",53,{"inputs":[{"name":"self"},{"name":"buffer"}],"output":{"generics":["reader","error"],"name":"result"}}],[10,"write_mapping","","Acquire a mapping Writer",53,{"inputs":[{"name":"self"},{"name":"buffer"}],"output":{"generics":["writer","error"],"name":"result"}}],[10,"create_texture_raw","","Create a new empty raw texture with no data. The channel type parameter is a hint, required to assist backends that have no concept of typeless formats (OpenGL). The initial data, if given, has to be provided for all mip levels and slices: Slice0.Mip0, Slice0.Mip1, ..., Slice1.Mip0, ...",53,{"inputs":[{"name":"self"},{"name":"info"},{"generics":["channeltype"],"name":"option"},{"name":"option"}],"output":{"generics":["rawtexture","creationerror"],"name":"result"}}],[10,"view_buffer_as_shader_resource_raw","","",53,{"inputs":[{"name":"self"},{"name":"rawbuffer"}],"output":{"generics":["rawshaderresourceview","resourceviewerror"],"name":"result"}}],[10,"view_buffer_as_unordered_access_raw","","",53,{"inputs":[{"name":"self"},{"name":"rawbuffer"}],"output":{"generics":["rawunorderedaccessview","resourceviewerror"],"name":"result"}}],[10,"view_texture_as_shader_resource_raw","","",53,{"inputs":[{"name":"self"},{"name":"rawtexture"},{"name":"resourcedesc"}],"output":{"generics":["rawshaderresourceview","resourceviewerror"],"name":"result"}}],[10,"view_texture_as_unordered_access_raw","","",53,{"inputs":[{"name":"self"},{"name":"rawtexture"}],"output":{"generics":["rawunorderedaccessview","resourceviewerror"],"name":"result"}}],[10,"view_texture_as_render_target_raw","","",53,{"inputs":[{"name":"self"},{"name":"rawtexture"},{"name":"renderdesc"}],"output":{"generics":["rawrendertargetview","targetviewerror"],"name":"result"}}],[10,"view_texture_as_depth_stencil_raw","","",53,{"inputs":[{"name":"self"},{"name":"rawtexture"},{"name":"depthstencildesc"}],"output":{"generics":["rawdepthstencilview","targetviewerror"],"name":"result"}}],[11,"create_texture","","",53,{"inputs":[{"name":"self"},{"name":"kind"},{"name":"u8"},{"name":"bind"},{"name":"usage"},{"generics":["channeltype"],"name":"option"}],"output":{"generics":["texture","creationerror"],"name":"result"}}],[11,"view_buffer_as_shader_resource","","",53,{"inputs":[{"name":"self"},{"name":"buffer"}],"output":{"generics":["shaderresourceview","resourceviewerror"],"name":"result"}}],[11,"view_buffer_as_unordered_access","","",53,{"inputs":[{"name":"self"},{"name":"buffer"}],"output":{"generics":["unorderedaccessview","resourceviewerror"],"name":"result"}}],[11,"view_texture_as_shader_resource","","",53,null],[11,"view_texture_as_unordered_access","","",53,{"inputs":[{"name":"self"},{"name":"texture"}],"output":{"generics":["unorderedaccessview","resourceviewerror"],"name":"result"}}],[11,"view_texture_as_render_target","","",53,{"inputs":[{"name":"self"},{"name":"texture"},{"name":"u8"},{"generics":["u16"],"name":"option"}],"output":{"generics":["rendertargetview","targetviewerror"],"name":"result"}}],[11,"view_texture_as_depth_stencil","","",53,{"inputs":[{"name":"self"},{"name":"texture"},{"name":"u8"},{"generics":["u16"],"name":"option"},{"name":"depthstencilflags"}],"output":{"generics":["depthstencilview","targetviewerror"],"name":"result"}}],[11,"view_texture_as_depth_stencil_trivial","","",53,{"inputs":[{"name":"self"},{"name":"texture"}],"output":{"generics":["depthstencilview","targetviewerror"],"name":"result"}}],[11,"create_texture_immutable_u8","","",53,null],[11,"create_texture_immutable","","",53,null],[11,"create_render_target","","",53,{"inputs":[{"name":"self"},{"name":"u16"},{"name":"u16"}],"output":{"generics":["combinederror"],"name":"result"}}],[11,"create_depth_stencil","","",53,{"inputs":[{"name":"self"},{"name":"u16"},{"name":"u16"}],"output":{"generics":["combinederror"],"name":"result"}}],[11,"create_depth_stencil_view_only","","",53,{"inputs":[{"name":"self"},{"name":"u16"},{"name":"u16"}],"output":{"generics":["depthstencilview","combinederror"],"name":"result"}}],[8,"Pod","","A trait for plain-old-data types.",null,null],[8,"FactoryExt","","This trait is responsible for creating and managing graphics resources, much like the `Factory` trait in the `gfx` crate. Every `Factory` automatically implements `FactoryExt`. ",null,null],[11,"create_vertex_buffer","","Creates an immutable vertex buffer from the supplied vertices. A `Slice` will have to manually be constructed.",66,null],[11,"create_index_buffer","","Creates an immutable index buffer from the supplied vertices.",66,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"indexbuffer"}}],[11,"create_vertex_buffer_with_slice","","Creates an immutable vertex buffer from the supplied vertices, together with a `Slice` from the supplied indices.",66,null],[11,"create_constant_buffer","","Creates a constant buffer for `num` identical elements of type `T`.",66,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffer"}}],[11,"create_upload_buffer","","Creates an upload buffer for `num` elements of type `T`.",66,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["buffer","creationerror"],"name":"result"}}],[11,"create_download_buffer","","Creates a download buffer for `num` elements of type `T`.",66,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["buffer","creationerror"],"name":"result"}}],[11,"create_shader_set","","Creates a `ShaderSet` from the supplied vertex and pixel shader source code.",66,null],[11,"create_shader_set_geometry","","Creates a `ShaderSet` from the supplied vertex, geometry, and pixel shader source code. Mainly used for testing.",66,null],[11,"create_shader_set_tessellation","","Creates a `ShaderSet` from the supplied vertex, hull, domain, and pixel shader source code. Mainly used for testing.",66,null],[11,"link_program","","Creates a basic shader `Program` from the supplied vertex and pixel shader source code.",66,null],[11,"create_pipeline_state","","Similar to `create_pipeline_from_program(..)`, but takes a `ShaderSet` as opposed to a shader `Program`.  ",66,{"inputs":[{"name":"self"},{"name":"shaderset"},{"name":"primitive"},{"name":"rasterizer"},{"name":"i"}],"output":{"generics":["pipelinestate","pipelinestateerror"],"name":"result"}}],[11,"create_pipeline_from_program","","Creates a strongly typed `PipelineState` from its `Init` structure, a shader `Program`, a primitive type and a `Rasterizer`.",66,{"inputs":[{"name":"self"},{"name":"program"},{"name":"primitive"},{"name":"rasterizer"},{"name":"i"}],"output":{"generics":["pipelinestate","pipelinestateerror"],"name":"result"}}],[11,"create_pipeline_simple","","Creates a strongly typed `PipelineState` from its `Init` structure. Automatically creates a shader `Program` from a vertex and pixel shader source, as well as a `Rasterizer` capable of rendering triangle faces without culling.",66,null],[11,"create_sampler_linear","","Create a linear sampler with clamping to border.",66,{"inputs":[{"name":"self"}],"output":{"name":"sampler"}}],[11,"clone","gfx","",62,{"inputs":[{"name":"self"}],"output":{"name":"copyerror"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"copyerror"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"self"},{"name":"copyerror"}],"output":{"name":"bool"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",62,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"updateerror"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",63,{"inputs":[{"name":"self"},{"name":"updateerror"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"self"},{"name":"updateerror"}],"output":{"name":"bool"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",63,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",67,{"inputs":[{"name":"c"}],"output":{"name":"encoder"}}],[11,"flush","","Submits the commands in this `Encoder`'s internal `CommandBuffer` to the GPU, so they can be executed.",67,{"inputs":[{"name":"self"},{"name":"d"}],"output":null}],[11,"flush_no_reset","","Like `flush` but keeps the encoded commands.",67,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"submissionresult"}}],[11,"fenced_flush_no_reset","","Like `flush_no_reset` but places a fence.",67,{"inputs":[{"name":"self"},{"name":"d"},{"generics":["fence"],"name":"option"}],"output":{"generics":["fence"],"name":"submissionresult"}}],[11,"reset","","Resets the encoded commands.",67,{"inputs":[{"name":"self"}],"output":null}],[11,"copy_buffer","","Copy part of a buffer to another",67,{"inputs":[{"name":"self"},{"name":"buffer"},{"name":"buffer"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"copybufferresult"}}],[11,"copy_buffer_to_texture_raw","","Copy part of a buffer to a texture",67,{"inputs":[{"name":"self"},{"name":"rawbuffer"},{"name":"usize"},{"name":"rawtexture"},{"generics":["cubeface"],"name":"option"},{"name":"rawimageinfo"}],"output":{"name":"copybuffertextureresult"}}],[11,"copy_texture_to_buffer_raw","","Copy part of a texture to a buffer",67,{"inputs":[{"name":"self"},{"name":"rawtexture"},{"generics":["cubeface"],"name":"option"},{"name":"rawimageinfo"},{"name":"rawbuffer"},{"name":"usize"}],"output":{"name":"copytexturebufferresult"}}],[11,"update_buffer","","Update a buffer with a slice of data.",67,null],[11,"update_constant_buffer","","Update a buffer with a single structure.",67,{"inputs":[{"name":"self"},{"name":"buffer"},{"name":"t"}],"output":null}],[11,"update_texture","","Update the contents of a texture.",67,null],[11,"clear","","Clears the supplied `RenderTargetView` to the supplied `ClearColor`.",67,null],[11,"clear_depth","","Clear a depth view with a specified value.",67,{"inputs":[{"name":"self"},{"name":"depthstencilview"},{"name":"depth"}],"output":null}],[11,"clear_stencil","","Clear a stencil view with a specified value.",67,{"inputs":[{"name":"self"},{"name":"depthstencilview"},{"name":"stencil"}],"output":null}],[11,"draw","","Draws a `slice::Slice` using a pipeline state object, and its matching `Data` structure.",67,{"inputs":[{"name":"self"},{"name":"slice"},{"name":"pipelinestate"},{"name":"d"}],"output":null}],[11,"generate_mipmap","","Generate a mipmap chain for the given resource view.",67,{"inputs":[{"name":"self"},{"name":"shaderresourceview"}],"output":null}],[11,"generate_mipmap_raw","","Untyped version of mipmap generation.",67,{"inputs":[{"name":"self"},{"name":"rawshaderresourceview"}],"output":null}],[11,"create_vertex_buffer","gfx::traits","Creates an immutable vertex buffer from the supplied vertices. A `Slice` will have to manually be constructed.",66,null],[11,"create_index_buffer","","Creates an immutable index buffer from the supplied vertices.",66,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"indexbuffer"}}],[11,"create_vertex_buffer_with_slice","","Creates an immutable vertex buffer from the supplied vertices, together with a `Slice` from the supplied indices.",66,null],[11,"create_constant_buffer","","Creates a constant buffer for `num` identical elements of type `T`.",66,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffer"}}],[11,"create_upload_buffer","","Creates an upload buffer for `num` elements of type `T`.",66,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["buffer","creationerror"],"name":"result"}}],[11,"create_download_buffer","","Creates a download buffer for `num` elements of type `T`.",66,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["buffer","creationerror"],"name":"result"}}],[11,"create_shader_set","","Creates a `ShaderSet` from the supplied vertex and pixel shader source code.",66,null],[11,"create_shader_set_geometry","","Creates a `ShaderSet` from the supplied vertex, geometry, and pixel shader source code. Mainly used for testing.",66,null],[11,"create_shader_set_tessellation","","Creates a `ShaderSet` from the supplied vertex, hull, domain, and pixel shader source code. Mainly used for testing.",66,null],[11,"link_program","","Creates a basic shader `Program` from the supplied vertex and pixel shader source code.",66,null],[11,"create_pipeline_state","","Similar to `create_pipeline_from_program(..)`, but takes a `ShaderSet` as opposed to a shader `Program`.  ",66,{"inputs":[{"name":"self"},{"name":"shaderset"},{"name":"primitive"},{"name":"rasterizer"},{"name":"i"}],"output":{"generics":["pipelinestate","pipelinestateerror"],"name":"result"}}],[11,"create_pipeline_from_program","","Creates a strongly typed `PipelineState` from its `Init` structure, a shader `Program`, a primitive type and a `Rasterizer`.",66,{"inputs":[{"name":"self"},{"name":"program"},{"name":"primitive"},{"name":"rasterizer"},{"name":"i"}],"output":{"generics":["pipelinestate","pipelinestateerror"],"name":"result"}}],[11,"create_pipeline_simple","","Creates a strongly typed `PipelineState` from its `Init` structure. Automatically creates a shader `Program` from a vertex and pixel shader source, as well as a `Rasterizer` capable of rendering triangle faces without culling.",66,null],[11,"create_sampler_linear","","Create a linear sampler with clamping to border.",66,{"inputs":[{"name":"self"}],"output":{"name":"sampler"}}],[11,"clone","gfx","",64,{"inputs":[{"name":"self"}],"output":{"name":"pipelinestateerror"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"pipelinestateerror"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"self"},{"name":"pipelinestateerror"}],"output":{"name":"bool"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",64,{"inputs":[{"generics":["str"],"name":"pipelinestateerror"}],"output":{"generics":["string"],"name":"pipelinestateerror"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",64,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",64,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"from","","",64,{"inputs":[{"name":"programerror"}],"output":{"name":"self"}}],[11,"from","","",64,{"inputs":[{"name":"initerror"}],"output":{"name":"self"}}],[11,"from","","",64,{"inputs":[{"name":"creationerror"}],"output":{"name":"self"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"slice"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",61,null],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"slice"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"self"},{"name":"slice"}],"output":{"name":"bool"}}],[11,"new_match_vertex_buffer","","Creates a new `Slice` to match the supplied vertex buffer, from start to end, in order.",61,{"inputs":[{"name":"buffer"}],"output":{"name":"self"}}],[11,"get_prim_count","","Calculates the number of primitives of the specified type in this `Slice`.",61,{"inputs":[{"name":"self"},{"name":"primitive"}],"output":{"name":"u32"}}],[11,"split_at","","Divides one slice into two at an index.",61,null],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"indexbuffer"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",65,null],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"indexbuffer"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"self"},{"name":"indexbuffer"}],"output":{"name":"bool"}}],[11,"default","","",65,{"inputs":[],"output":{"name":"self"}}],[11,"into_index_buffer","","",65,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"indexbuffer"}}],[11,"into_index_buffer","gfx::handle","",68,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"indexbuffer"}}],[11,"into_index_buffer","","",68,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"indexbuffer"}}],[0,"pso","gfx","A typed high-level graphics pipeline interface.",null,null],[3,"Descriptor","gfx::pso","All the information surrounding a shader program that is required for PSO creation, including the formats of vertex buffers and pixel targets;",null,null],[12,"primitive","","Type of the primitive",69,null],[12,"rasterizer","","Rasterizer setup",69,null],[12,"scissor","","Enable scissor test",69,null],[12,"vertex_buffers","","Vertex buffers",69,null],[12,"attributes","","Vertex attributes",69,null],[12,"constant_buffers","","Constant buffers",69,null],[12,"resource_views","","Shader resource views",69,null],[12,"unordered_views","","Unordered access views",69,null],[12,"samplers","","Samplers",69,null],[12,"color_targets","","Render target views (RTV)",69,null],[12,"depth_stencil","","Depth stencil view (DSV)",69,null],[3,"AccessInfo","","Informations about what is accessed by a bunch of commands.",null,null],[3,"RawDataSet","","A complete set of raw data that needs to be specified at run-time whenever we draw something with a PSO. This is what \"data\" struct gets transformed into when we call `encoder.draw(...)` with it. It doesn't have any typing information, since PSO knows what format and layout to expect from each resource.",null,null],[12,"vertex_buffers","","",70,null],[12,"constant_buffers","","",70,null],[12,"global_constants","","",70,null],[12,"resource_views","","",70,null],[12,"unordered_views","","",70,null],[12,"samplers","","",70,null],[12,"pixel_targets","","",70,null],[12,"ref_values","","",70,null],[12,"scissor","","",70,null],[3,"PipelineState","","A strongly typed Pipleline State Object. See the module documentation for more information.",null,null],[4,"ElementError","","Error matching an element inside the constant buffer.",null,null],[13,"NotFound","","Element not found.",71,null],[13,"Offset","","Element offset mismatch.",71,null],[12,"name","gfx::pso::ElementError","Element name.",71,null],[12,"shader_offset","","Element byte offset in the shader-side constant buffer.",71,null],[12,"code_offset","","Element byte offset in the code-side constant buffer.",71,null],[13,"Format","gfx::pso","Element format mismatch.",71,null],[12,"name","gfx::pso::ElementError","Element name.",71,null],[12,"shader_format","","Element format in the shader-side constant buffer.",71,null],[12,"code_format","","Element format in the code-side constant buffer.",71,null],[4,"InitError","gfx::pso","Failure to initilize the link between the shader and the data.",null,null],[13,"VertexImport","","Vertex attribute mismatch.",72,null],[13,"ConstantBuffer","","Constant buffer mismatch.",72,null],[13,"GlobalConstant","","Global constant mismatch.",72,null],[13,"ResourceView","","Shader resource view mismatch.",72,null],[13,"UnorderedView","","Unordered access view mismatch.",72,null],[13,"Sampler","","Sampler mismatch.",72,null],[13,"PixelExport","","Pixel target mismatch.",72,null],[0,"buffer","","Buffer components for a PSO.",null,null],[6,"BufferIndex","gfx::pso::buffer","Index of a vertex buffer.",null,null],[3,"Element","","A struct element descriptor.",null,null],[12,"format","","Element format",73,null],[12,"offset","","Offset from the beginning of the container, in bytes",73,null],[6,"ElemOffset","","Offset of an attribute from the start of the buffer, in bytes",null,null],[6,"ElemStride","","Offset between attribute values, in bytes",null,null],[6,"InstanceRate","","The number of instances between each subsequent attribute value",null,null],[3,"VertexBufferCommon","","Service struct to simplify the implementations of `VertexBuffer` and `InstanceBuffer`.",null,null],[3,"RawVertexBuffer","","Raw vertex/instance buffer component. Can be used when the formats of vertex attributes are not known at compile time.",null,null],[3,"ConstantBuffer","","Constant buffer component.",null,null],[3,"RawConstantBuffer","","Raw constant buffer component.",null,null],[3,"Global","","Global (uniform) constant component. Describes a free-standing value passed into the shader, which is not enclosed into any constant buffer.",null,null],[3,"RawGlobal","","Raw global (uniform) constant component. Describes a free-standing value passed into the shader, which is not enclosed in any constant buffer.",null,null],[4,"NonInstanced","","Helper phantom type for per-vertex attributes.",null,null],[4,"Instanced","","Helper phantom type for per-instance attributes.",null,null],[6,"VertexBuffer","","Vertex buffer component. Advanced per vertex.",null,null],[6,"InstanceBuffer","","Instance buffer component. Same as the vertex buffer but advances per instance.",null,null],[8,"Structure","","A trait to be implemented by any struct having the layout described in the graphics API, like a vertex buffer.",null,null],[10,"query","","Get the layout of an element by name.",74,{"inputs":[{"name":"str"}],"output":{"generics":["element"],"name":"option"}}],[8,"ToInstanceRate","","Helper trait for `VertexBufferCommon` to support variable instance rate.",null,null],[16,"Init","","The associated init type for PSO component.",75,null],[10,"get_rate","","Get an actual instance rate value from the init.",75,null],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",76,{"inputs":[{"name":"self"},{"name":"__hti"}],"output":null}],[11,"eq","","",76,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"get_rate","","",77,null],[11,"get_rate","","",78,null],[11,"get_rate","","",79,null],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"rawvertexbuffer"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",80,null],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"rawvertexbuffer"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"self"},{"name":"rawvertexbuffer"}],"output":{"name":"bool"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",81,{"inputs":[{"name":"self"},{"name":"__ht"}],"output":null}],[11,"eq","","",81,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"rawconstantbuffer"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",82,null],[11,"eq","","",82,{"inputs":[{"name":"self"},{"name":"rawconstantbuffer"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"self"},{"name":"rawconstantbuffer"}],"output":{"name":"bool"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",83,{"inputs":[{"name":"self"},{"name":"__ht"}],"output":null}],[11,"eq","","",83,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"rawglobal"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",84,null],[11,"eq","","",84,{"inputs":[{"name":"self"},{"name":"rawglobal"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"self"},{"name":"rawglobal"}],"output":{"name":"bool"}}],[11,"new","","",76,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",76,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_vertex_buffer","","",76,null],[11,"link_input","","",76,null],[11,"bind_to","","",76,null],[11,"new","","",80,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_vertex_buffer","","",80,null],[11,"link_input","","",80,null],[11,"bind_to","","",80,null],[11,"new","","",81,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",81,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_constant_buffer","","",81,null],[11,"bind_to","","",81,null],[11,"new","","",82,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",82,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_constant_buffer","","",82,null],[11,"bind_to","","",82,null],[11,"new","","",83,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",83,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_global_constant","","",83,null],[11,"bind_to","","",83,null],[11,"new","","",84,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_global_constant","","",84,null],[11,"bind_to","","",84,null],[0,"resource","gfx::pso","Resource components for a PSO.",null,null],[3,"ShaderResource","gfx::pso::resource","Shader resource component (SRV). Typically is a view into some texture, but can also be a buffer.",null,null],[3,"RawShaderResource","","Raw (untyped) shader resource (SRV).",null,null],[3,"UnorderedAccess","","Unordered access component (UAV). A writable resource (texture/buffer) with no defined access order across simultaneously executing shaders. Supported on DX10 and higher.",null,null],[3,"Sampler","","Sampler component.",null,null],[3,"TextureSampler","","A convenience type for a texture paired with a sampler. It only makes sense for DX9 class hardware, where every texture by default is bundled with a sampler, hence they are represented by the same name. In DX10 and higher samplers are totally separated from the textures.",null,null],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",85,{"inputs":[{"name":"self"},{"name":"__ht"}],"output":null}],[11,"eq","","",85,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"rawshaderresource"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",86,null],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"rawshaderresource"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"self"},{"name":"rawshaderresource"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",87,{"inputs":[{"name":"self"},{"name":"__ht"}],"output":null}],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"sampler"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",88,null],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"sampler"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"self"},{"name":"sampler"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",89,{"inputs":[{"name":"self"},{"name":"__ht"}],"output":null}],[11,"eq","","",89,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","",85,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_resource_view","","",85,null],[11,"bind_to","","",85,null],[11,"new","","",86,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_resource_view","","",86,null],[11,"bind_to","","",86,null],[11,"new","","",87,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",87,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_unordered_view","","",87,null],[11,"bind_to","","",87,null],[11,"new","","",88,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",88,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_sampler","","",88,null],[11,"bind_to","","",88,null],[11,"new","","",89,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_resource_view","","",89,null],[11,"link_sampler","","",89,null],[11,"bind_to","","",89,null],[0,"target","gfx::pso","Render target components for a PSO.",null,null],[3,"RenderTarget","gfx::pso::target","Render target component. Typically points to a color-formatted texture.",null,null],[3,"BlendTarget","","Render target component with active blending mode.",null,null],[3,"RawRenderTarget","","Raw (untyped) render target component with optional blending.",null,null],[3,"DepthTarget","","Depth target component.",null,null],[3,"StencilTarget","","Stencil target component.",null,null],[3,"DepthStencilTarget","","Depth + stencil target component.",null,null],[3,"Scissor","","Scissor component. Sets up the scissor test for rendering.",null,null],[3,"BlendRef","","Blend reference component. Sets up the reference color for blending.",null,null],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",90,{"inputs":[{"name":"self"},{"name":"__ht"}],"output":null}],[11,"eq","","",90,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",91,{"inputs":[{"name":"self"},{"name":"__ht"}],"output":null}],[11,"eq","","",91,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"rawrendertarget"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",92,null],[11,"eq","","",92,{"inputs":[{"name":"self"},{"name":"rawrendertarget"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"self"},{"name":"rawrendertarget"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",93,{"inputs":[{"name":"self"},{"name":"__ht"}],"output":null}],[11,"eq","","",93,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",94,{"inputs":[{"name":"self"},{"name":"__ht"}],"output":null}],[11,"eq","","",94,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",95,{"inputs":[{"name":"self"},{"name":"__ht"}],"output":null}],[11,"eq","","",95,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"scissor"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",96,null],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"scissor"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"self"},{"name":"scissor"}],"output":{"name":"bool"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"blendref"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",97,null],[11,"eq","","",97,{"inputs":[{"name":"self"},{"name":"blendref"}],"output":{"name":"bool"}}],[11,"new","","",90,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",90,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_output","","",90,null],[11,"bind_to","","",90,null],[11,"new","","",91,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",91,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_output","","",91,null],[11,"bind_to","","",91,null],[11,"new","","",92,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",92,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_output","","",92,null],[11,"bind_to","","",92,null],[11,"new","","",93,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",93,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_depth_stencil","","",93,null],[11,"bind_to","","",93,null],[11,"new","","",94,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_depth_stencil","","",94,null],[11,"bind_to","","",94,null],[11,"new","","",95,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",95,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_depth_stencil","","",95,null],[11,"bind_to","","",95,null],[11,"new","","",96,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",96,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_scissor","","",96,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"bind_to","","",96,null],[11,"new","","",97,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",97,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"bind_to","","",97,null],[0,"bundle","gfx::pso","Combine slice data with pipeline state.",null,null],[3,"Bundle","gfx::pso::bundle","Slice-PSO bundle.",null,null],[12,"slice","","Slice",98,null],[12,"pso","","Pipeline state",98,null],[12,"data","","Pipeline data",98,null],[11,"new","","Create new Bundle",98,{"inputs":[{"name":"slice"},{"name":"pipelinestate"},{"name":"data"}],"output":{"name":"self"}}],[11,"encode","","Draw bundle using encoder.",98,{"inputs":[{"name":"self"},{"name":"encoder"}],"output":null}],[8,"PipelineInit","gfx::pso","A service trait implemented by the \"init\" structure of PSO.",null,null],[16,"Meta","","The associated \"meta\" struct.",99,null],[10,"link_to","","Attempt to map a PSO descriptor to a give shader program, represented by `ProgramInfo`. Returns an instance of the \"meta\" struct upon successful mapping.",99,{"inputs":[{"name":"self"},{"name":"descriptor"},{"name":"programinfo"}],"output":{"generics":["initerror"],"name":"result"}}],[8,"PipelineData","","a service trait implemented the \"data\" structure of PSO.",null,null],[16,"Meta","","The associated \"meta\" struct.",100,null],[10,"bake_to","","Dump all the contained data into the raw data set, given the mapping (\"meta\"), and a handle manager.",100,null],[8,"DataLink","","The \"link\" logic portion of a PSO component. Defines the input data for the component.",null,null],[16,"Init","","The assotiated \"init\" type - a member of the PSO \"init\" struct.",101,null],[10,"new","","Create a new empty data link.",101,{"inputs":[],"output":{"name":"self"}}],[10,"is_active","","Check if this link is actually used by the shader.",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"link_vertex_buffer","","Attempt to link with a vertex buffer containing multiple attributes.",101,null],[11,"link_input","","Attempt to link with a vertex attribute.",101,null],[11,"link_constant_buffer","","Attempt to link with a constant buffer.",101,null],[11,"link_global_constant","","Attempt to link with a global constant.",101,null],[11,"link_output","","Attempt to link with an output render target (RTV).",101,null],[11,"link_depth_stencil","","Attempt to link with a depth-stencil target (DSV).",101,null],[11,"link_resource_view","","Attempt to link with a shader resource (SRV).",101,null],[11,"link_unordered_view","","Attempt to link with an unordered access (UAV).",101,null],[11,"link_sampler","","Attempt to link with a sampler.",101,null],[11,"link_scissor","","Attempt to enable scissor test.",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"DataBind","","The \"bind\" logic portion of the PSO component. Defines how the user data translates into the raw data set.",null,null],[16,"Data","","The associated \"data\" type - a member of the PSO \"data\" struct.",102,null],[10,"bind_to","","Dump the given data into the raw data set.",102,null],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"rawdataset"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"rawdataset"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"self"},{"name":"rawdataset"}],"output":{"name":"bool"}}],[11,"new","","Create an empty data set.",70,{"inputs":[],"output":{"name":"rawdataset"}}],[11,"clear","","Clear all contained data.",70,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"elementerror"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",71,{"inputs":[{"name":"self"},{"name":"elementerror"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"self"},{"name":"elementerror"}],"output":{"name":"bool"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",71,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",71,{"inputs":[{"generics":["str"],"name":"elementerror"}],"output":{"generics":["string"],"name":"elementerror"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"initerror"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"self"},{"name":"initerror"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"self"},{"name":"initerror"}],"output":{"name":"bool"}}],[11,"from","","",72,{"inputs":[{"generics":["str"],"name":"initerror"}],"output":{"generics":["string"],"name":"initerror"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",72,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",72,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"pipelinestate"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",103,null],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"pipelinestate"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"self"},{"name":"pipelinestate"}],"output":{"name":"bool"}}],[11,"new","","Create a new PSO from a raw handle and the \"meta\" instance.",103,{"inputs":[{"name":"rawpipelinestate"},{"name":"primitive"},{"name":"m"}],"output":{"name":"pipelinestate"}}],[11,"get_handle","","Get a raw handle reference.",103,{"inputs":[{"name":"self"}],"output":{"name":"rawpipelinestate"}}],[11,"get_meta","","Get a \"meta\" struct reference. Can be used by the user to check what resources are actually used and what not.",103,{"inputs":[{"name":"self"}],"output":{"name":"m"}}],[0,"shade","gfx","Shaders Shader parameter handling.",null,null],[0,"core","gfx::shade","Shader handling.",null,null],[6,"Dimension","gfx::shade::core","Number of components in a container type (vectors/matrices)",null,null],[4,"IsArray","","Whether the sampler samples an array texture.",null,null],[13,"Array","","",104,null],[13,"NoArray","","",104,null],[4,"IsComparison","","Whether the sampler compares the depth value upon sampling.",null,null],[13,"Compare","","",105,null],[13,"NoCompare","","",105,null],[4,"IsMultiSample","","Whether the sampler samples a multisample texture.",null,null],[13,"MultiSample","","",106,null],[13,"NoMultiSample","","",106,null],[4,"IsRect","","Whether the sampler samples a rectangle texture.",null,null],[13,"Rect","","",107,null],[13,"NoRect","","",107,null],[4,"MatrixFormat","","Whether the matrix is column or row major.",null,null],[13,"ColumnMajor","","",108,null],[13,"RowMajor","","",108,null],[4,"TextureType","","A type of the texture variable. This has to match the actual data we bind to the shader.",null,null],[13,"Buffer","","Sample from a buffer.",109,null],[13,"D1","","Sample from a 1D texture",109,null],[13,"D2","","Sample from a 2D texture",109,null],[13,"D3","","Sample from a 3D texture",109,null],[13,"Cube","","Sample from a cubemap.",109,null],[3,"SamplerType","","A type of the sampler variable.",null,null],[12,"0","","",110,null],[12,"1","","",110,null],[4,"BaseType","","Base type of this shader parameter.",null,null],[13,"I32","","",111,null],[13,"U32","","",111,null],[13,"F32","","",111,null],[13,"F64","","",111,null],[13,"Bool","","",111,null],[4,"ContainerType","","Number of components this parameter represents.",null,null],[13,"Single","","Scalar value",112,null],[13,"Vector","","A vector with `Dimension` components.",112,null],[13,"Matrix","","A matrix.",112,null],[4,"Stage","","Which program stage this shader represents.",null,null],[13,"Vertex","","",113,null],[13,"Hull","","",113,null],[13,"Domain","","",113,null],[13,"Geometry","","",113,null],[13,"Pixel","","",113,null],[17,"STAGES","","A constant static array of all shader stages.",null,null],[6,"Location","","Location of a parameter in the program.",null,null],[4,"UniformValue","","A value that can be uploaded to the device as a uniform.",null,null],[13,"I32","","",60,null],[13,"F32","","",60,null],[13,"I32Vector2","","",60,null],[13,"I32Vector3","","",60,null],[13,"I32Vector4","","",60,null],[13,"F32Vector2","","",60,null],[13,"F32Vector3","","",60,null],[13,"F32Vector4","","",60,null],[13,"F32Matrix2","","",60,null],[13,"F32Matrix3","","",60,null],[13,"F32Matrix4","","",60,null],[6,"ConstFormat","","Format of a shader constant.",null,null],[8,"BaseTyped","","A trait that statically links simple data types to base types of the shader constants.",null,null],[10,"get_base_type","","",114,{"inputs":[],"output":{"name":"basetype"}}],[8,"Formatted","","A trait that statically links simple data types to constant formats.",null,null],[10,"get_format","","Get the associated constant format.",115,null],[3,"Usage","","Parameter usage flags.",null,null],[17,"VERTEX","","Used by the vertex shader",null,null],[17,"GEOMETRY","","Used by the geometry shader",null,null],[17,"PIXEL","","Used by the pixel shader",null,null],[17,"HULL","","Used by the hull shader",null,null],[17,"DOMAIN","","Used by the pixel shader",null,null],[3,"AttributeVar","","Vertex information that a shader takes as input.",null,null],[12,"name","","Name of this attribute.",116,null],[12,"slot","","Slot of the vertex attribute.",116,null],[12,"base_type","","Type that this attribute is composed of.",116,null],[12,"container","","\"Scalarness\" of this attribute.",116,null],[3,"ConstVar","","A constant in the shader - a bit of data that doesn't vary",null,null],[12,"name","","Name of this constant.",117,null],[12,"location","","Location of this constant in the program. For constant buffer elements, it's the offset in bytes.",117,null],[12,"count","","Number of elements this constant represents.",117,null],[12,"base_type","","Type that this constant is composed of",117,null],[12,"container","","\"Scalarness\" of this constant.",117,null],[3,"ConstantBufferVar","","A constant buffer.",null,null],[12,"name","","Name of this constant buffer.",118,null],[12,"slot","","Slot of the constant buffer.",118,null],[12,"size","","Size (in bytes) of this buffer's data.",118,null],[12,"usage","","What program stage this buffer is used in.",118,null],[12,"elements","","List of individual elements in this buffer.",118,null],[3,"TextureVar","","Texture shader parameter.",null,null],[12,"name","","Name of this texture variable.",119,null],[12,"slot","","Slot of this texture variable.",119,null],[12,"base_type","","Base type for the texture.",119,null],[12,"ty","","Type of this texture.",119,null],[12,"usage","","What program stage this texture is used in.",119,null],[3,"UnorderedVar","","Unordered access shader parameter.",null,null],[12,"name","","Name of this unordered variable.",120,null],[12,"slot","","Slot of this unordered variable.",120,null],[12,"usage","","What program stage this UAV is used in.",120,null],[3,"SamplerVar","","Sampler shader parameter.",null,null],[12,"name","","Name of this sampler variable.",121,null],[12,"slot","","Slot of this sampler variable.",121,null],[12,"ty","","Type of this sampler.",121,null],[12,"usage","","What program stage this texture is used in.",121,null],[3,"OutputVar","","Target output variable.",null,null],[12,"name","","Name of this output variable.",122,null],[12,"slot","","Output color target index.",122,null],[12,"base_type","","Type of the output component.",122,null],[12,"container","","\"Scalarness\" of this output.",122,null],[3,"ProgramInfo","","Metadata about a program.",null,null],[12,"vertex_attributes","","Attributes in the program",59,null],[12,"globals","","Global constants in the program",59,null],[12,"constant_buffers","","Constant buffers in the program",59,null],[12,"textures","","Textures in the program",59,null],[12,"unordereds","","Unordered access resources in the program",59,null],[12,"samplers","","Samplers in the program",59,null],[12,"outputs","","Output targets in the program",59,null],[12,"output_depth","","A flag indicating that the pixel shader manually assigns the depth.",59,null],[12,"knows_outputs","","A hacky flag to make sure the clients know we are unable to actually get the output variable info",59,null],[3,"Program","","A program",null,null],[4,"CompatibilityError","","Error type for trying to store a UniformValue in a ConstVar.",null,null],[13,"ErrorArraySize","","Array sizes differ between the value and the var (trying to upload a vec2 as a vec4, etc)",123,null],[13,"ErrorBaseType","","Base types differ between the value and the var (trying to upload a f32 as a u16, etc)",123,null],[13,"ErrorContainer","","Container-ness differs between the value and the var (trying to upload a scalar as a vec4, etc)",123,null],[4,"CreateShaderError","","An error type for creating shaders.",null,null],[13,"ModelNotSupported","","The device does not support the requested shader model.",124,null],[13,"StageNotSupported","","The device does not support the shader stage.",124,null],[13,"CompilationFailed","","The shader failed to compile.",124,null],[3,"CreateProgramError","","An error type for creating programs.",null,null],[6,"ConstFormat","gfx::shade","Format of a shader constant.",null,null],[8,"Formatted","","A trait that statically links simple data types to constant formats.",null,null],[10,"get_format","","Get the associated constant format.",115,null],[3,"Usage","","Parameter usage flags.",null,null],[4,"ProgramError","","Program linking error",null,null],[13,"Vertex","","Unable to compile the vertex shader",125,null],[13,"Hull","","Unable to compile the hull shader",125,null],[13,"Domain","","Unable to compile the domain shader",125,null],[13,"Geometry","","Unable to compile the geometry shader",125,null],[13,"Pixel","","Unable to compile the pixel shader",125,null],[13,"Link","","Unable to link",125,null],[8,"ToUniform","","",null,null],[10,"convert","","",126,{"inputs":[{"name":"self"}],"output":{"name":"uniformvalue"}}],[11,"clone","","",125,{"inputs":[{"name":"self"}],"output":{"name":"programerror"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",125,{"inputs":[{"name":"self"},{"name":"programerror"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"self"},{"name":"programerror"}],"output":{"name":"bool"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",125,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",125,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[0,"macros","gfx","Convenience macros Various helper macros.",null,null],[6,"CopyBufferResult","","Result type returned when copying a buffer into another buffer.",null,null],[6,"CopyBufferTextureResult","","Result type returned when copying buffer data into a texture.",null,null],[6,"CopyTextureBufferResult","","Result type returned when copying texture data into a buffer.",null,null],[8,"IntoIndexBuffer","","A helper trait to create `IndexBuffers` from different kinds of data.",null,null],[10,"into_index_buffer","","Turns self into an `IndexBuffer`.",127,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"indexbuffer"}}],[14,"gfx_pipeline_inner","","",null,null],[14,"gfx_pipeline_base","","",null,null],[14,"gfx_pipeline","","",null,null],[14,"gfx_impl_struct","","",null,null],[14,"gfx_impl_struct_meta","","",null,null],[14,"gfx_vertex_struct","","",null,null],[14,"gfx_vertex_struct_meta","","",null,null],[14,"gfx_constant_struct","","",null,null],[14,"gfx_constant_struct_meta","","",null,null],[14,"gfx_format","","",null,null],[14,"gfx_defines","","Defines vertex, constant and pipeline formats in one block.",null,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",128,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bind"}}],[11,"bitxor","gfx::shade","Returns the left flags, but with all the right flags toggled.",129,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"usage"}}],[11,"bitxor","gfx::memory","Returns the left flags, but with all the right flags toggled.",130,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"access"}}],[11,"bitxor","gfx::texture","Returns the left flags, but with all the right flags toggled.",131,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",131,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"sub","gfx::memory","Returns the set difference of the two sets of flags.",130,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"access"}}],[11,"sub","gfx","Returns the set difference of the two sets of flags.",128,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bind"}}],[11,"sub","gfx::shade","Returns the set difference of the two sets of flags.",129,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"usage"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",129,null],[11,"bitand_assign","gfx","Disables all flags disabled in the set.",128,null],[11,"bitand_assign","gfx::memory","Disables all flags disabled in the set.",130,null],[11,"bitand_assign","gfx::texture","Disables all flags disabled in the set.",131,null],[11,"partial_cmp","gfx::format","",132,{"inputs":[{"name":"self"},{"name":"r8_g8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","gfx::texture","",43,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",43,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"le","","",43,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"gt","","",43,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"ge","","",43,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx::format","",133,{"inputs":[{"name":"self"},{"name":"inorm"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",34,{"inputs":[{"name":"self"},{"name":"i8norm"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",34,{"inputs":[{"name":"self"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"le","","",34,{"inputs":[{"name":"self"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"gt","","",34,{"inputs":[{"name":"self"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"ge","","",34,{"inputs":[{"name":"self"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx::texture","",41,{"inputs":[{"name":"self"},{"name":"filtermethod"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",41,{"inputs":[{"name":"self"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"le","","",41,{"inputs":[{"name":"self"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"gt","","",41,{"inputs":[{"name":"self"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"ge","","",41,{"inputs":[{"name":"self"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx::shade","",129,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",129,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"le","","",129,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"gt","","",129,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"ge","","",129,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx::format","",134,{"inputs":[{"name":"self"},{"name":"r32_g32_b32_a32"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",135,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","gfx","",128,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",128,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"le","","",128,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"gt","","",128,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"ge","","",128,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx::format","",136,{"inputs":[{"name":"self"},{"name":"d16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",137,{"inputs":[{"name":"self"},{"name":"r32_g32"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",33,{"inputs":[{"name":"self"},{"name":"u8norm"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",33,{"inputs":[{"name":"self"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"le","","",33,{"inputs":[{"name":"self"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"gt","","",33,{"inputs":[{"name":"self"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"ge","","",33,{"inputs":[{"name":"self"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",138,{"inputs":[{"name":"self"},{"name":"srgb"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","gfx::texture","",45,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","gfx::format","",29,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",29,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"le","","",29,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"gt","","",29,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ge","","",29,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",37,{"inputs":[{"name":"self"},{"name":"f16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",37,{"inputs":[{"name":"self"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"le","","",37,{"inputs":[{"name":"self"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"gt","","",37,{"inputs":[{"name":"self"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"ge","","",37,{"inputs":[{"name":"self"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",139,{"inputs":[{"name":"self"},{"name":"b8_g8_r8_a8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",140,{"inputs":[{"name":"self"},{"name":"r16_g16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","gfx::memory","",57,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","gfx::format","",36,{"inputs":[{"name":"self"},{"name":"i16norm"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",36,{"inputs":[{"name":"self"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"le","","",36,{"inputs":[{"name":"self"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"gt","","",36,{"inputs":[{"name":"self"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"ge","","",36,{"inputs":[{"name":"self"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",141,{"inputs":[{"name":"self"},{"name":"r11_g11_b10"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",142,{"inputs":[{"name":"self"},{"name":"r10_g10_b10_a2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",143,{"inputs":[{"name":"self"},{"name":"r8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","gfx::texture","",46,{"inputs":[{"name":"self"},{"name":"packedcolor"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",46,{"inputs":[{"name":"self"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"le","","",46,{"inputs":[{"name":"self"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"gt","","",46,{"inputs":[{"name":"self"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"ge","","",46,{"inputs":[{"name":"self"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",40,{"inputs":[{"name":"self"},{"name":"aamode"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",40,{"inputs":[{"name":"self"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"le","","",40,{"inputs":[{"name":"self"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"gt","","",40,{"inputs":[{"name":"self"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"ge","","",40,{"inputs":[{"name":"self"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx::format","",28,{"inputs":[{"name":"self"},{"name":"swizzle"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",28,{"inputs":[{"name":"self"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"le","","",28,{"inputs":[{"name":"self"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"gt","","",28,{"inputs":[{"name":"self"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"ge","","",28,{"inputs":[{"name":"self"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx::texture","",42,{"inputs":[{"name":"self"},{"name":"cubeface"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","gfx::format","",144,{"inputs":[{"name":"self"},{"name":"d32"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",145,{"inputs":[{"name":"self"},{"name":"r16_g16_b16_a16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",146,{"inputs":[{"name":"self"},{"name":"r32_g32_b32"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",147,{"inputs":[{"name":"self"},{"name":"unorm"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",148,{"inputs":[{"name":"self"},{"name":"r4_g4_b4_a4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",149,{"inputs":[{"name":"self"},{"name":"d24_s8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","gfx::texture","",44,{"inputs":[{"name":"self"},{"name":"imageinfocommon"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",44,{"inputs":[{"name":"self"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"le","","",44,{"inputs":[{"name":"self"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"gt","","",44,{"inputs":[{"name":"self"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"ge","","",44,{"inputs":[{"name":"self"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",50,{"inputs":[{"name":"self"},{"name":"renderdesc"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",50,{"inputs":[{"name":"self"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"le","","",50,{"inputs":[{"name":"self"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"gt","","",50,{"inputs":[{"name":"self"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"ge","","",50,{"inputs":[{"name":"self"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",48,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",48,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"le","","",48,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"gt","","",48,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"ge","","",48,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx::format","",150,{"inputs":[{"name":"self"},{"name":"r16_g16_b16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",35,{"inputs":[{"name":"self"},{"name":"u16norm"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",35,{"inputs":[{"name":"self"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"le","","",35,{"inputs":[{"name":"self"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"gt","","",35,{"inputs":[{"name":"self"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"ge","","",35,{"inputs":[{"name":"self"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",151,{"inputs":[{"name":"self"},{"name":"r5_g6_b5"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",25,{"inputs":[{"name":"self"},{"name":"channeltype"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"self"},{"name":"surfacetype"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","gfx::texture","",152,{"inputs":[{"name":"self"},{"name":"lod"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",152,{"inputs":[{"name":"self"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"le","","",152,{"inputs":[{"name":"self"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"gt","","",152,{"inputs":[{"name":"self"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"ge","","",152,{"inputs":[{"name":"self"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx::format","",27,{"inputs":[{"name":"self"},{"name":"channelsource"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",153,{"inputs":[{"name":"self"},{"name":"d24"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","gfx::shade::core","",60,{"inputs":[{"name":"self"},{"name":"uniformvalue"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",60,{"inputs":[{"name":"self"},{"name":"uniformvalue"}],"output":{"name":"bool"}}],[11,"le","","",60,{"inputs":[{"name":"self"},{"name":"uniformvalue"}],"output":{"name":"bool"}}],[11,"gt","","",60,{"inputs":[{"name":"self"},{"name":"uniformvalue"}],"output":{"name":"bool"}}],[11,"ge","","",60,{"inputs":[{"name":"self"},{"name":"uniformvalue"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx::texture","",131,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",131,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"le","","",131,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"gt","","",131,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"ge","","",131,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx::format","",154,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",155,{"inputs":[{"name":"self"},{"name":"r32"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",156,{"inputs":[{"name":"self"},{"name":"r8_g8_b8_a8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","gfx::texture","",47,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",47,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"le","","",47,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"gt","","",47,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"ge","","",47,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx::format","",157,{"inputs":[{"name":"self"},{"name":"r4_g4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","gfx::texture","",51,{"inputs":[{"name":"self"},{"name":"depthstencildesc"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",51,{"inputs":[{"name":"self"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"le","","",51,{"inputs":[{"name":"self"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"gt","","",51,{"inputs":[{"name":"self"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"ge","","",51,{"inputs":[{"name":"self"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx::memory","",130,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",130,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"bool"}}],[11,"le","","",130,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"bool"}}],[11,"gt","","",130,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"bool"}}],[11,"ge","","",130,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx::texture","",49,{"inputs":[{"name":"self"},{"name":"resourcedesc"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",49,{"inputs":[{"name":"self"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"le","","",49,{"inputs":[{"name":"self"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"gt","","",49,{"inputs":[{"name":"self"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"ge","","",49,{"inputs":[{"name":"self"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx::format","",158,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",159,{"inputs":[{"name":"self"},{"name":"r5_g5_b5_a1"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",160,{"inputs":[{"name":"self"},{"name":"r16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",149,{"inputs":[{"name":"self"},{"name":"d24_s8"}],"output":{"name":"ordering"}}],[11,"cmp","","",153,{"inputs":[{"name":"self"},{"name":"d24"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::texture","",51,{"inputs":[{"name":"self"},{"name":"depthstencildesc"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::format","",150,{"inputs":[{"name":"self"},{"name":"r16_g16_b16"}],"output":{"name":"ordering"}}],[11,"cmp","gfx","",128,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::format","",154,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"ordering"}}],[11,"cmp","","",147,{"inputs":[{"name":"self"},{"name":"unorm"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::texture","",43,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::format","",144,{"inputs":[{"name":"self"},{"name":"d32"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::memory","",57,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::format","",139,{"inputs":[{"name":"self"},{"name":"b8_g8_r8_a8"}],"output":{"name":"ordering"}}],[11,"cmp","","",148,{"inputs":[{"name":"self"},{"name":"r4_g4_b4_a4"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::shade","",129,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::format","",142,{"inputs":[{"name":"self"},{"name":"r10_g10_b10_a2"}],"output":{"name":"ordering"}}],[11,"cmp","","",159,{"inputs":[{"name":"self"},{"name":"r5_g5_b5_a1"}],"output":{"name":"ordering"}}],[11,"cmp","","",138,{"inputs":[{"name":"self"},{"name":"srgb"}],"output":{"name":"ordering"}}],[11,"cmp","","",145,{"inputs":[{"name":"self"},{"name":"r16_g16_b16_a16"}],"output":{"name":"ordering"}}],[11,"cmp","","",26,{"inputs":[{"name":"self"},{"name":"surfacetype"}],"output":{"name":"ordering"}}],[11,"cmp","","",146,{"inputs":[{"name":"self"},{"name":"r32_g32_b32"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::texture","",42,{"inputs":[{"name":"self"},{"name":"cubeface"}],"output":{"name":"ordering"}}],[11,"cmp","","",50,{"inputs":[{"name":"self"},{"name":"renderdesc"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::format","",33,{"inputs":[{"name":"self"},{"name":"u8norm"}],"output":{"name":"ordering"}}],[11,"cmp","","",143,{"inputs":[{"name":"self"},{"name":"r8"}],"output":{"name":"ordering"}}],[11,"cmp","","",34,{"inputs":[{"name":"self"},{"name":"i8norm"}],"output":{"name":"ordering"}}],[11,"cmp","","",36,{"inputs":[{"name":"self"},{"name":"i16norm"}],"output":{"name":"ordering"}}],[11,"cmp","","",132,{"inputs":[{"name":"self"},{"name":"r8_g8"}],"output":{"name":"ordering"}}],[11,"cmp","","",156,{"inputs":[{"name":"self"},{"name":"r8_g8_b8_a8"}],"output":{"name":"ordering"}}],[11,"cmp","","",157,{"inputs":[{"name":"self"},{"name":"r4_g4"}],"output":{"name":"ordering"}}],[11,"cmp","","",133,{"inputs":[{"name":"self"},{"name":"inorm"}],"output":{"name":"ordering"}}],[11,"cmp","","",29,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"ordering"}}],[11,"cmp","","",141,{"inputs":[{"name":"self"},{"name":"r11_g11_b10"}],"output":{"name":"ordering"}}],[11,"cmp","","",35,{"inputs":[{"name":"self"},{"name":"u16norm"}],"output":{"name":"ordering"}}],[11,"cmp","","",136,{"inputs":[{"name":"self"},{"name":"d16"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::texture","",45,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":{"name":"ordering"}}],[11,"cmp","","",49,{"inputs":[{"name":"self"},{"name":"resourcedesc"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::format","",37,{"inputs":[{"name":"self"},{"name":"f16"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::texture","",40,{"inputs":[{"name":"self"},{"name":"aamode"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::format","",27,{"inputs":[{"name":"self"},{"name":"channelsource"}],"output":{"name":"ordering"}}],[11,"cmp","","",135,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::texture","",48,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::format","",158,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::texture","",41,{"inputs":[{"name":"self"},{"name":"filtermethod"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::format","",151,{"inputs":[{"name":"self"},{"name":"r5_g6_b5"}],"output":{"name":"ordering"}}],[11,"cmp","","",155,{"inputs":[{"name":"self"},{"name":"r32"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::texture","",131,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::format","",137,{"inputs":[{"name":"self"},{"name":"r32_g32"}],"output":{"name":"ordering"}}],[11,"cmp","","",134,{"inputs":[{"name":"self"},{"name":"r32_g32_b32_a32"}],"output":{"name":"ordering"}}],[11,"cmp","","",28,{"inputs":[{"name":"self"},{"name":"swizzle"}],"output":{"name":"ordering"}}],[11,"cmp","","",160,{"inputs":[{"name":"self"},{"name":"r16"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::texture","",44,{"inputs":[{"name":"self"},{"name":"imageinfocommon"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::format","",140,{"inputs":[{"name":"self"},{"name":"r16_g16"}],"output":{"name":"ordering"}}],[11,"cmp","","",25,{"inputs":[{"name":"self"},{"name":"channeltype"}],"output":{"name":"ordering"}}],[11,"cmp","gfx::memory","",130,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"ordering"}}],[11,"fmt","gfx::texture","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::mapping","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",161,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::buffer","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::texture","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"not","gfx::shade","Returns the complement of this set of flags.",129,{"inputs":[{"name":"self"}],"output":{"name":"usage"}}],[11,"not","gfx::texture","Returns the complement of this set of flags.",131,{"inputs":[{"name":"self"}],"output":{"name":"depthstencilflags"}}],[11,"not","gfx","Returns the complement of this set of flags.",128,{"inputs":[{"name":"self"}],"output":{"name":"bind"}}],[11,"not","gfx::memory","Returns the complement of this set of flags.",130,{"inputs":[{"name":"self"}],"output":{"name":"access"}}],[11,"bitor","gfx::texture","Returns the union of the two sets of flags.",131,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"bitor","gfx::memory","Returns the union of the two sets of flags.",130,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"access"}}],[11,"bitor","gfx","Returns the union of the two sets of flags.",128,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bind"}}],[11,"bitor","gfx::shade","Returns the union of the two sets of flags.",129,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"usage"}}],[11,"from","gfx::format","",37,{"inputs":[{"name":"u16"}],"output":{"name":"f16"}}],[11,"from","gfx::texture","",51,{"inputs":[{"name":"renderdesc"}],"output":{"name":"depthstencildesc"}}],[11,"from","","",40,{"inputs":[{"name":"u8"}],"output":{"name":"aamode"}}],[11,"from","gfx::format","",33,{"inputs":[{"name":"u8"}],"output":{"name":"u8norm"}}],[11,"from","","",36,{"inputs":[{"name":"i16"}],"output":{"name":"i16norm"}}],[11,"from","","",35,{"inputs":[{"name":"u16"}],"output":{"name":"u16norm"}}],[11,"from","gfx::shade","",129,{"inputs":[{"name":"stage"}],"output":{"name":"usage"}}],[11,"from","gfx::texture","",152,{"inputs":[{"name":"f32"}],"output":{"name":"lod"}}],[11,"from","gfx::format","",34,{"inputs":[{"name":"i8"}],"output":{"name":"i8norm"}}],[11,"from","gfx::shade::core","",161,{"inputs":[{"name":"s"}],"output":{"name":"createprogramerror"}}],[11,"from","gfx","",56,{"inputs":[{"name":"targetviewerror"}],"output":{"name":"combinederror"}}],[11,"from","","",56,{"inputs":[{"name":"creationerror"}],"output":{"name":"combinederror"}}],[11,"from","","",56,{"inputs":[{"name":"resourceviewerror"}],"output":{"name":"combinederror"}}],[11,"from","gfx::texture","",46,null],[11,"get_channel_type","gfx::format","",154,{"inputs":[],"output":{"name":"channeltype"}}],[11,"get_channel_type","","",133,{"inputs":[],"output":{"name":"channeltype"}}],[11,"get_channel_type","","",147,{"inputs":[],"output":{"name":"channeltype"}}],[11,"get_channel_type","","",138,{"inputs":[],"output":{"name":"channeltype"}}],[11,"get_channel_type","","",135,{"inputs":[],"output":{"name":"channeltype"}}],[11,"get_channel_type","","",158,{"inputs":[],"output":{"name":"channeltype"}}],[11,"clone","gfx::shade","",129,{"inputs":[{"name":"self"}],"output":{"name":"usage"}}],[11,"clone","gfx","",55,{"inputs":[{"name":"self"}],"output":{"name":"targetviewerror"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"combinederror"}}],[11,"clone","","",162,{"inputs":[{"name":"self"}],"output":{"name":"hullshader"}}],[11,"clone","gfx::pso::buffer","",73,{"inputs":[{"name":"self"}],"output":{"name":"element"}}],[11,"clone","gfx","",128,{"inputs":[{"name":"self"}],"output":{"name":"bind"}}],[11,"clone","gfx::shade::core","",118,{"inputs":[{"name":"self"}],"output":{"name":"constantbuffervar"}}],[11,"clone","gfx::handle","",163,{"inputs":[{"name":"self"}],"output":{"name":"rendertargetview"}}],[11,"clone","","",164,{"inputs":[{"name":"self"}],"output":{"name":"shader"}}],[11,"clone","gfx::format","",139,{"inputs":[{"name":"self"}],"output":{"name":"b8_g8_r8_a8"}}],[11,"clone","gfx::shade::core","",109,{"inputs":[{"name":"self"}],"output":{"name":"texturetype"}}],[11,"clone","gfx::format","",141,{"inputs":[{"name":"self"}],"output":{"name":"r11_g11_b10"}}],[11,"clone","gfx::texture","",42,{"inputs":[{"name":"self"}],"output":{"name":"cubeface"}}],[11,"clone","gfx::format","",143,{"inputs":[{"name":"self"}],"output":{"name":"r8"}}],[11,"clone","gfx::memory","",130,{"inputs":[{"name":"self"}],"output":{"name":"access"}}],[11,"clone","gfx::handle","",165,{"inputs":[{"name":"self"}],"output":{"name":"sampler"}}],[11,"clone","gfx::texture","",49,{"inputs":[{"name":"self"}],"output":{"name":"resourcedesc"}}],[11,"clone","","",131,{"inputs":[{"name":"self"}],"output":{"name":"depthstencilflags"}}],[11,"clone","gfx::shade::core","",116,{"inputs":[{"name":"self"}],"output":{"name":"attributevar"}}],[11,"clone","gfx::buffer","",24,{"inputs":[{"name":"self"}],"output":{"name":"creationerror"}}],[11,"clone","gfx::shade::core","",108,{"inputs":[{"name":"self"}],"output":{"name":"matrixformat"}}],[11,"clone","","",122,{"inputs":[{"name":"self"}],"output":{"name":"outputvar"}}],[11,"clone","gfx::format","",142,{"inputs":[{"name":"self"}],"output":{"name":"r10_g10_b10_a2"}}],[11,"clone","gfx::mapping","",52,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"clone","gfx::format","",148,{"inputs":[{"name":"self"}],"output":{"name":"r4_g4_b4_a4"}}],[11,"clone","gfx::handle","",166,{"inputs":[{"name":"self"}],"output":{"name":"rawrendertargetview"}}],[11,"clone","","",167,{"inputs":[{"name":"self"}],"output":{"name":"rawunorderedaccessview"}}],[11,"clone","gfx::texture","",46,{"inputs":[{"name":"self"}],"output":{"name":"packedcolor"}}],[11,"clone","gfx::buffer","",22,{"inputs":[{"name":"self"}],"output":{"name":"role"}}],[11,"clone","gfx::memory","",57,{"inputs":[{"name":"self"}],"output":{"name":"usage"}}],[11,"clone","gfx::handle","",168,{"inputs":[{"name":"self"}],"output":{"name":"rawshaderresourceview"}}],[11,"clone","gfx","",169,{"inputs":[{"name":"self"}],"output":{"name":"domainshader"}}],[11,"clone","gfx::format","",29,{"inputs":[{"name":"self"}],"output":{"name":"format"}}],[11,"clone","","",150,{"inputs":[{"name":"self"}],"output":{"name":"r16_g16_b16"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"swizzle"}}],[11,"clone","","",149,{"inputs":[{"name":"self"}],"output":{"name":"d24_s8"}}],[11,"clone","gfx::buffer","",23,{"inputs":[{"name":"self"}],"output":{"name":"info"}}],[11,"clone","gfx::handle","",170,{"inputs":[{"name":"self"}],"output":{"name":"depthstencilview"}}],[11,"clone","gfx::format","",133,{"inputs":[{"name":"self"}],"output":{"name":"inorm"}}],[11,"clone","","",140,{"inputs":[{"name":"self"}],"output":{"name":"r16_g16"}}],[11,"clone","gfx::shade::core","",60,{"inputs":[{"name":"self"}],"output":{"name":"uniformvalue"}}],[11,"clone","gfx::texture","",50,{"inputs":[{"name":"self"}],"output":{"name":"renderdesc"}}],[11,"clone","","",152,{"inputs":[{"name":"self"}],"output":{"name":"lod"}}],[11,"clone","gfx::shade::core","",106,{"inputs":[{"name":"self"}],"output":{"name":"ismultisample"}}],[11,"clone","gfx","",171,{"inputs":[{"name":"self"}],"output":{"name":"geometryshader"}}],[11,"clone","gfx::shade::core","",111,{"inputs":[{"name":"self"}],"output":{"name":"basetype"}}],[11,"clone","gfx::format","",138,{"inputs":[{"name":"self"}],"output":{"name":"srgb"}}],[11,"clone","gfx::handle","",172,{"inputs":[{"name":"self"}],"output":{"name":"rawtexture"}}],[11,"clone","gfx::texture","",38,{"inputs":[{"name":"self"}],"output":{"name":"creationerror"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"imageinfocommon"}}],[11,"clone","gfx::format","",35,{"inputs":[{"name":"self"}],"output":{"name":"u16norm"}}],[11,"clone","","",144,{"inputs":[{"name":"self"}],"output":{"name":"d32"}}],[11,"clone","gfx::pso","",69,{"inputs":[{"name":"self"}],"output":{"name":"descriptor"}}],[11,"clone","gfx","",54,{"inputs":[{"name":"self"}],"output":{"name":"resourceviewerror"}}],[11,"clone","gfx::shade::core","",113,{"inputs":[{"name":"self"}],"output":{"name":"stage"}}],[11,"clone","gfx::texture","",43,{"inputs":[{"name":"self"}],"output":{"name":"kind"}}],[11,"clone","gfx::format","",156,{"inputs":[{"name":"self"}],"output":{"name":"r8_g8_b8_a8"}}],[11,"clone","gfx::handle","",173,{"inputs":[{"name":"self"}],"output":{"name":"rawpipelinestate"}}],[11,"clone","gfx","",20,{"inputs":[{"name":"self"}],"output":{"name":"submissionerror"}}],[11,"clone","gfx::shade::core","",119,{"inputs":[{"name":"self"}],"output":{"name":"texturevar"}}],[11,"clone","gfx::texture","",39,{"inputs":[{"name":"self"}],"output":{"name":"layererror"}}],[11,"clone","gfx::shade::core","",161,{"inputs":[{"name":"self"}],"output":{"name":"createprogramerror"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"programinfo"}}],[11,"clone","gfx::format","",145,{"inputs":[{"name":"self"}],"output":{"name":"r16_g16_b16_a16"}}],[11,"clone","gfx::shade::core","",123,{"inputs":[{"name":"self"}],"output":{"name":"compatibilityerror"}}],[11,"clone","gfx::handle","",174,{"inputs":[{"name":"self"}],"output":{"name":"rawbuffer"}}],[11,"clone","gfx::format","",27,{"inputs":[{"name":"self"}],"output":{"name":"channelsource"}}],[11,"clone","gfx::shade::core","",107,{"inputs":[{"name":"self"}],"output":{"name":"isrect"}}],[11,"clone","gfx::format","",151,{"inputs":[{"name":"self"}],"output":{"name":"r5_g6_b5"}}],[11,"clone","gfx::shade::core","",120,{"inputs":[{"name":"self"}],"output":{"name":"unorderedvar"}}],[11,"clone","gfx","",175,{"inputs":[{"name":"self"}],"output":{"name":"pixelshader"}}],[11,"clone","gfx::handle","",176,{"inputs":[{"name":"self"}],"output":{"name":"program"}}],[11,"clone","gfx::format","",159,{"inputs":[{"name":"self"}],"output":{"name":"r5_g5_b5_a1"}}],[11,"clone","","",132,{"inputs":[{"name":"self"}],"output":{"name":"r8_g8"}}],[11,"clone","gfx::shade::core","",121,{"inputs":[{"name":"self"}],"output":{"name":"samplervar"}}],[11,"clone","","",104,{"inputs":[{"name":"self"}],"output":{"name":"isarray"}}],[11,"clone","gfx::format","",160,{"inputs":[{"name":"self"}],"output":{"name":"r16"}}],[11,"clone","gfx","",177,{"inputs":[{"name":"self"}],"output":{"name":"vertexshader"}}],[11,"clone","gfx::texture","",47,{"inputs":[{"name":"self"}],"output":{"name":"samplerinfo"}}],[11,"clone","gfx::format","",36,{"inputs":[{"name":"self"}],"output":{"name":"i16norm"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"f16"}}],[11,"clone","gfx::handle","",178,{"inputs":[{"name":"self"}],"output":{"name":"unorderedaccessview"}}],[11,"clone","gfx::format","",153,{"inputs":[{"name":"self"}],"output":{"name":"d24"}}],[11,"clone","","",158,{"inputs":[{"name":"self"}],"output":{"name":"uint"}}],[11,"clone","gfx::texture","",51,{"inputs":[{"name":"self"}],"output":{"name":"depthstencildesc"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"info"}}],[11,"clone","gfx::format","",136,{"inputs":[{"name":"self"}],"output":{"name":"d16"}}],[11,"clone","gfx::texture","",45,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[11,"clone","gfx::pso","",179,{"inputs":[{"name":"self"}],"output":{"name":"accessinfo"}}],[11,"clone","gfx::texture","",40,{"inputs":[{"name":"self"}],"output":{"name":"aamode"}}],[11,"clone","gfx::format","",25,{"inputs":[{"name":"self"}],"output":{"name":"channeltype"}}],[11,"clone","","",135,{"inputs":[{"name":"self"}],"output":{"name":"int"}}],[11,"clone","gfx","",21,{"inputs":[{"name":"self"}],"output":{"name":"shaderset"}}],[11,"clone","gfx::handle","",68,{"inputs":[{"name":"self"}],"output":{"name":"buffer"}}],[11,"clone","gfx::format","",134,{"inputs":[{"name":"self"}],"output":{"name":"r32_g32_b32_a32"}}],[11,"clone","","",137,{"inputs":[{"name":"self"}],"output":{"name":"r32_g32"}}],[11,"clone","","",155,{"inputs":[{"name":"self"}],"output":{"name":"r32"}}],[11,"clone","gfx::shade::core","",110,{"inputs":[{"name":"self"}],"output":{"name":"samplertype"}}],[11,"clone","gfx::format","",34,{"inputs":[{"name":"self"}],"output":{"name":"i8norm"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u8norm"}}],[11,"clone","gfx::handle","",180,{"inputs":[{"name":"self"}],"output":{"name":"shaderresourceview"}}],[11,"clone","gfx::format","",157,{"inputs":[{"name":"self"}],"output":{"name":"r4_g4"}}],[11,"clone","gfx::handle","",181,{"inputs":[{"name":"self"}],"output":{"name":"texture"}}],[11,"clone","gfx::format","",147,{"inputs":[{"name":"self"}],"output":{"name":"unorm"}}],[11,"clone","","",154,{"inputs":[{"name":"self"}],"output":{"name":"float"}}],[11,"clone","gfx::shade::core","",105,{"inputs":[{"name":"self"}],"output":{"name":"iscomparison"}}],[11,"clone","gfx","",18,{"inputs":[{"name":"self"}],"output":{"name":"primitive"}}],[11,"clone","gfx::handle","",182,{"inputs":[{"name":"self"}],"output":{"name":"rawdepthstencilview"}}],[11,"clone","gfx::texture","",41,{"inputs":[{"name":"self"}],"output":{"name":"filtermethod"}}],[11,"clone","gfx::shade::core","",112,{"inputs":[{"name":"self"}],"output":{"name":"containertype"}}],[11,"clone","gfx::format","",26,{"inputs":[{"name":"self"}],"output":{"name":"surfacetype"}}],[11,"clone","gfx::shade::core","",117,{"inputs":[{"name":"self"}],"output":{"name":"constvar"}}],[11,"clone","","",124,{"inputs":[{"name":"self"}],"output":{"name":"createshadererror"}}],[11,"clone","gfx::format","",146,{"inputs":[{"name":"self"}],"output":{"name":"r32_g32_b32"}}],[11,"clone","gfx::handle","",183,{"inputs":[{"name":"self"}],"output":{"name":"fence"}}],[11,"get_info","gfx::texture","Get texture descriptor",184,{"inputs":[{"name":"self"}],"output":{"name":"info"}}],[11,"deref","gfx::handle","",172,null],[11,"deref","gfx::mapping","",185,null],[11,"deref","","",186,null],[11,"get_info","gfx::buffer","Get buffer info",187,{"inputs":[{"name":"self"}],"output":{"name":"info"}}],[11,"is_mapped","","Is this buffer mapped ?",187,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"deref","gfx::handle","",174,null],[11,"new","gfx::pso","Creates empty access informations",179,{"inputs":[],"output":{"name":"accessinfo"}}],[11,"clear","","Clear access informations",179,null],[11,"buffer_read","","Register a buffer read access",179,null],[11,"buffer_write","","Register a buffer write access",179,null],[11,"mapped_reads","","Returns the mapped buffers that The GPU will read from",179,{"inputs":[{"name":"self"}],"output":{"generics":["rawbuffer"],"name":"iter"}}],[11,"mapped_writes","","Returns the mapped buffers that The GPU will write to",179,{"inputs":[{"name":"self"}],"output":{"generics":["rawbuffer"],"name":"iter"}}],[11,"has_mapped_reads","","Is there any mapped buffer reads ?",179,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_mapped_writes","","Is there any mapped buffer writes ?",179,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"take_accesses","","Takes all the accesses necessary for submission",179,{"inputs":[{"name":"self"}],"output":{"generics":["accessguard","submissionerror"],"name":"result"}}],[11,"get_info","gfx::shade::core","Get program info",188,{"inputs":[{"name":"self"}],"output":{"name":"programinfo"}}],[11,"deref","gfx::handle","",176,null],[11,"fmt","gfx::shade::core","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",157,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::handle","",176,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::pso","",179,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",138,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::buffer","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::handle","",164,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",147,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::handle","",183,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::texture","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",150,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",188,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::texture","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",154,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::pso","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx","",171,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::texture","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::handle","",168,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx","",175,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::handle","",165,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",167,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::texture","",184,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx","",162,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",145,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::texture","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",151,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::memory","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::texture","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",142,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::texture","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",159,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",141,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::texture","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::handle","",189,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",155,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::handle","",181,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",153,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::mapping","",185,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::texture","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",158,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",139,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::texture","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::handle","",180,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::memory","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::pso::buffer","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::texture","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::handle","",174,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::buffer","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx","",169,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::buffer","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::handle","",166,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::texture","",152,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::handle","",173,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::mapping","",186,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",156,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::texture","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",160,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::texture","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::mapping","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::handle","",172,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",149,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::handle","",182,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",178,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx","",177,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::handle","",163,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::buffer","",187,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",146,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::handle","",170,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",140,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::shade::core","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::handle","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx::format","",144,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"into","gfx::texture","",152,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"into","","",46,null],[11,"deref_mut","gfx::mapping","",186,null],[11,"from_iter","gfx::shade","",129,{"inputs":[{"name":"t"}],"output":{"name":"usage"}}],[11,"from_iter","gfx::texture","",131,{"inputs":[{"name":"t"}],"output":{"name":"depthstencilflags"}}],[11,"from_iter","gfx::memory","",130,{"inputs":[{"name":"t"}],"output":{"name":"access"}}],[11,"from_iter","gfx","",128,{"inputs":[{"name":"t"}],"output":{"name":"bind"}}],[11,"eq","gfx::format","",145,{"inputs":[{"name":"self"},{"name":"r16_g16_b16_a16"}],"output":{"name":"bool"}}],[11,"eq","gfx::handle","",174,{"inputs":[{"name":"self"},{"name":"rawbuffer"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"self"},{"name":"rawbuffer"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",112,{"inputs":[{"name":"self"},{"name":"containertype"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"self"},{"name":"containertype"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",148,{"inputs":[{"name":"self"},{"name":"r4_g4_b4_a4"}],"output":{"name":"bool"}}],[11,"eq","","",158,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",118,{"inputs":[{"name":"self"},{"name":"constantbuffervar"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"self"},{"name":"constantbuffervar"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",146,{"inputs":[{"name":"self"},{"name":"r32_g32_b32"}],"output":{"name":"bool"}}],[11,"eq","","",155,{"inputs":[{"name":"self"},{"name":"r32"}],"output":{"name":"bool"}}],[11,"eq","gfx","",20,{"inputs":[{"name":"self"},{"name":"submissionerror"}],"output":{"name":"bool"}}],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"targetviewerror"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"self"},{"name":"targetviewerror"}],"output":{"name":"bool"}}],[11,"eq","gfx::handle","",163,{"inputs":[{"name":"self"},{"name":"rendertargetview"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",59,{"inputs":[{"name":"self"},{"name":"programinfo"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"self"},{"name":"programinfo"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",147,{"inputs":[{"name":"self"},{"name":"unorm"}],"output":{"name":"bool"}}],[11,"eq","","",141,{"inputs":[{"name":"self"},{"name":"r11_g11_b10"}],"output":{"name":"bool"}}],[11,"eq","gfx::texture","",43,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"eq","gfx::handle","",168,{"inputs":[{"name":"self"},{"name":"rawshaderresourceview"}],"output":{"name":"bool"}}],[11,"ne","","",168,{"inputs":[{"name":"self"},{"name":"rawshaderresourceview"}],"output":{"name":"bool"}}],[11,"eq","gfx::texture","",39,{"inputs":[{"name":"self"},{"name":"layererror"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"layererror"}],"output":{"name":"bool"}}],[11,"eq","gfx::handle","",183,{"inputs":[{"name":"self"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"self"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",107,{"inputs":[{"name":"self"},{"name":"isrect"}],"output":{"name":"bool"}}],[11,"eq","gfx","",56,{"inputs":[{"name":"self"},{"name":"combinederror"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"self"},{"name":"combinederror"}],"output":{"name":"bool"}}],[11,"eq","gfx::handle","",182,{"inputs":[{"name":"self"},{"name":"rawdepthstencilview"}],"output":{"name":"bool"}}],[11,"ne","","",182,{"inputs":[{"name":"self"},{"name":"rawdepthstencilview"}],"output":{"name":"bool"}}],[11,"eq","gfx::texture","",51,{"inputs":[{"name":"self"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"self"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",33,{"inputs":[{"name":"self"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"eq","gfx::handle","",178,{"inputs":[{"name":"self"},{"name":"unorderedaccessview"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",149,{"inputs":[{"name":"self"},{"name":"d24_s8"}],"output":{"name":"bool"}}],[11,"eq","gfx","",54,{"inputs":[{"name":"self"},{"name":"resourceviewerror"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"self"},{"name":"resourceviewerror"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",110,{"inputs":[{"name":"self"},{"name":"samplertype"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"self"},{"name":"samplertype"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",144,{"inputs":[{"name":"self"},{"name":"d32"}],"output":{"name":"bool"}}],[11,"eq","gfx::texture","",131,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"self"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"eq","gfx::buffer","",22,{"inputs":[{"name":"self"},{"name":"role"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",36,{"inputs":[{"name":"self"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"eq","gfx","",177,{"inputs":[{"name":"self"},{"name":"vertexshader"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"self"},{"name":"vertexshader"}],"output":{"name":"bool"}}],[11,"eq","","",169,{"inputs":[{"name":"self"},{"name":"domainshader"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"self"},{"name":"domainshader"}],"output":{"name":"bool"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"shaderset"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"shaderset"}],"output":{"name":"bool"}}],[11,"eq","","",171,{"inputs":[{"name":"self"},{"name":"geometryshader"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"self"},{"name":"geometryshader"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",135,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"bool"}}],[11,"eq","","",160,{"inputs":[{"name":"self"},{"name":"r16"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",161,{"inputs":[{"name":"self"},{"name":"createprogramerror"}],"output":{"name":"bool"}}],[11,"ne","","",161,{"inputs":[{"name":"self"},{"name":"createprogramerror"}],"output":{"name":"bool"}}],[11,"eq","gfx::mapping","",52,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"eq","gfx::memory","",130,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"bool"}}],[11,"eq","gfx::pso::buffer","",73,{"inputs":[{"name":"self"},{"name":"element"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"self"},{"name":"element"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",106,{"inputs":[{"name":"self"},{"name":"ismultisample"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",143,{"inputs":[{"name":"self"},{"name":"r8"}],"output":{"name":"bool"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"self"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"eq","gfx::pso","",179,{"inputs":[{"name":"self"},{"name":"accessinfo"}],"output":{"name":"bool"}}],[11,"ne","","",179,{"inputs":[{"name":"self"},{"name":"accessinfo"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",132,{"inputs":[{"name":"self"},{"name":"r8_g8"}],"output":{"name":"bool"}}],[11,"eq","gfx","",128,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"eq","gfx::texture","",152,{"inputs":[{"name":"self"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"self"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"eq","gfx","",162,{"inputs":[{"name":"self"},{"name":"hullshader"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"self"},{"name":"hullshader"}],"output":{"name":"bool"}}],[11,"eq","gfx::handle","",68,{"inputs":[{"name":"self"},{"name":"buffer"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",108,{"inputs":[{"name":"self"},{"name":"matrixformat"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",159,{"inputs":[{"name":"self"},{"name":"r5_g5_b5_a1"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",121,{"inputs":[{"name":"self"},{"name":"samplervar"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"self"},{"name":"samplervar"}],"output":{"name":"bool"}}],[11,"eq","gfx::texture","",38,{"inputs":[{"name":"self"},{"name":"creationerror"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"self"},{"name":"creationerror"}],"output":{"name":"bool"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",26,{"inputs":[{"name":"self"},{"name":"surfacetype"}],"output":{"name":"bool"}}],[11,"eq","","",133,{"inputs":[{"name":"self"},{"name":"inorm"}],"output":{"name":"bool"}}],[11,"eq","","",140,{"inputs":[{"name":"self"},{"name":"r16_g16"}],"output":{"name":"bool"}}],[11,"eq","gfx::handle","",176,{"inputs":[{"name":"self"},{"name":"program"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"self"},{"name":"program"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",151,{"inputs":[{"name":"self"},{"name":"r5_g6_b5"}],"output":{"name":"bool"}}],[11,"eq","","",137,{"inputs":[{"name":"self"},{"name":"r32_g32"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",119,{"inputs":[{"name":"self"},{"name":"texturevar"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"self"},{"name":"texturevar"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",142,{"inputs":[{"name":"self"},{"name":"r10_g10_b10_a2"}],"output":{"name":"bool"}}],[11,"eq","gfx::handle","",164,{"inputs":[{"name":"self"},{"name":"shader"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"self"},{"name":"shader"}],"output":{"name":"bool"}}],[11,"eq","gfx::texture","",184,{"inputs":[{"name":"self"},{"name":"raw"}],"output":{"name":"bool"}}],[11,"eq","gfx","",18,{"inputs":[{"name":"self"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",34,{"inputs":[{"name":"self"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"self"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"eq","gfx::buffer","",24,{"inputs":[{"name":"self"},{"name":"creationerror"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"creationerror"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",154,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"bool"}}],[11,"eq","gfx::handle","",180,{"inputs":[{"name":"self"},{"name":"shaderresourceview"}],"output":{"name":"bool"}}],[11,"eq","","",167,{"inputs":[{"name":"self"},{"name":"rawunorderedaccessview"}],"output":{"name":"bool"}}],[11,"ne","","",167,{"inputs":[{"name":"self"},{"name":"rawunorderedaccessview"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",123,{"inputs":[{"name":"self"},{"name":"compatibilityerror"}],"output":{"name":"bool"}}],[11,"eq","gfx::texture","",44,{"inputs":[{"name":"self"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"eq","gfx::handle","",181,{"inputs":[{"name":"self"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",134,{"inputs":[{"name":"self"},{"name":"r32_g32_b32_a32"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",124,{"inputs":[{"name":"self"},{"name":"createshadererror"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"self"},{"name":"createshadererror"}],"output":{"name":"bool"}}],[11,"eq","","",109,{"inputs":[{"name":"self"},{"name":"texturetype"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"self"},{"name":"texturetype"}],"output":{"name":"bool"}}],[11,"eq","gfx::handle","",165,{"inputs":[{"name":"self"},{"name":"sampler"}],"output":{"name":"bool"}}],[11,"ne","","",165,{"inputs":[{"name":"self"},{"name":"sampler"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",29,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"eq","","",156,{"inputs":[{"name":"self"},{"name":"r8_g8_b8_a8"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",188,{"inputs":[{"name":"self"},{"name":"program"}],"output":{"name":"bool"}}],[11,"eq","gfx::buffer","",23,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",60,{"inputs":[{"name":"self"},{"name":"uniformvalue"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"self"},{"name":"uniformvalue"}],"output":{"name":"bool"}}],[11,"eq","","",117,{"inputs":[{"name":"self"},{"name":"constvar"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"self"},{"name":"constvar"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",153,{"inputs":[{"name":"self"},{"name":"d24"}],"output":{"name":"bool"}}],[11,"eq","gfx::handle","",173,{"inputs":[{"name":"self"},{"name":"rawpipelinestate"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"self"},{"name":"rawpipelinestate"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",136,{"inputs":[{"name":"self"},{"name":"d16"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",120,{"inputs":[{"name":"self"},{"name":"unorderedvar"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"self"},{"name":"unorderedvar"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",25,{"inputs":[{"name":"self"},{"name":"channeltype"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",116,{"inputs":[{"name":"self"},{"name":"attributevar"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"self"},{"name":"attributevar"}],"output":{"name":"bool"}}],[11,"eq","","",113,{"inputs":[{"name":"self"},{"name":"stage"}],"output":{"name":"bool"}}],[11,"eq","gfx::texture","",42,{"inputs":[{"name":"self"},{"name":"cubeface"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",105,{"inputs":[{"name":"self"},{"name":"iscomparison"}],"output":{"name":"bool"}}],[11,"eq","gfx::memory","",57,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"eq","gfx::texture","",41,{"inputs":[{"name":"self"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"self"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"eq","gfx::handle","",166,{"inputs":[{"name":"self"},{"name":"rawrendertargetview"}],"output":{"name":"bool"}}],[11,"ne","","",166,{"inputs":[{"name":"self"},{"name":"rawrendertargetview"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade","",129,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"ne","","",129,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"eq","gfx::handle","",170,{"inputs":[{"name":"self"},{"name":"depthstencilview"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",28,{"inputs":[{"name":"self"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"eq","gfx::handle","",172,{"inputs":[{"name":"self"},{"name":"rawtexture"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"self"},{"name":"rawtexture"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",122,{"inputs":[{"name":"self"},{"name":"outputvar"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"self"},{"name":"outputvar"}],"output":{"name":"bool"}}],[11,"eq","gfx::texture","",50,{"inputs":[{"name":"self"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"self"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",157,{"inputs":[{"name":"self"},{"name":"r4_g4"}],"output":{"name":"bool"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"self"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"eq","gfx::pso","",69,{"inputs":[{"name":"self"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"self"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",27,{"inputs":[{"name":"self"},{"name":"channelsource"}],"output":{"name":"bool"}}],[11,"eq","gfx::texture","",46,{"inputs":[{"name":"self"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"self"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",104,{"inputs":[{"name":"self"},{"name":"isarray"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",139,{"inputs":[{"name":"self"},{"name":"b8_g8_r8_a8"}],"output":{"name":"bool"}}],[11,"eq","","",150,{"inputs":[{"name":"self"},{"name":"r16_g16_b16"}],"output":{"name":"bool"}}],[11,"eq","gfx","",175,{"inputs":[{"name":"self"},{"name":"pixelshader"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"self"},{"name":"pixelshader"}],"output":{"name":"bool"}}],[11,"eq","gfx::shade::core","",111,{"inputs":[{"name":"self"},{"name":"basetype"}],"output":{"name":"bool"}}],[11,"eq","gfx::format","",138,{"inputs":[{"name":"self"},{"name":"srgb"}],"output":{"name":"bool"}}],[11,"eq","gfx::buffer","",187,{"inputs":[{"name":"self"},{"name":"raw"}],"output":{"name":"bool"}}],[11,"bitxor_assign","gfx::shade","Toggles the set of flags.",129,null],[11,"bitxor_assign","gfx","Toggles the set of flags.",128,null],[11,"bitxor_assign","gfx::texture","Toggles the set of flags.",131,null],[11,"bitxor_assign","gfx::memory","Toggles the set of flags.",130,null],[11,"bitor_assign","","Adds the set of flags.",130,null],[11,"bitor_assign","gfx::shade","Adds the set of flags.",129,null],[11,"bitor_assign","gfx","Adds the set of flags.",128,null],[11,"bitor_assign","gfx::texture","Adds the set of flags.",131,null],[11,"sub_assign","","Disables all flags enabled in the set.",131,null],[11,"sub_assign","gfx::memory","Disables all flags enabled in the set.",130,null],[11,"sub_assign","gfx::shade","Disables all flags enabled in the set.",129,null],[11,"sub_assign","gfx","Disables all flags enabled in the set.",128,null],[11,"serialize","gfx::texture","",152,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",51,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",147,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",155,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",35,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",37,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",150,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::shade::core","",122,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx","",128,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::shade::core","",105,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::buffer","",22,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx","",18,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::texture","",50,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::memory","",130,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::shade::core","",121,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",137,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",132,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::buffer","",23,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::pso::buffer","",73,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",134,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",151,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",159,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",148,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",143,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::texture","",41,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::pso","",69,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",139,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",157,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::shade::core","",108,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",29,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::texture","",44,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",28,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",34,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::shade::core","",110,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",118,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",60,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",156,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::shade::core","",59,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",27,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::shade::core","",119,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::memory","",57,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",26,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",154,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",153,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::texture","",48,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",49,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",158,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::shade::core","",112,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",106,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",135,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",160,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",133,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",149,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx","",20,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",146,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::texture","",46,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",33,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",141,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::shade::core","",109,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::texture","",131,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",145,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::texture","",42,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",142,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::shade::core","",107,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",136,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::texture","",47,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",25,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",140,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::shade::core","",117,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",120,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::shade","",129,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",36,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::texture","",40,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::format","",138,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",144,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::shade::core","",111,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::texture","",45,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::shade::core","",113,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",116,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",104,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx::texture","",43,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"deserialize","gfx::format","",132,{"inputs":[{"name":"__d"}],"output":{"generics":["r8_g8"],"name":"result"}}],[11,"deserialize","","",153,{"inputs":[{"name":"__d"}],"output":{"generics":["d24"],"name":"result"}}],[11,"deserialize","","",150,{"inputs":[{"name":"__d"}],"output":{"generics":["r16_g16_b16"],"name":"result"}}],[11,"deserialize","gfx::shade::core","",122,{"inputs":[{"name":"__d"}],"output":{"generics":["outputvar"],"name":"result"}}],[11,"deserialize","gfx::format","",143,{"inputs":[{"name":"__d"}],"output":{"generics":["r8"],"name":"result"}}],[11,"deserialize","gfx::texture","",44,{"inputs":[{"name":"__d"}],"output":{"generics":["imageinfocommon"],"name":"result"}}],[11,"deserialize","gfx::format","",155,{"inputs":[{"name":"__d"}],"output":{"generics":["r32"],"name":"result"}}],[11,"deserialize","","",149,{"inputs":[{"name":"__d"}],"output":{"generics":["d24_s8"],"name":"result"}}],[11,"deserialize","gfx::buffer","",22,{"inputs":[{"name":"__d"}],"output":{"generics":["role"],"name":"result"}}],[11,"deserialize","gfx::format","",151,{"inputs":[{"name":"__d"}],"output":{"generics":["r5_g6_b5"],"name":"result"}}],[11,"deserialize","","",142,{"inputs":[{"name":"__d"}],"output":{"generics":["r10_g10_b10_a2"],"name":"result"}}],[11,"deserialize","gfx::shade::core","",119,{"inputs":[{"name":"__d"}],"output":{"generics":["texturevar"],"name":"result"}}],[11,"deserialize","gfx::format","",157,{"inputs":[{"name":"__d"}],"output":{"generics":["r4_g4"],"name":"result"}}],[11,"deserialize","gfx::texture","",46,{"inputs":[{"name":"__d"}],"output":{"generics":["packedcolor"],"name":"result"}}],[11,"deserialize","gfx::pso::buffer","",73,{"inputs":[{"name":"__d"}],"output":{"generics":["element"],"name":"result"}}],[11,"deserialize","gfx::shade::core","",110,{"inputs":[{"name":"__d"}],"output":{"generics":["samplertype"],"name":"result"}}],[11,"deserialize","gfx::format","",145,{"inputs":[{"name":"__d"}],"output":{"generics":["r16_g16_b16_a16"],"name":"result"}}],[11,"deserialize","","",160,{"inputs":[{"name":"__d"}],"output":{"generics":["r16"],"name":"result"}}],[11,"deserialize","","",147,{"inputs":[{"name":"__d"}],"output":{"generics":["unorm"],"name":"result"}}],[11,"deserialize","","",136,{"inputs":[{"name":"__d"}],"output":{"generics":["d16"],"name":"result"}}],[11,"deserialize","","",29,{"inputs":[{"name":"__d"}],"output":{"generics":["format"],"name":"result"}}],[11,"deserialize","gfx::shade::core","",118,{"inputs":[{"name":"__d"}],"output":{"generics":["constantbuffervar"],"name":"result"}}],[11,"deserialize","gfx::format","",156,{"inputs":[{"name":"__d"}],"output":{"generics":["r8_g8_b8_a8"],"name":"result"}}],[11,"deserialize","","",141,{"inputs":[{"name":"__d"}],"output":{"generics":["r11_g11_b10"],"name":"result"}}],[11,"deserialize","","",36,{"inputs":[{"name":"__d"}],"output":{"generics":["i16norm"],"name":"result"}}],[11,"deserialize","gfx::shade::core","",116,{"inputs":[{"name":"__d"}],"output":{"generics":["attributevar"],"name":"result"}}],[11,"deserialize","","",59,{"inputs":[{"name":"__d"}],"output":{"generics":["programinfo"],"name":"result"}}],[11,"deserialize","","",60,{"inputs":[{"name":"__d"}],"output":{"generics":["uniformvalue"],"name":"result"}}],[11,"deserialize","","",120,{"inputs":[{"name":"__d"}],"output":{"generics":["unorderedvar"],"name":"result"}}],[11,"deserialize","gfx::format","",159,{"inputs":[{"name":"__d"}],"output":{"generics":["r5_g5_b5_a1"],"name":"result"}}],[11,"deserialize","gfx::shade::core","",108,{"inputs":[{"name":"__d"}],"output":{"generics":["matrixformat"],"name":"result"}}],[11,"deserialize","gfx::memory","",130,{"inputs":[{"name":"__d"}],"output":{"generics":["access"],"name":"result"}}],[11,"deserialize","gfx::shade::core","",106,{"inputs":[{"name":"__d"}],"output":{"generics":["ismultisample"],"name":"result"}}],[11,"deserialize","","",113,{"inputs":[{"name":"__d"}],"output":{"generics":["stage"],"name":"result"}}],[11,"deserialize","","",117,{"inputs":[{"name":"__d"}],"output":{"generics":["constvar"],"name":"result"}}],[11,"deserialize","gfx::format","",137,{"inputs":[{"name":"__d"}],"output":{"generics":["r32_g32"],"name":"result"}}],[11,"deserialize","","",138,{"inputs":[{"name":"__d"}],"output":{"generics":["srgb"],"name":"result"}}],[11,"deserialize","","",26,{"inputs":[{"name":"__d"}],"output":{"generics":["surfacetype"],"name":"result"}}],[11,"deserialize","gfx::buffer","",23,{"inputs":[{"name":"__d"}],"output":{"generics":["info"],"name":"result"}}],[11,"deserialize","gfx::format","",139,{"inputs":[{"name":"__d"}],"output":{"generics":["b8_g8_r8_a8"],"name":"result"}}],[11,"deserialize","gfx::texture","",49,{"inputs":[{"name":"__d"}],"output":{"generics":["resourcedesc"],"name":"result"}}],[11,"deserialize","gfx::shade::core","",109,{"inputs":[{"name":"__d"}],"output":{"generics":["texturetype"],"name":"result"}}],[11,"deserialize","gfx::pso","",69,{"inputs":[{"name":"__d"}],"output":{"generics":["descriptor"],"name":"result"}}],[11,"deserialize","gfx::format","",154,{"inputs":[{"name":"__d"}],"output":{"generics":["float"],"name":"result"}}],[11,"deserialize","","",37,{"inputs":[{"name":"__d"}],"output":{"generics":["f16"],"name":"result"}}],[11,"deserialize","gfx::texture","",41,{"inputs":[{"name":"__d"}],"output":{"generics":["filtermethod"],"name":"result"}}],[11,"deserialize","gfx::format","",133,{"inputs":[{"name":"__d"}],"output":{"generics":["inorm"],"name":"result"}}],[11,"deserialize","gfx::shade","",129,{"inputs":[{"name":"__d"}],"output":{"generics":["usage"],"name":"result"}}],[11,"deserialize","gfx::texture","",51,{"inputs":[{"name":"__d"}],"output":{"generics":["depthstencildesc"],"name":"result"}}],[11,"deserialize","gfx::format","",27,{"inputs":[{"name":"__d"}],"output":{"generics":["channelsource"],"name":"result"}}],[11,"deserialize","gfx::shade::core","",107,{"inputs":[{"name":"__d"}],"output":{"generics":["isrect"],"name":"result"}}],[11,"deserialize","gfx::texture","",50,{"inputs":[{"name":"__d"}],"output":{"generics":["renderdesc"],"name":"result"}}],[11,"deserialize","gfx::shade::core","",121,{"inputs":[{"name":"__d"}],"output":{"generics":["samplervar"],"name":"result"}}],[11,"deserialize","gfx::texture","",131,{"inputs":[{"name":"__d"}],"output":{"generics":["depthstencilflags"],"name":"result"}}],[11,"deserialize","gfx::format","",158,{"inputs":[{"name":"__d"}],"output":{"generics":["uint"],"name":"result"}}],[11,"deserialize","gfx::shade::core","",112,{"inputs":[{"name":"__d"}],"output":{"generics":["containertype"],"name":"result"}}],[11,"deserialize","gfx::format","",140,{"inputs":[{"name":"__d"}],"output":{"generics":["r16_g16"],"name":"result"}}],[11,"deserialize","","",144,{"inputs":[{"name":"__d"}],"output":{"generics":["d32"],"name":"result"}}],[11,"deserialize","gfx::texture","",42,{"inputs":[{"name":"__d"}],"output":{"generics":["cubeface"],"name":"result"}}],[11,"deserialize","gfx::shade::core","",111,{"inputs":[{"name":"__d"}],"output":{"generics":["basetype"],"name":"result"}}],[11,"deserialize","gfx::texture","",40,{"inputs":[{"name":"__d"}],"output":{"generics":["aamode"],"name":"result"}}],[11,"deserialize","gfx::format","",148,{"inputs":[{"name":"__d"}],"output":{"generics":["r4_g4_b4_a4"],"name":"result"}}],[11,"deserialize","gfx::shade::core","",105,{"inputs":[{"name":"__d"}],"output":{"generics":["iscomparison"],"name":"result"}}],[11,"deserialize","gfx::format","",134,{"inputs":[{"name":"__d"}],"output":{"generics":["r32_g32_b32_a32"],"name":"result"}}],[11,"deserialize","gfx::memory","",57,{"inputs":[{"name":"__d"}],"output":{"generics":["usage"],"name":"result"}}],[11,"deserialize","gfx","",128,{"inputs":[{"name":"__d"}],"output":{"generics":["bind"],"name":"result"}}],[11,"deserialize","gfx::format","",33,{"inputs":[{"name":"__d"}],"output":{"generics":["u8norm"],"name":"result"}}],[11,"deserialize","gfx::texture","",45,{"inputs":[{"name":"__d"}],"output":{"generics":["wrapmode"],"name":"result"}}],[11,"deserialize","","",152,{"inputs":[{"name":"__d"}],"output":{"generics":["lod"],"name":"result"}}],[11,"deserialize","gfx::shade::core","",104,{"inputs":[{"name":"__d"}],"output":{"generics":["isarray"],"name":"result"}}],[11,"deserialize","gfx::format","",34,{"inputs":[{"name":"__d"}],"output":{"generics":["i8norm"],"name":"result"}}],[11,"deserialize","gfx","",18,{"inputs":[{"name":"__d"}],"output":{"generics":["primitive"],"name":"result"}}],[11,"deserialize","gfx::format","",25,{"inputs":[{"name":"__d"}],"output":{"generics":["channeltype"],"name":"result"}}],[11,"deserialize","","",35,{"inputs":[{"name":"__d"}],"output":{"generics":["u16norm"],"name":"result"}}],[11,"deserialize","gfx::texture","",47,{"inputs":[{"name":"__d"}],"output":{"generics":["samplerinfo"],"name":"result"}}],[11,"deserialize","gfx","",20,{"inputs":[{"name":"__d"}],"output":{"generics":["submissionerror"],"name":"result"}}],[11,"deserialize","gfx::texture","",43,{"inputs":[{"name":"__d"}],"output":{"generics":["kind"],"name":"result"}}],[11,"deserialize","gfx::format","",135,{"inputs":[{"name":"__d"}],"output":{"generics":["int"],"name":"result"}}],[11,"deserialize","","",28,{"inputs":[{"name":"__d"}],"output":{"generics":["swizzle"],"name":"result"}}],[11,"deserialize","gfx::texture","",48,{"inputs":[{"name":"__d"}],"output":{"generics":["info"],"name":"result"}}],[11,"deserialize","gfx::format","",146,{"inputs":[{"name":"__d"}],"output":{"generics":["r32_g32_b32"],"name":"result"}}],[11,"get_surface_type","","",132,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",137,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",136,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",134,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",148,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",156,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",153,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",144,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",140,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",160,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",139,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",157,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",142,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",159,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",145,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",149,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",151,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",150,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",141,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",155,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",143,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"get_surface_type","","",146,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"hash","gfx::shade::core","",188,null],[11,"hash","gfx::texture","",152,null],[11,"hash","gfx::buffer","",187,null],[11,"hash","gfx","",128,null],[11,"hash","gfx::texture","",184,null],[11,"hash","gfx::memory","",130,null],[11,"hash","gfx::format","",138,null],[11,"hash","gfx::shade::core","",107,null],[11,"hash","gfx","",162,null],[11,"hash","gfx::handle","",173,null],[11,"hash","","",170,null],[11,"hash","gfx::format","",141,null],[11,"hash","gfx::handle","",176,null],[11,"hash","","",182,null],[11,"hash","gfx::format","",36,null],[11,"hash","gfx::shade::core","",112,null],[11,"hash","gfx::texture","",42,null],[11,"hash","gfx::handle","",167,null],[11,"hash","gfx","",21,null],[11,"hash","gfx::format","",150,null],[11,"hash","","",134,null],[11,"hash","gfx::shade::core","",104,null],[11,"hash","gfx::format","",136,null],[11,"hash","gfx::shade","",129,null],[11,"hash","gfx::shade::core","",119,null],[11,"hash","gfx::handle","",164,null],[11,"hash","gfx::texture","",43,null],[11,"hash","","",44,null],[11,"hash","gfx::shade::core","",111,null],[11,"hash","gfx::buffer","",23,null],[11,"hash","gfx::format","",37,null],[11,"hash","gfx::texture","",51,null],[11,"hash","gfx","",175,null],[11,"hash","gfx::handle","",68,null],[11,"hash","gfx::format","",132,null],[11,"hash","","",137,null],[11,"hash","","",144,null],[11,"hash","","",155,null],[11,"hash","","",159,null],[11,"hash","","",156,null],[11,"hash","gfx","",177,null],[11,"hash","gfx::format","",142,null],[11,"hash","gfx","",18,null],[11,"hash","gfx::format","",160,null],[11,"hash","","",149,null],[11,"hash","gfx::shade::core","",110,null],[11,"hash","","",109,null],[11,"hash","gfx::texture","",40,null],[11,"hash","gfx::format","",135,null],[11,"hash","gfx::shade::core","",116,null],[11,"hash","gfx::memory","",57,null],[11,"hash","gfx::format","",26,null],[11,"hash","","",143,null],[11,"hash","gfx::handle","",178,null],[11,"hash","gfx::format","",153,null],[11,"hash","","",28,null],[11,"hash","gfx::shade::core","",118,null],[11,"hash","gfx::buffer","",22,null],[11,"hash","gfx::shade::core","",59,null],[11,"hash","gfx::pso::buffer","",73,null],[11,"hash","gfx::handle","",168,null],[11,"hash","gfx::shade::core","",108,null],[11,"hash","gfx::pso","",69,null],[11,"hash","gfx::handle","",174,null],[11,"hash","gfx","",169,null],[11,"hash","gfx::texture","",46,null],[11,"hash","","",49,null],[11,"hash","gfx::format","",147,null],[11,"hash","gfx::texture","",41,null],[11,"hash","gfx::shade::core","",117,null],[11,"hash","","",105,null],[11,"hash","gfx::texture","",45,null],[11,"hash","gfx::shade::core","",106,null],[11,"hash","gfx::handle","",183,null],[11,"hash","gfx::format","",145,null],[11,"hash","gfx::texture","",47,null],[11,"hash","gfx::format","",158,null],[11,"hash","","",133,null],[11,"hash","gfx","",171,null],[11,"hash","gfx::format","",25,null],[11,"hash","gfx::handle","",166,null],[11,"hash","gfx::shade::core","",121,null],[11,"hash","gfx::format","",148,null],[11,"hash","gfx::handle","",181,null],[11,"hash","","",165,null],[11,"hash","","",163,null],[11,"hash","gfx::buffer","",24,null],[11,"hash","gfx::format","",35,null],[11,"hash","gfx::texture","",39,null],[11,"hash","gfx::format","",29,null],[11,"hash","gfx::shade::core","",120,null],[11,"hash","gfx::texture","",48,null],[11,"hash","","",50,null],[11,"hash","gfx::format","",157,null],[11,"hash","gfx::handle","",180,null],[11,"hash","gfx::format","",33,null],[11,"hash","gfx::texture","",131,null],[11,"hash","gfx::shade::core","",122,null],[11,"hash","gfx::format","",34,null],[11,"hash","gfx::shade::core","",113,null],[11,"hash","gfx::format","",154,null],[11,"hash","","",146,null],[11,"hash","","",139,null],[11,"hash","gfx::handle","",172,null],[11,"hash","gfx::format","",151,null],[11,"hash","gfx::mapping","",52,null],[11,"hash","gfx::format","",140,null],[11,"hash","","",27,null],[11,"extend","gfx::memory","",130,null],[11,"extend","gfx","",128,null],[11,"extend","gfx::texture","",131,null],[11,"extend","gfx::shade","",129,null],[11,"bitand","","Returns the intersection between the two sets of flags.",129,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"usage"}}],[11,"bitand","gfx","Returns the intersection between the two sets of flags.",128,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bind"}}],[11,"bitand","gfx::texture","Returns the intersection between the two sets of flags.",131,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"bitand","gfx::memory","Returns the intersection between the two sets of flags.",130,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"access"}}],[11,"description","gfx","",55,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",55,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"description","gfx::shade::core","",123,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"description","gfx","",54,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",54,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"description","","",56,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",56,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"description","gfx::texture","",39,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"description","gfx::shade::core","",124,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"description","gfx","",20,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"description","gfx::shade::core","",161,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"description","gfx::texture","",38,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"description","gfx::mapping","",52,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"description","gfx::buffer","",24,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","gfx::state","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",190,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",191,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"blend"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"color"}}],[11,"default","","",16,{"inputs":[],"output":{"name":"refvalues"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"depth"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"blendchannel"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"stencil"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"stencilside"}}],[11,"sub","","Returns the set difference of the two sets of flags.",190,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"from_iter","","",190,{"inputs":[{"name":"t"}],"output":{"name":"colormask"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",190,null],[11,"partial_cmp","","",12,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",191,{"inputs":[{"name":"self"},{"name":"multisample"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"self"},{"name":"blendvalue"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"frontface"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"comparison"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",190,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",190,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"le","","",190,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"gt","","",190,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ge","","",190,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"stencilop"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"self"},{"name":"equation"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"cullface"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"eq","","",191,{"inputs":[{"name":"self"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"eq","","",190,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ne","","",190,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"ordering"}}],[11,"cmp","","",6,{"inputs":[{"name":"self"},{"name":"stencilop"}],"output":{"name":"ordering"}}],[11,"cmp","","",13,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"ordering"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"frontface"}],"output":{"name":"ordering"}}],[11,"cmp","","",2,{"inputs":[{"name":"self"},{"name":"cullface"}],"output":{"name":"ordering"}}],[11,"cmp","","",191,{"inputs":[{"name":"self"},{"name":"multisample"}],"output":{"name":"ordering"}}],[11,"cmp","","",7,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"ordering"}}],[11,"cmp","","",5,{"inputs":[{"name":"self"},{"name":"comparison"}],"output":{"name":"ordering"}}],[11,"cmp","","",11,{"inputs":[{"name":"self"},{"name":"blendvalue"}],"output":{"name":"ordering"}}],[11,"cmp","","",9,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"ordering"}}],[11,"cmp","","",12,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"ordering"}}],[11,"cmp","","",190,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"ordering"}}],[11,"cmp","","",10,{"inputs":[{"name":"self"},{"name":"equation"}],"output":{"name":"ordering"}}],[11,"not","","Returns the complement of this set of flags.",190,{"inputs":[{"name":"self"}],"output":{"name":"colormask"}}],[11,"bitxor_assign","","Toggles the set of flags.",190,null],[11,"bitor_assign","","Adds the set of flags.",190,null],[11,"deserialize","","",0,{"inputs":[{"name":"__d"}],"output":{"generics":["frontface"],"name":"result"}}],[11,"deserialize","","",12,{"inputs":[{"name":"__d"}],"output":{"generics":["factor"],"name":"result"}}],[11,"deserialize","","",3,{"inputs":[{"name":"__d"}],"output":{"generics":["rastermethod"],"name":"result"}}],[11,"deserialize","","",7,{"inputs":[{"name":"__d"}],"output":{"generics":["stencilside"],"name":"result"}}],[11,"deserialize","","",13,{"inputs":[{"name":"__d"}],"output":{"generics":["blendchannel"],"name":"result"}}],[11,"deserialize","","",190,{"inputs":[{"name":"__d"}],"output":{"generics":["colormask"],"name":"result"}}],[11,"deserialize","","",5,{"inputs":[{"name":"__d"}],"output":{"generics":["comparison"],"name":"result"}}],[11,"deserialize","","",11,{"inputs":[{"name":"__d"}],"output":{"generics":["blendvalue"],"name":"result"}}],[11,"deserialize","","",2,{"inputs":[{"name":"__d"}],"output":{"generics":["cullface"],"name":"result"}}],[11,"deserialize","","",14,{"inputs":[{"name":"__d"}],"output":{"generics":["blend"],"name":"result"}}],[11,"deserialize","","",9,{"inputs":[{"name":"__d"}],"output":{"generics":["depth"],"name":"result"}}],[11,"deserialize","","",6,{"inputs":[{"name":"__d"}],"output":{"generics":["stencilop"],"name":"result"}}],[11,"deserialize","","",10,{"inputs":[{"name":"__d"}],"output":{"generics":["equation"],"name":"result"}}],[11,"deserialize","","",8,{"inputs":[{"name":"__d"}],"output":{"generics":["stencil"],"name":"result"}}],[11,"deserialize","","",16,{"inputs":[{"name":"__d"}],"output":{"generics":["refvalues"],"name":"result"}}],[11,"deserialize","","",191,{"inputs":[{"name":"__d"}],"output":{"generics":["multisample"],"name":"result"}}],[11,"deserialize","","",1,{"inputs":[{"name":"__d"}],"output":{"generics":["offset"],"name":"result"}}],[11,"deserialize","","",4,{"inputs":[{"name":"__d"}],"output":{"generics":["rasterizer"],"name":"result"}}],[11,"deserialize","","",15,{"inputs":[{"name":"__d"}],"output":{"generics":["color"],"name":"result"}}],[11,"sub_assign","","Disables all flags enabled in the set.",190,null],[11,"bitor","","Returns the union of the two sets of flags.",190,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"hash","","",0,null],[11,"hash","","",15,null],[11,"hash","","",14,null],[11,"hash","","",1,null],[11,"hash","","",7,null],[11,"hash","","",11,null],[11,"hash","","",6,null],[11,"hash","","",13,null],[11,"hash","","",3,null],[11,"hash","","",9,null],[11,"hash","","",2,null],[11,"hash","","",5,null],[11,"hash","","",10,null],[11,"hash","","",190,null],[11,"hash","","",8,null],[11,"hash","","",191,null],[11,"hash","","",4,null],[11,"hash","","",12,null],[11,"extend","","",190,null],[11,"serialize","","",3,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",15,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",10,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",5,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",13,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",7,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",12,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",11,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",9,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",16,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",6,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",190,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",191,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",8,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",4,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",14,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",1,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",0,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",2,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",190,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"rastermethod"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"blendchannel"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rasterizer"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"offset"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"depth"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"factor"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"refvalues"}}],[11,"clone","","",190,{"inputs":[{"name":"self"}],"output":{"name":"colormask"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"stencil"}}],[11,"clone","","",191,{"inputs":[{"name":"self"}],"output":{"name":"multisample"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"stencilop"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"comparison"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"equation"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"blendvalue"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"frontface"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"blend"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"cullface"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"stencilside"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",190,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"new_fill","","Create a new filling rasterizer.",4,{"inputs":[],"output":{"name":"rasterizer"}}],[11,"with_cull_back","","Add back face culling.",4,{"inputs":[{"name":"self"}],"output":{"name":"rasterizer"}}],[11,"with_offset","","Add polygon offset.",4,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"i32"}],"output":{"name":"rasterizer"}}],[11,"new","","Create a new stencil state with a given function.",8,null],[11,"new","","Create a new blend state with a given equation.",14,{"inputs":[{"name":"equation"},{"name":"factor"},{"name":"factor"}],"output":{"name":"blend"}}],[11,"empty","","Returns an empty set of flags.",190,{"inputs":[],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",190,{"inputs":[],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",190,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",190,{"inputs":[{"name":"u8"}],"output":{"generics":["colormask"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",190,{"inputs":[{"name":"u8"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",190,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",190,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",190,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",190,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",190,null],[11,"remove","","Removes the specified flags in-place.",190,null],[11,"toggle","","Toggles the specified flags in-place.",190,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",190,null],[11,"get_usage","gfx","Return the aggregated stage usage for the set.",21,{"inputs":[{"name":"self"}],"output":{"name":"usage"}}],[11,"reference","","",177,null],[11,"reference","","",162,null],[11,"reference","","",169,null],[11,"reference","","",171,null],[11,"reference","","",175,null],[11,"get_total_bits","gfx::format","Return the total number of bits for this format.",26,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_alpha_stencil_bits","","Return the number of bits allocated for alpha and stencil.",26,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Create a new swizzle where each channel is unmapped.",28,{"inputs":[],"output":{"name":"swizzle"}}],[11,"cast2","","Convert a 2-element slice.",33,null],[11,"cast3","","Convert a 3-element slice.",33,null],[11,"cast4","","Convert a 4-element slice.",33,null],[11,"cast_slice","","Convert a generic slice by transmutation.",33,null],[11,"cast2","","Convert a 2-element slice.",34,null],[11,"cast3","","Convert a 3-element slice.",34,null],[11,"cast4","","Convert a 4-element slice.",34,null],[11,"cast_slice","","Convert a generic slice by transmutation.",34,null],[11,"cast2","","Convert a 2-element slice.",35,null],[11,"cast3","","Convert a 3-element slice.",35,null],[11,"cast4","","Convert a 4-element slice.",35,null],[11,"cast_slice","","Convert a generic slice by transmutation.",35,null],[11,"cast2","","Convert a 2-element slice.",36,null],[11,"cast3","","Convert a 3-element slice.",36,null],[11,"cast4","","Convert a 4-element slice.",36,null],[11,"cast_slice","","Convert a generic slice by transmutation.",36,null],[11,"cast2","","Convert a 2-element slice.",37,null],[11,"cast3","","Convert a 3-element slice.",37,null],[11,"cast4","","Convert a 4-element slice.",37,null],[11,"cast_slice","","Convert a generic slice by transmutation.",37,null],[11,"get_info","gfx::handle","Get the associated information about the buffer",68,{"inputs":[{"name":"self"}],"output":{"name":"info"}}],[11,"len","","Get the number of elements in the buffer.",68,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get_info","","Get texture descriptor",181,{"inputs":[{"name":"self"}],"output":{"name":"info"}}],[11,"get_dimensions","","Get target dimensions",166,null],[11,"get_texture","","Get the associated texture",166,{"inputs":[{"name":"self"}],"output":{"name":"rawtexture"}}],[11,"get_dimensions","","Get target dimensions",182,null],[11,"get_texture","","Get the associated texture",182,{"inputs":[{"name":"self"}],"output":{"name":"rawtexture"}}],[11,"get_dimensions","","Get target dimensions",163,null],[11,"get_dimensions","","Get target dimensions",170,null],[11,"get_info","","Get sampler info",165,{"inputs":[{"name":"self"}],"output":{"name":"samplerinfo"}}],[11,"new","","Create a new handle manager",189,{"inputs":[],"output":{"name":"manager"}}],[11,"clear","","Clear all references",189,null],[11,"extend","","Extend with all references of another handle manager",189,null],[11,"count","","Count the total number of referenced resources",189,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"ref_buffer","","Reference a buffer",189,null],[11,"ref_shader","","Reference a shader",189,null],[11,"ref_program","","Reference a program",189,null],[11,"ref_pso","","Reference a pipeline state object",189,null],[11,"ref_texture","","Reference a texture",189,null],[11,"ref_srv","","Reference a shader resource view",189,null],[11,"ref_uav","","Reference an unordered access view",189,null],[11,"ref_rtv","","Reference an RTV",189,null],[11,"ref_dsv","","Reference a DSV",189,null],[11,"ref_sampler","","Reference a sampler",189,null],[11,"ref_fence","","Reference a fence",189,null],[11,"get_num_fragments","gfx::texture","Return the number of actual data fragments stored per texel.",40,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"needs_resolve","","Return true if the surface has to be resolved before sampling.",40,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_dimensions","","Get texture dimensions, with 0 values where not applicable.",43,null],[11,"get_level_dimensions","","Get the dimensionality of a particular mipmap level.",43,null],[11,"get_num_levels","","Count the number of mipmap levels.",43,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_num_slices","","Return the number of slices for an array, or None for non-arrays.",43,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"option"}}],[11,"is_cube","","Check if it's one of the cube kinds.",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_texel_count","","Get the total number of texels.",44,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"convert","","Convert into a differently typed format.",44,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"imageinfocommon"}}],[11,"is_inside","","Check if it fits inside given dimensions.",44,null],[11,"get_byte_count","","Get the total number of bytes.",44,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"new","","Create a new sampler description with a given filter method and wrapping mode, using no LOD modifications.",47,{"inputs":[{"name":"filtermethod"},{"name":"wrapmode"}],"output":{"name":"samplerinfo"}}],[11,"to_image_info","","Get image info for a given mip.",48,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"imageinfocommon"}}],[11,"to_raw_image_info","","Get the raw image info for a given mip and a channel type.",48,{"inputs":[{"name":"self"},{"name":"channeltype"},{"name":"u8"}],"output":{"generics":["format"],"name":"imageinfocommon"}}],[11,"empty","","Returns an empty set of flags.",131,{"inputs":[],"output":{"name":"depthstencilflags"}}],[11,"all","","Returns the set containing all flags.",131,{"inputs":[],"output":{"name":"depthstencilflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",131,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",131,{"inputs":[{"name":"u8"}],"output":{"generics":["depthstencilflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",131,{"inputs":[{"name":"u8"}],"output":{"name":"depthstencilflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",131,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",131,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",131,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",131,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",131,null],[11,"remove","","Removes the specified flags in-place.",131,null],[11,"toggle","","Toggles the specified flags in-place.",131,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",131,null],[11,"empty","gfx::memory","Returns an empty set of flags.",130,{"inputs":[],"output":{"name":"access"}}],[11,"all","","Returns the set containing all flags.",130,{"inputs":[],"output":{"name":"access"}}],[11,"bits","","Returns the raw value of the flags currently stored.",130,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",130,{"inputs":[{"name":"u8"}],"output":{"generics":["access"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",130,{"inputs":[{"name":"u8"}],"output":{"name":"access"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",130,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",130,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",130,null],[11,"remove","","Removes the specified flags in-place.",130,null],[11,"toggle","","Toggles the specified flags in-place.",130,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",130,null],[11,"is_mutable","gfx","Is this memory bound to be mutated ?",128,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",128,{"inputs":[],"output":{"name":"bind"}}],[11,"all","","Returns the set containing all flags.",128,{"inputs":[],"output":{"name":"bind"}}],[11,"bits","","Returns the raw value of the flags currently stored.",128,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",128,{"inputs":[{"name":"u8"}],"output":{"generics":["bind"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",128,{"inputs":[{"name":"u8"}],"output":{"name":"bind"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",128,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",128,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",128,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",128,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",128,null],[11,"remove","","Removes the specified flags in-place.",128,null],[11,"toggle","","Toggles the specified flags in-place.",128,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",128,null],[11,"new","gfx::pso","Create a new empty PSO descriptor.",69,{"inputs":[{"name":"primitive"},{"name":"rasterizer"}],"output":{"name":"descriptor"}}],[11,"can_sample","gfx::shade::core","Check if this texture can be used with a sampler.",109,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"empty","gfx::shade","Returns an empty set of flags.",129,{"inputs":[],"output":{"name":"usage"}}],[11,"all","","Returns the set containing all flags.",129,{"inputs":[],"output":{"name":"usage"}}],[11,"bits","","Returns the raw value of the flags currently stored.",129,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",129,{"inputs":[{"name":"u8"}],"output":{"generics":["usage"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",129,{"inputs":[{"name":"u8"}],"output":{"name":"usage"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",129,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",129,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",129,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",129,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",129,null],[11,"remove","","Removes the specified flags in-place.",129,null],[11,"toggle","","Toggles the specified flags in-place.",129,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",129,null],[11,"is_compatible","gfx::shade::core","Whether a value is compatible with this variable. That is, whether the value can be stored in this variable.",117,{"inputs":[{"name":"self"},{"name":"uniformvalue"}],"output":{"generics":["compatibilityerror"],"name":"result"}}]],"paths":[[4,"FrontFace"],[3,"Offset"],[4,"CullFace"],[4,"RasterMethod"],[3,"Rasterizer"],[4,"Comparison"],[4,"StencilOp"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"BlendChannel"],[3,"Blend"],[3,"Color"],[3,"RefValues"],[8,"Device"],[4,"Primitive"],[8,"Resources"],[4,"SubmissionError"],[4,"ShaderSet"],[4,"Role"],[3,"Info"],[4,"CreationError"],[4,"ChannelType"],[4,"SurfaceType"],[4,"ChannelSource"],[3,"Swizzle"],[3,"Format"],[8,"SurfaceTyped"],[8,"ChannelTyped"],[8,"Formatted"],[3,"U8Norm"],[3,"I8Norm"],[3,"U16Norm"],[3,"I16Norm"],[3,"F16"],[4,"CreationError"],[4,"LayerError"],[4,"AaMode"],[4,"FilterMethod"],[4,"CubeFace"],[4,"Kind"],[3,"ImageInfoCommon"],[4,"WrapMode"],[3,"PackedColor"],[3,"SamplerInfo"],[3,"Info"],[3,"ResourceDesc"],[3,"RenderDesc"],[3,"DepthStencilDesc"],[4,"Error"],[8,"Factory"],[4,"ResourceViewError"],[4,"TargetViewError"],[4,"CombinedError"],[4,"Usage"],[8,"CommandBuffer"],[3,"ProgramInfo"],[4,"UniformValue"],[3,"Slice"],[4,"CopyError"],[4,"UpdateError"],[4,"PipelineStateError"],[4,"IndexBuffer"],[8,"FactoryExt"],[3,"Encoder"],[3,"Buffer"],[3,"Descriptor"],[3,"RawDataSet"],[4,"ElementError"],[4,"InitError"],[3,"Element"],[8,"Structure"],[8,"ToInstanceRate"],[3,"VertexBufferCommon"],[6,"InstanceRate"],[4,"Instanced"],[4,"NonInstanced"],[3,"RawVertexBuffer"],[3,"ConstantBuffer"],[3,"RawConstantBuffer"],[3,"Global"],[3,"RawGlobal"],[3,"ShaderResource"],[3,"RawShaderResource"],[3,"UnorderedAccess"],[3,"Sampler"],[3,"TextureSampler"],[3,"RenderTarget"],[3,"BlendTarget"],[3,"RawRenderTarget"],[3,"DepthTarget"],[3,"StencilTarget"],[3,"DepthStencilTarget"],[3,"Scissor"],[3,"BlendRef"],[3,"Bundle"],[8,"PipelineInit"],[8,"PipelineData"],[8,"DataLink"],[8,"DataBind"],[3,"PipelineState"],[4,"IsArray"],[4,"IsComparison"],[4,"IsMultiSample"],[4,"IsRect"],[4,"MatrixFormat"],[4,"TextureType"],[3,"SamplerType"],[4,"BaseType"],[4,"ContainerType"],[4,"Stage"],[8,"BaseTyped"],[8,"Formatted"],[3,"AttributeVar"],[3,"ConstVar"],[3,"ConstantBufferVar"],[3,"TextureVar"],[3,"UnorderedVar"],[3,"SamplerVar"],[3,"OutputVar"],[4,"CompatibilityError"],[4,"CreateShaderError"],[4,"ProgramError"],[8,"ToUniform"],[8,"IntoIndexBuffer"],[3,"Bind"],[3,"Usage"],[3,"Access"],[3,"DepthStencilFlags"],[4,"R8_G8"],[4,"Inorm"],[4,"R32_G32_B32_A32"],[4,"Int"],[4,"D16"],[4,"R32_G32"],[4,"Srgb"],[4,"B8_G8_R8_A8"],[4,"R16_G16"],[4,"R11_G11_B10"],[4,"R10_G10_B10_A2"],[4,"R8"],[4,"D32"],[4,"R16_G16_B16_A16"],[4,"R32_G32_B32"],[4,"Unorm"],[4,"R4_G4_B4_A4"],[4,"D24_S8"],[4,"R16_G16_B16"],[4,"R5_G6_B5"],[3,"Lod"],[4,"D24"],[4,"Float"],[4,"R32"],[4,"R8_G8_B8_A8"],[4,"R4_G4"],[4,"Uint"],[4,"R5_G5_B5_A1"],[4,"R16"],[3,"CreateProgramError"],[3,"HullShader"],[3,"RenderTargetView"],[3,"Shader"],[3,"Sampler"],[3,"RawRenderTargetView"],[3,"RawUnorderedAccessView"],[3,"RawShaderResourceView"],[3,"DomainShader"],[3,"DepthStencilView"],[3,"GeometryShader"],[3,"RawTexture"],[3,"RawPipelineState"],[3,"RawBuffer"],[3,"PixelShader"],[3,"Program"],[3,"VertexShader"],[3,"UnorderedAccessView"],[3,"AccessInfo"],[3,"ShaderResourceView"],[3,"Texture"],[3,"RawDepthStencilView"],[3,"Fence"],[3,"Raw"],[3,"Reader"],[3,"Writer"],[3,"Raw"],[3,"Program"],[3,"Manager"],[3,"ColorMask"],[3,"MultiSample"]]};
searchIndex["gfx_core"] = {"doc":"Low-level graphics abstraction for Rust. Mostly operates on data, not types. Designed for use by libraries and higher-level abstractions only.","items":[[0,"state","gfx_core","Fixed-function hardware state.",null,null],[4,"FrontFace","gfx_core::state","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",0,null],[13,"CounterClockwise","","Counter-clockwise winding order.",0,null],[6,"LineWidth","","Width of a line. Could be f32 if not for Hash deriving issues.",null,null],[6,"OffsetSlope","","Slope depth offset factor Could be f32 if not for Hash deriving issues.",null,null],[6,"OffsetUnits","","Number of units to offset, where the unit is the minimal difference in the depth value dictated by the precision of the depth buffer.",null,null],[3,"Offset","","How to offset vertices in screen space, if at all.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[4,"CullFace","","Which face, if any, to cull.",null,null],[13,"Nothing","","",2,null],[13,"Front","","",2,null],[13,"Back","","",2,null],[4,"RasterMethod","","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",3,null],[13,"Line","","Rasterize as a line with the given width.",3,null],[13,"Fill","","Rasterize as a face.",3,null],[3,"MultiSample","","Multi-sampling rasterization mode",null,null],[3,"Rasterizer","","Primitive rasterization state. Note that GL allows different raster method to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",4,null],[12,"cull_face","","Which face should be culled.",4,null],[12,"method","","How to rasterize this primitive.",4,null],[12,"offset","","Any polygon offset to apply.",4,null],[12,"samples","","Multi-sampling mode.",4,null],[4,"Comparison","","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",5,null],[13,"Less","","`x < y`",5,null],[13,"LessEqual","","`x <= y`",5,null],[13,"Equal","","`x == y`",5,null],[13,"GreaterEqual","","`x >= y`",5,null],[13,"Greater","","`x > y`",5,null],[13,"NotEqual","","`x != y`",5,null],[13,"Always","","`true`",5,null],[4,"StencilOp","","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",6,null],[13,"Zero","","Set the value in the stencil buffer to zero.",6,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",6,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",6,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",6,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",6,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",6,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",6,null],[3,"StencilSide","","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",7,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they are read before doing the stencil test.",7,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",7,null],[12,"op_fail","","What operation to do if the stencil test fails.",7,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",7,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",7,null],[3,"Stencil","","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",8,null],[12,"back","","",8,null],[3,"Depth","","Depth test state.",null,null],[12,"fun","","Comparison function to use.",9,null],[12,"write","","Specify whether to write to the depth buffer or not.",9,null],[4,"Equation","","",null,null],[13,"Add","","Adds source and destination. Source and destination are multiplied by blending parameters before addition.",10,null],[13,"Sub","","Subtracts destination from source. Source and destination are multiplied by blending parameters before subtraction.",10,null],[13,"RevSub","","Subtracts source from destination. Source and destination are multiplied by blending parameters before subtraction.",10,null],[13,"Min","","Component-wise minimum value of source and destination. Blending parameters are ignored.",10,null],[13,"Max","","Component-wise maximum value of source and destination. Blending parameters are ignored.",10,null],[4,"BlendValue","","",null,null],[13,"SourceColor","","",11,null],[13,"SourceAlpha","","",11,null],[13,"DestColor","","",11,null],[13,"DestAlpha","","",11,null],[13,"ConstColor","","",11,null],[13,"ConstAlpha","","",11,null],[4,"Factor","","",null,null],[13,"Zero","","",12,null],[13,"One","","",12,null],[13,"SourceAlphaSaturated","","",12,null],[13,"ZeroPlus","","",12,null],[13,"OneMinus","","",12,null],[3,"BlendChannel","","",null,null],[12,"equation","","",13,null],[12,"source","","",13,null],[12,"destination","","",13,null],[3,"Blend","","",null,null],[12,"color","","",14,null],[12,"alpha","","",14,null],[3,"ColorMask","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[3,"Color","","The state of an active color render target",null,null],[12,"mask","","Color mask to use.",15,null],[12,"blend","","Optional blending.",15,null],[3,"RefValues","","The complete set of the rasterizer reference values. Switching these doesn't roll the hardware context.",null,null],[12,"stencil","","Stencil front and back values.",16,null],[12,"blend","","Constant blend color.",16,null],[0,"target","gfx_core","Render target specification.",null,null],[6,"Layer","gfx_core::target","A depth value, specifying which plane to select out of a 3D texture.",null,null],[6,"Level","","Mipmap level to select in a texture.",null,null],[6,"Depth","","A single depth value from a depth buffer.",null,null],[6,"Stencil","","A single value from a stencil stencstencil buffer.",null,null],[3,"Rect","","A screen space rectangle",null,null],[12,"x","","",17,null],[12,"y","","",17,null],[12,"w","","",17,null],[12,"h","","",17,null],[6,"ColorValue","","A color with floating-point components.",null,null],[3,"Mirror","","Mirroring flags, used for blitting",null,null],[17,"MIRROR_X","","",null,null],[17,"MIRROR_Y","","",null,null],[3,"VertexShader","gfx_core","",null,null],[3,"HullShader","","",null,null],[3,"DomainShader","","",null,null],[3,"GeometryShader","","",null,null],[3,"PixelShader","","",null,null],[3,"Capabilities","","Features that the device supports.",null,null],[12,"max_vertex_count","","",18,null],[12,"max_index_count","","",18,null],[12,"max_texture_size","","",18,null],[12,"max_patch_size","","",18,null],[12,"instance_base_supported","","",18,null],[12,"instance_call_supported","","",18,null],[12,"instance_rate_supported","","",18,null],[12,"vertex_base_supported","","",18,null],[12,"srgb_color_supported","","",18,null],[12,"constant_buffer_supported","","",18,null],[12,"unordered_access_view_supported","","",18,null],[12,"separate_blending_slots_supported","","",18,null],[12,"copy_buffer_supported","","",18,null],[3,"AdapterInfo","","Information about a backend adapater.",null,null],[12,"name","","Adapter name",19,null],[12,"vendor","","Vendor PCI id of the adapter",19,null],[12,"device","","PCI id of the adapter",19,null],[12,"software_rendering","","The device is based on a software rasterizer",19,null],[3,"Frame","","Handle to a backbuffer of the swapchain.",null,null],[4,"ShaderSet","","A complete set of shaders to link a program.",null,null],[13,"Simple","","Simple program: Vs-Ps",20,null],[13,"Geometry","","Geometry shader programs: Vs-Gs-Ps",20,null],[13,"Tessellated","","Tessellated TODO: Tessellated, TessellatedGeometry, TransformFeedback",20,null],[4,"Primitive","","Describes what geometric primitives are created from vertex data.",null,null],[13,"PointList","","Each vertex represents a single point.",21,null],[13,"LineList","","Each pair of vertices represent a single line segment. For example, with `[a, b, c, d, e]`, `a` and `b` form a line, `c` and `d` form a line, and `e` is discarded.",21,null],[13,"LineStrip","","Every two consecutive vertices represent a single line segment. Visually forms a \"path\" of lines, as they are all connected. For example, with `[a, b, c]`, `a` and `b` form a line line, and `b` and `c` form a line.",21,null],[13,"TriangleList","","Each triplet of vertices represent a single triangle. For example, with `[a, b, c, d, e]`, `a`, `b`, and `c` form a triangle, `d` and `e` are discarded.",21,null],[13,"TriangleStrip","","Every three consecutive vertices represent a single triangle. For example, with `[a, b, c, d]`, `a`, `b`, and `c` form a triangle, and `b`, `c`, and `d` form a triangle.",21,null],[13,"LineListAdjacency","","Each quadtruplet of vertices represent a single line segment with adjacency information. For example, with `[a, b, c, d]`, `b` and `c` form a line, and `a` and `d` are the adjacent vertices.",21,null],[13,"LineStripAdjacency","","Every four consecutive vertices represent a single line segment with adjacency information. For example, with `[a, b, c, d, e]`, `[a, b, c, d]` form a line segment with adjacency, and `[b, c, d, e]` form a line segment with adjacency.",21,null],[13,"TriangleListAdjacency","","Each sextuplet of vertices represent a single traingle with adjacency information. For example, with `[a, b, c, d, e, f]`, `a`, `c`, and `e` form a traingle, and `b`, `d`, and `f` are the adjacent vertices, where `b` is adjacent to the edge formed by `a` and `c`, `d` is adjacent to the edge `c` and `e`, and `f` is adjacent to the edge `e` and `a`.",21,null],[13,"TriangleStripAdjacency","","Every even-numbered vertex (every other starting from the first) represents an additional vertex for the triangle strip, while odd-numbered vertices (every other starting from the second) represent adjacent vertices. For example, with `[a, b, c, d, e, f, g, h]`, `[a, c, e, g]` form a triangle strip, and `[b, d, f, h]` are the adjacent vertices, where `b`, `d`, and `f` are adjacent to the first triangle in the strip, and `d`, `f`, and `h` are adjacent to the second.",21,null],[13,"PatchList","","Patch list, used with shaders capable of producing primitives on their own (tessellation)",21,null],[4,"IndexType","","A type of each index value in the slice's index buffer",null,null],[13,"U16","","",22,null],[13,"U32","","",22,null],[4,"SubmissionError","","",null,null],[13,"AccessOverlap","","",23,null],[0,"buffer","","Memory buffers",null,null],[3,"Raw","gfx_core::buffer","Untyped buffer",null,null],[3,"Info","","An information block that is immutable and associated to each buffer.",null,null],[12,"role","","Role",24,null],[12,"usage","","Usage hint",24,null],[12,"bind","","Bind flags",24,null],[12,"size","","Size in bytes",24,null],[12,"stride","","Stride of a single element, in bytes. Only used for structured buffers that you use via shader resource / unordered access views.",24,null],[4,"Role","","Role of the memory buffer.",null,null],[13,"Vertex","","Generic vertex buffer",25,null],[13,"Index","","Index buffer",25,null],[13,"Constant","","Constant buffer",25,null],[13,"Staging","","Staging buffer",25,null],[4,"CreationError","","Error creating a buffer.",null,null],[13,"UnsupportedBind","","Some of the bind flags are not supported.",26,null],[13,"Other","","Unknown other error.",26,null],[13,"UnsupportedUsage","","Usage mode is not supported",26,null],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_info","","Get buffer info",27,{"inputs":[{"name":"self"}],"output":{"name":"info"}}],[11,"is_mapped","","Is this buffer mapped ?",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",27,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"role"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",25,null],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"role"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"info"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",24,null],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"creationerror"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",26,null],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"creationerror"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"creationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",26,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[0,"command","gfx_core","Command Buffer device interface",null,null],[3,"AccessInfo","gfx_core::command","Informations about what is accessed by a bunch of commands.",null,null],[3,"AccessGuard","","",null,null],[3,"AccessGuardBuffers","","",null,null],[3,"AccessGuardBuffersChain","","",null,null],[4,"ClearColor","","A universal clear color supporting integet formats as well as the standard floating-point.",null,null],[13,"Float","","Standard floating-point vec4 color",28,null],[13,"Int","","Integer vector to clear ivec4 targets.",28,null],[13,"Uint","","Unsigned int vector to clear uvec4 targets.",28,null],[6,"InstanceParams","","Optional instance parameters: (instance count, buffer offset)",null,null],[6,"AccessInfoBuffers","","",null,null],[8,"Buffer","","An interface of the abstract command buffer. It collects commands in an efficient API-specific manner, to be ready for execution on the device.",null,null],[10,"reset","","Reset the command buffer contents, retain the allocated storage",29,{"inputs":[{"name":"self"}],"output":null}],[10,"bind_pipeline_state","","Bind a pipeline state object",29,null],[10,"bind_vertex_buffers","","Bind a complete set of vertex buffers",29,{"inputs":[{"name":"self"},{"name":"vertexbufferset"}],"output":null}],[10,"bind_constant_buffers","","Bind a complete set of constant buffers",29,null],[10,"bind_global_constant","","Bind a global constant",29,{"inputs":[{"name":"self"},{"name":"location"},{"name":"uniformvalue"}],"output":null}],[10,"bind_resource_views","","Bind a complete set of shader resource views",29,null],[10,"bind_unordered_views","","Bind a complete set of unordered access views",29,null],[10,"bind_samplers","","Bind a complete set of samplers",29,null],[10,"bind_pixel_targets","","Bind a complete set of pixel targets, including multiple colors views and an optional depth/stencil view.",29,{"inputs":[{"name":"self"},{"name":"pixeltargetset"}],"output":null}],[10,"bind_index","","Bind an index buffer",29,null],[10,"set_scissor","","Set scissor rectangle",29,{"inputs":[{"name":"self"},{"name":"rect"}],"output":null}],[10,"set_ref_values","","Set reference values for the blending and stencil front/back",29,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":null}],[10,"copy_buffer","","Copy part of a buffer to another",29,null],[10,"copy_buffer_to_texture","","Copy part of a buffer to a texture",29,null],[10,"copy_texture_to_buffer","","Copy part of a texture to a buffer",29,null],[10,"update_buffer","","Update a vertex/index/uniform buffer",29,null],[10,"update_texture","","Update a texture",29,null],[10,"generate_mipmap","","",29,null],[10,"clear_color","","Clear color target",29,null],[10,"clear_depth_stencil","","",29,null],[10,"call_draw","","Draw a primitive",29,{"inputs":[{"name":"self"},{"name":"vertexcount"},{"name":"vertexcount"},{"generics":["instanceparams"],"name":"option"}],"output":null}],[10,"call_draw_indexed","","Draw a primitive with index buffer",29,{"inputs":[{"name":"self"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"vertexcount"},{"generics":["instanceparams"],"name":"option"}],"output":null}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"clearcolor"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",28,{"inputs":[{"name":"self"},{"name":"clearcolor"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",28,{"inputs":[{"name":"self"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"le","","",28,{"inputs":[{"name":"self"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"gt","","",28,{"inputs":[{"name":"self"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"ge","","",28,{"inputs":[{"name":"self"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"from","","",28,null],[11,"from","","",28,null],[11,"from","","",28,null],[11,"from","","",28,null],[11,"from","","",28,null],[11,"from","","",28,null],[11,"from","","",28,null],[11,"from","","",28,null],[11,"from","","",28,null],[11,"from","","",28,{"inputs":[{"name":"f32"}],"output":{"name":"clearcolor"}}],[11,"from","","",28,{"inputs":[{"name":"i32"}],"output":{"name":"clearcolor"}}],[11,"from","","",28,{"inputs":[{"name":"u32"}],"output":{"name":"clearcolor"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"accessinfo"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"accessinfo"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"accessinfo"}],"output":{"name":"bool"}}],[11,"new","","Creates empty access informations",30,{"inputs":[],"output":{"name":"self"}}],[11,"clear","","Clear access informations",30,{"inputs":[{"name":"self"}],"output":null}],[11,"buffer_read","","Register a buffer read access",30,{"inputs":[{"name":"self"},{"name":"rawbuffer"}],"output":null}],[11,"buffer_write","","Register a buffer write access",30,{"inputs":[{"name":"self"},{"name":"rawbuffer"}],"output":null}],[11,"mapped_reads","","Returns the mapped buffers that The GPU will read from",30,{"inputs":[{"name":"self"}],"output":{"name":"accessinfobuffers"}}],[11,"mapped_writes","","Returns the mapped buffers that The GPU will write to",30,{"inputs":[{"name":"self"}],"output":{"name":"accessinfobuffers"}}],[11,"has_mapped_reads","","Is there any mapped buffer reads ?",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_mapped_writes","","Is there any mapped buffer writes ?",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"take_accesses","","Takes all the accesses necessary for submission",30,{"inputs":[{"name":"self"}],"output":{"generics":["accessguard"],"name":"submissionresult"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"access_mapped_reads","","Returns the mapped buffers that The GPU will read from, with exclusive acces to their mapping",31,{"inputs":[{"name":"self"}],"output":{"name":"accessguardbuffers"}}],[11,"access_mapped_writes","","Returns the mapped buffers that The GPU will write to, with exclusive acces to their mapping",31,{"inputs":[{"name":"self"}],"output":{"name":"accessguardbuffers"}}],[11,"access_mapped","","",31,{"inputs":[{"name":"self"}],"output":{"name":"accessguardbufferschain"}}],[11,"deref","","",31,null],[11,"drop","","",31,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",33,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[0,"dummy","gfx_core","Dummy backend implementation to test the code for compile errors outside of the graphics development environment.",null,null],[3,"DummyDevice","gfx_core::dummy","Dummy device which does minimal work, just to allow testing gfx-rs apps for compilation.",null,null],[3,"DummyFence","","Dummy fence that does nothing.",null,null],[3,"DummyMapping","","Dummy mapping which will crash on use.",null,null],[3,"DummyCommandBuffer","","Dummy command buffer, which ignores all the calls.",null,null],[4,"DummyResources","","Dummy resources phantom type",null,null],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"dummyresources"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",34,null],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"dummyresources"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"dummyfence"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",35,null],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"dummyfence"}],"output":{"name":"bool"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"dummymapping"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",36,null],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"dummymapping"}],"output":{"name":"bool"}}],[11,"new","","Create a new dummy device",37,{"inputs":[],"output":{"name":"dummydevice"}}],[11,"reset","","",38,{"inputs":[{"name":"self"}],"output":null}],[11,"bind_pipeline_state","","",38,null],[11,"bind_vertex_buffers","","",38,{"inputs":[{"name":"self"},{"generics":["dummyresources"],"name":"vertexbufferset"}],"output":null}],[11,"bind_constant_buffers","","",38,null],[11,"bind_global_constant","","",38,{"inputs":[{"name":"self"},{"name":"location"},{"name":"uniformvalue"}],"output":null}],[11,"bind_resource_views","","",38,null],[11,"bind_unordered_views","","",38,null],[11,"bind_samplers","","",38,null],[11,"bind_pixel_targets","","",38,{"inputs":[{"name":"self"},{"generics":["dummyresources"],"name":"pixeltargetset"}],"output":null}],[11,"bind_index","","",38,null],[11,"set_scissor","","",38,{"inputs":[{"name":"self"},{"name":"rect"}],"output":null}],[11,"set_ref_values","","",38,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":null}],[11,"copy_buffer","","",38,null],[11,"copy_buffer_to_texture","","",38,null],[11,"copy_texture_to_buffer","","",38,null],[11,"update_buffer","","",38,null],[11,"update_texture","","",38,null],[11,"generate_mipmap","","",38,null],[11,"clear_color","","",38,null],[11,"clear_depth_stencil","","",38,null],[11,"call_draw","","",38,{"inputs":[{"name":"self"},{"name":"vertexcount"},{"name":"vertexcount"},{"generics":["instanceparams"],"name":"option"}],"output":null}],[11,"call_draw_indexed","","",38,{"inputs":[{"name":"self"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"vertexcount"},{"generics":["instanceparams"],"name":"option"}],"output":null}],[11,"get_capabilities","","",37,{"inputs":[{"name":"self"}],"output":{"name":"capabilities"}}],[11,"pin_submitted_resources","","",37,{"inputs":[{"name":"self"},{"name":"manager"}],"output":null}],[11,"submit","","",37,{"inputs":[{"name":"self"},{"name":"dummycommandbuffer"},{"name":"accessinfo"}],"output":{"name":"submissionresult"}}],[11,"fenced_submit","","",37,null],[11,"wait_fence","","",37,{"inputs":[{"name":"self"},{"name":"fence"}],"output":null}],[11,"cleanup","","",37,{"inputs":[{"name":"self"}],"output":null}],[0,"factory","gfx_core","Resource factory",null,null],[4,"ResourceViewError","gfx_core::factory","Error creating either a ShaderResourceView, or UnorderedAccessView.",null,null],[13,"NoBindFlag","","The corresponding bind flag is not present in the texture.",39,null],[13,"Channel","","Selected channel type is not supported for this texture.",39,null],[13,"Layer","","Selected layer can not be viewed for this texture.",39,null],[13,"Unsupported","","The backend was refused for some reason.",39,null],[4,"TargetViewError","","Error creating either a RenderTargetView, or DepthStencilView.",null,null],[13,"NoBindFlag","","The `RENDER_TARGET`/`DEPTH_STENCIL` flag is not present in the texture.",40,null],[13,"Level","","Selected mip level doesn't exist.",40,null],[13,"Layer","","Selected array layer doesn't exist.",40,null],[13,"Channel","","Selected channel type is not supported for this texture.",40,null],[13,"Unsupported","","The backend was refused for some reason.",40,null],[13,"NotDetached","","The RTV cannot be changed due to the references to it existing.",40,null],[4,"CombinedError","","An error from creating textures with views at the same time.",null,null],[13,"Texture","","Failed to create the raw texture.",41,null],[13,"Resource","","Failed to create SRV or UAV.",41,null],[13,"Target","","Failed to create RTV or DSV.",41,null],[8,"Factory","","A `Factory` is responsible for creating and managing resources for the context it was created with. ",null,null],[10,"get_capabilities","","Returns the capabilities of this `Factory`. This usually depends on the graphics API being used.",42,{"inputs":[{"name":"self"}],"output":{"name":"capabilities"}}],[10,"create_buffer_raw","","",42,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"generics":["rawbuffer","creationerror"],"name":"result"}}],[10,"create_buffer_immutable_raw","","",42,null],[11,"create_buffer_immutable","","",42,null],[11,"create_buffer","","",42,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"role"},{"name":"usage"},{"name":"bind"}],"output":{"generics":["buffer","creationerror"],"name":"result"}}],[10,"create_pipeline_state_raw","","Creates a new `RawPipelineState`. To create a safely typed `PipelineState`, see the `FactoryExt` trait and `pso` module, both in the `gfx` crate.",42,{"inputs":[{"name":"self"},{"name":"program"},{"name":"descriptor"}],"output":{"generics":["rawpipelinestate","creationerror"],"name":"result"}}],[10,"create_program","","Creates a new shader `Program` for the supplied `ShaderSet`.",42,{"inputs":[{"name":"self"},{"name":"shaderset"}],"output":{"generics":["program","createprogramerror"],"name":"result"}}],[10,"create_shader","","Compiles a shader source into a `Shader` object that can be used to create a shader `Program`.",42,null],[11,"create_shader_vertex","","Compiles a `VertexShader` from source.",42,null],[11,"create_shader_hull","","Compiles a `HullShader` from source.",42,null],[11,"create_shader_domain","","Compiles a `VertexShader` from source.",42,null],[11,"create_shader_geometry","","Compiles a `GeometryShader` from source.",42,null],[11,"create_shader_pixel","","Compiles a `PixelShader` from source. This is the same as what some APIs call a fragment shader.",42,null],[10,"create_sampler","","",42,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"sampler"}}],[10,"read_mapping","","Acquire a mapping Reader",42,{"inputs":[{"name":"self"},{"name":"buffer"}],"output":{"generics":["reader","error"],"name":"result"}}],[10,"write_mapping","","Acquire a mapping Writer",42,{"inputs":[{"name":"self"},{"name":"buffer"}],"output":{"generics":["writer","error"],"name":"result"}}],[10,"create_texture_raw","","Create a new empty raw texture with no data. The channel type parameter is a hint, required to assist backends that have no concept of typeless formats (OpenGL). The initial data, if given, has to be provided for all mip levels and slices: Slice0.Mip0, Slice0.Mip1, ..., Slice1.Mip0, ...",42,{"inputs":[{"name":"self"},{"name":"info"},{"generics":["channeltype"],"name":"option"},{"name":"option"}],"output":{"generics":["rawtexture","creationerror"],"name":"result"}}],[10,"view_buffer_as_shader_resource_raw","","",42,{"inputs":[{"name":"self"},{"name":"rawbuffer"}],"output":{"generics":["rawshaderresourceview","resourceviewerror"],"name":"result"}}],[10,"view_buffer_as_unordered_access_raw","","",42,{"inputs":[{"name":"self"},{"name":"rawbuffer"}],"output":{"generics":["rawunorderedaccessview","resourceviewerror"],"name":"result"}}],[10,"view_texture_as_shader_resource_raw","","",42,{"inputs":[{"name":"self"},{"name":"rawtexture"},{"name":"resourcedesc"}],"output":{"generics":["rawshaderresourceview","resourceviewerror"],"name":"result"}}],[10,"view_texture_as_unordered_access_raw","","",42,{"inputs":[{"name":"self"},{"name":"rawtexture"}],"output":{"generics":["rawunorderedaccessview","resourceviewerror"],"name":"result"}}],[10,"view_texture_as_render_target_raw","","",42,{"inputs":[{"name":"self"},{"name":"rawtexture"},{"name":"renderdesc"}],"output":{"generics":["rawrendertargetview","targetviewerror"],"name":"result"}}],[10,"view_texture_as_depth_stencil_raw","","",42,{"inputs":[{"name":"self"},{"name":"rawtexture"},{"name":"depthstencildesc"}],"output":{"generics":["rawdepthstencilview","targetviewerror"],"name":"result"}}],[11,"create_texture","","",42,{"inputs":[{"name":"self"},{"name":"kind"},{"name":"level"},{"name":"bind"},{"name":"usage"},{"generics":["channeltype"],"name":"option"}],"output":{"generics":["texture","creationerror"],"name":"result"}}],[11,"view_buffer_as_shader_resource","","",42,{"inputs":[{"name":"self"},{"name":"buffer"}],"output":{"generics":["shaderresourceview","resourceviewerror"],"name":"result"}}],[11,"view_buffer_as_unordered_access","","",42,{"inputs":[{"name":"self"},{"name":"buffer"}],"output":{"generics":["unorderedaccessview","resourceviewerror"],"name":"result"}}],[11,"view_texture_as_shader_resource","","",42,null],[11,"view_texture_as_unordered_access","","",42,{"inputs":[{"name":"self"},{"name":"texture"}],"output":{"generics":["unorderedaccessview","resourceviewerror"],"name":"result"}}],[11,"view_texture_as_render_target","","",42,{"inputs":[{"name":"self"},{"name":"texture"},{"name":"level"},{"generics":["layer"],"name":"option"}],"output":{"generics":["rendertargetview","targetviewerror"],"name":"result"}}],[11,"view_texture_as_depth_stencil","","",42,{"inputs":[{"name":"self"},{"name":"texture"},{"name":"level"},{"generics":["layer"],"name":"option"},{"name":"depthstencilflags"}],"output":{"generics":["depthstencilview","targetviewerror"],"name":"result"}}],[11,"view_texture_as_depth_stencil_trivial","","",42,{"inputs":[{"name":"self"},{"name":"texture"}],"output":{"generics":["depthstencilview","targetviewerror"],"name":"result"}}],[11,"create_texture_immutable_u8","","",42,null],[11,"create_texture_immutable","","",42,null],[11,"create_render_target","","",42,{"inputs":[{"name":"self"},{"name":"size"},{"name":"size"}],"output":{"generics":["combinederror"],"name":"result"}}],[11,"create_depth_stencil","","",42,{"inputs":[{"name":"self"},{"name":"size"},{"name":"size"}],"output":{"generics":["combinederror"],"name":"result"}}],[11,"create_depth_stencil_view_only","","",42,{"inputs":[{"name":"self"},{"name":"size"},{"name":"size"}],"output":{"generics":["depthstencilview","combinederror"],"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"resourceviewerror"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"resourceviewerror"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"resourceviewerror"}],"output":{"name":"bool"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",39,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",39,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"targetviewerror"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"targetviewerror"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"targetviewerror"}],"output":{"name":"bool"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",40,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",40,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"combinederror"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"combinederror"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"self"},{"name":"combinederror"}],"output":{"name":"bool"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",41,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",41,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"from","","",41,{"inputs":[{"name":"creationerror"}],"output":{"name":"combinederror"}}],[11,"from","","",41,{"inputs":[{"name":"resourceviewerror"}],"output":{"name":"combinederror"}}],[11,"from","","",41,{"inputs":[{"name":"targetviewerror"}],"output":{"name":"combinederror"}}],[0,"format","gfx_core","Universal format specification. Applicable to textures, views, and vertex buffers.",null,null],[3,"Swizzle","gfx_core::format","Channel swizzle configuration for the resource views. Note: It's not currently mirrored at compile-time, thus providing less safety and convenience.",null,null],[12,"0","","",43,null],[12,"1","","",43,null],[12,"2","","",43,null],[12,"3","","",43,null],[3,"Format","","Complete run-time surface format.",null,null],[12,"0","","",44,null],[12,"1","","",44,null],[3,"U8Norm","","",null,null],[12,"0","","",45,null],[3,"I8Norm","","",null,null],[12,"0","","",46,null],[3,"U16Norm","","",null,null],[12,"0","","",47,null],[3,"I16Norm","","",null,null],[12,"0","","",48,null],[3,"F16","","",null,null],[12,"0","","",49,null],[4,"ChannelType","","Type of a surface channel. This is how we interpret the storage allocated with `SurfaceType`.",null,null],[13,"Int","","",50,null],[13,"Uint","","",50,null],[13,"Inorm","","",50,null],[13,"Unorm","","",50,null],[13,"Float","","",50,null],[13,"Srgb","","",50,null],[4,"Int","","",null,null],[4,"Uint","","",null,null],[4,"Inorm","","",null,null],[4,"Unorm","","",null,null],[4,"Float","","",null,null],[4,"Srgb","","",null,null],[4,"SurfaceType","","Type of the allocated texture surface. It is supposed to only carry information about the number of bits per each channel. The actual types are up to the views to decide and interpret. The actual components are up to the swizzle to define.",null,null],[13,"R4_G4","","",51,null],[13,"R4_G4_B4_A4","","",51,null],[13,"R5_G5_B5_A1","","",51,null],[13,"R5_G6_B5","","",51,null],[13,"R8","","",51,null],[13,"R8_G8","","",51,null],[13,"R8_G8_B8_A8","","",51,null],[13,"R10_G10_B10_A2","","",51,null],[13,"R11_G11_B10","","",51,null],[13,"R16","","",51,null],[13,"R16_G16","","",51,null],[13,"R16_G16_B16","","",51,null],[13,"R16_G16_B16_A16","","",51,null],[13,"R32","","",51,null],[13,"R32_G32","","",51,null],[13,"R32_G32_B32","","",51,null],[13,"R32_G32_B32_A32","","",51,null],[13,"B8_G8_R8_A8","","",51,null],[13,"D16","","",51,null],[13,"D24","","",51,null],[13,"D24_S8","","",51,null],[13,"D32","","",51,null],[4,"R4_G4","","",null,null],[4,"R4_G4_B4_A4","","",null,null],[4,"R5_G5_B5_A1","","",null,null],[4,"R5_G6_B5","","",null,null],[4,"R8","","",null,null],[4,"R8_G8","","",null,null],[4,"R8_G8_B8_A8","","",null,null],[4,"R10_G10_B10_A2","","",null,null],[4,"R11_G11_B10","","",null,null],[4,"R16","","",null,null],[4,"R16_G16","","",null,null],[4,"R16_G16_B16","","",null,null],[4,"R16_G16_B16_A16","","",null,null],[4,"R32","","",null,null],[4,"R32_G32","","",null,null],[4,"R32_G32_B32","","",null,null],[4,"R32_G32_B32_A32","","",null,null],[4,"B8_G8_R8_A8","","",null,null],[4,"D16","","",null,null],[4,"D24","","",null,null],[4,"D24_S8","","",null,null],[4,"D32","","",null,null],[4,"ChannelSource","","Source channel in a swizzle configuration. Some may redirect onto different physical channels, some may be hardcoded to 0 or 1.",null,null],[13,"Zero","","",52,null],[13,"One","","",52,null],[13,"X","","",52,null],[13,"Y","","",52,null],[13,"Z","","",52,null],[13,"W","","",52,null],[6,"Vec1","","Abstracted 1-element container for macro internal use",null,null],[6,"Vec2","","Abstracted 2-element container for macro internal use",null,null],[6,"Vec3","","Abstracted 3-element container for macro internal use",null,null],[6,"Vec4","","Abstracted 4-element container for macro internal use",null,null],[6,"Rgba8","","Standard 8bits RGBA format.",null,null],[6,"Srgba8","","Standard 8bit gamma transforming RGB format.",null,null],[6,"Rgb10a2F","","Standard HDR floating-point format with 10 bits for RGB components and 2 bits for the alpha.",null,null],[6,"Rgba16F","","Standard 16-bit floating-point RGBA format.",null,null],[6,"Rgba32F","","Standard 32-bit floating-point RGBA format.",null,null],[6,"Bgra8","","Standard 8bits BGRA format.",null,null],[6,"Depth","","Standard 24-bit depth format.",null,null],[6,"DepthStencil","","Standard 24-bit depth format with 8-bit stencil.",null,null],[6,"Depth32F","","Standard 32-bit floating-point depth format.",null,null],[8,"SurfaceTyped","","Compile-time surface type trait.",null,null],[16,"DataType","","The corresponding data type to be passed from CPU.",53,null],[10,"get_surface_type","","Return the run-time value of the type.",53,{"inputs":[],"output":{"name":"surfacetype"}}],[8,"BufferSurface","","An ability of a surface type to be used for vertex buffers.",null,null],[8,"TextureSurface","","An ability of a surface type to be used for textures.",null,null],[8,"RenderSurface","","An ability of a surface type to be used for render targets.",null,null],[8,"DepthSurface","","An ability of a surface type to be used for depth targets.",null,null],[8,"StencilSurface","","An ability of a surface type to be used for stencil targets.",null,null],[8,"ChannelTyped","","Compile-time channel type trait.",null,null],[16,"ShaderType","","Shader-visible type that corresponds to this channel. For example, normalized integers are visible as floats.",54,null],[10,"get_channel_type","","Return the run-time value of the type.",54,{"inputs":[],"output":{"name":"channeltype"}}],[8,"TextureChannel","","An ability of a channel type to be used for textures.",null,null],[8,"RenderChannel","","An ability of a channel type to be used for render targets.",null,null],[8,"BlendChannel","","An ability of a channel type to be used for blended render targets.",null,null],[8,"Formatted","","Compile-time full format trait.",null,null],[16,"Surface","","Associated surface type.",55,null],[16,"Channel","","Associated channel type.",55,null],[16,"View","","Shader view type of this format.",55,null],[11,"get_format","","Return the run-time value of the type.",55,{"inputs":[],"output":{"name":"format"}}],[8,"BufferFormat","","Ability to be used for vertex buffers.",null,null],[8,"DepthFormat","","Ability to be used for depth targets.",null,null],[8,"StencilFormat","","Ability to be used for vertex buffers.",null,null],[8,"DepthStencilFormat","","Ability to be used for depth+stencil targets.",null,null],[8,"TextureFormat","","Ability to be used for textures.",null,null],[8,"RenderFormat","","Ability to be used for render targets.",null,null],[8,"BlendFormat","","Ability to be used for blended render targets.",null,null],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"channeltype"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",50,null],[11,"cmp","","",50,{"inputs":[{"name":"self"},{"name":"channeltype"}],"output":{"name":"ordering"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"channeltype"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",50,{"inputs":[{"name":"self"},{"name":"channeltype"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"int"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",56,null],[11,"cmp","","",56,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"ordering"}}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",56,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_channel_type","","",56,{"inputs":[],"output":{"name":"channeltype"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"uint"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",57,null],[11,"cmp","","",57,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"ordering"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",57,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_channel_type","","",57,{"inputs":[],"output":{"name":"channeltype"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"inorm"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",58,null],[11,"cmp","","",58,{"inputs":[{"name":"self"},{"name":"inorm"}],"output":{"name":"ordering"}}],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"inorm"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"self"},{"name":"inorm"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_channel_type","","",58,{"inputs":[],"output":{"name":"channeltype"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"unorm"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",59,null],[11,"cmp","","",59,{"inputs":[{"name":"self"},{"name":"unorm"}],"output":{"name":"ordering"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"unorm"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",59,{"inputs":[{"name":"self"},{"name":"unorm"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_channel_type","","",59,{"inputs":[],"output":{"name":"channeltype"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"float"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",60,null],[11,"cmp","","",60,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"ordering"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",60,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_channel_type","","",60,{"inputs":[],"output":{"name":"channeltype"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"srgb"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",61,null],[11,"cmp","","",61,{"inputs":[{"name":"self"},{"name":"srgb"}],"output":{"name":"ordering"}}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"srgb"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"self"},{"name":"srgb"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_channel_type","","",61,{"inputs":[],"output":{"name":"channeltype"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"surfacetype"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",51,null],[11,"cmp","","",51,{"inputs":[{"name":"self"},{"name":"surfacetype"}],"output":{"name":"ordering"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"surfacetype"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",51,{"inputs":[{"name":"self"},{"name":"surfacetype"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_total_bits","","Return the total number of bits for this format.",51,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_alpha_stencil_bits","","Return the number of bits allocated for alpha and stencil.",51,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"r4_g4"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",62,null],[11,"cmp","","",62,{"inputs":[{"name":"self"},{"name":"r4_g4"}],"output":{"name":"ordering"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"r4_g4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",62,{"inputs":[{"name":"self"},{"name":"r4_g4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",62,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"r4_g4_b4_a4"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",63,null],[11,"cmp","","",63,{"inputs":[{"name":"self"},{"name":"r4_g4_b4_a4"}],"output":{"name":"ordering"}}],[11,"eq","","",63,{"inputs":[{"name":"self"},{"name":"r4_g4_b4_a4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",63,{"inputs":[{"name":"self"},{"name":"r4_g4_b4_a4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",63,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"r5_g5_b5_a1"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",64,null],[11,"cmp","","",64,{"inputs":[{"name":"self"},{"name":"r5_g5_b5_a1"}],"output":{"name":"ordering"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"r5_g5_b5_a1"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",64,{"inputs":[{"name":"self"},{"name":"r5_g5_b5_a1"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",64,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"r5_g6_b5"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",65,null],[11,"cmp","","",65,{"inputs":[{"name":"self"},{"name":"r5_g6_b5"}],"output":{"name":"ordering"}}],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"r5_g6_b5"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",65,{"inputs":[{"name":"self"},{"name":"r5_g6_b5"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",65,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"r8"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",66,null],[11,"cmp","","",66,{"inputs":[{"name":"self"},{"name":"r8"}],"output":{"name":"ordering"}}],[11,"eq","","",66,{"inputs":[{"name":"self"},{"name":"r8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",66,{"inputs":[{"name":"self"},{"name":"r8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",66,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"r8_g8"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",67,null],[11,"cmp","","",67,{"inputs":[{"name":"self"},{"name":"r8_g8"}],"output":{"name":"ordering"}}],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"r8_g8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",67,{"inputs":[{"name":"self"},{"name":"r8_g8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",67,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"r8_g8_b8_a8"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",68,null],[11,"cmp","","",68,{"inputs":[{"name":"self"},{"name":"r8_g8_b8_a8"}],"output":{"name":"ordering"}}],[11,"eq","","",68,{"inputs":[{"name":"self"},{"name":"r8_g8_b8_a8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",68,{"inputs":[{"name":"self"},{"name":"r8_g8_b8_a8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",68,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"r10_g10_b10_a2"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",69,null],[11,"cmp","","",69,{"inputs":[{"name":"self"},{"name":"r10_g10_b10_a2"}],"output":{"name":"ordering"}}],[11,"eq","","",69,{"inputs":[{"name":"self"},{"name":"r10_g10_b10_a2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",69,{"inputs":[{"name":"self"},{"name":"r10_g10_b10_a2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",69,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"r11_g11_b10"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",70,null],[11,"cmp","","",70,{"inputs":[{"name":"self"},{"name":"r11_g11_b10"}],"output":{"name":"ordering"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"r11_g11_b10"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"self"},{"name":"r11_g11_b10"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",70,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"r16"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",71,null],[11,"cmp","","",71,{"inputs":[{"name":"self"},{"name":"r16"}],"output":{"name":"ordering"}}],[11,"eq","","",71,{"inputs":[{"name":"self"},{"name":"r16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",71,{"inputs":[{"name":"self"},{"name":"r16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",71,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"r16_g16"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",72,null],[11,"cmp","","",72,{"inputs":[{"name":"self"},{"name":"r16_g16"}],"output":{"name":"ordering"}}],[11,"eq","","",72,{"inputs":[{"name":"self"},{"name":"r16_g16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",72,{"inputs":[{"name":"self"},{"name":"r16_g16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",72,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"r16_g16_b16"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",73,null],[11,"cmp","","",73,{"inputs":[{"name":"self"},{"name":"r16_g16_b16"}],"output":{"name":"ordering"}}],[11,"eq","","",73,{"inputs":[{"name":"self"},{"name":"r16_g16_b16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",73,{"inputs":[{"name":"self"},{"name":"r16_g16_b16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",73,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"r16_g16_b16_a16"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",74,null],[11,"cmp","","",74,{"inputs":[{"name":"self"},{"name":"r16_g16_b16_a16"}],"output":{"name":"ordering"}}],[11,"eq","","",74,{"inputs":[{"name":"self"},{"name":"r16_g16_b16_a16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",74,{"inputs":[{"name":"self"},{"name":"r16_g16_b16_a16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",74,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"r32"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",75,null],[11,"cmp","","",75,{"inputs":[{"name":"self"},{"name":"r32"}],"output":{"name":"ordering"}}],[11,"eq","","",75,{"inputs":[{"name":"self"},{"name":"r32"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",75,{"inputs":[{"name":"self"},{"name":"r32"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",75,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"r32_g32"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",76,null],[11,"cmp","","",76,{"inputs":[{"name":"self"},{"name":"r32_g32"}],"output":{"name":"ordering"}}],[11,"eq","","",76,{"inputs":[{"name":"self"},{"name":"r32_g32"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",76,{"inputs":[{"name":"self"},{"name":"r32_g32"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",76,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"r32_g32_b32"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",77,null],[11,"cmp","","",77,{"inputs":[{"name":"self"},{"name":"r32_g32_b32"}],"output":{"name":"ordering"}}],[11,"eq","","",77,{"inputs":[{"name":"self"},{"name":"r32_g32_b32"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",77,{"inputs":[{"name":"self"},{"name":"r32_g32_b32"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",77,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"r32_g32_b32_a32"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",78,null],[11,"cmp","","",78,{"inputs":[{"name":"self"},{"name":"r32_g32_b32_a32"}],"output":{"name":"ordering"}}],[11,"eq","","",78,{"inputs":[{"name":"self"},{"name":"r32_g32_b32_a32"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",78,{"inputs":[{"name":"self"},{"name":"r32_g32_b32_a32"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",78,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"b8_g8_r8_a8"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",79,null],[11,"cmp","","",79,{"inputs":[{"name":"self"},{"name":"b8_g8_r8_a8"}],"output":{"name":"ordering"}}],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"b8_g8_r8_a8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",79,{"inputs":[{"name":"self"},{"name":"b8_g8_r8_a8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",79,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"d16"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",80,null],[11,"cmp","","",80,{"inputs":[{"name":"self"},{"name":"d16"}],"output":{"name":"ordering"}}],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"d16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",80,{"inputs":[{"name":"self"},{"name":"d16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",80,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"d24"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",81,null],[11,"cmp","","",81,{"inputs":[{"name":"self"},{"name":"d24"}],"output":{"name":"ordering"}}],[11,"eq","","",81,{"inputs":[{"name":"self"},{"name":"d24"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",81,{"inputs":[{"name":"self"},{"name":"d24"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",81,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"d24_s8"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",82,null],[11,"cmp","","",82,{"inputs":[{"name":"self"},{"name":"d24_s8"}],"output":{"name":"ordering"}}],[11,"eq","","",82,{"inputs":[{"name":"self"},{"name":"d24_s8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",82,{"inputs":[{"name":"self"},{"name":"d24_s8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",82,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"d32"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",83,null],[11,"cmp","","",83,{"inputs":[{"name":"self"},{"name":"d32"}],"output":{"name":"ordering"}}],[11,"eq","","",83,{"inputs":[{"name":"self"},{"name":"d32"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",83,{"inputs":[{"name":"self"},{"name":"d32"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"get_surface_type","","",83,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"channelsource"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",52,null],[11,"cmp","","",52,{"inputs":[{"name":"self"},{"name":"channelsource"}],"output":{"name":"ordering"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"channelsource"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",52,{"inputs":[{"name":"self"},{"name":"channelsource"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"swizzle"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",43,null],[11,"cmp","","",43,{"inputs":[{"name":"self"},{"name":"swizzle"}],"output":{"name":"ordering"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",43,{"inputs":[{"name":"self"},{"name":"swizzle"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",43,{"inputs":[{"name":"self"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"le","","",43,{"inputs":[{"name":"self"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"gt","","",43,{"inputs":[{"name":"self"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"ge","","",43,{"inputs":[{"name":"self"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"new","","Create a new swizzle where each channel is unmapped.",43,{"inputs":[],"output":{"name":"swizzle"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"format"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",44,null],[11,"cmp","","",44,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"ordering"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",44,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",44,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"le","","",44,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"gt","","",44,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ge","","",44,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"u8norm"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",45,null],[11,"cmp","","",45,{"inputs":[{"name":"self"},{"name":"u8norm"}],"output":{"name":"ordering"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"self"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",45,{"inputs":[{"name":"self"},{"name":"u8norm"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",45,{"inputs":[{"name":"self"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"le","","",45,{"inputs":[{"name":"self"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"gt","","",45,{"inputs":[{"name":"self"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"ge","","",45,{"inputs":[{"name":"self"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"from","","",45,{"inputs":[{"name":"u8"}],"output":{"name":"u8norm"}}],[11,"cast2","","Convert a 2-element slice.",45,null],[11,"cast3","","Convert a 3-element slice.",45,null],[11,"cast4","","Convert a 4-element slice.",45,null],[11,"cast_slice","","Convert a generic slice by transmutation.",45,null],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i8norm"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",46,null],[11,"cmp","","",46,{"inputs":[{"name":"self"},{"name":"i8norm"}],"output":{"name":"ordering"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"self"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",46,{"inputs":[{"name":"self"},{"name":"i8norm"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",46,{"inputs":[{"name":"self"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"le","","",46,{"inputs":[{"name":"self"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"gt","","",46,{"inputs":[{"name":"self"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"ge","","",46,{"inputs":[{"name":"self"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"from","","",46,{"inputs":[{"name":"i8"}],"output":{"name":"i8norm"}}],[11,"cast2","","Convert a 2-element slice.",46,null],[11,"cast3","","Convert a 3-element slice.",46,null],[11,"cast4","","Convert a 4-element slice.",46,null],[11,"cast_slice","","Convert a generic slice by transmutation.",46,null],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u16norm"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",47,null],[11,"cmp","","",47,{"inputs":[{"name":"self"},{"name":"u16norm"}],"output":{"name":"ordering"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"self"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",47,{"inputs":[{"name":"self"},{"name":"u16norm"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",47,{"inputs":[{"name":"self"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"le","","",47,{"inputs":[{"name":"self"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"gt","","",47,{"inputs":[{"name":"self"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"ge","","",47,{"inputs":[{"name":"self"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"from","","",47,{"inputs":[{"name":"u16"}],"output":{"name":"u16norm"}}],[11,"cast2","","Convert a 2-element slice.",47,null],[11,"cast3","","Convert a 3-element slice.",47,null],[11,"cast4","","Convert a 4-element slice.",47,null],[11,"cast_slice","","Convert a generic slice by transmutation.",47,null],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"i16norm"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",48,null],[11,"cmp","","",48,{"inputs":[{"name":"self"},{"name":"i16norm"}],"output":{"name":"ordering"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"self"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",48,{"inputs":[{"name":"self"},{"name":"i16norm"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",48,{"inputs":[{"name":"self"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"le","","",48,{"inputs":[{"name":"self"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"gt","","",48,{"inputs":[{"name":"self"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"ge","","",48,{"inputs":[{"name":"self"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"from","","",48,{"inputs":[{"name":"i16"}],"output":{"name":"i16norm"}}],[11,"cast2","","Convert a 2-element slice.",48,null],[11,"cast3","","Convert a 3-element slice.",48,null],[11,"cast4","","Convert a 4-element slice.",48,null],[11,"cast_slice","","Convert a generic slice by transmutation.",48,null],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"f16"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",49,null],[11,"cmp","","",49,{"inputs":[{"name":"self"},{"name":"f16"}],"output":{"name":"ordering"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"self"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",49,{"inputs":[{"name":"self"},{"name":"f16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",49,{"inputs":[{"name":"self"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"le","","",49,{"inputs":[{"name":"self"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"gt","","",49,{"inputs":[{"name":"self"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"ge","","",49,{"inputs":[{"name":"self"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"from","","",49,{"inputs":[{"name":"u16"}],"output":{"name":"f16"}}],[11,"cast2","","Convert a 2-element slice.",49,null],[11,"cast3","","Convert a 3-element slice.",49,null],[11,"cast4","","Convert a 4-element slice.",49,null],[11,"cast_slice","","Convert a generic slice by transmutation.",49,null],[0,"handle","gfx_core","Resource handles",null,null],[3,"RawBuffer","gfx_core::handle","Untyped buffer handle",null,null],[3,"Buffer","","Type-safe buffer handle",null,null],[3,"Shader","","Shader Handle",null,null],[3,"Program","","Program Handle",null,null],[3,"RawPipelineState","","Raw Pipeline State Handle",null,null],[3,"RawTexture","","Raw texture handle",null,null],[3,"Texture","","Typed texture object",null,null],[3,"RawShaderResourceView","","Raw Shader Resource View Handle",null,null],[3,"ShaderResourceView","","Type-safe Shader Resource View Handle",null,null],[3,"RawUnorderedAccessView","","Raw Unordered Access View Handle",null,null],[3,"UnorderedAccessView","","Type-safe Unordered Access View Handle",null,null],[3,"RawRenderTargetView","","Raw RTV",null,null],[3,"RawDepthStencilView","","Raw DSV",null,null],[3,"RenderTargetView","","Typed RTV",null,null],[3,"DepthStencilView","","Typed DSV",null,null],[3,"Sampler","","Sampler Handle",null,null],[3,"Fence","","Fence Handle",null,null],[3,"Manager","","Stores reference-counted resources used in a command buffer. Seals actual resource names behind the interface, automatically referencing them both by the Factory on resource creation and the Renderer during CommandBuffer population.",null,null],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"rawbuffer"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",84,null],[11,"eq","","",84,{"inputs":[{"name":"self"},{"name":"rawbuffer"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"self"},{"name":"rawbuffer"}],"output":{"name":"bool"}}],[11,"deref","","",84,null],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",85,{"inputs":[{"name":"self"},{"name":"__hrt"}],"output":null}],[11,"eq","","",85,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"get_info","","Get the associated information about the buffer",85,{"inputs":[{"name":"self"}],"output":{"name":"info"}}],[11,"len","","Get the number of elements in the buffer.",85,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"shader"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",86,null],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"shader"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"self"},{"name":"shader"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"program"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",87,null],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"program"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"self"},{"name":"program"}],"output":{"name":"bool"}}],[11,"deref","","",87,null],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"rawpipelinestate"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",88,null],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"rawpipelinestate"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"self"},{"name":"rawpipelinestate"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"rawtexture"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",89,null],[11,"eq","","",89,{"inputs":[{"name":"self"},{"name":"rawtexture"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"self"},{"name":"rawtexture"}],"output":{"name":"bool"}}],[11,"deref","","",89,null],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",90,{"inputs":[{"name":"self"},{"name":"__hrs"}],"output":null}],[11,"eq","","",90,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"get_info","","Get texture descriptor",90,{"inputs":[{"name":"self"}],"output":{"name":"info"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"rawshaderresourceview"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",91,null],[11,"eq","","",91,{"inputs":[{"name":"self"},{"name":"rawshaderresourceview"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"self"},{"name":"rawshaderresourceview"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",92,{"inputs":[{"name":"self"},{"name":"__hrt"}],"output":null}],[11,"eq","","",92,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"rawunorderedaccessview"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",93,null],[11,"eq","","",93,{"inputs":[{"name":"self"},{"name":"rawunorderedaccessview"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"self"},{"name":"rawunorderedaccessview"}],"output":{"name":"bool"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",94,{"inputs":[{"name":"self"},{"name":"__hrt"}],"output":null}],[11,"eq","","",94,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"rawrendertargetview"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",95,null],[11,"eq","","",95,{"inputs":[{"name":"self"},{"name":"rawrendertargetview"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"self"},{"name":"rawrendertargetview"}],"output":{"name":"bool"}}],[11,"get_dimensions","","Get target dimensions",95,{"inputs":[{"name":"self"}],"output":{"name":"dimensions"}}],[11,"get_texture","","Get the associated texture",95,{"inputs":[{"name":"self"}],"output":{"name":"rawtexture"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"rawdepthstencilview"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",96,null],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"rawdepthstencilview"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"self"},{"name":"rawdepthstencilview"}],"output":{"name":"bool"}}],[11,"get_dimensions","","Get target dimensions",96,{"inputs":[{"name":"self"}],"output":{"name":"dimensions"}}],[11,"get_texture","","Get the associated texture",96,{"inputs":[{"name":"self"}],"output":{"name":"rawtexture"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",97,{"inputs":[{"name":"self"},{"name":"__hrt"}],"output":null}],[11,"eq","","",97,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"get_dimensions","","Get target dimensions",97,{"inputs":[{"name":"self"}],"output":{"name":"dimensions"}}],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",98,{"inputs":[{"name":"self"},{"name":"__hrt"}],"output":null}],[11,"eq","","",98,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"get_dimensions","","Get target dimensions",98,{"inputs":[{"name":"self"}],"output":{"name":"dimensions"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"sampler"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",99,null],[11,"eq","","",99,{"inputs":[{"name":"self"},{"name":"sampler"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"self"},{"name":"sampler"}],"output":{"name":"bool"}}],[11,"get_info","","Get sampler info",99,{"inputs":[{"name":"self"}],"output":{"name":"samplerinfo"}}],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"fence"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",100,null],[11,"eq","","",100,{"inputs":[{"name":"self"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"self"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new handle manager",101,{"inputs":[],"output":{"name":"manager"}}],[11,"clear","","Clear all references",101,{"inputs":[{"name":"self"}],"output":null}],[11,"extend","","Extend with all references of another handle manager",101,{"inputs":[{"name":"self"},{"name":"manager"}],"output":null}],[11,"count","","Count the total number of referenced resources",101,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"ref_buffer","","Reference a buffer",101,null],[11,"ref_shader","","Reference a shader",101,null],[11,"ref_program","","Reference a program",101,null],[11,"ref_pso","","Reference a pipeline state object",101,null],[11,"ref_texture","","Reference a texture",101,null],[11,"ref_srv","","Reference a shader resource view",101,null],[11,"ref_uav","","Reference an unordered access view",101,null],[11,"ref_rtv","","Reference an RTV",101,null],[11,"ref_dsv","","Reference a DSV",101,null],[11,"ref_sampler","","Reference a sampler",101,null],[11,"ref_fence","","Reference a fence",101,null],[0,"mapping","gfx_core","Memory mapping",null,null],[3,"Reader","gfx_core::mapping","Mapping reader",null,null],[3,"Writer","","Mapping writer. Currently is not possible to make write-only slice so while it is technically possible to read from Writer, it will lead to an undefined behavior. Please do not read from it.",null,null],[4,"Error","","Error accessing a mapping.",null,null],[13,"InvalidAccess","","The requested mapping access did not match the expected usage.",102,null],[13,"AccessOverlap","","The requested mapping access overlaps with another.",102,null],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",102,null],[11,"eq","","",102,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",102,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",103,null],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",104,null],[11,"deref_mut","","",104,null],[0,"memory","gfx_core","Memory stuff",null,null],[3,"Access","gfx_core::memory","Memory access",null,null],[3,"Bind","","Bind flags",null,null],[4,"Usage","","How this memory will be used.",null,null],[13,"Data","","Full speed GPU access. Optimal for render targets and resourced memory.",105,null],[13,"Dynamic","","CPU to GPU data flow with update commands. Used for dynamic buffer data, typically constant buffers.",105,null],[13,"Upload","","CPU to GPU data flow with mapping. Used for staging for upload to GPU.",105,null],[13,"Download","","GPU to CPU data flow with mapping. Used for staging for download from GPU.",105,null],[5,"cast_slice","","Cast a slice from one POD type to another.",null,null],[17,"READ","","Read access",null,null],[17,"WRITE","","Write access",null,null],[17,"RW","","Full access",null,null],[17,"RENDER_TARGET","","Can be rendered into.",null,null],[17,"DEPTH_STENCIL","","Can serve as a depth/stencil target.",null,null],[17,"SHADER_RESOURCE","","Can be bound to the shader for reading.",null,null],[17,"UNORDERED_ACCESS","","Can be bound to the shader for writing.",null,null],[17,"TRANSFER_SRC","","Can be transfered from.",null,null],[17,"TRANSFER_DST","","Can be transfered into.",null,null],[8,"Pod","","A trait for plain-old-data types.",null,null],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"usage"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",105,null],[11,"cmp","","",105,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"ordering"}}],[11,"eq","","",105,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",105,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"access"}}],[11,"partial_cmp","","",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"bool"}}],[11,"le","","",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"bool"}}],[11,"gt","","",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"bool"}}],[11,"ge","","",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"bool"}}],[11,"cmp","","",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"ordering"}}],[11,"hash","","",106,null],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",106,{"inputs":[],"output":{"name":"access"}}],[11,"all","","Returns the set containing all flags.",106,{"inputs":[],"output":{"name":"access"}}],[11,"bits","","Returns the raw value of the flags currently stored.",106,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",106,{"inputs":[{"name":"u8"}],"output":{"generics":["access"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",106,{"inputs":[{"name":"u8"}],"output":{"name":"access"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",106,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",106,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",106,{"inputs":[{"name":"self"},{"name":"access"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"access"}}],[11,"bitor_assign","","Adds the set of flags.",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"access"}}],[11,"bitxor_assign","","Toggles the set of flags.",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"access"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":{"name":"access"}}],[11,"sub_assign","","Disables all flags enabled in the set.",106,{"inputs":[{"name":"self"},{"name":"access"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",106,{"inputs":[{"name":"self"}],"output":{"name":"access"}}],[11,"extend","","",106,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",106,{"inputs":[{"name":"t"}],"output":{"name":"access"}}],[11,"eq","","",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"bind"}}],[11,"partial_cmp","","",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"le","","",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"gt","","",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"ge","","",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"cmp","","",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"ordering"}}],[11,"hash","","",107,null],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",107,{"inputs":[],"output":{"name":"bind"}}],[11,"all","","Returns the set containing all flags.",107,{"inputs":[],"output":{"name":"bind"}}],[11,"bits","","Returns the raw value of the flags currently stored.",107,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",107,{"inputs":[{"name":"u8"}],"output":{"generics":["bind"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",107,{"inputs":[{"name":"u8"}],"output":{"name":"bind"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",107,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",107,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",107,{"inputs":[{"name":"self"},{"name":"bind"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bind"}}],[11,"bitor_assign","","Adds the set of flags.",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bind"}}],[11,"bitxor_assign","","Toggles the set of flags.",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bind"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":{"name":"bind"}}],[11,"sub_assign","","Disables all flags enabled in the set.",107,{"inputs":[{"name":"self"},{"name":"bind"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",107,{"inputs":[{"name":"self"}],"output":{"name":"bind"}}],[11,"extend","","",107,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",107,{"inputs":[{"name":"t"}],"output":{"name":"bind"}}],[11,"is_mutable","","Is this memory bound to be mutated ?",107,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[0,"pso","gfx_core","Raw Pipeline State Objects",null,null],[3,"CreationError","gfx_core::pso","Error types happening upon PSO creation on the device side.",null,null],[3,"ColorInfo","","Color output configuration of the PSO.",null,null],[12,"mask","","Color channel mask",108,null],[12,"color","","Optional color blending",108,null],[12,"alpha","","Optional alpha blending",108,null],[3,"DepthStencilInfo","","Depth and stencil state of the PSO.",null,null],[12,"depth","","Optional depth test configuration",109,null],[12,"front","","Optional stencil test on the front faces",109,null],[12,"back","","Optional stencil test on the back faces",109,null],[3,"Element","","A struct element descriptor.",null,null],[12,"format","","Element format",110,null],[12,"offset","","Offset from the beginning of the container, in bytes",110,null],[3,"VertexBufferDesc","","Vertex buffer descriptor",null,null],[12,"stride","","Total container size, in bytes",111,null],[12,"rate","","Rate of the input for the given buffer",111,null],[3,"Descriptor","","All the information surrounding a shader program that is required for PSO creation, including the formats of vertex buffers and pixel targets;",null,null],[12,"primitive","","Type of the primitive",112,null],[12,"rasterizer","","Rasterizer setup",112,null],[12,"scissor","","Enable scissor test",112,null],[12,"vertex_buffers","","Vertex buffers",112,null],[12,"attributes","","Vertex attributes",112,null],[12,"constant_buffers","","Constant buffers",112,null],[12,"resource_views","","Shader resource views",112,null],[12,"unordered_views","","Unordered access views",112,null],[12,"samplers","","Samplers",112,null],[12,"color_targets","","Render target views (RTV)",112,null],[12,"depth_stencil","","Depth stencil view (DSV)",112,null],[3,"VertexBufferSet","","A complete set of vertex buffers to be used for vertex import in PSO.",null,null],[12,"0","","Array of buffer handles with offsets in them",113,null],[3,"ConstantBufferParam","","A constant buffer run-time parameter for PSO.",null,null],[12,"0","","",114,null],[12,"1","","",114,null],[12,"2","","",114,null],[3,"ResourceViewParam","","A shader resource view (SRV) run-time parameter for PSO.",null,null],[12,"0","","",115,null],[12,"1","","",115,null],[12,"2","","",115,null],[3,"UnorderedViewParam","","An unordered access view (UAV) run-time parameter for PSO.",null,null],[12,"0","","",116,null],[12,"1","","",116,null],[12,"2","","",116,null],[3,"SamplerParam","","A sampler run-time parameter for PSO.",null,null],[12,"0","","",117,null],[12,"1","","",117,null],[12,"2","","",117,null],[3,"PixelTargetSet","","A complete set of render targets to be used for pixel export in PSO.",null,null],[12,"colors","","Array of color target views",118,null],[12,"depth","","Depth target view",118,null],[12,"stencil","","Stencil target view",118,null],[12,"dimensions","","Rendering dimensions",118,null],[6,"BufferOffset","","An offset inside a vertex buffer, in bytes.",null,null],[6,"BufferIndex","","Index of a vertex buffer.",null,null],[6,"ElemOffset","","Offset of an attribute from the start of the buffer, in bytes",null,null],[6,"ElemStride","","Offset between attribute values, in bytes",null,null],[6,"InstanceRate","","The number of instances between each subsequent attribute value",null,null],[6,"AttributeDesc","","PSO vertex attribute descriptor",null,null],[6,"ConstantBufferDesc","","PSO constant buffer descriptor",null,null],[6,"ResourceViewDesc","","PSO shader resource view descriptor",null,null],[6,"UnorderedViewDesc","","PSO unordered access view descriptor",null,null],[6,"SamplerDesc","","PSO sampler descriptor",null,null],[6,"ColorTargetDesc","","PSO color target descriptor",null,null],[6,"DepthStencilDesc","","PSO depth-stencil target descriptor",null,null],[17,"MAX_VERTEX_BUFFERS","","Maximum number of vertex buffers used in a PSO definition.",null,null],[11,"clone","","",119,{"inputs":[{"name":"self"}],"output":{"name":"creationerror"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",119,{"inputs":[{"name":"self"},{"name":"creationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",119,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"colorinfo"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",108,null],[11,"eq","","",108,{"inputs":[{"name":"self"},{"name":"colorinfo"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"self"},{"name":"colorinfo"}],"output":{"name":"bool"}}],[11,"from","","",108,{"inputs":[{"name":"colormask"}],"output":{"name":"colorinfo"}}],[11,"from","","",108,{"inputs":[{"name":"blend"}],"output":{"name":"colorinfo"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"depthstencilinfo"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",109,null],[11,"eq","","",109,{"inputs":[{"name":"self"},{"name":"depthstencilinfo"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"self"},{"name":"depthstencilinfo"}],"output":{"name":"bool"}}],[11,"from","","",109,{"inputs":[{"name":"depth"}],"output":{"name":"depthstencilinfo"}}],[11,"from","","",109,{"inputs":[{"name":"stencil"}],"output":{"name":"depthstencilinfo"}}],[11,"from","","",109,null],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"element"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",110,null],[11,"eq","","",110,{"inputs":[{"name":"self"},{"name":"element"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"self"},{"name":"element"}],"output":{"name":"bool"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"vertexbufferdesc"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",111,null],[11,"eq","","",111,{"inputs":[{"name":"self"},{"name":"vertexbufferdesc"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"self"},{"name":"vertexbufferdesc"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"self"}],"output":{"name":"descriptor"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",112,null],[11,"eq","","",112,{"inputs":[{"name":"self"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"self"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"new","","Create a new empty PSO descriptor.",112,{"inputs":[{"name":"primitive"},{"name":"rasterizer"}],"output":{"name":"descriptor"}}],[11,"clone","","",113,{"inputs":[{"name":"self"}],"output":{"name":"vertexbufferset"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",113,null],[11,"eq","","",113,{"inputs":[{"name":"self"},{"name":"vertexbufferset"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"self"},{"name":"vertexbufferset"}],"output":{"name":"bool"}}],[11,"new","","Create an empty set",113,{"inputs":[],"output":{"name":"vertexbufferset"}}],[11,"clone","","",114,{"inputs":[{"name":"self"}],"output":{"name":"constantbufferparam"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",114,null],[11,"eq","","",114,{"inputs":[{"name":"self"},{"name":"constantbufferparam"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"self"},{"name":"constantbufferparam"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"self"}],"output":{"name":"resourceviewparam"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",115,null],[11,"eq","","",115,{"inputs":[{"name":"self"},{"name":"resourceviewparam"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"self"},{"name":"resourceviewparam"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"self"}],"output":{"name":"unorderedviewparam"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",116,null],[11,"eq","","",116,{"inputs":[{"name":"self"},{"name":"unorderedviewparam"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"self"},{"name":"unorderedviewparam"}],"output":{"name":"bool"}}],[11,"clone","","",117,{"inputs":[{"name":"self"}],"output":{"name":"samplerparam"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",117,null],[11,"eq","","",117,{"inputs":[{"name":"self"},{"name":"samplerparam"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"self"},{"name":"samplerparam"}],"output":{"name":"bool"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"pixeltargetset"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",118,null],[11,"eq","","",118,{"inputs":[{"name":"self"},{"name":"pixeltargetset"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"self"},{"name":"pixeltargetset"}],"output":{"name":"bool"}}],[11,"new","","Create an empty set",118,{"inputs":[],"output":{"name":"pixeltargetset"}}],[11,"add_color","","Add a color view to the specified slot",118,null],[11,"add_depth_stencil","","Add a depth or stencil view to the specified slot",118,null],[11,"get_view","","Get the rendering view (returns values > 0)",118,null],[0,"shade","gfx_core","Shader handling.",null,null],[3,"SamplerType","gfx_core::shade","A type of the sampler variable.",null,null],[12,"0","","",120,null],[12,"1","","",120,null],[3,"Usage","","Parameter usage flags.",null,null],[3,"AttributeVar","","Vertex information that a shader takes as input.",null,null],[12,"name","","Name of this attribute.",121,null],[12,"slot","","Slot of the vertex attribute.",121,null],[12,"base_type","","Type that this attribute is composed of.",121,null],[12,"container","","\"Scalarness\" of this attribute.",121,null],[3,"ConstVar","","A constant in the shader - a bit of data that doesn't vary",null,null],[12,"name","","Name of this constant.",122,null],[12,"location","","Location of this constant in the program. For constant buffer elements, it's the offset in bytes.",122,null],[12,"count","","Number of elements this constant represents.",122,null],[12,"base_type","","Type that this constant is composed of",122,null],[12,"container","","\"Scalarness\" of this constant.",122,null],[3,"ConstantBufferVar","","A constant buffer.",null,null],[12,"name","","Name of this constant buffer.",123,null],[12,"slot","","Slot of the constant buffer.",123,null],[12,"size","","Size (in bytes) of this buffer's data.",123,null],[12,"usage","","What program stage this buffer is used in.",123,null],[12,"elements","","List of individual elements in this buffer.",123,null],[3,"TextureVar","","Texture shader parameter.",null,null],[12,"name","","Name of this texture variable.",124,null],[12,"slot","","Slot of this texture variable.",124,null],[12,"base_type","","Base type for the texture.",124,null],[12,"ty","","Type of this texture.",124,null],[12,"usage","","What program stage this texture is used in.",124,null],[3,"UnorderedVar","","Unordered access shader parameter.",null,null],[12,"name","","Name of this unordered variable.",125,null],[12,"slot","","Slot of this unordered variable.",125,null],[12,"usage","","What program stage this UAV is used in.",125,null],[3,"SamplerVar","","Sampler shader parameter.",null,null],[12,"name","","Name of this sampler variable.",126,null],[12,"slot","","Slot of this sampler variable.",126,null],[12,"ty","","Type of this sampler.",126,null],[12,"usage","","What program stage this texture is used in.",126,null],[3,"OutputVar","","Target output variable.",null,null],[12,"name","","Name of this output variable.",127,null],[12,"slot","","Output color target index.",127,null],[12,"base_type","","Type of the output component.",127,null],[12,"container","","\"Scalarness\" of this output.",127,null],[3,"ProgramInfo","","Metadata about a program.",null,null],[12,"vertex_attributes","","Attributes in the program",128,null],[12,"globals","","Global constants in the program",128,null],[12,"constant_buffers","","Constant buffers in the program",128,null],[12,"textures","","Textures in the program",128,null],[12,"unordereds","","Unordered access resources in the program",128,null],[12,"samplers","","Samplers in the program",128,null],[12,"outputs","","Output targets in the program",128,null],[12,"output_depth","","A flag indicating that the pixel shader manually assigns the depth.",128,null],[12,"knows_outputs","","A hacky flag to make sure the clients know we are unable to actually get the output variable info",128,null],[3,"Program","","A program",null,null],[3,"CreateProgramError","","An error type for creating programs.",null,null],[4,"IsArray","","Whether the sampler samples an array texture.",null,null],[13,"Array","","",129,null],[13,"NoArray","","",129,null],[4,"IsComparison","","Whether the sampler compares the depth value upon sampling.",null,null],[13,"Compare","","",130,null],[13,"NoCompare","","",130,null],[4,"IsMultiSample","","Whether the sampler samples a multisample texture.",null,null],[13,"MultiSample","","",131,null],[13,"NoMultiSample","","",131,null],[4,"IsRect","","Whether the sampler samples a rectangle texture.",null,null],[13,"Rect","","",132,null],[13,"NoRect","","",132,null],[4,"MatrixFormat","","Whether the matrix is column or row major.",null,null],[13,"ColumnMajor","","",133,null],[13,"RowMajor","","",133,null],[4,"TextureType","","A type of the texture variable. This has to match the actual data we bind to the shader.",null,null],[13,"Buffer","","Sample from a buffer.",134,null],[13,"D1","","Sample from a 1D texture",134,null],[13,"D2","","Sample from a 2D texture",134,null],[13,"D3","","Sample from a 3D texture",134,null],[13,"Cube","","Sample from a cubemap.",134,null],[4,"BaseType","","Base type of this shader parameter.",null,null],[13,"I32","","",135,null],[13,"U32","","",135,null],[13,"F32","","",135,null],[13,"F64","","",135,null],[13,"Bool","","",135,null],[4,"ContainerType","","Number of components this parameter represents.",null,null],[13,"Single","","Scalar value",136,null],[13,"Vector","","A vector with `Dimension` components.",136,null],[13,"Matrix","","A matrix.",136,null],[4,"Stage","","Which program stage this shader represents.",null,null],[13,"Vertex","","",137,null],[13,"Hull","","",137,null],[13,"Domain","","",137,null],[13,"Geometry","","",137,null],[13,"Pixel","","",137,null],[4,"UniformValue","","A value that can be uploaded to the device as a uniform.",null,null],[13,"I32","","",138,null],[13,"F32","","",138,null],[13,"I32Vector2","","",138,null],[13,"I32Vector3","","",138,null],[13,"I32Vector4","","",138,null],[13,"F32Vector2","","",138,null],[13,"F32Vector3","","",138,null],[13,"F32Vector4","","",138,null],[13,"F32Matrix2","","",138,null],[13,"F32Matrix3","","",138,null],[13,"F32Matrix4","","",138,null],[4,"CompatibilityError","","Error type for trying to store a UniformValue in a ConstVar.",null,null],[13,"ErrorArraySize","","Array sizes differ between the value and the var (trying to upload a vec2 as a vec4, etc)",139,null],[13,"ErrorBaseType","","Base types differ between the value and the var (trying to upload a f32 as a u16, etc)",139,null],[13,"ErrorContainer","","Container-ness differs between the value and the var (trying to upload a scalar as a vec4, etc)",139,null],[4,"CreateShaderError","","An error type for creating shaders.",null,null],[13,"ModelNotSupported","","The device does not support the requested shader model.",140,null],[13,"StageNotSupported","","The device does not support the shader stage.",140,null],[13,"CompilationFailed","","The shader failed to compile.",140,null],[6,"Dimension","","Number of components in a container type (vectors/matrices)",null,null],[6,"Location","","Location of a parameter in the program.",null,null],[6,"ConstFormat","","Format of a shader constant.",null,null],[17,"STAGES","","A constant static array of all shader stages.",null,null],[17,"VERTEX","","Used by the vertex shader",null,null],[17,"GEOMETRY","","Used by the geometry shader",null,null],[17,"PIXEL","","Used by the pixel shader",null,null],[17,"HULL","","Used by the hull shader",null,null],[17,"DOMAIN","","Used by the pixel shader",null,null],[8,"BaseTyped","","A trait that statically links simple data types to base types of the shader constants.",null,null],[10,"get_base_type","","",141,{"inputs":[],"output":{"name":"basetype"}}],[8,"Formatted","","A trait that statically links simple data types to constant formats.",null,null],[10,"get_format","","Get the associated constant format.",142,{"inputs":[],"output":{"name":"constformat"}}],[11,"clone","","",129,{"inputs":[{"name":"self"}],"output":{"name":"isarray"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",129,null],[11,"eq","","",129,{"inputs":[{"name":"self"},{"name":"isarray"}],"output":{"name":"bool"}}],[11,"clone","","",130,{"inputs":[{"name":"self"}],"output":{"name":"iscomparison"}}],[11,"fmt","","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",130,null],[11,"eq","","",130,{"inputs":[{"name":"self"},{"name":"iscomparison"}],"output":{"name":"bool"}}],[11,"clone","","",131,{"inputs":[{"name":"self"}],"output":{"name":"ismultisample"}}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",131,null],[11,"eq","","",131,{"inputs":[{"name":"self"},{"name":"ismultisample"}],"output":{"name":"bool"}}],[11,"clone","","",132,{"inputs":[{"name":"self"}],"output":{"name":"isrect"}}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",132,null],[11,"eq","","",132,{"inputs":[{"name":"self"},{"name":"isrect"}],"output":{"name":"bool"}}],[11,"clone","","",133,{"inputs":[{"name":"self"}],"output":{"name":"matrixformat"}}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",133,null],[11,"eq","","",133,{"inputs":[{"name":"self"},{"name":"matrixformat"}],"output":{"name":"bool"}}],[11,"clone","","",134,{"inputs":[{"name":"self"}],"output":{"name":"texturetype"}}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",134,null],[11,"eq","","",134,{"inputs":[{"name":"self"},{"name":"texturetype"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"self"},{"name":"texturetype"}],"output":{"name":"bool"}}],[11,"can_sample","","Check if this texture can be used with a sampler.",134,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",120,{"inputs":[{"name":"self"}],"output":{"name":"samplertype"}}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",120,null],[11,"eq","","",120,{"inputs":[{"name":"self"},{"name":"samplertype"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"self"},{"name":"samplertype"}],"output":{"name":"bool"}}],[11,"clone","","",135,{"inputs":[{"name":"self"}],"output":{"name":"basetype"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",135,null],[11,"eq","","",135,{"inputs":[{"name":"self"},{"name":"basetype"}],"output":{"name":"bool"}}],[11,"clone","","",136,{"inputs":[{"name":"self"}],"output":{"name":"containertype"}}],[11,"fmt","","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",136,null],[11,"eq","","",136,{"inputs":[{"name":"self"},{"name":"containertype"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"self"},{"name":"containertype"}],"output":{"name":"bool"}}],[11,"clone","","",137,{"inputs":[{"name":"self"}],"output":{"name":"stage"}}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",137,null],[11,"eq","","",137,{"inputs":[{"name":"self"},{"name":"stage"}],"output":{"name":"bool"}}],[11,"clone","","",138,{"inputs":[{"name":"self"}],"output":{"name":"uniformvalue"}}],[11,"eq","","",138,{"inputs":[{"name":"self"},{"name":"uniformvalue"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"self"},{"name":"uniformvalue"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",138,{"inputs":[{"name":"self"},{"name":"uniformvalue"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",138,{"inputs":[{"name":"self"},{"name":"uniformvalue"}],"output":{"name":"bool"}}],[11,"le","","",138,{"inputs":[{"name":"self"},{"name":"uniformvalue"}],"output":{"name":"bool"}}],[11,"gt","","",138,{"inputs":[{"name":"self"},{"name":"uniformvalue"}],"output":{"name":"bool"}}],[11,"ge","","",138,{"inputs":[{"name":"self"},{"name":"uniformvalue"}],"output":{"name":"bool"}}],[11,"fmt","","",138,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"clone","","",143,{"inputs":[{"name":"self"}],"output":{"name":"usage"}}],[11,"partial_cmp","","",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"le","","",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"gt","","",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"ge","","",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"cmp","","",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"ordering"}}],[11,"hash","","",143,null],[11,"fmt","","",143,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",143,{"inputs":[],"output":{"name":"usage"}}],[11,"all","","Returns the set containing all flags.",143,{"inputs":[],"output":{"name":"usage"}}],[11,"bits","","Returns the raw value of the flags currently stored.",143,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",143,{"inputs":[{"name":"u8"}],"output":{"generics":["usage"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",143,{"inputs":[{"name":"u8"}],"output":{"name":"usage"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",143,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",143,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",143,{"inputs":[{"name":"self"},{"name":"usage"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"usage"}}],[11,"bitor_assign","","Adds the set of flags.",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"usage"}}],[11,"bitxor_assign","","Toggles the set of flags.",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"usage"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":{"name":"usage"}}],[11,"sub_assign","","Disables all flags enabled in the set.",143,{"inputs":[{"name":"self"},{"name":"usage"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",143,{"inputs":[{"name":"self"}],"output":{"name":"usage"}}],[11,"extend","","",143,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",143,{"inputs":[{"name":"t"}],"output":{"name":"usage"}}],[11,"from","","",143,{"inputs":[{"name":"stage"}],"output":{"name":"usage"}}],[11,"clone","","",121,{"inputs":[{"name":"self"}],"output":{"name":"attributevar"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",121,null],[11,"eq","","",121,{"inputs":[{"name":"self"},{"name":"attributevar"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"self"},{"name":"attributevar"}],"output":{"name":"bool"}}],[11,"clone","","",122,{"inputs":[{"name":"self"}],"output":{"name":"constvar"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",122,null],[11,"eq","","",122,{"inputs":[{"name":"self"},{"name":"constvar"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"self"},{"name":"constvar"}],"output":{"name":"bool"}}],[11,"clone","","",123,{"inputs":[{"name":"self"}],"output":{"name":"constantbuffervar"}}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",123,null],[11,"eq","","",123,{"inputs":[{"name":"self"},{"name":"constantbuffervar"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"self"},{"name":"constantbuffervar"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"self"}],"output":{"name":"texturevar"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",124,null],[11,"eq","","",124,{"inputs":[{"name":"self"},{"name":"texturevar"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"self"},{"name":"texturevar"}],"output":{"name":"bool"}}],[11,"clone","","",125,{"inputs":[{"name":"self"}],"output":{"name":"unorderedvar"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",125,null],[11,"eq","","",125,{"inputs":[{"name":"self"},{"name":"unorderedvar"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"self"},{"name":"unorderedvar"}],"output":{"name":"bool"}}],[11,"clone","","",126,{"inputs":[{"name":"self"}],"output":{"name":"samplervar"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",126,null],[11,"eq","","",126,{"inputs":[{"name":"self"},{"name":"samplervar"}],"output":{"name":"bool"}}],[11,"ne","","",126,{"inputs":[{"name":"self"},{"name":"samplervar"}],"output":{"name":"bool"}}],[11,"clone","","",127,{"inputs":[{"name":"self"}],"output":{"name":"outputvar"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",127,null],[11,"eq","","",127,{"inputs":[{"name":"self"},{"name":"outputvar"}],"output":{"name":"bool"}}],[11,"ne","","",127,{"inputs":[{"name":"self"},{"name":"outputvar"}],"output":{"name":"bool"}}],[11,"clone","","",128,{"inputs":[{"name":"self"}],"output":{"name":"programinfo"}}],[11,"fmt","","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",128,null],[11,"eq","","",128,{"inputs":[{"name":"self"},{"name":"programinfo"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"self"},{"name":"programinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",144,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_info","","Get program info",144,{"inputs":[{"name":"self"}],"output":{"name":"programinfo"}}],[11,"eq","","",144,{"inputs":[{"name":"self"},{"name":"program"}],"output":{"name":"bool"}}],[11,"hash","","",144,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",139,{"inputs":[{"name":"self"}],"output":{"name":"compatibilityerror"}}],[11,"fmt","","",139,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",139,{"inputs":[{"name":"self"},{"name":"compatibilityerror"}],"output":{"name":"bool"}}],[11,"fmt","","",139,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",139,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_compatible","","Whether a value is compatible with this variable. That is, whether the value can be stored in this variable.",122,{"inputs":[{"name":"self"},{"name":"uniformvalue"}],"output":{"generics":["compatibilityerror"],"name":"result"}}],[11,"clone","","",140,{"inputs":[{"name":"self"}],"output":{"name":"createshadererror"}}],[11,"fmt","","",140,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",140,{"inputs":[{"name":"self"},{"name":"createshadererror"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"self"},{"name":"createshadererror"}],"output":{"name":"bool"}}],[11,"fmt","","",140,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",140,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",145,{"inputs":[{"name":"self"}],"output":{"name":"createprogramerror"}}],[11,"fmt","","",145,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",145,{"inputs":[{"name":"self"},{"name":"createprogramerror"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"self"},{"name":"createprogramerror"}],"output":{"name":"bool"}}],[11,"fmt","","",145,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",145,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",145,{"inputs":[{"name":"s"}],"output":{"name":"createprogramerror"}}],[0,"texture","gfx_core","Texture creation and modification.",null,null],[6,"Layer","gfx_core::texture","A depth value, specifying which plane to select out of a 3D texture.",null,null],[6,"Level","","Mipmap level to select in a texture.",null,null],[3,"Raw","","Untyped texture",null,null],[3,"ImageInfoCommon","","Describes a subvolume of a texture, which image data can be uploaded into.",null,null],[12,"xoffset","","",146,null],[12,"yoffset","","",146,null],[12,"zoffset","","",146,null],[12,"width","","",146,null],[12,"height","","",146,null],[12,"depth","","",146,null],[12,"format","","Format of each texel.",146,null],[12,"mipmap","","Which mipmap to select.",146,null],[3,"Lod","","A wrapper for the LOD level of a texture.",null,null],[3,"PackedColor","","A wrapper for the 8bpp RGBA color, encoded as u32.",null,null],[12,"0","","",147,null],[3,"SamplerInfo","","Specifies how to sample from a texture.",null,null],[12,"filter","","Filter method to use.",148,null],[12,"wrap_mode","","Wrapping mode for each of the U, V, and W axis (S, T, and R in OpenGL speak).",148,null],[12,"lod_bias","","This bias is added to every computed mipmap level (N + lod_bias). For example, if it would select mipmap level 2 and lod_bias is 1, it will use mipmap level 3.",148,null],[12,"lod_range","","This range is used to clamp LOD level used for sampling.",148,null],[12,"comparison","","Comparison mode, used primary for a shadow map.",148,null],[12,"border","","Border color is used when one of the wrap modes is set to border.",148,null],[3,"Info","","Texture storage descriptor.",null,null],[12,"kind","","",149,null],[12,"levels","","",149,null],[12,"format","","",149,null],[12,"bind","","",149,null],[12,"usage","","",149,null],[3,"ResourceDesc","","Texture resource view descriptor.",null,null],[12,"channel","","",150,null],[12,"layer","","",150,null],[12,"min","","",150,null],[12,"max","","",150,null],[12,"swizzle","","",150,null],[3,"RenderDesc","","Texture render view descriptor.",null,null],[12,"channel","","",151,null],[12,"level","","",151,null],[12,"layer","","",151,null],[3,"DepthStencilFlags","","Depth-stencil read-only flags",null,null],[3,"DepthStencilDesc","","Texture depth-stencil view descriptor.",null,null],[12,"level","","",152,null],[12,"layer","","",152,null],[12,"flags","","",152,null],[4,"CreationError","","Pure texture object creation error.",null,null],[13,"Format","","Failed to map a given format to the device.",153,null],[13,"Kind","","The kind doesn't support a particular operation.",153,null],[13,"Samples","","Failed to map a given multisampled kind to the device.",153,null],[13,"Size","","Unsupported size in one of the dimensions.",153,null],[13,"Data","","The given data has a different size than the target texture slice.",153,null],[13,"Usage","","The mentioned usage mode is not supported",153,null],[4,"LayerError","","An error associated with selected texture layer.",null,null],[13,"NotExpected","","The source texture kind doesn't support array slices.",154,null],[13,"OutOfBounds","","Selected layer is outside of the provided range.",154,null],[4,"AaMode","","Describes the configuration of samples inside each texel.",null,null],[13,"Single","","No additional sample information",155,null],[13,"Multi","","MultiSampled Anti-Aliasing (MSAA)",155,null],[13,"Coverage","","Coverage Sampling Anti-Aliasing (CSAA/EQAA)",155,null],[4,"FilterMethod","","How to filter the texture when sampling. They correspond to increasing levels of quality, but also cost. They \"layer\" on top of each other: it is not possible to have bilinear filtering without mipmapping, for example.",null,null],[13,"Scale","","The dumbest filtering possible, nearest-neighbor interpolation.",156,null],[13,"Mipmap","","Add simple mipmapping.",156,null],[13,"Bilinear","","Sample multiple texels within a single mipmap level to increase quality.",156,null],[13,"Trilinear","","Sample multiple texels across two mipmap levels to increase quality.",156,null],[13,"Anisotropic","","Anisotropic filtering with a given \"max\", must be between 1 and 16, inclusive.",156,null],[4,"CubeFace","","The face of a cube texture to do an operation on.",null,null],[13,"PosX","","",157,null],[13,"NegX","","",157,null],[13,"PosY","","",157,null],[13,"NegY","","",157,null],[13,"PosZ","","",157,null],[13,"NegZ","","",157,null],[4,"Kind","","Specifies the kind of a texture storage to be allocated.",null,null],[13,"D1","","A single row of texels.",158,null],[13,"D1Array","","An array of rows of texels. Equivalent to Texture2D except that texels in a different row are not sampled.",158,null],[13,"D2","","A traditional 2D texture, with rows arranged contiguously.",158,null],[13,"D2Array","","An array of 2D textures. Equivalent to Texture3D except that texels in a different depth level are not sampled.",158,null],[13,"D3","","A volume texture, with each 2D layer arranged contiguously.",158,null],[13,"Cube","","A set of 6 2D textures, one for each face of a cube.",158,null],[13,"CubeArray","","An array of Cube textures.",158,null],[4,"WrapMode","","Specifies how texture coordinates outside the range `[0, 1]` are handled.",null,null],[13,"Tile","","Tile the texture. That is, sample the coordinate modulo `1.0`. This is the default.",159,null],[13,"Mirror","","Mirror the texture. Like tile, but uses abs(coord) before the modulo.",159,null],[13,"Clamp","","Clamp the texture to the value at `0.0` or `1.0` respectively.",159,null],[13,"Border","","Use border color.",159,null],[6,"Size","","Dimension size",null,null],[6,"Bits","","Number of bits per component",null,null],[6,"NumSamples","","Number of MSAA samples",null,null],[6,"NumFragments","","Number of EQAA fragments",null,null],[6,"Dimensions","","Dimensions: width, height, depth, and samples.",null,null],[6,"RawImageInfo","","New raw image info based on the universal format spec.",null,null],[6,"NewImageInfo","","New image info based on the universal format spec. The format is suppsed to come from compile-time information as opposed to run-time enum values.",null,null],[17,"MAX_LEVEL","","Maximum accessible mipmap level of a texture.",null,null],[17,"CUBE_FACES","","A constant array of cube faces in the order they map to the hardware.",null,null],[17,"RO_DEPTH","","Depth is read-only in the view.",null,null],[17,"RO_STENCIL","","Stencil is read-only in the view.",null,null],[17,"RO_DEPTH_STENCIL","","Both depth and stencil are read-only.",null,null],[11,"fmt","","",160,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_info","","Get texture descriptor",160,{"inputs":[{"name":"self"}],"output":{"name":"info"}}],[11,"eq","","",160,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",160,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",153,{"inputs":[{"name":"self"}],"output":{"name":"creationerror"}}],[11,"fmt","","",153,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",153,{"inputs":[{"name":"self"},{"name":"creationerror"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"self"},{"name":"creationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",153,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",153,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",154,{"inputs":[{"name":"self"}],"output":{"name":"layererror"}}],[11,"fmt","","",154,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",154,null],[11,"eq","","",154,{"inputs":[{"name":"self"},{"name":"layererror"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"self"},{"name":"layererror"}],"output":{"name":"bool"}}],[11,"fmt","","",154,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",154,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",155,{"inputs":[{"name":"self"}],"output":{"name":"aamode"}}],[11,"fmt","","",155,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",155,null],[11,"cmp","","",155,{"inputs":[{"name":"self"},{"name":"aamode"}],"output":{"name":"ordering"}}],[11,"eq","","",155,{"inputs":[{"name":"self"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"self"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",155,{"inputs":[{"name":"self"},{"name":"aamode"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",155,{"inputs":[{"name":"self"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"le","","",155,{"inputs":[{"name":"self"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"gt","","",155,{"inputs":[{"name":"self"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"ge","","",155,{"inputs":[{"name":"self"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"from","","",155,{"inputs":[{"name":"numsamples"}],"output":{"name":"aamode"}}],[11,"get_num_fragments","","Return the number of actual data fragments stored per texel.",155,{"inputs":[{"name":"self"}],"output":{"name":"numfragments"}}],[11,"needs_resolve","","Return true if the surface has to be resolved before sampling.",155,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",156,{"inputs":[{"name":"self"}],"output":{"name":"filtermethod"}}],[11,"fmt","","",156,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",156,null],[11,"cmp","","",156,{"inputs":[{"name":"self"},{"name":"filtermethod"}],"output":{"name":"ordering"}}],[11,"eq","","",156,{"inputs":[{"name":"self"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"self"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",156,{"inputs":[{"name":"self"},{"name":"filtermethod"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",156,{"inputs":[{"name":"self"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"le","","",156,{"inputs":[{"name":"self"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"gt","","",156,{"inputs":[{"name":"self"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"ge","","",156,{"inputs":[{"name":"self"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"clone","","",157,{"inputs":[{"name":"self"}],"output":{"name":"cubeface"}}],[11,"fmt","","",157,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",157,null],[11,"cmp","","",157,{"inputs":[{"name":"self"},{"name":"cubeface"}],"output":{"name":"ordering"}}],[11,"eq","","",157,{"inputs":[{"name":"self"},{"name":"cubeface"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",157,{"inputs":[{"name":"self"},{"name":"cubeface"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",158,{"inputs":[{"name":"self"}],"output":{"name":"kind"}}],[11,"fmt","","",158,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",158,null],[11,"cmp","","",158,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"ordering"}}],[11,"eq","","",158,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"ne","","",158,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",158,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",158,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"le","","",158,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"gt","","",158,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"ge","","",158,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"get_dimensions","","Get texture dimensions, with 0 values where not applicable.",158,{"inputs":[{"name":"self"}],"output":{"name":"dimensions"}}],[11,"get_level_dimensions","","Get the dimensionality of a particular mipmap level.",158,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"dimensions"}}],[11,"get_num_levels","","Count the number of mipmap levels.",158,{"inputs":[{"name":"self"}],"output":{"name":"level"}}],[11,"get_num_slices","","Return the number of slices for an array, or None for non-arrays.",158,{"inputs":[{"name":"self"}],"output":{"generics":["layer"],"name":"option"}}],[11,"is_cube","","Check if it's one of the cube kinds.",158,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"self"}],"output":{"name":"imageinfocommon"}}],[11,"fmt","","",146,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",146,null],[11,"cmp","","",146,{"inputs":[{"name":"self"},{"name":"imageinfocommon"}],"output":{"name":"ordering"}}],[11,"eq","","",146,{"inputs":[{"name":"self"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"self"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",146,{"inputs":[{"name":"self"},{"name":"imageinfocommon"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",146,{"inputs":[{"name":"self"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"le","","",146,{"inputs":[{"name":"self"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"gt","","",146,{"inputs":[{"name":"self"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"ge","","",146,{"inputs":[{"name":"self"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"get_texel_count","","Get the total number of texels.",146,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"convert","","Convert into a differently typed format.",146,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"imageinfocommon"}}],[11,"is_inside","","Check if it fits inside given dimensions.",146,{"inputs":[{"name":"self"},{"name":"dimensions"}],"output":{"name":"bool"}}],[11,"get_byte_count","","Get the total number of bytes.",161,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",159,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[11,"fmt","","",159,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",159,null],[11,"cmp","","",159,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":{"name":"ordering"}}],[11,"eq","","",159,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",159,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",162,{"inputs":[{"name":"self"}],"output":{"name":"lod"}}],[11,"fmt","","",162,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",162,null],[11,"eq","","",162,{"inputs":[{"name":"self"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"self"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",162,{"inputs":[{"name":"self"},{"name":"lod"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",162,{"inputs":[{"name":"self"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"le","","",162,{"inputs":[{"name":"self"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"gt","","",162,{"inputs":[{"name":"self"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"ge","","",162,{"inputs":[{"name":"self"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"from","","",162,{"inputs":[{"name":"f32"}],"output":{"name":"lod"}}],[11,"into","","",162,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clone","","",147,{"inputs":[{"name":"self"}],"output":{"name":"packedcolor"}}],[11,"fmt","","",147,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",147,null],[11,"eq","","",147,{"inputs":[{"name":"self"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"self"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",147,{"inputs":[{"name":"self"},{"name":"packedcolor"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",147,{"inputs":[{"name":"self"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"le","","",147,{"inputs":[{"name":"self"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"gt","","",147,{"inputs":[{"name":"self"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"ge","","",147,{"inputs":[{"name":"self"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"from","","",147,null],[11,"into","","",147,null],[11,"clone","","",148,{"inputs":[{"name":"self"}],"output":{"name":"samplerinfo"}}],[11,"fmt","","",148,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",148,null],[11,"eq","","",148,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",148,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",148,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"le","","",148,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"gt","","",148,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"ge","","",148,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"new","","Create a new sampler description with a given filter method and wrapping mode, using no LOD modifications.",148,{"inputs":[{"name":"filtermethod"},{"name":"wrapmode"}],"output":{"name":"samplerinfo"}}],[11,"clone","","",149,{"inputs":[{"name":"self"}],"output":{"name":"info"}}],[11,"fmt","","",149,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",149,null],[11,"cmp","","",149,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"ordering"}}],[11,"eq","","",149,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",149,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",149,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"le","","",149,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"gt","","",149,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"ge","","",149,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"to_image_info","","Get image info for a given mip.",149,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"newimageinfo"}}],[11,"to_raw_image_info","","Get the raw image info for a given mip and a channel type.",149,{"inputs":[{"name":"self"},{"name":"channeltype"},{"name":"level"}],"output":{"name":"rawimageinfo"}}],[11,"clone","","",150,{"inputs":[{"name":"self"}],"output":{"name":"resourcedesc"}}],[11,"fmt","","",150,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",150,null],[11,"cmp","","",150,{"inputs":[{"name":"self"},{"name":"resourcedesc"}],"output":{"name":"ordering"}}],[11,"eq","","",150,{"inputs":[{"name":"self"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"self"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",150,{"inputs":[{"name":"self"},{"name":"resourcedesc"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",150,{"inputs":[{"name":"self"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"le","","",150,{"inputs":[{"name":"self"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"gt","","",150,{"inputs":[{"name":"self"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"ge","","",150,{"inputs":[{"name":"self"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"self"}],"output":{"name":"renderdesc"}}],[11,"fmt","","",151,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",151,null],[11,"cmp","","",151,{"inputs":[{"name":"self"},{"name":"renderdesc"}],"output":{"name":"ordering"}}],[11,"eq","","",151,{"inputs":[{"name":"self"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"self"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",151,{"inputs":[{"name":"self"},{"name":"renderdesc"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",151,{"inputs":[{"name":"self"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"le","","",151,{"inputs":[{"name":"self"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"gt","","",151,{"inputs":[{"name":"self"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"ge","","",151,{"inputs":[{"name":"self"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"eq","","",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"clone","","",163,{"inputs":[{"name":"self"}],"output":{"name":"depthstencilflags"}}],[11,"partial_cmp","","",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"le","","",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"gt","","",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"ge","","",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"cmp","","",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"ordering"}}],[11,"hash","","",163,null],[11,"fmt","","",163,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",163,{"inputs":[],"output":{"name":"depthstencilflags"}}],[11,"all","","Returns the set containing all flags.",163,{"inputs":[],"output":{"name":"depthstencilflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",163,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",163,{"inputs":[{"name":"u8"}],"output":{"generics":["depthstencilflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",163,{"inputs":[{"name":"u8"}],"output":{"name":"depthstencilflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",163,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",163,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"bitor_assign","","Adds the set of flags.",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",163,{"inputs":[{"name":"self"},{"name":"depthstencilflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",163,{"inputs":[{"name":"self"}],"output":{"name":"depthstencilflags"}}],[11,"extend","","",163,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",163,{"inputs":[{"name":"t"}],"output":{"name":"depthstencilflags"}}],[11,"clone","","",152,{"inputs":[{"name":"self"}],"output":{"name":"depthstencildesc"}}],[11,"fmt","","",152,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",152,null],[11,"cmp","","",152,{"inputs":[{"name":"self"},{"name":"depthstencildesc"}],"output":{"name":"ordering"}}],[11,"eq","","",152,{"inputs":[{"name":"self"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"self"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",152,{"inputs":[{"name":"self"},{"name":"depthstencildesc"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",152,{"inputs":[{"name":"self"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"le","","",152,{"inputs":[{"name":"self"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"gt","","",152,{"inputs":[{"name":"self"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"ge","","",152,{"inputs":[{"name":"self"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"from","","",152,{"inputs":[{"name":"renderdesc"}],"output":{"name":"depthstencildesc"}}],[6,"VertexCount","gfx_core","Draw vertex count.",null,null],[6,"InstanceCount","","Draw number of instances",null,null],[6,"PatchSize","","Number of vertices in a patch",null,null],[6,"AttributeSlot","","Slot for an attribute.",null,null],[6,"ConstantBufferSlot","","Slot for a constant buffer object.",null,null],[6,"ResourceViewSlot","","Slot for a shader resource view.",null,null],[6,"UnorderedViewSlot","","Slot for an unordered access object.",null,null],[6,"ColorSlot","","Slot for an active color buffer.",null,null],[6,"SamplerSlot","","Slot for a sampler.",null,null],[6,"SubmissionResult","","",null,null],[17,"MAX_VERTEX_ATTRIBUTES","","Compile-time maximum number of vertex attributes.",null,null],[17,"MAX_COLOR_TARGETS","","Compile-time maximum number of color targets.",null,null],[17,"MAX_CONSTANT_BUFFERS","","Compile-time maximum number of constant buffers.",null,null],[17,"MAX_RESOURCE_VIEWS","","Compile-time maximum number of shader resource views (SRV).",null,null],[17,"MAX_UNORDERED_VIEWS","","Compile-time maximum number of unordered access views (UAV).",null,null],[17,"MAX_SAMPLERS","","Compile-time maximum number of samplers.",null,null],[8,"Resources","","Different types of a specific API. ",null,null],[16,"Buffer","","",164,null],[16,"Shader","","",164,null],[16,"Program","","",164,null],[16,"PipelineStateObject","","",164,null],[16,"Texture","","",164,null],[16,"ShaderResourceView","","",164,null],[16,"UnorderedAccessView","","",164,null],[16,"RenderTargetView","","",164,null],[16,"DepthStencilView","","",164,null],[16,"Sampler","","",164,null],[16,"Fence","","",164,null],[16,"Mapping","","",164,null],[8,"Device","","A `Device` is responsible for submitting `CommandBuffer`s to the GPU. ",null,null],[16,"Resources","","Associated `Resources` type.",165,null],[16,"CommandBuffer","","Associated `CommandBuffer` type. Every `Device` type can only work with one `CommandBuffer` type.",165,null],[10,"get_capabilities","","Returns the capabilities of this `Ðevice`.",165,{"inputs":[{"name":"self"}],"output":{"name":"capabilities"}}],[10,"pin_submitted_resources","","Pin everything from this handle manager to live for a frame.",165,{"inputs":[{"name":"self"},{"name":"manager"}],"output":null}],[10,"submit","","Submits a `CommandBuffer` to the GPU for execution.",165,null],[10,"fenced_submit","","Submits a `CommandBuffer` to the GPU for execution. returns a fence that is signaled after the GPU has executed all commands",165,null],[10,"wait_fence","","Stalls the current thread until the fence is satisfied",165,{"inputs":[{"name":"self"},{"name":"fence"}],"output":null}],[10,"cleanup","","Cleanup unused resources. This should be called between frames. ",165,{"inputs":[{"name":"self"}],"output":null}],[8,"Adapter","","Represents a physical or virtual device, which is capable of running the backend.",null,null],[16,"CommandQueue","","Associated `CommandQueue` type.",166,null],[16,"Device","","Associated `Device` type.",166,null],[16,"QueueFamily","","Associated `QueueFamily` type.",166,null],[10,"enumerate_adapters","","Enumerate all available adapters supporting this backend ",166,{"inputs":[],"output":{"name":"vec"}}],[10,"open","","Create a new device and command queues.",166,null],[10,"get_info","","Get the `AdapterInfo` for this adapater.",166,{"inputs":[{"name":"self"}],"output":{"name":"adapterinfo"}}],[10,"get_queue_families","","Return the supported queue families for this adapter.",166,null],[8,"QueueFamily","","`QueueFamily` denotes a group of command queues provided by the backend with the same properties/type.",null,null],[16,"Surface","","Associated `Surface` type.",167,null],[10,"supports_present","","Check if the queue family supports presentation to a surface",167,null],[10,"num_queues","","Return the number of available queues of this family",167,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[8,"CommandQueue","","Dummy trait for command queues. CommandBuffers will be later submitted to command queues instead of the device.",null,null],[8,"Surface","","A `Surface` abstracts the surface of a native window, which will be presented",null,null],[16,"CommandQueue","","Associated `CommandQueue` type.",168,null],[16,"SwapChain","","Associated `SwapChain` type.",168,null],[16,"Window","","Associated native `Window` type.",168,null],[10,"from_window","","Create a new surface from a native window.",168,null],[10,"build_swapchain","","Create a new swapchain from the current surface with an associated present queue.",168,null],[8,"SwapChain","","The `SwapChain` is the backend representation of the surface. It consists of multiple buffers, which will be presented on the surface.",null,null],[10,"acquire_frame","","Acquire a new frame for rendering. This needs to be called before presenting.",169,{"inputs":[{"name":"self"}],"output":{"name":"frame"}}],[10,"present","","Present one acquired frame in FIFO order.",169,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",170,{"inputs":[{"name":"self"}],"output":{"name":"vertexshader"}}],[11,"fmt","","",170,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",170,null],[11,"eq","","",170,{"inputs":[{"name":"self"},{"name":"vertexshader"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"self"},{"name":"vertexshader"}],"output":{"name":"bool"}}],[11,"reference","","",170,null],[11,"clone","","",171,{"inputs":[{"name":"self"}],"output":{"name":"hullshader"}}],[11,"fmt","","",171,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",171,null],[11,"eq","","",171,{"inputs":[{"name":"self"},{"name":"hullshader"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"self"},{"name":"hullshader"}],"output":{"name":"bool"}}],[11,"reference","","",171,null],[11,"clone","","",172,{"inputs":[{"name":"self"}],"output":{"name":"domainshader"}}],[11,"fmt","","",172,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",172,null],[11,"eq","","",172,{"inputs":[{"name":"self"},{"name":"domainshader"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"self"},{"name":"domainshader"}],"output":{"name":"bool"}}],[11,"reference","","",172,null],[11,"clone","","",173,{"inputs":[{"name":"self"}],"output":{"name":"geometryshader"}}],[11,"fmt","","",173,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",173,null],[11,"eq","","",173,{"inputs":[{"name":"self"},{"name":"geometryshader"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"self"},{"name":"geometryshader"}],"output":{"name":"bool"}}],[11,"reference","","",173,null],[11,"clone","","",174,{"inputs":[{"name":"self"}],"output":{"name":"pixelshader"}}],[11,"fmt","","",174,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",174,null],[11,"eq","","",174,{"inputs":[{"name":"self"},{"name":"pixelshader"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"self"},{"name":"pixelshader"}],"output":{"name":"bool"}}],[11,"reference","","",174,null],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"shaderset"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",20,null],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"shaderset"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"shaderset"}],"output":{"name":"bool"}}],[11,"get_usage","","Return the aggregated stage usage for the set.",20,{"inputs":[{"name":"self"}],"output":{"name":"usage"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"capabilities"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"capabilities"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"capabilities"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"primitive"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",21,null],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"indextype"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",22,null],[11,"cmp","","",22,{"inputs":[{"name":"self"},{"name":"indextype"}],"output":{"name":"ordering"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"indextype"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",22,{"inputs":[{"name":"self"},{"name":"indextype"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"submissionerror"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"submissionerror"}],"output":{"name":"bool"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",23,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"adapterinfo"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"adapterinfo"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"self"},{"name":"adapterinfo"}],"output":{"name":"bool"}}],[11,"clone","","",175,{"inputs":[{"name":"self"}],"output":{"name":"frame"}}],[11,"fmt","","",175,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","gfx_core::state","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx_core::target","",176,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx_core::state","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",177,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx_core::target","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","gfx_core::state","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",178,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"blend"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"color"}}],[11,"default","","",16,{"inputs":[],"output":{"name":"refvalues"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"depth"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"blendchannel"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"stencil"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"stencilside"}}],[11,"sub","","Returns the set difference of the two sets of flags.",177,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"sub","gfx_core::target","Returns the set difference of the two sets of flags.",176,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"from_iter","","",176,{"inputs":[{"name":"t"}],"output":{"name":"mirror"}}],[11,"from_iter","gfx_core::state","",177,{"inputs":[{"name":"t"}],"output":{"name":"colormask"}}],[11,"bitand_assign","gfx_core::target","Disables all flags disabled in the set.",176,null],[11,"bitand_assign","gfx_core::state","Disables all flags disabled in the set.",177,null],[11,"partial_cmp","","",12,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",178,{"inputs":[{"name":"self"},{"name":"multisample"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx_core::target","",17,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",176,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",176,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"le","","",176,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"gt","","",176,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ge","","",176,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"partial_cmp","gfx_core::state","",8,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"self"},{"name":"blendvalue"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"frontface"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"comparison"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",177,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",177,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"le","","",177,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"gt","","",177,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ge","","",177,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"stencilop"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"self"},{"name":"equation"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"cullface"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"eq","gfx_core::target","",176,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"eq","gfx_core::state","",0,{"inputs":[{"name":"self"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"eq","","",178,{"inputs":[{"name":"self"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"eq","gfx_core::target","",17,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"eq","gfx_core::state","",177,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"self"},{"name":"stencil"}],"output":{"name":"ordering"}}],[11,"cmp","gfx_core::target","",176,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"ordering"}}],[11,"cmp","gfx_core::state","",6,{"inputs":[{"name":"self"},{"name":"stencilop"}],"output":{"name":"ordering"}}],[11,"cmp","","",13,{"inputs":[{"name":"self"},{"name":"blendchannel"}],"output":{"name":"ordering"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"frontface"}],"output":{"name":"ordering"}}],[11,"cmp","","",2,{"inputs":[{"name":"self"},{"name":"cullface"}],"output":{"name":"ordering"}}],[11,"cmp","","",178,{"inputs":[{"name":"self"},{"name":"multisample"}],"output":{"name":"ordering"}}],[11,"cmp","","",7,{"inputs":[{"name":"self"},{"name":"stencilside"}],"output":{"name":"ordering"}}],[11,"cmp","","",5,{"inputs":[{"name":"self"},{"name":"comparison"}],"output":{"name":"ordering"}}],[11,"cmp","","",11,{"inputs":[{"name":"self"},{"name":"blendvalue"}],"output":{"name":"ordering"}}],[11,"cmp","","",9,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"ordering"}}],[11,"cmp","","",12,{"inputs":[{"name":"self"},{"name":"factor"}],"output":{"name":"ordering"}}],[11,"cmp","","",177,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"ordering"}}],[11,"cmp","","",10,{"inputs":[{"name":"self"},{"name":"equation"}],"output":{"name":"ordering"}}],[11,"not","","Returns the complement of this set of flags.",177,{"inputs":[{"name":"self"}],"output":{"name":"colormask"}}],[11,"not","gfx_core::target","Returns the complement of this set of flags.",176,{"inputs":[{"name":"self"}],"output":{"name":"mirror"}}],[11,"bitxor_assign","gfx_core::state","Toggles the set of flags.",177,null],[11,"bitxor_assign","gfx_core::target","Toggles the set of flags.",176,null],[11,"bitor_assign","gfx_core::state","Adds the set of flags.",177,null],[11,"bitor_assign","gfx_core::target","Adds the set of flags.",176,null],[11,"deserialize","gfx_core::state","",0,{"inputs":[{"name":"__d"}],"output":{"generics":["frontface"],"name":"result"}}],[11,"deserialize","","",12,{"inputs":[{"name":"__d"}],"output":{"generics":["factor"],"name":"result"}}],[11,"deserialize","","",3,{"inputs":[{"name":"__d"}],"output":{"generics":["rastermethod"],"name":"result"}}],[11,"deserialize","","",7,{"inputs":[{"name":"__d"}],"output":{"generics":["stencilside"],"name":"result"}}],[11,"deserialize","","",13,{"inputs":[{"name":"__d"}],"output":{"generics":["blendchannel"],"name":"result"}}],[11,"deserialize","","",177,{"inputs":[{"name":"__d"}],"output":{"generics":["colormask"],"name":"result"}}],[11,"deserialize","","",5,{"inputs":[{"name":"__d"}],"output":{"generics":["comparison"],"name":"result"}}],[11,"deserialize","","",11,{"inputs":[{"name":"__d"}],"output":{"generics":["blendvalue"],"name":"result"}}],[11,"deserialize","","",2,{"inputs":[{"name":"__d"}],"output":{"generics":["cullface"],"name":"result"}}],[11,"deserialize","","",14,{"inputs":[{"name":"__d"}],"output":{"generics":["blend"],"name":"result"}}],[11,"deserialize","","",9,{"inputs":[{"name":"__d"}],"output":{"generics":["depth"],"name":"result"}}],[11,"deserialize","","",6,{"inputs":[{"name":"__d"}],"output":{"generics":["stencilop"],"name":"result"}}],[11,"deserialize","","",10,{"inputs":[{"name":"__d"}],"output":{"generics":["equation"],"name":"result"}}],[11,"deserialize","gfx_core::target","",17,{"inputs":[{"name":"__d"}],"output":{"generics":["rect"],"name":"result"}}],[11,"deserialize","gfx_core::state","",8,{"inputs":[{"name":"__d"}],"output":{"generics":["stencil"],"name":"result"}}],[11,"deserialize","","",16,{"inputs":[{"name":"__d"}],"output":{"generics":["refvalues"],"name":"result"}}],[11,"deserialize","","",178,{"inputs":[{"name":"__d"}],"output":{"generics":["multisample"],"name":"result"}}],[11,"deserialize","","",1,{"inputs":[{"name":"__d"}],"output":{"generics":["offset"],"name":"result"}}],[11,"deserialize","gfx_core::target","",176,{"inputs":[{"name":"__d"}],"output":{"generics":["mirror"],"name":"result"}}],[11,"deserialize","gfx_core::state","",4,{"inputs":[{"name":"__d"}],"output":{"generics":["rasterizer"],"name":"result"}}],[11,"deserialize","","",15,{"inputs":[{"name":"__d"}],"output":{"generics":["color"],"name":"result"}}],[11,"sub_assign","","Disables all flags enabled in the set.",177,null],[11,"sub_assign","gfx_core::target","Disables all flags enabled in the set.",176,null],[11,"bitor","","Returns the union of the two sets of flags.",176,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitor","gfx_core::state","Returns the union of the two sets of flags.",177,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"hash","","",0,null],[11,"hash","","",15,null],[11,"hash","gfx_core::target","",176,null],[11,"hash","gfx_core::state","",14,null],[11,"hash","","",1,null],[11,"hash","","",7,null],[11,"hash","gfx_core::target","",17,null],[11,"hash","gfx_core::state","",11,null],[11,"hash","","",6,null],[11,"hash","","",13,null],[11,"hash","","",3,null],[11,"hash","","",9,null],[11,"hash","","",2,null],[11,"hash","","",5,null],[11,"hash","","",10,null],[11,"hash","","",177,null],[11,"hash","","",8,null],[11,"hash","","",178,null],[11,"hash","","",4,null],[11,"hash","","",12,null],[11,"extend","gfx_core::target","",176,null],[11,"extend","gfx_core::state","",177,null],[11,"serialize","gfx_core::target","",17,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx_core::state","",3,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",15,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",10,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",5,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",13,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",7,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",12,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",11,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",9,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",16,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",6,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",177,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",178,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",8,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",4,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",14,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",1,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","","",0,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx_core::target","",176,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"serialize","gfx_core::state","",2,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"bitand","gfx_core::target","Returns the intersection between the two sets of flags.",176,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitand","gfx_core::state","Returns the intersection between the two sets of flags.",177,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"rastermethod"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"blendchannel"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rasterizer"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"offset"}}],[11,"clone","gfx_core::target","",176,{"inputs":[{"name":"self"}],"output":{"name":"mirror"}}],[11,"clone","gfx_core::state","",9,{"inputs":[{"name":"self"}],"output":{"name":"depth"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"factor"}}],[11,"clone","gfx_core::target","",17,{"inputs":[{"name":"self"}],"output":{"name":"rect"}}],[11,"clone","gfx_core::state","",16,{"inputs":[{"name":"self"}],"output":{"name":"refvalues"}}],[11,"clone","","",177,{"inputs":[{"name":"self"}],"output":{"name":"colormask"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"stencil"}}],[11,"clone","","",178,{"inputs":[{"name":"self"}],"output":{"name":"multisample"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"stencilop"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"comparison"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"equation"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"blendvalue"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"frontface"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"blend"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"cullface"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"stencilside"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",177,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitxor","gfx_core::target","Returns the left flags, but with all the right flags toggled.",176,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"new_fill","gfx_core::state","Create a new filling rasterizer.",4,{"inputs":[],"output":{"name":"rasterizer"}}],[11,"with_cull_back","","Add back face culling.",4,{"inputs":[{"name":"self"}],"output":{"name":"rasterizer"}}],[11,"with_offset","","Add polygon offset.",4,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"i32"}],"output":{"name":"rasterizer"}}],[11,"new","","Create a new stencil state with a given function.",8,null],[11,"new","","Create a new blend state with a given equation.",14,{"inputs":[{"name":"equation"},{"name":"factor"},{"name":"factor"}],"output":{"name":"blend"}}],[11,"empty","","Returns an empty set of flags.",177,{"inputs":[],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",177,{"inputs":[],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",177,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",177,{"inputs":[{"name":"u8"}],"output":{"generics":["colormask"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",177,{"inputs":[{"name":"u8"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",177,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",177,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",177,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",177,{"inputs":[{"name":"self"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",177,null],[11,"remove","","Removes the specified flags in-place.",177,null],[11,"toggle","","Toggles the specified flags in-place.",177,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",177,null],[11,"empty","gfx_core::target","Returns an empty set of flags.",176,{"inputs":[],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",176,{"inputs":[],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",176,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",176,{"inputs":[{"name":"u8"}],"output":{"generics":["mirror"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",176,{"inputs":[{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",176,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",176,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",176,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",176,{"inputs":[{"name":"self"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",176,null],[11,"remove","","Removes the specified flags in-place.",176,null],[11,"toggle","","Toggles the specified flags in-place.",176,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",176,null]],"paths":[[4,"FrontFace"],[3,"Offset"],[4,"CullFace"],[4,"RasterMethod"],[3,"Rasterizer"],[4,"Comparison"],[4,"StencilOp"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"BlendChannel"],[3,"Blend"],[3,"Color"],[3,"RefValues"],[3,"Rect"],[3,"Capabilities"],[3,"AdapterInfo"],[4,"ShaderSet"],[4,"Primitive"],[4,"IndexType"],[4,"SubmissionError"],[3,"Info"],[4,"Role"],[4,"CreationError"],[3,"Raw"],[4,"ClearColor"],[8,"Buffer"],[3,"AccessInfo"],[3,"AccessGuard"],[3,"AccessGuardBuffers"],[3,"AccessGuardBuffersChain"],[4,"DummyResources"],[3,"DummyFence"],[3,"DummyMapping"],[3,"DummyDevice"],[3,"DummyCommandBuffer"],[4,"ResourceViewError"],[4,"TargetViewError"],[4,"CombinedError"],[8,"Factory"],[3,"Swizzle"],[3,"Format"],[3,"U8Norm"],[3,"I8Norm"],[3,"U16Norm"],[3,"I16Norm"],[3,"F16"],[4,"ChannelType"],[4,"SurfaceType"],[4,"ChannelSource"],[8,"SurfaceTyped"],[8,"ChannelTyped"],[8,"Formatted"],[4,"Int"],[4,"Uint"],[4,"Inorm"],[4,"Unorm"],[4,"Float"],[4,"Srgb"],[4,"R4_G4"],[4,"R4_G4_B4_A4"],[4,"R5_G5_B5_A1"],[4,"R5_G6_B5"],[4,"R8"],[4,"R8_G8"],[4,"R8_G8_B8_A8"],[4,"R10_G10_B10_A2"],[4,"R11_G11_B10"],[4,"R16"],[4,"R16_G16"],[4,"R16_G16_B16"],[4,"R16_G16_B16_A16"],[4,"R32"],[4,"R32_G32"],[4,"R32_G32_B32"],[4,"R32_G32_B32_A32"],[4,"B8_G8_R8_A8"],[4,"D16"],[4,"D24"],[4,"D24_S8"],[4,"D32"],[3,"RawBuffer"],[3,"Buffer"],[3,"Shader"],[3,"Program"],[3,"RawPipelineState"],[3,"RawTexture"],[3,"Texture"],[3,"RawShaderResourceView"],[3,"ShaderResourceView"],[3,"RawUnorderedAccessView"],[3,"UnorderedAccessView"],[3,"RawRenderTargetView"],[3,"RawDepthStencilView"],[3,"RenderTargetView"],[3,"DepthStencilView"],[3,"Sampler"],[3,"Fence"],[3,"Manager"],[4,"Error"],[3,"Reader"],[3,"Writer"],[4,"Usage"],[3,"Access"],[3,"Bind"],[3,"ColorInfo"],[3,"DepthStencilInfo"],[3,"Element"],[3,"VertexBufferDesc"],[3,"Descriptor"],[3,"VertexBufferSet"],[3,"ConstantBufferParam"],[3,"ResourceViewParam"],[3,"UnorderedViewParam"],[3,"SamplerParam"],[3,"PixelTargetSet"],[3,"CreationError"],[3,"SamplerType"],[3,"AttributeVar"],[3,"ConstVar"],[3,"ConstantBufferVar"],[3,"TextureVar"],[3,"UnorderedVar"],[3,"SamplerVar"],[3,"OutputVar"],[3,"ProgramInfo"],[4,"IsArray"],[4,"IsComparison"],[4,"IsMultiSample"],[4,"IsRect"],[4,"MatrixFormat"],[4,"TextureType"],[4,"BaseType"],[4,"ContainerType"],[4,"Stage"],[4,"UniformValue"],[4,"CompatibilityError"],[4,"CreateShaderError"],[8,"BaseTyped"],[8,"Formatted"],[3,"Usage"],[3,"Program"],[3,"CreateProgramError"],[3,"ImageInfoCommon"],[3,"PackedColor"],[3,"SamplerInfo"],[3,"Info"],[3,"ResourceDesc"],[3,"RenderDesc"],[3,"DepthStencilDesc"],[4,"CreationError"],[4,"LayerError"],[4,"AaMode"],[4,"FilterMethod"],[4,"CubeFace"],[4,"Kind"],[4,"WrapMode"],[3,"Raw"],[6,"RawImageInfo"],[3,"Lod"],[3,"DepthStencilFlags"],[8,"Resources"],[8,"Device"],[8,"Adapter"],[8,"QueueFamily"],[8,"Surface"],[8,"SwapChain"],[3,"VertexShader"],[3,"HullShader"],[3,"DomainShader"],[3,"GeometryShader"],[3,"PixelShader"],[3,"Frame"],[3,"Mirror"],[3,"ColorMask"],[3,"MultiSample"]]};
searchIndex["gfx_device_gl"] = {"doc":"OpenGL implementation of a device, striving to support OpenGL 2.0 with at least VAOs, but using newer extensions when available.","items":[[3,"CommandBuffer","gfx_device_gl","A command buffer abstraction for OpenGL.",null,null],[12,"buf","","",0,null],[12,"data","","",0,null],[12,"display_fb","","The framebuffer to use for rendering to the main targets (0 by default).",0,null],[3,"Factory","","GL resource factory.",null,null],[3,"Info","","OpenGL implementation information",null,null],[12,"platform_name","","The platform identifier",1,null],[12,"version","","The OpenGL API vesion number",1,null],[12,"shading_language","","The GLSL vesion number",1,null],[12,"extensions","","The extensions supported by the implementation",1,null],[3,"PlatformName","","A unique platform identifier that does not change between releases",null,null],[12,"vendor","","The company responsible for the OpenGL implementation",2,null],[12,"renderer","","The name of the renderer",2,null],[3,"Version","","A version number for a specific component of an OpenGL implementation",null,null],[12,"is_embedded","","",3,null],[12,"major","","",3,null],[12,"minor","","",3,null],[12,"revision","","",3,null],[12,"vendor_info","","",3,null],[3,"Fence","","",null,null],[3,"BufferElement","","",null,null],[12,"desc","","",4,null],[12,"elem","","",4,null],[3,"OutputMerger","","",null,null],[12,"draw_mask","","",5,null],[12,"stencil","","",5,null],[12,"depth","","",5,null],[12,"colors","","",5,null],[3,"PipelineState","","",null,null],[3,"ResourceView","","",null,null],[3,"FatSampler","","",null,null],[3,"Device","","An OpenGL device with GLSL shaders.",null,null],[4,"Resources","","",null,null],[4,"NewTexture","","",null,null],[13,"Surface","","",6,null],[13,"Texture","","",6,null],[4,"TargetView","","",null,null],[13,"Surface","","",7,null],[13,"Texture","","",7,null],[13,"TextureLayer","","",7,null],[4,"Error","","",null,null],[13,"NoError","","",8,null],[13,"InvalidEnum","","",8,null],[13,"InvalidValue","","",8,null],[13,"InvalidOperation","","",8,null],[13,"InvalidFramebufferOperation","","",8,null],[13,"OutOfMemory","","",8,null],[13,"UnknownError","","",8,null],[5,"create","","Create a new device with a factory.",null,null],[5,"create_main_targets_raw","","Create the proxy target views (RTV and DSV) for the attachments of the main framebuffer. These have GL names equal to 0. Not supposed to be used by the users directly.",null,null],[11,"new","","",0,{"inputs":[{"name":"framebuffer"},{"name":"workarounds"}],"output":{"name":"commandbuffer"}}],[11,"reset","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"bind_pipeline_state","","",0,{"inputs":[{"name":"self"},{"name":"pipelinestate"}],"output":null}],[11,"bind_vertex_buffers","","",0,{"inputs":[{"name":"self"},{"generics":["resources"],"name":"vertexbufferset"}],"output":null}],[11,"bind_constant_buffers","","",0,null],[11,"bind_global_constant","","",0,{"inputs":[{"name":"self"},{"name":"location"},{"name":"uniformvalue"}],"output":null}],[11,"bind_resource_views","","",0,null],[11,"bind_unordered_views","","",0,null],[11,"bind_samplers","","",0,null],[11,"bind_pixel_targets","","",0,{"inputs":[{"name":"self"},{"generics":["resources"],"name":"pixeltargetset"}],"output":null}],[11,"bind_index","","",0,{"inputs":[{"name":"self"},{"name":"buffer"},{"name":"indextype"}],"output":null}],[11,"set_scissor","","",0,{"inputs":[{"name":"self"},{"name":"rect"}],"output":null}],[11,"set_ref_values","","",0,{"inputs":[{"name":"self"},{"name":"refvalues"}],"output":null}],[11,"copy_buffer","","",0,{"inputs":[{"name":"self"},{"name":"buffer"},{"name":"buffer"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"copy_buffer_to_texture","","",0,{"inputs":[{"name":"self"},{"name":"buffer"},{"name":"usize"},{"name":"newtexture"},{"name":"kind"},{"generics":["cubeface"],"name":"option"},{"name":"rawimageinfo"}],"output":null}],[11,"copy_texture_to_buffer","","",0,{"inputs":[{"name":"self"},{"name":"newtexture"},{"name":"kind"},{"generics":["cubeface"],"name":"option"},{"name":"rawimageinfo"},{"name":"buffer"},{"name":"usize"}],"output":null}],[11,"update_buffer","","",0,null],[11,"update_texture","","",0,null],[11,"generate_mipmap","","",0,{"inputs":[{"name":"self"},{"name":"resourceview"}],"output":null}],[11,"clear_color","","",0,{"inputs":[{"name":"self"},{"name":"targetview"},{"name":"clearcolor"}],"output":null}],[11,"clear_depth_stencil","","",0,{"inputs":[{"name":"self"},{"name":"targetview"},{"generics":["depth"],"name":"option"},{"generics":["stencil"],"name":"option"}],"output":null}],[11,"call_draw","","",0,{"inputs":[{"name":"self"},{"name":"vertexcount"},{"name":"vertexcount"},{"generics":["instanceparams"],"name":"option"}],"output":null}],[11,"call_draw_indexed","","",0,{"inputs":[{"name":"self"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"vertexcount"},{"generics":["instanceparams"],"name":"option"}],"output":null}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"factory"}}],[11,"new","","Create a new `Factory`.",9,{"inputs":[{"generics":["share"],"name":"rc"}],"output":{"name":"factory"}}],[11,"create_command_buffer","","",9,{"inputs":[{"name":"self"}],"output":{"name":"commandbuffer"}}],[11,"get_capabilities","","",9,{"inputs":[{"name":"self"}],"output":{"name":"capabilities"}}],[11,"create_buffer_raw","","",9,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"generics":["rawbuffer","creationerror"],"name":"result"}}],[11,"create_buffer_immutable_raw","","",9,null],[11,"create_shader","","",9,null],[11,"create_program","","",9,{"inputs":[{"name":"self"},{"name":"shaderset"}],"output":{"generics":["program","createprogramerror"],"name":"result"}}],[11,"create_pipeline_state_raw","","",9,{"inputs":[{"name":"self"},{"name":"program"},{"name":"descriptor"}],"output":{"generics":["rawpipelinestate","creationerror"],"name":"result"}}],[11,"create_texture_raw","","",9,{"inputs":[{"name":"self"},{"name":"info"},{"generics":["channeltype"],"name":"option"},{"name":"option"}],"output":{"generics":["rawtexture","creationerror"],"name":"result"}}],[11,"view_buffer_as_shader_resource_raw","","",9,{"inputs":[{"name":"self"},{"name":"rawbuffer"}],"output":{"generics":["rawshaderresourceview","resourceviewerror"],"name":"result"}}],[11,"view_buffer_as_unordered_access_raw","","",9,{"inputs":[{"name":"self"},{"name":"rawbuffer"}],"output":{"generics":["rawunorderedaccessview","resourceviewerror"],"name":"result"}}],[11,"view_texture_as_shader_resource_raw","","",9,{"inputs":[{"name":"self"},{"name":"rawtexture"},{"name":"resourcedesc"}],"output":{"generics":["rawshaderresourceview","resourceviewerror"],"name":"result"}}],[11,"view_texture_as_unordered_access_raw","","",9,{"inputs":[{"name":"self"},{"name":"rawtexture"}],"output":{"generics":["rawunorderedaccessview","resourceviewerror"],"name":"result"}}],[11,"view_texture_as_render_target_raw","","",9,{"inputs":[{"name":"self"},{"name":"rawtexture"},{"name":"renderdesc"}],"output":{"generics":["rawrendertargetview","targetviewerror"],"name":"result"}}],[11,"view_texture_as_depth_stencil_raw","","",9,{"inputs":[{"name":"self"},{"name":"rawtexture"},{"name":"depthstencildesc"}],"output":{"generics":["rawdepthstencilview","targetviewerror"],"name":"result"}}],[11,"create_sampler","","",9,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"generics":["r"],"name":"sampler"}}],[11,"read_mapping","","",9,{"inputs":[{"name":"self"},{"name":"buffer"}],"output":{"generics":["reader","error"],"name":"result"}}],[11,"write_mapping","","",9,{"inputs":[{"name":"self"},{"name":"buffer"}],"output":{"generics":["writer","error"],"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"ordering"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"new","","Create a new OpenGL version number",3,{"inputs":[{"name":"u32"},{"name":"u32"},{"generics":["u32"],"name":"option"},{"name":"str"}],"output":{"name":"version"}}],[11,"new_embedded","","Create a new OpenGL ES version number",3,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"str"}],"output":{"name":"version"}}],[11,"parse","","According to the OpenGL specification, the version information is expected to follow the following syntax:",3,{"inputs":[{"name":"str"}],"output":{"generics":["version","str"],"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"platformname"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"platformname"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"platformname"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_version_supported","","",1,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"is_embedded_version_supported","","",1,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"is_extension_supported","","Returns `true` if the implementation supports the extension",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"is_version_or_extension_supported","","",1,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"str"}],"output":{"name":"bool"}}],[6,"Buffer","","",null,null],[6,"ArrayBuffer","","",null,null],[6,"Shader","","",null,null],[6,"Program","","",null,null],[6,"FrameBuffer","","",null,null],[6,"Surface","","",null,null],[6,"Texture","","",null,null],[6,"Sampler","","",null,null],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"fence"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",10,null],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"resources"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",11,null],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"resources"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bufferelement"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"bufferelement"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"bufferelement"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"outputmerger"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"outputmerger"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"outputmerger"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"pipelinestate"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"pipelinestate"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"pipelinestate"}],"output":{"name":"bool"}}],[11,"hash","","",12,null],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"newtexture"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"newtexture"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"newtexture"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"resourceview"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"resourceview"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"resourceview"}],"output":{"name":"bool"}}],[11,"hash","","",13,null],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_texture","","",13,{"inputs":[{"name":"texture"},{"name":"kind"}],"output":{"name":"resourceview"}}],[11,"new_buffer","","",13,{"inputs":[{"name":"texture"}],"output":{"name":"resourceview"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"fatsampler"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"fatsampler"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"fatsampler"}],"output":{"name":"bool"}}],[11,"hash","","",14,null],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"targetview"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"targetview"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"targetview"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_error_code","","",8,{"inputs":[{"name":"glenum"}],"output":{"name":"error"}}],[11,"with_gl","","Access the OpenGL directly via a closure. OpenGL types and enumerations can be found in the `gl` crate.",15,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"get_info","","Get the OpenGL-specific driver information",15,{"inputs":[{"name":"self"}],"output":{"name":"info"}}],[11,"get_capabilities","","",15,{"inputs":[{"name":"self"}],"output":{"name":"capabilities"}}],[11,"pin_submitted_resources","","",15,{"inputs":[{"name":"self"},{"name":"manager"}],"output":null}],[11,"submit","","",15,{"inputs":[{"name":"self"},{"name":"commandbuffer"},{"name":"accessinfo"}],"output":{"name":"submissionresult"}}],[11,"fenced_submit","","",15,{"inputs":[{"name":"self"},{"name":"commandbuffer"},{"name":"accessinfo"},{"generics":["fence"],"name":"option"}],"output":{"generics":["fence"],"name":"submissionresult"}}],[11,"wait_fence","","",15,{"inputs":[{"name":"self"},{"name":"fence"}],"output":null}],[11,"cleanup","","",15,{"inputs":[{"name":"self"}],"output":null}]],"paths":[[3,"CommandBuffer"],[3,"Info"],[3,"PlatformName"],[3,"Version"],[3,"BufferElement"],[3,"OutputMerger"],[4,"NewTexture"],[4,"TargetView"],[4,"Error"],[3,"Factory"],[3,"Fence"],[4,"Resources"],[3,"PipelineState"],[3,"ResourceView"],[3,"FatSampler"],[3,"Device"]]};
searchIndex["gfx_gl"] = {"doc":"An OpenGL loader generated by gl-rs.","items":[[3,"FnPtr","gfx_gl","",null,null],[3,"Gl","","",null,null],[12,"ActiveShaderProgram","","",0,null],[12,"ActiveTexture","","Fallbacks: ActiveTextureARB",0,null],[12,"AttachShader","","Fallbacks: AttachObjectARB",0,null],[12,"BeginConditionalRender","","Fallbacks: BeginConditionalRenderNV",0,null],[12,"BeginQuery","","Fallbacks: BeginQueryARB",0,null],[12,"BeginQueryIndexed","","",0,null],[12,"BeginTransformFeedback","","Fallbacks: BeginTransformFeedbackEXT, BeginTransformFeedbackNV",0,null],[12,"BindAttribLocation","","Fallbacks: BindAttribLocationARB",0,null],[12,"BindBuffer","","Fallbacks: BindBufferARB",0,null],[12,"BindBufferBase","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV",0,null],[12,"BindBufferRange","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV",0,null],[12,"BindBuffersBase","","",0,null],[12,"BindBuffersRange","","",0,null],[12,"BindFragDataLocation","","Fallbacks: BindFragDataLocationEXT",0,null],[12,"BindFragDataLocationIndexed","","Fallbacks: BindFragDataLocationIndexedEXT",0,null],[12,"BindFramebuffer","","",0,null],[12,"BindImageTexture","","",0,null],[12,"BindImageTextures","","",0,null],[12,"BindProgramPipeline","","",0,null],[12,"BindRenderbuffer","","",0,null],[12,"BindSampler","","",0,null],[12,"BindSamplers","","",0,null],[12,"BindTexture","","Fallbacks: BindTextureEXT",0,null],[12,"BindTextureUnit","","",0,null],[12,"BindTextures","","",0,null],[12,"BindTransformFeedback","","",0,null],[12,"BindVertexArray","","Fallbacks: BindVertexArrayOES",0,null],[12,"BindVertexBuffer","","",0,null],[12,"BindVertexBuffers","","",0,null],[12,"BlendColor","","Fallbacks: BlendColorEXT",0,null],[12,"BlendEquation","","Fallbacks: BlendEquationEXT",0,null],[12,"BlendEquationSeparate","","Fallbacks: BlendEquationSeparateEXT",0,null],[12,"BlendEquationSeparatei","","Fallbacks: BlendEquationSeparateIndexedAMD, BlendEquationSeparateiARB, BlendEquationSeparateiEXT, BlendEquationSeparateiOES",0,null],[12,"BlendEquationSeparateiARB","","",0,null],[12,"BlendEquationi","","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, BlendEquationiEXT, BlendEquationiOES",0,null],[12,"BlendEquationiARB","","",0,null],[12,"BlendFunc","","",0,null],[12,"BlendFuncSeparate","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR",0,null],[12,"BlendFuncSeparatei","","Fallbacks: BlendFuncSeparateIndexedAMD, BlendFuncSeparateiARB, BlendFuncSeparateiEXT, BlendFuncSeparateiOES",0,null],[12,"BlendFuncSeparateiARB","","",0,null],[12,"BlendFunci","","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, BlendFunciEXT, BlendFunciOES",0,null],[12,"BlendFunciARB","","",0,null],[12,"BlitFramebuffer","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV",0,null],[12,"BlitNamedFramebuffer","","",0,null],[12,"BufferData","","Fallbacks: BufferDataARB",0,null],[12,"BufferStorage","","Fallbacks: BufferStorageEXT",0,null],[12,"BufferSubData","","Fallbacks: BufferSubDataARB",0,null],[12,"CheckFramebufferStatus","","Fallbacks: CheckFramebufferStatusEXT",0,null],[12,"CheckNamedFramebufferStatus","","",0,null],[12,"ClampColor","","Fallbacks: ClampColorARB",0,null],[12,"Clear","","",0,null],[12,"ClearBufferData","","",0,null],[12,"ClearBufferSubData","","",0,null],[12,"ClearBufferfi","","",0,null],[12,"ClearBufferfv","","",0,null],[12,"ClearBufferiv","","",0,null],[12,"ClearBufferuiv","","",0,null],[12,"ClearColor","","",0,null],[12,"ClearDepth","","",0,null],[12,"ClearDepthf","","Fallbacks: ClearDepthfOES",0,null],[12,"ClearNamedBufferData","","",0,null],[12,"ClearNamedBufferSubData","","",0,null],[12,"ClearNamedFramebufferfi","","",0,null],[12,"ClearNamedFramebufferfv","","",0,null],[12,"ClearNamedFramebufferiv","","",0,null],[12,"ClearNamedFramebufferuiv","","",0,null],[12,"ClearStencil","","",0,null],[12,"ClearTexImage","","Fallbacks: ClearTexImageEXT",0,null],[12,"ClearTexSubImage","","Fallbacks: ClearTexSubImageEXT",0,null],[12,"ClientWaitSync","","Fallbacks: ClientWaitSyncAPPLE",0,null],[12,"ClipControl","","",0,null],[12,"ColorMask","","",0,null],[12,"ColorMaski","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT, ColorMaskiOES",0,null],[12,"ColorP3ui","","",0,null],[12,"ColorP3uiv","","",0,null],[12,"ColorP4ui","","",0,null],[12,"ColorP4uiv","","",0,null],[12,"CompileShader","","Fallbacks: CompileShaderARB",0,null],[12,"CompressedTexImage1D","","Fallbacks: CompressedTexImage1DARB",0,null],[12,"CompressedTexImage2D","","Fallbacks: CompressedTexImage2DARB",0,null],[12,"CompressedTexImage3D","","Fallbacks: CompressedTexImage3DARB",0,null],[12,"CompressedTexSubImage1D","","Fallbacks: CompressedTexSubImage1DARB",0,null],[12,"CompressedTexSubImage2D","","Fallbacks: CompressedTexSubImage2DARB",0,null],[12,"CompressedTexSubImage3D","","Fallbacks: CompressedTexSubImage3DARB",0,null],[12,"CompressedTextureSubImage1D","","",0,null],[12,"CompressedTextureSubImage2D","","",0,null],[12,"CompressedTextureSubImage3D","","",0,null],[12,"CopyBufferSubData","","Fallbacks: CopyBufferSubDataNV",0,null],[12,"CopyImageSubData","","Fallbacks: CopyImageSubDataEXT, CopyImageSubDataOES",0,null],[12,"CopyNamedBufferSubData","","",0,null],[12,"CopyTexImage1D","","Fallbacks: CopyTexImage1DEXT",0,null],[12,"CopyTexImage2D","","Fallbacks: CopyTexImage2DEXT",0,null],[12,"CopyTexSubImage1D","","Fallbacks: CopyTexSubImage1DEXT",0,null],[12,"CopyTexSubImage2D","","Fallbacks: CopyTexSubImage2DEXT",0,null],[12,"CopyTexSubImage3D","","Fallbacks: CopyTexSubImage3DEXT",0,null],[12,"CopyTextureSubImage1D","","",0,null],[12,"CopyTextureSubImage2D","","",0,null],[12,"CopyTextureSubImage3D","","",0,null],[12,"CreateBuffers","","",0,null],[12,"CreateFramebuffers","","",0,null],[12,"CreateProgram","","Fallbacks: CreateProgramObjectARB",0,null],[12,"CreateProgramPipelines","","",0,null],[12,"CreateQueries","","",0,null],[12,"CreateRenderbuffers","","",0,null],[12,"CreateSamplers","","",0,null],[12,"CreateShader","","Fallbacks: CreateShaderObjectARB",0,null],[12,"CreateShaderProgramv","","",0,null],[12,"CreateTextures","","",0,null],[12,"CreateTransformFeedbacks","","",0,null],[12,"CreateVertexArrays","","",0,null],[12,"CullFace","","",0,null],[12,"DebugMessageCallback","","Fallbacks: DebugMessageCallbackARB, DebugMessageCallbackKHR",0,null],[12,"DebugMessageControl","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR",0,null],[12,"DebugMessageInsert","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR",0,null],[12,"DeleteBuffers","","Fallbacks: DeleteBuffersARB",0,null],[12,"DeleteFramebuffers","","Fallbacks: DeleteFramebuffersEXT",0,null],[12,"DeleteProgram","","",0,null],[12,"DeleteProgramPipelines","","",0,null],[12,"DeleteQueries","","Fallbacks: DeleteQueriesARB",0,null],[12,"DeleteRenderbuffers","","Fallbacks: DeleteRenderbuffersEXT",0,null],[12,"DeleteSamplers","","",0,null],[12,"DeleteShader","","",0,null],[12,"DeleteSync","","Fallbacks: DeleteSyncAPPLE",0,null],[12,"DeleteTextures","","",0,null],[12,"DeleteTransformFeedbacks","","Fallbacks: DeleteTransformFeedbacksNV",0,null],[12,"DeleteVertexArrays","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES",0,null],[12,"DepthFunc","","",0,null],[12,"DepthMask","","",0,null],[12,"DepthRange","","",0,null],[12,"DepthRangeArrayv","","",0,null],[12,"DepthRangeIndexed","","",0,null],[12,"DepthRangef","","Fallbacks: DepthRangefOES",0,null],[12,"DetachShader","","Fallbacks: DetachObjectARB",0,null],[12,"Disable","","",0,null],[12,"DisableVertexArrayAttrib","","",0,null],[12,"DisableVertexAttribArray","","Fallbacks: DisableVertexAttribArrayARB",0,null],[12,"Disablei","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV, DisableiOES",0,null],[12,"DispatchCompute","","",0,null],[12,"DispatchComputeIndirect","","",0,null],[12,"DrawArrays","","Fallbacks: DrawArraysEXT",0,null],[12,"DrawArraysIndirect","","",0,null],[12,"DrawArraysInstanced","","Fallbacks: DrawArraysInstancedANGLE, DrawArraysInstancedARB, DrawArraysInstancedEXT, DrawArraysInstancedNV",0,null],[12,"DrawArraysInstancedBaseInstance","","Fallbacks: DrawArraysInstancedBaseInstanceEXT",0,null],[12,"DrawBuffer","","",0,null],[12,"DrawBuffers","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT",0,null],[12,"DrawElements","","",0,null],[12,"DrawElementsBaseVertex","","Fallbacks: DrawElementsBaseVertexEXT, DrawElementsBaseVertexOES",0,null],[12,"DrawElementsIndirect","","",0,null],[12,"DrawElementsInstanced","","Fallbacks: DrawElementsInstancedANGLE, DrawElementsInstancedARB, DrawElementsInstancedEXT, DrawElementsInstancedNV",0,null],[12,"DrawElementsInstancedBaseInstance","","Fallbacks: DrawElementsInstancedBaseInstanceEXT",0,null],[12,"DrawElementsInstancedBaseVertex","","Fallbacks: DrawElementsInstancedBaseVertexEXT, DrawElementsInstancedBaseVertexOES",0,null],[12,"DrawElementsInstancedBaseVertexBaseInstance","","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT",0,null],[12,"DrawRangeElements","","Fallbacks: DrawRangeElementsEXT",0,null],[12,"DrawRangeElementsBaseVertex","","Fallbacks: DrawRangeElementsBaseVertexEXT, DrawRangeElementsBaseVertexOES",0,null],[12,"DrawTransformFeedback","","Fallbacks: DrawTransformFeedbackEXT, DrawTransformFeedbackNV",0,null],[12,"DrawTransformFeedbackInstanced","","Fallbacks: DrawTransformFeedbackInstancedEXT",0,null],[12,"DrawTransformFeedbackStream","","",0,null],[12,"DrawTransformFeedbackStreamInstanced","","",0,null],[12,"Enable","","",0,null],[12,"EnableVertexArrayAttrib","","",0,null],[12,"EnableVertexAttribArray","","Fallbacks: EnableVertexAttribArrayARB",0,null],[12,"Enablei","","Fallbacks: EnableIndexedEXT, EnableiEXT, EnableiNV, EnableiOES",0,null],[12,"EndConditionalRender","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX",0,null],[12,"EndQuery","","Fallbacks: EndQueryARB",0,null],[12,"EndQueryIndexed","","",0,null],[12,"EndTransformFeedback","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV",0,null],[12,"FenceSync","","Fallbacks: FenceSyncAPPLE",0,null],[12,"Finish","","",0,null],[12,"Flush","","",0,null],[12,"FlushMappedBufferRange","","Fallbacks: FlushMappedBufferRangeAPPLE, FlushMappedBufferRangeEXT",0,null],[12,"FlushMappedNamedBufferRange","","",0,null],[12,"FramebufferParameteri","","",0,null],[12,"FramebufferRenderbuffer","","Fallbacks: FramebufferRenderbufferEXT",0,null],[12,"FramebufferTexture","","Fallbacks: FramebufferTextureARB, FramebufferTextureEXT, FramebufferTextureOES",0,null],[12,"FramebufferTexture1D","","Fallbacks: FramebufferTexture1DEXT",0,null],[12,"FramebufferTexture2D","","Fallbacks: FramebufferTexture2DEXT",0,null],[12,"FramebufferTexture3D","","Fallbacks: FramebufferTexture3DEXT",0,null],[12,"FramebufferTextureLayer","","Fallbacks: FramebufferTextureLayerARB, FramebufferTextureLayerEXT",0,null],[12,"FrontFace","","",0,null],[12,"GenBuffers","","Fallbacks: GenBuffersARB",0,null],[12,"GenFramebuffers","","Fallbacks: GenFramebuffersEXT",0,null],[12,"GenProgramPipelines","","",0,null],[12,"GenQueries","","Fallbacks: GenQueriesARB",0,null],[12,"GenRenderbuffers","","Fallbacks: GenRenderbuffersEXT",0,null],[12,"GenSamplers","","",0,null],[12,"GenTextures","","",0,null],[12,"GenTransformFeedbacks","","Fallbacks: GenTransformFeedbacksNV",0,null],[12,"GenVertexArrays","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES",0,null],[12,"GenerateMipmap","","Fallbacks: GenerateMipmapEXT",0,null],[12,"GenerateTextureMipmap","","",0,null],[12,"GetActiveAtomicCounterBufferiv","","",0,null],[12,"GetActiveAttrib","","Fallbacks: GetActiveAttribARB",0,null],[12,"GetActiveSubroutineName","","",0,null],[12,"GetActiveSubroutineUniformName","","",0,null],[12,"GetActiveSubroutineUniformiv","","",0,null],[12,"GetActiveUniform","","Fallbacks: GetActiveUniformARB",0,null],[12,"GetActiveUniformBlockName","","",0,null],[12,"GetActiveUniformBlockiv","","",0,null],[12,"GetActiveUniformName","","",0,null],[12,"GetActiveUniformsiv","","",0,null],[12,"GetAttachedShaders","","",0,null],[12,"GetAttribLocation","","Fallbacks: GetAttribLocationARB",0,null],[12,"GetBooleani_v","","Fallbacks: GetBooleanIndexedvEXT",0,null],[12,"GetBooleanv","","",0,null],[12,"GetBufferParameteri64v","","",0,null],[12,"GetBufferParameteriv","","Fallbacks: GetBufferParameterivARB",0,null],[12,"GetBufferPointerv","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES",0,null],[12,"GetBufferSubData","","Fallbacks: GetBufferSubDataARB",0,null],[12,"GetCompressedTexImage","","Fallbacks: GetCompressedTexImageARB",0,null],[12,"GetCompressedTextureImage","","",0,null],[12,"GetCompressedTextureSubImage","","",0,null],[12,"GetDebugMessageLog","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR",0,null],[12,"GetDoublei_v","","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT",0,null],[12,"GetDoublev","","",0,null],[12,"GetError","","",0,null],[12,"GetFloati_v","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vEXT, GetFloati_vNV, GetFloati_vOES",0,null],[12,"GetFloatv","","",0,null],[12,"GetFragDataIndex","","Fallbacks: GetFragDataIndexEXT",0,null],[12,"GetFragDataLocation","","Fallbacks: GetFragDataLocationEXT",0,null],[12,"GetFramebufferAttachmentParameteriv","","Fallbacks: GetFramebufferAttachmentParameterivEXT",0,null],[12,"GetFramebufferParameteriv","","",0,null],[12,"GetGraphicsResetStatus","","Fallbacks: GetGraphicsResetStatusKHR",0,null],[12,"GetInteger64i_v","","",0,null],[12,"GetInteger64v","","Fallbacks: GetInteger64vAPPLE",0,null],[12,"GetIntegeri_v","","Fallbacks: GetIntegerIndexedvEXT",0,null],[12,"GetIntegerv","","",0,null],[12,"GetInternalformati64v","","",0,null],[12,"GetInternalformativ","","",0,null],[12,"GetMultisamplefv","","Fallbacks: GetMultisamplefvNV",0,null],[12,"GetNamedBufferParameteri64v","","",0,null],[12,"GetNamedBufferParameteriv","","",0,null],[12,"GetNamedBufferPointerv","","",0,null],[12,"GetNamedBufferSubData","","",0,null],[12,"GetNamedFramebufferAttachmentParameteriv","","",0,null],[12,"GetNamedFramebufferParameteriv","","",0,null],[12,"GetNamedRenderbufferParameteriv","","",0,null],[12,"GetObjectLabel","","Fallbacks: GetObjectLabelKHR",0,null],[12,"GetObjectPtrLabel","","Fallbacks: GetObjectPtrLabelKHR",0,null],[12,"GetPointerv","","Fallbacks: GetPointervEXT, GetPointervKHR",0,null],[12,"GetProgramBinary","","Fallbacks: GetProgramBinaryOES",0,null],[12,"GetProgramInfoLog","","",0,null],[12,"GetProgramInterfaceiv","","",0,null],[12,"GetProgramPipelineInfoLog","","",0,null],[12,"GetProgramPipelineiv","","",0,null],[12,"GetProgramResourceIndex","","",0,null],[12,"GetProgramResourceLocation","","",0,null],[12,"GetProgramResourceLocationIndex","","",0,null],[12,"GetProgramResourceName","","",0,null],[12,"GetProgramResourceiv","","",0,null],[12,"GetProgramStageiv","","",0,null],[12,"GetProgramiv","","",0,null],[12,"GetQueryBufferObjecti64v","","",0,null],[12,"GetQueryBufferObjectiv","","",0,null],[12,"GetQueryBufferObjectui64v","","",0,null],[12,"GetQueryBufferObjectuiv","","",0,null],[12,"GetQueryIndexediv","","",0,null],[12,"GetQueryObjecti64v","","Fallbacks: GetQueryObjecti64vEXT",0,null],[12,"GetQueryObjectiv","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT",0,null],[12,"GetQueryObjectui64v","","Fallbacks: GetQueryObjectui64vEXT",0,null],[12,"GetQueryObjectuiv","","Fallbacks: GetQueryObjectuivARB",0,null],[12,"GetQueryiv","","Fallbacks: GetQueryivARB",0,null],[12,"GetRenderbufferParameteriv","","Fallbacks: GetRenderbufferParameterivEXT",0,null],[12,"GetSamplerParameterIiv","","Fallbacks: GetSamplerParameterIivEXT, GetSamplerParameterIivOES",0,null],[12,"GetSamplerParameterIuiv","","Fallbacks: GetSamplerParameterIuivEXT, GetSamplerParameterIuivOES",0,null],[12,"GetSamplerParameterfv","","",0,null],[12,"GetSamplerParameteriv","","",0,null],[12,"GetShaderInfoLog","","",0,null],[12,"GetShaderPrecisionFormat","","",0,null],[12,"GetShaderSource","","Fallbacks: GetShaderSourceARB",0,null],[12,"GetShaderiv","","",0,null],[12,"GetString","","",0,null],[12,"GetStringi","","",0,null],[12,"GetSubroutineIndex","","",0,null],[12,"GetSubroutineUniformLocation","","",0,null],[12,"GetSynciv","","Fallbacks: GetSyncivAPPLE",0,null],[12,"GetTexImage","","",0,null],[12,"GetTexLevelParameterfv","","",0,null],[12,"GetTexLevelParameteriv","","",0,null],[12,"GetTexParameterIiv","","Fallbacks: GetTexParameterIivEXT, GetTexParameterIivOES",0,null],[12,"GetTexParameterIuiv","","Fallbacks: GetTexParameterIuivEXT, GetTexParameterIuivOES",0,null],[12,"GetTexParameterfv","","",0,null],[12,"GetTexParameteriv","","",0,null],[12,"GetTextureImage","","",0,null],[12,"GetTextureLevelParameterfv","","",0,null],[12,"GetTextureLevelParameteriv","","",0,null],[12,"GetTextureParameterIiv","","",0,null],[12,"GetTextureParameterIuiv","","",0,null],[12,"GetTextureParameterfv","","",0,null],[12,"GetTextureParameteriv","","",0,null],[12,"GetTextureSubImage","","",0,null],[12,"GetTransformFeedbackVarying","","Fallbacks: GetTransformFeedbackVaryingEXT",0,null],[12,"GetTransformFeedbacki64_v","","",0,null],[12,"GetTransformFeedbacki_v","","",0,null],[12,"GetTransformFeedbackiv","","",0,null],[12,"GetUniformBlockIndex","","",0,null],[12,"GetUniformIndices","","",0,null],[12,"GetUniformLocation","","Fallbacks: GetUniformLocationARB",0,null],[12,"GetUniformSubroutineuiv","","",0,null],[12,"GetUniformdv","","",0,null],[12,"GetUniformfv","","Fallbacks: GetUniformfvARB",0,null],[12,"GetUniformiv","","Fallbacks: GetUniformivARB",0,null],[12,"GetUniformuiv","","Fallbacks: GetUniformuivEXT",0,null],[12,"GetVertexArrayIndexed64iv","","",0,null],[12,"GetVertexArrayIndexediv","","",0,null],[12,"GetVertexArrayiv","","",0,null],[12,"GetVertexAttribIiv","","Fallbacks: GetVertexAttribIivEXT",0,null],[12,"GetVertexAttribIuiv","","Fallbacks: GetVertexAttribIuivEXT",0,null],[12,"GetVertexAttribLdv","","Fallbacks: GetVertexAttribLdvEXT",0,null],[12,"GetVertexAttribPointerv","","Fallbacks: GetVertexAttribPointervARB, GetVertexAttribPointervNV",0,null],[12,"GetVertexAttribdv","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV",0,null],[12,"GetVertexAttribfv","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV",0,null],[12,"GetVertexAttribiv","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV",0,null],[12,"GetnColorTable","","",0,null],[12,"GetnCompressedTexImage","","",0,null],[12,"GetnConvolutionFilter","","",0,null],[12,"GetnHistogram","","",0,null],[12,"GetnMapdv","","",0,null],[12,"GetnMapfv","","",0,null],[12,"GetnMapiv","","",0,null],[12,"GetnMinmax","","",0,null],[12,"GetnPixelMapfv","","",0,null],[12,"GetnPixelMapuiv","","",0,null],[12,"GetnPixelMapusv","","",0,null],[12,"GetnPolygonStipple","","",0,null],[12,"GetnSeparableFilter","","",0,null],[12,"GetnTexImage","","",0,null],[12,"GetnUniformdv","","",0,null],[12,"GetnUniformfv","","Fallbacks: GetnUniformfvEXT, GetnUniformfvKHR",0,null],[12,"GetnUniformiv","","Fallbacks: GetnUniformivEXT, GetnUniformivKHR",0,null],[12,"GetnUniformuiv","","Fallbacks: GetnUniformuivKHR",0,null],[12,"Hint","","",0,null],[12,"InvalidateBufferData","","",0,null],[12,"InvalidateBufferSubData","","",0,null],[12,"InvalidateFramebuffer","","",0,null],[12,"InvalidateNamedFramebufferData","","",0,null],[12,"InvalidateNamedFramebufferSubData","","",0,null],[12,"InvalidateSubFramebuffer","","",0,null],[12,"InvalidateTexImage","","",0,null],[12,"InvalidateTexSubImage","","",0,null],[12,"IsBuffer","","Fallbacks: IsBufferARB",0,null],[12,"IsEnabled","","",0,null],[12,"IsEnabledi","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, IsEnablediNV, IsEnablediOES",0,null],[12,"IsFramebuffer","","Fallbacks: IsFramebufferEXT",0,null],[12,"IsProgram","","",0,null],[12,"IsProgramPipeline","","",0,null],[12,"IsQuery","","Fallbacks: IsQueryARB",0,null],[12,"IsRenderbuffer","","Fallbacks: IsRenderbufferEXT",0,null],[12,"IsSampler","","",0,null],[12,"IsShader","","",0,null],[12,"IsSync","","Fallbacks: IsSyncAPPLE",0,null],[12,"IsTexture","","",0,null],[12,"IsTransformFeedback","","Fallbacks: IsTransformFeedbackNV",0,null],[12,"IsVertexArray","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES",0,null],[12,"LineWidth","","",0,null],[12,"LinkProgram","","Fallbacks: LinkProgramARB",0,null],[12,"LogicOp","","",0,null],[12,"MapBuffer","","Fallbacks: MapBufferARB, MapBufferOES",0,null],[12,"MapBufferRange","","Fallbacks: MapBufferRangeEXT",0,null],[12,"MapNamedBuffer","","",0,null],[12,"MapNamedBufferRange","","",0,null],[12,"MemoryBarrier","","Fallbacks: MemoryBarrierEXT",0,null],[12,"MemoryBarrierByRegion","","",0,null],[12,"MinSampleShading","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES",0,null],[12,"MultiDrawArrays","","Fallbacks: MultiDrawArraysEXT",0,null],[12,"MultiDrawArraysIndirect","","Fallbacks: MultiDrawArraysIndirectAMD, MultiDrawArraysIndirectEXT",0,null],[12,"MultiDrawElements","","Fallbacks: MultiDrawElementsEXT",0,null],[12,"MultiDrawElementsBaseVertex","","Fallbacks: MultiDrawElementsBaseVertexEXT",0,null],[12,"MultiDrawElementsIndirect","","Fallbacks: MultiDrawElementsIndirectAMD, MultiDrawElementsIndirectEXT",0,null],[12,"MultiTexCoordP1ui","","",0,null],[12,"MultiTexCoordP1uiv","","",0,null],[12,"MultiTexCoordP2ui","","",0,null],[12,"MultiTexCoordP2uiv","","",0,null],[12,"MultiTexCoordP3ui","","",0,null],[12,"MultiTexCoordP3uiv","","",0,null],[12,"MultiTexCoordP4ui","","",0,null],[12,"MultiTexCoordP4uiv","","",0,null],[12,"NamedBufferData","","",0,null],[12,"NamedBufferStorage","","Fallbacks: NamedBufferStorageEXT",0,null],[12,"NamedBufferSubData","","Fallbacks: NamedBufferSubDataEXT",0,null],[12,"NamedFramebufferDrawBuffer","","",0,null],[12,"NamedFramebufferDrawBuffers","","",0,null],[12,"NamedFramebufferParameteri","","",0,null],[12,"NamedFramebufferReadBuffer","","",0,null],[12,"NamedFramebufferRenderbuffer","","",0,null],[12,"NamedFramebufferTexture","","",0,null],[12,"NamedFramebufferTextureLayer","","",0,null],[12,"NamedRenderbufferStorage","","",0,null],[12,"NamedRenderbufferStorageMultisample","","",0,null],[12,"NormalP3ui","","",0,null],[12,"NormalP3uiv","","",0,null],[12,"ObjectLabel","","Fallbacks: ObjectLabelKHR",0,null],[12,"ObjectPtrLabel","","Fallbacks: ObjectPtrLabelKHR",0,null],[12,"PatchParameterfv","","",0,null],[12,"PatchParameteri","","Fallbacks: PatchParameteriEXT, PatchParameteriOES",0,null],[12,"PauseTransformFeedback","","Fallbacks: PauseTransformFeedbackNV",0,null],[12,"PixelStoref","","",0,null],[12,"PixelStorei","","",0,null],[12,"PointParameterf","","Fallbacks: PointParameterfARB, PointParameterfEXT, PointParameterfSGIS",0,null],[12,"PointParameterfv","","Fallbacks: PointParameterfvARB, PointParameterfvEXT, PointParameterfvSGIS",0,null],[12,"PointParameteri","","Fallbacks: PointParameteriNV",0,null],[12,"PointParameteriv","","Fallbacks: PointParameterivNV",0,null],[12,"PointSize","","",0,null],[12,"PolygonMode","","Fallbacks: PolygonModeNV",0,null],[12,"PolygonOffset","","",0,null],[12,"PopDebugGroup","","Fallbacks: PopDebugGroupKHR",0,null],[12,"PrimitiveRestartIndex","","",0,null],[12,"ProgramBinary","","Fallbacks: ProgramBinaryOES",0,null],[12,"ProgramParameteri","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT",0,null],[12,"ProgramUniform1d","","",0,null],[12,"ProgramUniform1dv","","",0,null],[12,"ProgramUniform1f","","Fallbacks: ProgramUniform1fEXT",0,null],[12,"ProgramUniform1fv","","Fallbacks: ProgramUniform1fvEXT",0,null],[12,"ProgramUniform1i","","Fallbacks: ProgramUniform1iEXT",0,null],[12,"ProgramUniform1iv","","Fallbacks: ProgramUniform1ivEXT",0,null],[12,"ProgramUniform1ui","","Fallbacks: ProgramUniform1uiEXT",0,null],[12,"ProgramUniform1uiv","","Fallbacks: ProgramUniform1uivEXT",0,null],[12,"ProgramUniform2d","","",0,null],[12,"ProgramUniform2dv","","",0,null],[12,"ProgramUniform2f","","Fallbacks: ProgramUniform2fEXT",0,null],[12,"ProgramUniform2fv","","Fallbacks: ProgramUniform2fvEXT",0,null],[12,"ProgramUniform2i","","Fallbacks: ProgramUniform2iEXT",0,null],[12,"ProgramUniform2iv","","Fallbacks: ProgramUniform2ivEXT",0,null],[12,"ProgramUniform2ui","","Fallbacks: ProgramUniform2uiEXT",0,null],[12,"ProgramUniform2uiv","","Fallbacks: ProgramUniform2uivEXT",0,null],[12,"ProgramUniform3d","","",0,null],[12,"ProgramUniform3dv","","",0,null],[12,"ProgramUniform3f","","Fallbacks: ProgramUniform3fEXT",0,null],[12,"ProgramUniform3fv","","Fallbacks: ProgramUniform3fvEXT",0,null],[12,"ProgramUniform3i","","Fallbacks: ProgramUniform3iEXT",0,null],[12,"ProgramUniform3iv","","Fallbacks: ProgramUniform3ivEXT",0,null],[12,"ProgramUniform3ui","","Fallbacks: ProgramUniform3uiEXT",0,null],[12,"ProgramUniform3uiv","","Fallbacks: ProgramUniform3uivEXT",0,null],[12,"ProgramUniform4d","","",0,null],[12,"ProgramUniform4dv","","",0,null],[12,"ProgramUniform4f","","Fallbacks: ProgramUniform4fEXT",0,null],[12,"ProgramUniform4fv","","Fallbacks: ProgramUniform4fvEXT",0,null],[12,"ProgramUniform4i","","Fallbacks: ProgramUniform4iEXT",0,null],[12,"ProgramUniform4iv","","Fallbacks: ProgramUniform4ivEXT",0,null],[12,"ProgramUniform4ui","","Fallbacks: ProgramUniform4uiEXT",0,null],[12,"ProgramUniform4uiv","","Fallbacks: ProgramUniform4uivEXT",0,null],[12,"ProgramUniformMatrix2dv","","",0,null],[12,"ProgramUniformMatrix2fv","","Fallbacks: ProgramUniformMatrix2fvEXT",0,null],[12,"ProgramUniformMatrix2x3dv","","",0,null],[12,"ProgramUniformMatrix2x3fv","","Fallbacks: ProgramUniformMatrix2x3fvEXT",0,null],[12,"ProgramUniformMatrix2x4dv","","",0,null],[12,"ProgramUniformMatrix2x4fv","","Fallbacks: ProgramUniformMatrix2x4fvEXT",0,null],[12,"ProgramUniformMatrix3dv","","",0,null],[12,"ProgramUniformMatrix3fv","","Fallbacks: ProgramUniformMatrix3fvEXT",0,null],[12,"ProgramUniformMatrix3x2dv","","",0,null],[12,"ProgramUniformMatrix3x2fv","","Fallbacks: ProgramUniformMatrix3x2fvEXT",0,null],[12,"ProgramUniformMatrix3x4dv","","",0,null],[12,"ProgramUniformMatrix3x4fv","","Fallbacks: ProgramUniformMatrix3x4fvEXT",0,null],[12,"ProgramUniformMatrix4dv","","",0,null],[12,"ProgramUniformMatrix4fv","","Fallbacks: ProgramUniformMatrix4fvEXT",0,null],[12,"ProgramUniformMatrix4x2dv","","",0,null],[12,"ProgramUniformMatrix4x2fv","","Fallbacks: ProgramUniformMatrix4x2fvEXT",0,null],[12,"ProgramUniformMatrix4x3dv","","",0,null],[12,"ProgramUniformMatrix4x3fv","","Fallbacks: ProgramUniformMatrix4x3fvEXT",0,null],[12,"ProvokingVertex","","Fallbacks: ProvokingVertexEXT",0,null],[12,"PushDebugGroup","","Fallbacks: PushDebugGroupKHR",0,null],[12,"QueryCounter","","Fallbacks: QueryCounterEXT",0,null],[12,"ReadBuffer","","",0,null],[12,"ReadPixels","","",0,null],[12,"ReadnPixels","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR",0,null],[12,"ReleaseShaderCompiler","","",0,null],[12,"RenderbufferStorage","","Fallbacks: RenderbufferStorageEXT",0,null],[12,"RenderbufferStorageMultisample","","Fallbacks: RenderbufferStorageMultisampleEXT, RenderbufferStorageMultisampleNV",0,null],[12,"ResumeTransformFeedback","","Fallbacks: ResumeTransformFeedbackNV",0,null],[12,"SampleCoverage","","Fallbacks: SampleCoverageARB",0,null],[12,"SampleMaski","","",0,null],[12,"SamplerParameterIiv","","Fallbacks: SamplerParameterIivEXT, SamplerParameterIivOES",0,null],[12,"SamplerParameterIuiv","","Fallbacks: SamplerParameterIuivEXT, SamplerParameterIuivOES",0,null],[12,"SamplerParameterf","","",0,null],[12,"SamplerParameterfv","","",0,null],[12,"SamplerParameteri","","",0,null],[12,"SamplerParameteriv","","",0,null],[12,"Scissor","","",0,null],[12,"ScissorArrayv","","Fallbacks: ScissorArrayvNV, ScissorArrayvOES",0,null],[12,"ScissorIndexed","","Fallbacks: ScissorIndexedNV, ScissorIndexedOES",0,null],[12,"ScissorIndexedv","","Fallbacks: ScissorIndexedvNV, ScissorIndexedvOES",0,null],[12,"SecondaryColorP3ui","","",0,null],[12,"SecondaryColorP3uiv","","",0,null],[12,"ShaderBinary","","",0,null],[12,"ShaderSource","","Fallbacks: ShaderSourceARB",0,null],[12,"ShaderStorageBlockBinding","","",0,null],[12,"StencilFunc","","",0,null],[12,"StencilFuncSeparate","","",0,null],[12,"StencilMask","","",0,null],[12,"StencilMaskSeparate","","",0,null],[12,"StencilOp","","",0,null],[12,"StencilOpSeparate","","Fallbacks: StencilOpSeparateATI",0,null],[12,"TexBuffer","","Fallbacks: TexBufferARB, TexBufferEXT, TexBufferOES",0,null],[12,"TexBufferRange","","Fallbacks: TexBufferRangeEXT, TexBufferRangeOES",0,null],[12,"TexCoordP1ui","","",0,null],[12,"TexCoordP1uiv","","",0,null],[12,"TexCoordP2ui","","",0,null],[12,"TexCoordP2uiv","","",0,null],[12,"TexCoordP3ui","","",0,null],[12,"TexCoordP3uiv","","",0,null],[12,"TexCoordP4ui","","",0,null],[12,"TexCoordP4uiv","","",0,null],[12,"TexImage1D","","",0,null],[12,"TexImage2D","","",0,null],[12,"TexImage2DMultisample","","",0,null],[12,"TexImage3D","","Fallbacks: TexImage3DEXT",0,null],[12,"TexImage3DMultisample","","",0,null],[12,"TexParameterIiv","","Fallbacks: TexParameterIivEXT, TexParameterIivOES",0,null],[12,"TexParameterIuiv","","Fallbacks: TexParameterIuivEXT, TexParameterIuivOES",0,null],[12,"TexParameterf","","",0,null],[12,"TexParameterfv","","",0,null],[12,"TexParameteri","","",0,null],[12,"TexParameteriv","","",0,null],[12,"TexStorage1D","","Fallbacks: TexStorage1DEXT",0,null],[12,"TexStorage2D","","Fallbacks: TexStorage2DEXT",0,null],[12,"TexStorage2DMultisample","","",0,null],[12,"TexStorage3D","","Fallbacks: TexStorage3DEXT",0,null],[12,"TexStorage3DMultisample","","Fallbacks: TexStorage3DMultisampleOES",0,null],[12,"TexSubImage1D","","Fallbacks: TexSubImage1DEXT",0,null],[12,"TexSubImage2D","","Fallbacks: TexSubImage2DEXT",0,null],[12,"TexSubImage3D","","Fallbacks: TexSubImage3DEXT",0,null],[12,"TextureBarrier","","",0,null],[12,"TextureBuffer","","",0,null],[12,"TextureBufferRange","","",0,null],[12,"TextureParameterIiv","","",0,null],[12,"TextureParameterIuiv","","",0,null],[12,"TextureParameterf","","",0,null],[12,"TextureParameterfv","","",0,null],[12,"TextureParameteri","","",0,null],[12,"TextureParameteriv","","",0,null],[12,"TextureStorage1D","","",0,null],[12,"TextureStorage2D","","",0,null],[12,"TextureStorage2DMultisample","","",0,null],[12,"TextureStorage3D","","",0,null],[12,"TextureStorage3DMultisample","","",0,null],[12,"TextureSubImage1D","","",0,null],[12,"TextureSubImage2D","","",0,null],[12,"TextureSubImage3D","","",0,null],[12,"TextureView","","Fallbacks: TextureViewEXT, TextureViewOES",0,null],[12,"TransformFeedbackBufferBase","","",0,null],[12,"TransformFeedbackBufferRange","","",0,null],[12,"TransformFeedbackVaryings","","Fallbacks: TransformFeedbackVaryingsEXT",0,null],[12,"Uniform1d","","",0,null],[12,"Uniform1dv","","",0,null],[12,"Uniform1f","","Fallbacks: Uniform1fARB",0,null],[12,"Uniform1fv","","Fallbacks: Uniform1fvARB",0,null],[12,"Uniform1i","","Fallbacks: Uniform1iARB",0,null],[12,"Uniform1iv","","Fallbacks: Uniform1ivARB",0,null],[12,"Uniform1ui","","Fallbacks: Uniform1uiEXT",0,null],[12,"Uniform1uiv","","Fallbacks: Uniform1uivEXT",0,null],[12,"Uniform2d","","",0,null],[12,"Uniform2dv","","",0,null],[12,"Uniform2f","","Fallbacks: Uniform2fARB",0,null],[12,"Uniform2fv","","Fallbacks: Uniform2fvARB",0,null],[12,"Uniform2i","","Fallbacks: Uniform2iARB",0,null],[12,"Uniform2iv","","Fallbacks: Uniform2ivARB",0,null],[12,"Uniform2ui","","Fallbacks: Uniform2uiEXT",0,null],[12,"Uniform2uiv","","Fallbacks: Uniform2uivEXT",0,null],[12,"Uniform3d","","",0,null],[12,"Uniform3dv","","",0,null],[12,"Uniform3f","","Fallbacks: Uniform3fARB",0,null],[12,"Uniform3fv","","Fallbacks: Uniform3fvARB",0,null],[12,"Uniform3i","","Fallbacks: Uniform3iARB",0,null],[12,"Uniform3iv","","Fallbacks: Uniform3ivARB",0,null],[12,"Uniform3ui","","Fallbacks: Uniform3uiEXT",0,null],[12,"Uniform3uiv","","Fallbacks: Uniform3uivEXT",0,null],[12,"Uniform4d","","",0,null],[12,"Uniform4dv","","",0,null],[12,"Uniform4f","","Fallbacks: Uniform4fARB",0,null],[12,"Uniform4fv","","Fallbacks: Uniform4fvARB",0,null],[12,"Uniform4i","","Fallbacks: Uniform4iARB",0,null],[12,"Uniform4iv","","Fallbacks: Uniform4ivARB",0,null],[12,"Uniform4ui","","Fallbacks: Uniform4uiEXT",0,null],[12,"Uniform4uiv","","Fallbacks: Uniform4uivEXT",0,null],[12,"UniformBlockBinding","","",0,null],[12,"UniformMatrix2dv","","",0,null],[12,"UniformMatrix2fv","","Fallbacks: UniformMatrix2fvARB",0,null],[12,"UniformMatrix2x3dv","","",0,null],[12,"UniformMatrix2x3fv","","Fallbacks: UniformMatrix2x3fvNV",0,null],[12,"UniformMatrix2x4dv","","",0,null],[12,"UniformMatrix2x4fv","","Fallbacks: UniformMatrix2x4fvNV",0,null],[12,"UniformMatrix3dv","","",0,null],[12,"UniformMatrix3fv","","Fallbacks: UniformMatrix3fvARB",0,null],[12,"UniformMatrix3x2dv","","",0,null],[12,"UniformMatrix3x2fv","","Fallbacks: UniformMatrix3x2fvNV",0,null],[12,"UniformMatrix3x4dv","","",0,null],[12,"UniformMatrix3x4fv","","Fallbacks: UniformMatrix3x4fvNV",0,null],[12,"UniformMatrix4dv","","",0,null],[12,"UniformMatrix4fv","","Fallbacks: UniformMatrix4fvARB",0,null],[12,"UniformMatrix4x2dv","","",0,null],[12,"UniformMatrix4x2fv","","Fallbacks: UniformMatrix4x2fvNV",0,null],[12,"UniformMatrix4x3dv","","",0,null],[12,"UniformMatrix4x3fv","","Fallbacks: UniformMatrix4x3fvNV",0,null],[12,"UniformSubroutinesuiv","","",0,null],[12,"UnmapBuffer","","Fallbacks: UnmapBufferARB, UnmapBufferOES",0,null],[12,"UnmapNamedBuffer","","",0,null],[12,"UseProgram","","Fallbacks: UseProgramObjectARB",0,null],[12,"UseProgramStages","","",0,null],[12,"ValidateProgram","","Fallbacks: ValidateProgramARB",0,null],[12,"ValidateProgramPipeline","","",0,null],[12,"VertexArrayAttribBinding","","",0,null],[12,"VertexArrayAttribFormat","","",0,null],[12,"VertexArrayAttribIFormat","","",0,null],[12,"VertexArrayAttribLFormat","","",0,null],[12,"VertexArrayBindingDivisor","","",0,null],[12,"VertexArrayElementBuffer","","",0,null],[12,"VertexArrayVertexBuffer","","",0,null],[12,"VertexArrayVertexBuffers","","",0,null],[12,"VertexAttrib1d","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV",0,null],[12,"VertexAttrib1dv","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV",0,null],[12,"VertexAttrib1f","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV",0,null],[12,"VertexAttrib1fv","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV",0,null],[12,"VertexAttrib1s","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV",0,null],[12,"VertexAttrib1sv","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV",0,null],[12,"VertexAttrib2d","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV",0,null],[12,"VertexAttrib2dv","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV",0,null],[12,"VertexAttrib2f","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV",0,null],[12,"VertexAttrib2fv","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV",0,null],[12,"VertexAttrib2s","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV",0,null],[12,"VertexAttrib2sv","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV",0,null],[12,"VertexAttrib3d","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV",0,null],[12,"VertexAttrib3dv","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV",0,null],[12,"VertexAttrib3f","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV",0,null],[12,"VertexAttrib3fv","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV",0,null],[12,"VertexAttrib3s","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV",0,null],[12,"VertexAttrib3sv","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV",0,null],[12,"VertexAttrib4Nbv","","Fallbacks: VertexAttrib4NbvARB",0,null],[12,"VertexAttrib4Niv","","Fallbacks: VertexAttrib4NivARB",0,null],[12,"VertexAttrib4Nsv","","Fallbacks: VertexAttrib4NsvARB",0,null],[12,"VertexAttrib4Nub","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV",0,null],[12,"VertexAttrib4Nubv","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV",0,null],[12,"VertexAttrib4Nuiv","","Fallbacks: VertexAttrib4NuivARB",0,null],[12,"VertexAttrib4Nusv","","Fallbacks: VertexAttrib4NusvARB",0,null],[12,"VertexAttrib4bv","","Fallbacks: VertexAttrib4bvARB",0,null],[12,"VertexAttrib4d","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV",0,null],[12,"VertexAttrib4dv","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV",0,null],[12,"VertexAttrib4f","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV",0,null],[12,"VertexAttrib4fv","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV",0,null],[12,"VertexAttrib4iv","","Fallbacks: VertexAttrib4ivARB",0,null],[12,"VertexAttrib4s","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV",0,null],[12,"VertexAttrib4sv","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV",0,null],[12,"VertexAttrib4ubv","","Fallbacks: VertexAttrib4ubvARB",0,null],[12,"VertexAttrib4uiv","","Fallbacks: VertexAttrib4uivARB",0,null],[12,"VertexAttrib4usv","","Fallbacks: VertexAttrib4usvARB",0,null],[12,"VertexAttribBinding","","",0,null],[12,"VertexAttribDivisor","","Fallbacks: VertexAttribDivisorANGLE, VertexAttribDivisorARB, VertexAttribDivisorEXT, VertexAttribDivisorNV",0,null],[12,"VertexAttribFormat","","",0,null],[12,"VertexAttribI1i","","Fallbacks: VertexAttribI1iEXT",0,null],[12,"VertexAttribI1iv","","Fallbacks: VertexAttribI1ivEXT",0,null],[12,"VertexAttribI1ui","","Fallbacks: VertexAttribI1uiEXT",0,null],[12,"VertexAttribI1uiv","","Fallbacks: VertexAttribI1uivEXT",0,null],[12,"VertexAttribI2i","","Fallbacks: VertexAttribI2iEXT",0,null],[12,"VertexAttribI2iv","","Fallbacks: VertexAttribI2ivEXT",0,null],[12,"VertexAttribI2ui","","Fallbacks: VertexAttribI2uiEXT",0,null],[12,"VertexAttribI2uiv","","Fallbacks: VertexAttribI2uivEXT",0,null],[12,"VertexAttribI3i","","Fallbacks: VertexAttribI3iEXT",0,null],[12,"VertexAttribI3iv","","Fallbacks: VertexAttribI3ivEXT",0,null],[12,"VertexAttribI3ui","","Fallbacks: VertexAttribI3uiEXT",0,null],[12,"VertexAttribI3uiv","","Fallbacks: VertexAttribI3uivEXT",0,null],[12,"VertexAttribI4bv","","Fallbacks: VertexAttribI4bvEXT",0,null],[12,"VertexAttribI4i","","Fallbacks: VertexAttribI4iEXT",0,null],[12,"VertexAttribI4iv","","Fallbacks: VertexAttribI4ivEXT",0,null],[12,"VertexAttribI4sv","","Fallbacks: VertexAttribI4svEXT",0,null],[12,"VertexAttribI4ubv","","Fallbacks: VertexAttribI4ubvEXT",0,null],[12,"VertexAttribI4ui","","Fallbacks: VertexAttribI4uiEXT",0,null],[12,"VertexAttribI4uiv","","Fallbacks: VertexAttribI4uivEXT",0,null],[12,"VertexAttribI4usv","","Fallbacks: VertexAttribI4usvEXT",0,null],[12,"VertexAttribIFormat","","",0,null],[12,"VertexAttribIPointer","","Fallbacks: VertexAttribIPointerEXT",0,null],[12,"VertexAttribL1d","","Fallbacks: VertexAttribL1dEXT",0,null],[12,"VertexAttribL1dv","","Fallbacks: VertexAttribL1dvEXT",0,null],[12,"VertexAttribL2d","","Fallbacks: VertexAttribL2dEXT",0,null],[12,"VertexAttribL2dv","","Fallbacks: VertexAttribL2dvEXT",0,null],[12,"VertexAttribL3d","","Fallbacks: VertexAttribL3dEXT",0,null],[12,"VertexAttribL3dv","","Fallbacks: VertexAttribL3dvEXT",0,null],[12,"VertexAttribL4d","","Fallbacks: VertexAttribL4dEXT",0,null],[12,"VertexAttribL4dv","","Fallbacks: VertexAttribL4dvEXT",0,null],[12,"VertexAttribLFormat","","",0,null],[12,"VertexAttribLPointer","","Fallbacks: VertexAttribLPointerEXT",0,null],[12,"VertexAttribP1ui","","",0,null],[12,"VertexAttribP1uiv","","",0,null],[12,"VertexAttribP2ui","","",0,null],[12,"VertexAttribP2uiv","","",0,null],[12,"VertexAttribP3ui","","",0,null],[12,"VertexAttribP3uiv","","",0,null],[12,"VertexAttribP4ui","","",0,null],[12,"VertexAttribP4uiv","","",0,null],[12,"VertexAttribPointer","","Fallbacks: VertexAttribPointerARB",0,null],[12,"VertexBindingDivisor","","",0,null],[12,"VertexP2ui","","",0,null],[12,"VertexP2uiv","","",0,null],[12,"VertexP3ui","","",0,null],[12,"VertexP3uiv","","",0,null],[12,"VertexP4ui","","",0,null],[12,"VertexP4uiv","","",0,null],[12,"Viewport","","",0,null],[12,"ViewportArrayv","","Fallbacks: ViewportArrayvNV, ViewportArrayvOES",0,null],[12,"ViewportIndexedf","","Fallbacks: ViewportIndexedfOES, ViewportIndexedfNV",0,null],[12,"ViewportIndexedfv","","Fallbacks: ViewportIndexedfvOES, ViewportIndexedfvNV",0,null],[12,"WaitSync","","Fallbacks: WaitSyncAPPLE",0,null],[0,"types","","",null,null],[4,"__GLsync","gfx_gl::types","",null,null],[4,"_cl_context","","",null,null],[4,"_cl_event","","",null,null],[6,"GLenum","","",null,null],[6,"GLboolean","","",null,null],[6,"GLbitfield","","",null,null],[6,"GLvoid","","",null,null],[6,"GLbyte","","",null,null],[6,"GLshort","","",null,null],[6,"GLint","","",null,null],[6,"GLclampx","","",null,null],[6,"GLubyte","","",null,null],[6,"GLushort","","",null,null],[6,"GLuint","","",null,null],[6,"GLsizei","","",null,null],[6,"GLfloat","","",null,null],[6,"GLclampf","","",null,null],[6,"GLdouble","","",null,null],[6,"GLclampd","","",null,null],[6,"GLeglImageOES","","",null,null],[6,"GLchar","","",null,null],[6,"GLcharARB","","",null,null],[6,"GLhandleARB","","",null,null],[6,"GLhalfARB","","",null,null],[6,"GLhalf","","",null,null],[6,"GLfixed","","",null,null],[6,"GLintptr","","",null,null],[6,"GLsizeiptr","","",null,null],[6,"GLint64","","",null,null],[6,"GLuint64","","",null,null],[6,"GLintptrARB","","",null,null],[6,"GLsizeiptrARB","","",null,null],[6,"GLint64EXT","","",null,null],[6,"GLuint64EXT","","",null,null],[6,"GLsync","","",null,null],[6,"GLDEBUGPROC","","",null,null],[6,"GLDEBUGPROCARB","","",null,null],[6,"GLDEBUGPROCKHR","","",null,null],[6,"GLDEBUGPROCAMD","","",null,null],[6,"GLhalfNV","","",null,null],[6,"GLvdpauSurfaceNV","","",null,null],[17,"ACTIVE_ATOMIC_COUNTER_BUFFERS","gfx_gl","",null,null],[17,"ACTIVE_ATTRIBUTES","","",null,null],[17,"ACTIVE_ATTRIBUTE_MAX_LENGTH","","",null,null],[17,"ACTIVE_PROGRAM","","",null,null],[17,"ACTIVE_RESOURCES","","",null,null],[17,"ACTIVE_SUBROUTINES","","",null,null],[17,"ACTIVE_SUBROUTINE_MAX_LENGTH","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORMS","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","","",null,null],[17,"ACTIVE_TEXTURE","","",null,null],[17,"ACTIVE_UNIFORMS","","",null,null],[17,"ACTIVE_UNIFORM_BLOCKS","","",null,null],[17,"ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","","",null,null],[17,"ACTIVE_UNIFORM_MAX_LENGTH","","",null,null],[17,"ACTIVE_VARIABLES","","",null,null],[17,"ALIASED_LINE_WIDTH_RANGE","","",null,null],[17,"ALL_BARRIER_BITS","","",null,null],[17,"ALL_SHADER_BITS","","",null,null],[17,"ALPHA","","",null,null],[17,"ALREADY_SIGNALED","","",null,null],[17,"ALWAYS","","",null,null],[17,"AND","","",null,null],[17,"AND_INVERTED","","",null,null],[17,"AND_REVERSE","","",null,null],[17,"ANY_SAMPLES_PASSED","","",null,null],[17,"ANY_SAMPLES_PASSED_CONSERVATIVE","","",null,null],[17,"ARRAY_BUFFER","","",null,null],[17,"ARRAY_BUFFER_BINDING","","",null,null],[17,"ARRAY_SIZE","","",null,null],[17,"ARRAY_STRIDE","","",null,null],[17,"ATOMIC_COUNTER_BARRIER_BIT","","",null,null],[17,"ATOMIC_COUNTER_BUFFER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_BINDING","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_DATA_SIZE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_INDEX","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_SIZE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_START","","",null,null],[17,"ATTACHED_SHADERS","","",null,null],[17,"AUTO_GENERATE_MIPMAP","","",null,null],[17,"BACK","","",null,null],[17,"BACK_LEFT","","",null,null],[17,"BACK_RIGHT","","",null,null],[17,"BGR","","",null,null],[17,"BGRA","","",null,null],[17,"BGRA_INTEGER","","",null,null],[17,"BGR_INTEGER","","",null,null],[17,"BLEND","","",null,null],[17,"BLEND_COLOR","","",null,null],[17,"BLEND_DST","","",null,null],[17,"BLEND_DST_ALPHA","","",null,null],[17,"BLEND_DST_RGB","","",null,null],[17,"BLEND_EQUATION","","",null,null],[17,"BLEND_EQUATION_ALPHA","","",null,null],[17,"BLEND_EQUATION_RGB","","",null,null],[17,"BLEND_SRC","","",null,null],[17,"BLEND_SRC_ALPHA","","",null,null],[17,"BLEND_SRC_RGB","","",null,null],[17,"BLOCK_INDEX","","",null,null],[17,"BLUE","","",null,null],[17,"BLUE_INTEGER","","",null,null],[17,"BOOL","","",null,null],[17,"BOOL_VEC2","","",null,null],[17,"BOOL_VEC3","","",null,null],[17,"BOOL_VEC4","","",null,null],[17,"BUFFER","","",null,null],[17,"BUFFER_ACCESS","","",null,null],[17,"BUFFER_ACCESS_FLAGS","","",null,null],[17,"BUFFER_BINDING","","",null,null],[17,"BUFFER_DATA_SIZE","","",null,null],[17,"BUFFER_IMMUTABLE_STORAGE","","",null,null],[17,"BUFFER_MAPPED","","",null,null],[17,"BUFFER_MAP_LENGTH","","",null,null],[17,"BUFFER_MAP_OFFSET","","",null,null],[17,"BUFFER_MAP_POINTER","","",null,null],[17,"BUFFER_SIZE","","",null,null],[17,"BUFFER_STORAGE_FLAGS","","",null,null],[17,"BUFFER_UPDATE_BARRIER_BIT","","",null,null],[17,"BUFFER_USAGE","","",null,null],[17,"BUFFER_VARIABLE","","",null,null],[17,"BYTE","","",null,null],[17,"CAVEAT_SUPPORT","","",null,null],[17,"CCW","","",null,null],[17,"CLAMP_READ_COLOR","","",null,null],[17,"CLAMP_TO_BORDER","","",null,null],[17,"CLAMP_TO_EDGE","","",null,null],[17,"CLEAR","","",null,null],[17,"CLEAR_BUFFER","","",null,null],[17,"CLEAR_TEXTURE","","",null,null],[17,"CLIENT_MAPPED_BUFFER_BARRIER_BIT","","",null,null],[17,"CLIENT_STORAGE_BIT","","",null,null],[17,"CLIP_DEPTH_MODE","","",null,null],[17,"CLIP_DISTANCE0","","",null,null],[17,"CLIP_DISTANCE1","","",null,null],[17,"CLIP_DISTANCE2","","",null,null],[17,"CLIP_DISTANCE3","","",null,null],[17,"CLIP_DISTANCE4","","",null,null],[17,"CLIP_DISTANCE5","","",null,null],[17,"CLIP_DISTANCE6","","",null,null],[17,"CLIP_DISTANCE7","","",null,null],[17,"CLIP_ORIGIN","","",null,null],[17,"COLOR","","",null,null],[17,"COLOR_ATTACHMENT0","","",null,null],[17,"COLOR_ATTACHMENT1","","",null,null],[17,"COLOR_ATTACHMENT10","","",null,null],[17,"COLOR_ATTACHMENT11","","",null,null],[17,"COLOR_ATTACHMENT12","","",null,null],[17,"COLOR_ATTACHMENT13","","",null,null],[17,"COLOR_ATTACHMENT14","","",null,null],[17,"COLOR_ATTACHMENT15","","",null,null],[17,"COLOR_ATTACHMENT16","","",null,null],[17,"COLOR_ATTACHMENT17","","",null,null],[17,"COLOR_ATTACHMENT18","","",null,null],[17,"COLOR_ATTACHMENT19","","",null,null],[17,"COLOR_ATTACHMENT2","","",null,null],[17,"COLOR_ATTACHMENT20","","",null,null],[17,"COLOR_ATTACHMENT21","","",null,null],[17,"COLOR_ATTACHMENT22","","",null,null],[17,"COLOR_ATTACHMENT23","","",null,null],[17,"COLOR_ATTACHMENT24","","",null,null],[17,"COLOR_ATTACHMENT25","","",null,null],[17,"COLOR_ATTACHMENT26","","",null,null],[17,"COLOR_ATTACHMENT27","","",null,null],[17,"COLOR_ATTACHMENT28","","",null,null],[17,"COLOR_ATTACHMENT29","","",null,null],[17,"COLOR_ATTACHMENT3","","",null,null],[17,"COLOR_ATTACHMENT30","","",null,null],[17,"COLOR_ATTACHMENT31","","",null,null],[17,"COLOR_ATTACHMENT4","","",null,null],[17,"COLOR_ATTACHMENT5","","",null,null],[17,"COLOR_ATTACHMENT6","","",null,null],[17,"COLOR_ATTACHMENT7","","",null,null],[17,"COLOR_ATTACHMENT8","","",null,null],[17,"COLOR_ATTACHMENT9","","",null,null],[17,"COLOR_BUFFER_BIT","","",null,null],[17,"COLOR_CLEAR_VALUE","","",null,null],[17,"COLOR_COMPONENTS","","",null,null],[17,"COLOR_ENCODING","","",null,null],[17,"COLOR_LOGIC_OP","","",null,null],[17,"COLOR_RENDERABLE","","",null,null],[17,"COLOR_WRITEMASK","","",null,null],[17,"COMMAND_BARRIER_BIT","","",null,null],[17,"COMPARE_REF_TO_TEXTURE","","",null,null],[17,"COMPATIBLE_SUBROUTINES","","",null,null],[17,"COMPILE_STATUS","","",null,null],[17,"COMPRESSED_R11_EAC","","",null,null],[17,"COMPRESSED_RED","","",null,null],[17,"COMPRESSED_RED_RGTC1","","",null,null],[17,"COMPRESSED_RG","","",null,null],[17,"COMPRESSED_RG11_EAC","","",null,null],[17,"COMPRESSED_RGB","","",null,null],[17,"COMPRESSED_RGB8_ETC2","","",null,null],[17,"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",null,null],[17,"COMPRESSED_RGBA","","",null,null],[17,"COMPRESSED_RGBA8_ETC2_EAC","","",null,null],[17,"COMPRESSED_RGBA_BPTC_UNORM","","",null,null],[17,"COMPRESSED_RGB_BPTC_SIGNED_FLOAT","","",null,null],[17,"COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","","",null,null],[17,"COMPRESSED_RG_RGTC2","","",null,null],[17,"COMPRESSED_SIGNED_R11_EAC","","",null,null],[17,"COMPRESSED_SIGNED_RED_RGTC1","","",null,null],[17,"COMPRESSED_SIGNED_RG11_EAC","","",null,null],[17,"COMPRESSED_SIGNED_RG_RGTC2","","",null,null],[17,"COMPRESSED_SRGB","","",null,null],[17,"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","","",null,null],[17,"COMPRESSED_SRGB8_ETC2","","",null,null],[17,"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",null,null],[17,"COMPRESSED_SRGB_ALPHA","","",null,null],[17,"COMPRESSED_SRGB_ALPHA_BPTC_UNORM","","",null,null],[17,"COMPRESSED_TEXTURE_FORMATS","","",null,null],[17,"COMPUTE_SHADER","","",null,null],[17,"COMPUTE_SHADER_BIT","","",null,null],[17,"COMPUTE_SUBROUTINE","","",null,null],[17,"COMPUTE_SUBROUTINE_UNIFORM","","",null,null],[17,"COMPUTE_TEXTURE","","",null,null],[17,"COMPUTE_WORK_GROUP_SIZE","","",null,null],[17,"CONDITION_SATISFIED","","",null,null],[17,"CONSTANT_ALPHA","","",null,null],[17,"CONSTANT_COLOR","","",null,null],[17,"CONTEXT_COMPATIBILITY_PROFILE_BIT","","",null,null],[17,"CONTEXT_CORE_PROFILE_BIT","","",null,null],[17,"CONTEXT_FLAGS","","",null,null],[17,"CONTEXT_FLAG_DEBUG_BIT","","",null,null],[17,"CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","","",null,null],[17,"CONTEXT_FLAG_ROBUST_ACCESS_BIT","","",null,null],[17,"CONTEXT_LOST","","",null,null],[17,"CONTEXT_PROFILE_MASK","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR_FLUSH","","",null,null],[17,"COPY","","",null,null],[17,"COPY_INVERTED","","",null,null],[17,"COPY_READ_BUFFER","","",null,null],[17,"COPY_READ_BUFFER_BINDING","","",null,null],[17,"COPY_WRITE_BUFFER","","",null,null],[17,"COPY_WRITE_BUFFER_BINDING","","",null,null],[17,"CULL_FACE","","",null,null],[17,"CULL_FACE_MODE","","",null,null],[17,"CURRENT_PROGRAM","","",null,null],[17,"CURRENT_QUERY","","",null,null],[17,"CURRENT_VERTEX_ATTRIB","","",null,null],[17,"CW","","",null,null],[17,"DEBUG_CALLBACK_FUNCTION","","",null,null],[17,"DEBUG_CALLBACK_USER_PARAM","","",null,null],[17,"DEBUG_GROUP_STACK_DEPTH","","",null,null],[17,"DEBUG_LOGGED_MESSAGES","","",null,null],[17,"DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","","",null,null],[17,"DEBUG_OUTPUT","","",null,null],[17,"DEBUG_OUTPUT_SYNCHRONOUS","","",null,null],[17,"DEBUG_SEVERITY_HIGH","","",null,null],[17,"DEBUG_SEVERITY_LOW","","",null,null],[17,"DEBUG_SEVERITY_MEDIUM","","",null,null],[17,"DEBUG_SEVERITY_NOTIFICATION","","",null,null],[17,"DEBUG_SOURCE_API","","",null,null],[17,"DEBUG_SOURCE_APPLICATION","","",null,null],[17,"DEBUG_SOURCE_OTHER","","",null,null],[17,"DEBUG_SOURCE_SHADER_COMPILER","","",null,null],[17,"DEBUG_SOURCE_THIRD_PARTY","","",null,null],[17,"DEBUG_SOURCE_WINDOW_SYSTEM","","",null,null],[17,"DEBUG_TYPE_DEPRECATED_BEHAVIOR","","",null,null],[17,"DEBUG_TYPE_ERROR","","",null,null],[17,"DEBUG_TYPE_MARKER","","",null,null],[17,"DEBUG_TYPE_OTHER","","",null,null],[17,"DEBUG_TYPE_PERFORMANCE","","",null,null],[17,"DEBUG_TYPE_POP_GROUP","","",null,null],[17,"DEBUG_TYPE_PORTABILITY","","",null,null],[17,"DEBUG_TYPE_PUSH_GROUP","","",null,null],[17,"DEBUG_TYPE_UNDEFINED_BEHAVIOR","","",null,null],[17,"DECR","","",null,null],[17,"DECR_WRAP","","",null,null],[17,"DELETE_STATUS","","",null,null],[17,"DEPTH","","",null,null],[17,"DEPTH24_STENCIL8","","",null,null],[17,"DEPTH32F_STENCIL8","","",null,null],[17,"DEPTH_ATTACHMENT","","",null,null],[17,"DEPTH_BUFFER_BIT","","",null,null],[17,"DEPTH_CLAMP","","",null,null],[17,"DEPTH_CLEAR_VALUE","","",null,null],[17,"DEPTH_COMPONENT","","",null,null],[17,"DEPTH_COMPONENT16","","",null,null],[17,"DEPTH_COMPONENT24","","",null,null],[17,"DEPTH_COMPONENT32","","",null,null],[17,"DEPTH_COMPONENT32F","","",null,null],[17,"DEPTH_COMPONENTS","","",null,null],[17,"DEPTH_FUNC","","",null,null],[17,"DEPTH_RANGE","","",null,null],[17,"DEPTH_RENDERABLE","","",null,null],[17,"DEPTH_STENCIL","","",null,null],[17,"DEPTH_STENCIL_ATTACHMENT","","",null,null],[17,"DEPTH_STENCIL_TEXTURE_MODE","","",null,null],[17,"DEPTH_TEST","","",null,null],[17,"DEPTH_WRITEMASK","","",null,null],[17,"DISPATCH_INDIRECT_BUFFER","","",null,null],[17,"DISPATCH_INDIRECT_BUFFER_BINDING","","",null,null],[17,"DISPLAY_LIST","","",null,null],[17,"DITHER","","",null,null],[17,"DONT_CARE","","",null,null],[17,"DOUBLE","","",null,null],[17,"DOUBLEBUFFER","","",null,null],[17,"DOUBLE_MAT2","","",null,null],[17,"DOUBLE_MAT2x3","","",null,null],[17,"DOUBLE_MAT2x4","","",null,null],[17,"DOUBLE_MAT3","","",null,null],[17,"DOUBLE_MAT3x2","","",null,null],[17,"DOUBLE_MAT3x4","","",null,null],[17,"DOUBLE_MAT4","","",null,null],[17,"DOUBLE_MAT4x2","","",null,null],[17,"DOUBLE_MAT4x3","","",null,null],[17,"DOUBLE_VEC2","","",null,null],[17,"DOUBLE_VEC3","","",null,null],[17,"DOUBLE_VEC4","","",null,null],[17,"DRAW_BUFFER","","",null,null],[17,"DRAW_BUFFER0","","",null,null],[17,"DRAW_BUFFER1","","",null,null],[17,"DRAW_BUFFER10","","",null,null],[17,"DRAW_BUFFER11","","",null,null],[17,"DRAW_BUFFER12","","",null,null],[17,"DRAW_BUFFER13","","",null,null],[17,"DRAW_BUFFER14","","",null,null],[17,"DRAW_BUFFER15","","",null,null],[17,"DRAW_BUFFER2","","",null,null],[17,"DRAW_BUFFER3","","",null,null],[17,"DRAW_BUFFER4","","",null,null],[17,"DRAW_BUFFER5","","",null,null],[17,"DRAW_BUFFER6","","",null,null],[17,"DRAW_BUFFER7","","",null,null],[17,"DRAW_BUFFER8","","",null,null],[17,"DRAW_BUFFER9","","",null,null],[17,"DRAW_FRAMEBUFFER","","",null,null],[17,"DRAW_FRAMEBUFFER_BINDING","","",null,null],[17,"DRAW_INDIRECT_BUFFER","","",null,null],[17,"DRAW_INDIRECT_BUFFER_BINDING","","",null,null],[17,"DST_ALPHA","","",null,null],[17,"DST_COLOR","","",null,null],[17,"DYNAMIC_COPY","","",null,null],[17,"DYNAMIC_DRAW","","",null,null],[17,"DYNAMIC_READ","","",null,null],[17,"DYNAMIC_STORAGE_BIT","","",null,null],[17,"ELEMENT_ARRAY_BARRIER_BIT","","",null,null],[17,"ELEMENT_ARRAY_BUFFER","","",null,null],[17,"ELEMENT_ARRAY_BUFFER_BINDING","","",null,null],[17,"EQUAL","","",null,null],[17,"EQUIV","","",null,null],[17,"EXTENSIONS","","",null,null],[17,"FALSE","","",null,null],[17,"FASTEST","","",null,null],[17,"FILL","","",null,null],[17,"FILTER","","",null,null],[17,"FIRST_VERTEX_CONVENTION","","",null,null],[17,"FIXED","","",null,null],[17,"FIXED_ONLY","","",null,null],[17,"FLOAT","","",null,null],[17,"FLOAT_32_UNSIGNED_INT_24_8_REV","","",null,null],[17,"FLOAT_MAT2","","",null,null],[17,"FLOAT_MAT2x3","","",null,null],[17,"FLOAT_MAT2x4","","",null,null],[17,"FLOAT_MAT3","","",null,null],[17,"FLOAT_MAT3x2","","",null,null],[17,"FLOAT_MAT3x4","","",null,null],[17,"FLOAT_MAT4","","",null,null],[17,"FLOAT_MAT4x2","","",null,null],[17,"FLOAT_MAT4x3","","",null,null],[17,"FLOAT_VEC2","","",null,null],[17,"FLOAT_VEC3","","",null,null],[17,"FLOAT_VEC4","","",null,null],[17,"FRACTIONAL_EVEN","","",null,null],[17,"FRACTIONAL_ODD","","",null,null],[17,"FRAGMENT_INTERPOLATION_OFFSET_BITS","","",null,null],[17,"FRAGMENT_SHADER","","",null,null],[17,"FRAGMENT_SHADER_BIT","","",null,null],[17,"FRAGMENT_SHADER_DERIVATIVE_HINT","","",null,null],[17,"FRAGMENT_SUBROUTINE","","",null,null],[17,"FRAGMENT_SUBROUTINE_UNIFORM","","",null,null],[17,"FRAGMENT_TEXTURE","","",null,null],[17,"FRAMEBUFFER","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_LAYERED","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_RED_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","","",null,null],[17,"FRAMEBUFFER_BARRIER_BIT","","",null,null],[17,"FRAMEBUFFER_BINDING","","",null,null],[17,"FRAMEBUFFER_BLEND","","",null,null],[17,"FRAMEBUFFER_COMPLETE","","",null,null],[17,"FRAMEBUFFER_DEFAULT","","",null,null],[17,"FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","","",null,null],[17,"FRAMEBUFFER_DEFAULT_HEIGHT","","",null,null],[17,"FRAMEBUFFER_DEFAULT_LAYERS","","",null,null],[17,"FRAMEBUFFER_DEFAULT_SAMPLES","","",null,null],[17,"FRAMEBUFFER_DEFAULT_WIDTH","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_READ_BUFFER","","",null,null],[17,"FRAMEBUFFER_RENDERABLE","","",null,null],[17,"FRAMEBUFFER_RENDERABLE_LAYERED","","",null,null],[17,"FRAMEBUFFER_SRGB","","",null,null],[17,"FRAMEBUFFER_UNDEFINED","","",null,null],[17,"FRAMEBUFFER_UNSUPPORTED","","",null,null],[17,"FRONT","","",null,null],[17,"FRONT_AND_BACK","","",null,null],[17,"FRONT_FACE","","",null,null],[17,"FRONT_LEFT","","",null,null],[17,"FRONT_RIGHT","","",null,null],[17,"FULL_SUPPORT","","",null,null],[17,"FUNC_ADD","","",null,null],[17,"FUNC_REVERSE_SUBTRACT","","",null,null],[17,"FUNC_SUBTRACT","","",null,null],[17,"GEOMETRY_INPUT_TYPE","","",null,null],[17,"GEOMETRY_OUTPUT_TYPE","","",null,null],[17,"GEOMETRY_SHADER","","",null,null],[17,"GEOMETRY_SHADER_BIT","","",null,null],[17,"GEOMETRY_SHADER_INVOCATIONS","","",null,null],[17,"GEOMETRY_SUBROUTINE","","",null,null],[17,"GEOMETRY_SUBROUTINE_UNIFORM","","",null,null],[17,"GEOMETRY_TEXTURE","","",null,null],[17,"GEOMETRY_VERTICES_OUT","","",null,null],[17,"GEQUAL","","",null,null],[17,"GET_TEXTURE_IMAGE_FORMAT","","",null,null],[17,"GET_TEXTURE_IMAGE_TYPE","","",null,null],[17,"GREATER","","",null,null],[17,"GREEN","","",null,null],[17,"GREEN_INTEGER","","",null,null],[17,"GUILTY_CONTEXT_RESET","","",null,null],[17,"HALF_FLOAT","","",null,null],[17,"HIGH_FLOAT","","",null,null],[17,"HIGH_INT","","",null,null],[17,"IMAGE_1D","","",null,null],[17,"IMAGE_1D_ARRAY","","",null,null],[17,"IMAGE_2D","","",null,null],[17,"IMAGE_2D_ARRAY","","",null,null],[17,"IMAGE_2D_MULTISAMPLE","","",null,null],[17,"IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"IMAGE_2D_RECT","","",null,null],[17,"IMAGE_3D","","",null,null],[17,"IMAGE_BINDING_ACCESS","","",null,null],[17,"IMAGE_BINDING_FORMAT","","",null,null],[17,"IMAGE_BINDING_LAYER","","",null,null],[17,"IMAGE_BINDING_LAYERED","","",null,null],[17,"IMAGE_BINDING_LEVEL","","",null,null],[17,"IMAGE_BINDING_NAME","","",null,null],[17,"IMAGE_BUFFER","","",null,null],[17,"IMAGE_CLASS_10_10_10_2","","",null,null],[17,"IMAGE_CLASS_11_11_10","","",null,null],[17,"IMAGE_CLASS_1_X_16","","",null,null],[17,"IMAGE_CLASS_1_X_32","","",null,null],[17,"IMAGE_CLASS_1_X_8","","",null,null],[17,"IMAGE_CLASS_2_X_16","","",null,null],[17,"IMAGE_CLASS_2_X_32","","",null,null],[17,"IMAGE_CLASS_2_X_8","","",null,null],[17,"IMAGE_CLASS_4_X_16","","",null,null],[17,"IMAGE_CLASS_4_X_32","","",null,null],[17,"IMAGE_CLASS_4_X_8","","",null,null],[17,"IMAGE_COMPATIBILITY_CLASS","","",null,null],[17,"IMAGE_CUBE","","",null,null],[17,"IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_TYPE","","",null,null],[17,"IMAGE_PIXEL_FORMAT","","",null,null],[17,"IMAGE_PIXEL_TYPE","","",null,null],[17,"IMAGE_TEXEL_SIZE","","",null,null],[17,"IMPLEMENTATION_COLOR_READ_FORMAT","","",null,null],[17,"IMPLEMENTATION_COLOR_READ_TYPE","","",null,null],[17,"INCR","","",null,null],[17,"INCR_WRAP","","",null,null],[17,"INDEX","","",null,null],[17,"INFO_LOG_LENGTH","","",null,null],[17,"INNOCENT_CONTEXT_RESET","","",null,null],[17,"INT","","",null,null],[17,"INTERLEAVED_ATTRIBS","","",null,null],[17,"INTERNALFORMAT_ALPHA_SIZE","","",null,null],[17,"INTERNALFORMAT_ALPHA_TYPE","","",null,null],[17,"INTERNALFORMAT_BLUE_SIZE","","",null,null],[17,"INTERNALFORMAT_BLUE_TYPE","","",null,null],[17,"INTERNALFORMAT_DEPTH_SIZE","","",null,null],[17,"INTERNALFORMAT_DEPTH_TYPE","","",null,null],[17,"INTERNALFORMAT_GREEN_SIZE","","",null,null],[17,"INTERNALFORMAT_GREEN_TYPE","","",null,null],[17,"INTERNALFORMAT_PREFERRED","","",null,null],[17,"INTERNALFORMAT_RED_SIZE","","",null,null],[17,"INTERNALFORMAT_RED_TYPE","","",null,null],[17,"INTERNALFORMAT_SHARED_SIZE","","",null,null],[17,"INTERNALFORMAT_STENCIL_SIZE","","",null,null],[17,"INTERNALFORMAT_STENCIL_TYPE","","",null,null],[17,"INTERNALFORMAT_SUPPORTED","","",null,null],[17,"INT_2_10_10_10_REV","","",null,null],[17,"INT_IMAGE_1D","","",null,null],[17,"INT_IMAGE_1D_ARRAY","","",null,null],[17,"INT_IMAGE_2D","","",null,null],[17,"INT_IMAGE_2D_ARRAY","","",null,null],[17,"INT_IMAGE_2D_MULTISAMPLE","","",null,null],[17,"INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"INT_IMAGE_2D_RECT","","",null,null],[17,"INT_IMAGE_3D","","",null,null],[17,"INT_IMAGE_BUFFER","","",null,null],[17,"INT_IMAGE_CUBE","","",null,null],[17,"INT_IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"INT_SAMPLER_1D","","",null,null],[17,"INT_SAMPLER_1D_ARRAY","","",null,null],[17,"INT_SAMPLER_2D","","",null,null],[17,"INT_SAMPLER_2D_ARRAY","","",null,null],[17,"INT_SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"INT_SAMPLER_2D_RECT","","",null,null],[17,"INT_SAMPLER_3D","","",null,null],[17,"INT_SAMPLER_BUFFER","","",null,null],[17,"INT_SAMPLER_CUBE","","",null,null],[17,"INT_SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"INT_VEC2","","",null,null],[17,"INT_VEC3","","",null,null],[17,"INT_VEC4","","",null,null],[17,"INVALID_ENUM","","",null,null],[17,"INVALID_FRAMEBUFFER_OPERATION","","",null,null],[17,"INVALID_INDEX","","",null,null],[17,"INVALID_OPERATION","","",null,null],[17,"INVALID_VALUE","","",null,null],[17,"INVERT","","",null,null],[17,"ISOLINES","","",null,null],[17,"IS_PER_PATCH","","",null,null],[17,"IS_ROW_MAJOR","","",null,null],[17,"KEEP","","",null,null],[17,"LAST_VERTEX_CONVENTION","","",null,null],[17,"LAYER_PROVOKING_VERTEX","","",null,null],[17,"LEFT","","",null,null],[17,"LEQUAL","","",null,null],[17,"LESS","","",null,null],[17,"LINE","","",null,null],[17,"LINEAR","","",null,null],[17,"LINEAR_MIPMAP_LINEAR","","",null,null],[17,"LINEAR_MIPMAP_NEAREST","","",null,null],[17,"LINES","","",null,null],[17,"LINES_ADJACENCY","","",null,null],[17,"LINE_LOOP","","",null,null],[17,"LINE_SMOOTH","","",null,null],[17,"LINE_SMOOTH_HINT","","",null,null],[17,"LINE_STRIP","","",null,null],[17,"LINE_STRIP_ADJACENCY","","",null,null],[17,"LINE_WIDTH","","",null,null],[17,"LINE_WIDTH_GRANULARITY","","",null,null],[17,"LINE_WIDTH_RANGE","","",null,null],[17,"LINK_STATUS","","",null,null],[17,"LOCATION","","",null,null],[17,"LOCATION_COMPONENT","","",null,null],[17,"LOCATION_INDEX","","",null,null],[17,"LOGIC_OP_MODE","","",null,null],[17,"LOSE_CONTEXT_ON_RESET","","",null,null],[17,"LOWER_LEFT","","",null,null],[17,"LOW_FLOAT","","",null,null],[17,"LOW_INT","","",null,null],[17,"MAJOR_VERSION","","",null,null],[17,"MANUAL_GENERATE_MIPMAP","","",null,null],[17,"MAP_COHERENT_BIT","","",null,null],[17,"MAP_FLUSH_EXPLICIT_BIT","","",null,null],[17,"MAP_INVALIDATE_BUFFER_BIT","","",null,null],[17,"MAP_INVALIDATE_RANGE_BIT","","",null,null],[17,"MAP_PERSISTENT_BIT","","",null,null],[17,"MAP_READ_BIT","","",null,null],[17,"MAP_UNSYNCHRONIZED_BIT","","",null,null],[17,"MAP_WRITE_BIT","","",null,null],[17,"MATRIX_STRIDE","","",null,null],[17,"MAX","","",null,null],[17,"MAX_3D_TEXTURE_SIZE","","",null,null],[17,"MAX_ARRAY_TEXTURE_LAYERS","","",null,null],[17,"MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","","",null,null],[17,"MAX_ATOMIC_COUNTER_BUFFER_SIZE","","",null,null],[17,"MAX_CLIP_DISTANCES","","",null,null],[17,"MAX_COLOR_ATTACHMENTS","","",null,null],[17,"MAX_COLOR_TEXTURE_SAMPLES","","",null,null],[17,"MAX_COMBINED_ATOMIC_COUNTERS","","",null,null],[17,"MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_COMBINED_CLIP_AND_CULL_DISTANCES","","",null,null],[17,"MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_DIMENSIONS","","",null,null],[17,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_IMAGE_UNIFORMS","","",null,null],[17,"MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","","",null,null],[17,"MAX_COMBINED_SHADER_OUTPUT_RESOURCES","","",null,null],[17,"MAX_COMBINED_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_COMBINED_UNIFORM_BLOCKS","","",null,null],[17,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMPUTE_ATOMIC_COUNTERS","","",null,null],[17,"MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_COMPUTE_IMAGE_UNIFORMS","","",null,null],[17,"MAX_COMPUTE_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_COMPUTE_SHARED_MEMORY_SIZE","","",null,null],[17,"MAX_COMPUTE_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_COMPUTE_UNIFORM_BLOCKS","","",null,null],[17,"MAX_COMPUTE_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_COUNT","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_INVOCATIONS","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_SIZE","","",null,null],[17,"MAX_CUBE_MAP_TEXTURE_SIZE","","",null,null],[17,"MAX_CULL_DISTANCES","","",null,null],[17,"MAX_DEBUG_GROUP_STACK_DEPTH","","",null,null],[17,"MAX_DEBUG_LOGGED_MESSAGES","","",null,null],[17,"MAX_DEBUG_MESSAGE_LENGTH","","",null,null],[17,"MAX_DEPTH","","",null,null],[17,"MAX_DEPTH_TEXTURE_SAMPLES","","",null,null],[17,"MAX_DRAW_BUFFERS","","",null,null],[17,"MAX_DUAL_SOURCE_DRAW_BUFFERS","","",null,null],[17,"MAX_ELEMENTS_INDICES","","",null,null],[17,"MAX_ELEMENTS_VERTICES","","",null,null],[17,"MAX_ELEMENT_INDEX","","",null,null],[17,"MAX_FRAGMENT_ATOMIC_COUNTERS","","",null,null],[17,"MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_FRAGMENT_IMAGE_UNIFORMS","","",null,null],[17,"MAX_FRAGMENT_INPUT_COMPONENTS","","",null,null],[17,"MAX_FRAGMENT_INTERPOLATION_OFFSET","","",null,null],[17,"MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_BLOCKS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_VECTORS","","",null,null],[17,"MAX_FRAMEBUFFER_HEIGHT","","",null,null],[17,"MAX_FRAMEBUFFER_LAYERS","","",null,null],[17,"MAX_FRAMEBUFFER_SAMPLES","","",null,null],[17,"MAX_FRAMEBUFFER_WIDTH","","",null,null],[17,"MAX_GEOMETRY_ATOMIC_COUNTERS","","",null,null],[17,"MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_GEOMETRY_IMAGE_UNIFORMS","","",null,null],[17,"MAX_GEOMETRY_INPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_OUTPUT_VERTICES","","",null,null],[17,"MAX_GEOMETRY_SHADER_INVOCATIONS","","",null,null],[17,"MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_UNIFORM_BLOCKS","","",null,null],[17,"MAX_GEOMETRY_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_HEIGHT","","",null,null],[17,"MAX_IMAGE_SAMPLES","","",null,null],[17,"MAX_IMAGE_UNITS","","",null,null],[17,"MAX_INTEGER_SAMPLES","","",null,null],[17,"MAX_LABEL_LENGTH","","",null,null],[17,"MAX_LAYERS","","",null,null],[17,"MAX_NAME_LENGTH","","",null,null],[17,"MAX_NUM_ACTIVE_VARIABLES","","",null,null],[17,"MAX_NUM_COMPATIBLE_SUBROUTINES","","",null,null],[17,"MAX_PATCH_VERTICES","","",null,null],[17,"MAX_PROGRAM_TEXEL_OFFSET","","",null,null],[17,"MAX_PROGRAM_TEXTURE_GATHER_OFFSET","","",null,null],[17,"MAX_RECTANGLE_TEXTURE_SIZE","","",null,null],[17,"MAX_RENDERBUFFER_SIZE","","",null,null],[17,"MAX_SAMPLES","","",null,null],[17,"MAX_SAMPLE_MASK_WORDS","","",null,null],[17,"MAX_SERVER_WAIT_TIMEOUT","","",null,null],[17,"MAX_SHADER_STORAGE_BLOCK_SIZE","","",null,null],[17,"MAX_SHADER_STORAGE_BUFFER_BINDINGS","","",null,null],[17,"MAX_SUBROUTINES","","",null,null],[17,"MAX_SUBROUTINE_UNIFORM_LOCATIONS","","",null,null],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTERS","","",null,null],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_TESS_CONTROL_IMAGE_UNIFORMS","","",null,null],[17,"MAX_TESS_CONTROL_INPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_UNIFORM_BLOCKS","","",null,null],[17,"MAX_TESS_CONTROL_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTERS","","",null,null],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_TESS_EVALUATION_IMAGE_UNIFORMS","","",null,null],[17,"MAX_TESS_EVALUATION_INPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TESS_EVALUATION_UNIFORM_BLOCKS","","",null,null],[17,"MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_TESS_GEN_LEVEL","","",null,null],[17,"MAX_TESS_PATCH_COMPONENTS","","",null,null],[17,"MAX_TEXTURE_BUFFER_SIZE","","",null,null],[17,"MAX_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TEXTURE_LOD_BIAS","","",null,null],[17,"MAX_TEXTURE_MAX_ANISOTROPY_EXT","","",null,null],[17,"MAX_TEXTURE_SIZE","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_BUFFERS","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","","",null,null],[17,"MAX_UNIFORM_BLOCK_SIZE","","",null,null],[17,"MAX_UNIFORM_BUFFER_BINDINGS","","",null,null],[17,"MAX_UNIFORM_LOCATIONS","","",null,null],[17,"MAX_VARYING_COMPONENTS","","",null,null],[17,"MAX_VARYING_FLOATS","","",null,null],[17,"MAX_VARYING_VECTORS","","",null,null],[17,"MAX_VERTEX_ATOMIC_COUNTERS","","",null,null],[17,"MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_VERTEX_ATTRIBS","","",null,null],[17,"MAX_VERTEX_ATTRIB_BINDINGS","","",null,null],[17,"MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","","",null,null],[17,"MAX_VERTEX_ATTRIB_STRIDE","","",null,null],[17,"MAX_VERTEX_IMAGE_UNIFORMS","","",null,null],[17,"MAX_VERTEX_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_VERTEX_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_VERTEX_STREAMS","","",null,null],[17,"MAX_VERTEX_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_VERTEX_UNIFORM_BLOCKS","","",null,null],[17,"MAX_VERTEX_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_VERTEX_UNIFORM_VECTORS","","",null,null],[17,"MAX_VIEWPORTS","","",null,null],[17,"MAX_VIEWPORT_DIMS","","",null,null],[17,"MAX_WIDTH","","",null,null],[17,"MEDIUM_FLOAT","","",null,null],[17,"MEDIUM_INT","","",null,null],[17,"MIN","","",null,null],[17,"MINOR_VERSION","","",null,null],[17,"MIN_FRAGMENT_INTERPOLATION_OFFSET","","",null,null],[17,"MIN_MAP_BUFFER_ALIGNMENT","","",null,null],[17,"MIN_PROGRAM_TEXEL_OFFSET","","",null,null],[17,"MIN_PROGRAM_TEXTURE_GATHER_OFFSET","","",null,null],[17,"MIN_SAMPLE_SHADING_VALUE","","",null,null],[17,"MIPMAP","","",null,null],[17,"MIRRORED_REPEAT","","",null,null],[17,"MIRROR_CLAMP_TO_EDGE","","",null,null],[17,"MULTISAMPLE","","",null,null],[17,"NAME_LENGTH","","",null,null],[17,"NAND","","",null,null],[17,"NEAREST","","",null,null],[17,"NEAREST_MIPMAP_LINEAR","","",null,null],[17,"NEAREST_MIPMAP_NEAREST","","",null,null],[17,"NEGATIVE_ONE_TO_ONE","","",null,null],[17,"NEVER","","",null,null],[17,"NICEST","","",null,null],[17,"NONE","","",null,null],[17,"NOOP","","",null,null],[17,"NOR","","",null,null],[17,"NOTEQUAL","","",null,null],[17,"NO_ERROR","","",null,null],[17,"NO_RESET_NOTIFICATION","","",null,null],[17,"NUM_ACTIVE_VARIABLES","","",null,null],[17,"NUM_COMPATIBLE_SUBROUTINES","","",null,null],[17,"NUM_COMPRESSED_TEXTURE_FORMATS","","",null,null],[17,"NUM_EXTENSIONS","","",null,null],[17,"NUM_PROGRAM_BINARY_FORMATS","","",null,null],[17,"NUM_SAMPLE_COUNTS","","",null,null],[17,"NUM_SHADER_BINARY_FORMATS","","",null,null],[17,"NUM_SHADING_LANGUAGE_VERSIONS","","",null,null],[17,"OBJECT_TYPE","","",null,null],[17,"OFFSET","","",null,null],[17,"ONE","","",null,null],[17,"ONE_MINUS_CONSTANT_ALPHA","","",null,null],[17,"ONE_MINUS_CONSTANT_COLOR","","",null,null],[17,"ONE_MINUS_DST_ALPHA","","",null,null],[17,"ONE_MINUS_DST_COLOR","","",null,null],[17,"ONE_MINUS_SRC1_ALPHA","","",null,null],[17,"ONE_MINUS_SRC1_COLOR","","",null,null],[17,"ONE_MINUS_SRC_ALPHA","","",null,null],[17,"ONE_MINUS_SRC_COLOR","","",null,null],[17,"OR","","",null,null],[17,"OR_INVERTED","","",null,null],[17,"OR_REVERSE","","",null,null],[17,"OUT_OF_MEMORY","","",null,null],[17,"PACK_ALIGNMENT","","",null,null],[17,"PACK_COMPRESSED_BLOCK_DEPTH","","",null,null],[17,"PACK_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"PACK_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"PACK_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"PACK_IMAGE_HEIGHT","","",null,null],[17,"PACK_LSB_FIRST","","",null,null],[17,"PACK_ROW_LENGTH","","",null,null],[17,"PACK_SKIP_IMAGES","","",null,null],[17,"PACK_SKIP_PIXELS","","",null,null],[17,"PACK_SKIP_ROWS","","",null,null],[17,"PACK_SWAP_BYTES","","",null,null],[17,"PATCHES","","",null,null],[17,"PATCH_DEFAULT_INNER_LEVEL","","",null,null],[17,"PATCH_DEFAULT_OUTER_LEVEL","","",null,null],[17,"PATCH_VERTICES","","",null,null],[17,"PIXEL_BUFFER_BARRIER_BIT","","",null,null],[17,"PIXEL_PACK_BUFFER","","",null,null],[17,"PIXEL_PACK_BUFFER_BINDING","","",null,null],[17,"PIXEL_UNPACK_BUFFER","","",null,null],[17,"PIXEL_UNPACK_BUFFER_BINDING","","",null,null],[17,"POINT","","",null,null],[17,"POINTS","","",null,null],[17,"POINT_FADE_THRESHOLD_SIZE","","",null,null],[17,"POINT_SIZE","","",null,null],[17,"POINT_SIZE_GRANULARITY","","",null,null],[17,"POINT_SIZE_RANGE","","",null,null],[17,"POINT_SPRITE_COORD_ORIGIN","","",null,null],[17,"POLYGON_MODE","","",null,null],[17,"POLYGON_OFFSET_FACTOR","","",null,null],[17,"POLYGON_OFFSET_FILL","","",null,null],[17,"POLYGON_OFFSET_LINE","","",null,null],[17,"POLYGON_OFFSET_POINT","","",null,null],[17,"POLYGON_OFFSET_UNITS","","",null,null],[17,"POLYGON_SMOOTH","","",null,null],[17,"POLYGON_SMOOTH_HINT","","",null,null],[17,"PRIMITIVES_GENERATED","","",null,null],[17,"PRIMITIVE_RESTART","","",null,null],[17,"PRIMITIVE_RESTART_FIXED_INDEX","","",null,null],[17,"PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","","",null,null],[17,"PRIMITIVE_RESTART_INDEX","","",null,null],[17,"PROGRAM","","",null,null],[17,"PROGRAM_BINARY_FORMATS","","",null,null],[17,"PROGRAM_BINARY_LENGTH","","",null,null],[17,"PROGRAM_BINARY_RETRIEVABLE_HINT","","",null,null],[17,"PROGRAM_INPUT","","",null,null],[17,"PROGRAM_OUTPUT","","",null,null],[17,"PROGRAM_PIPELINE","","",null,null],[17,"PROGRAM_PIPELINE_BINDING","","",null,null],[17,"PROGRAM_POINT_SIZE","","",null,null],[17,"PROGRAM_SEPARABLE","","",null,null],[17,"PROVOKING_VERTEX","","",null,null],[17,"PROXY_TEXTURE_1D","","",null,null],[17,"PROXY_TEXTURE_1D_ARRAY","","",null,null],[17,"PROXY_TEXTURE_2D","","",null,null],[17,"PROXY_TEXTURE_2D_ARRAY","","",null,null],[17,"PROXY_TEXTURE_2D_MULTISAMPLE","","",null,null],[17,"PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"PROXY_TEXTURE_3D","","",null,null],[17,"PROXY_TEXTURE_CUBE_MAP","","",null,null],[17,"PROXY_TEXTURE_CUBE_MAP_ARRAY","","",null,null],[17,"PROXY_TEXTURE_RECTANGLE","","",null,null],[17,"QUADS","","",null,null],[17,"QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","","",null,null],[17,"QUERY","","",null,null],[17,"QUERY_BUFFER","","",null,null],[17,"QUERY_BUFFER_BARRIER_BIT","","",null,null],[17,"QUERY_BUFFER_BINDING","","",null,null],[17,"QUERY_BY_REGION_NO_WAIT","","",null,null],[17,"QUERY_BY_REGION_NO_WAIT_INVERTED","","",null,null],[17,"QUERY_BY_REGION_WAIT","","",null,null],[17,"QUERY_BY_REGION_WAIT_INVERTED","","",null,null],[17,"QUERY_COUNTER_BITS","","",null,null],[17,"QUERY_NO_WAIT","","",null,null],[17,"QUERY_NO_WAIT_INVERTED","","",null,null],[17,"QUERY_RESULT","","",null,null],[17,"QUERY_RESULT_AVAILABLE","","",null,null],[17,"QUERY_RESULT_NO_WAIT","","",null,null],[17,"QUERY_TARGET","","",null,null],[17,"QUERY_WAIT","","",null,null],[17,"QUERY_WAIT_INVERTED","","",null,null],[17,"R11F_G11F_B10F","","",null,null],[17,"R16","","",null,null],[17,"R16F","","",null,null],[17,"R16I","","",null,null],[17,"R16UI","","",null,null],[17,"R16_SNORM","","",null,null],[17,"R32F","","",null,null],[17,"R32I","","",null,null],[17,"R32UI","","",null,null],[17,"R3_G3_B2","","",null,null],[17,"R8","","",null,null],[17,"R8I","","",null,null],[17,"R8UI","","",null,null],[17,"R8_SNORM","","",null,null],[17,"RASTERIZER_DISCARD","","",null,null],[17,"READ_BUFFER","","",null,null],[17,"READ_FRAMEBUFFER","","",null,null],[17,"READ_FRAMEBUFFER_BINDING","","",null,null],[17,"READ_ONLY","","",null,null],[17,"READ_PIXELS","","",null,null],[17,"READ_PIXELS_FORMAT","","",null,null],[17,"READ_PIXELS_TYPE","","",null,null],[17,"READ_WRITE","","",null,null],[17,"RED","","",null,null],[17,"RED_INTEGER","","",null,null],[17,"REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"RENDERBUFFER","","",null,null],[17,"RENDERBUFFER_ALPHA_SIZE","","",null,null],[17,"RENDERBUFFER_BINDING","","",null,null],[17,"RENDERBUFFER_BLUE_SIZE","","",null,null],[17,"RENDERBUFFER_DEPTH_SIZE","","",null,null],[17,"RENDERBUFFER_GREEN_SIZE","","",null,null],[17,"RENDERBUFFER_HEIGHT","","",null,null],[17,"RENDERBUFFER_INTERNAL_FORMAT","","",null,null],[17,"RENDERBUFFER_RED_SIZE","","",null,null],[17,"RENDERBUFFER_SAMPLES","","",null,null],[17,"RENDERBUFFER_STENCIL_SIZE","","",null,null],[17,"RENDERBUFFER_WIDTH","","",null,null],[17,"RENDERER","","",null,null],[17,"REPEAT","","",null,null],[17,"REPLACE","","",null,null],[17,"RESET_NOTIFICATION_STRATEGY","","",null,null],[17,"RG","","",null,null],[17,"RG16","","",null,null],[17,"RG16F","","",null,null],[17,"RG16I","","",null,null],[17,"RG16UI","","",null,null],[17,"RG16_SNORM","","",null,null],[17,"RG32F","","",null,null],[17,"RG32I","","",null,null],[17,"RG32UI","","",null,null],[17,"RG8","","",null,null],[17,"RG8I","","",null,null],[17,"RG8UI","","",null,null],[17,"RG8_SNORM","","",null,null],[17,"RGB","","",null,null],[17,"RGB10","","",null,null],[17,"RGB10_A2","","",null,null],[17,"RGB10_A2UI","","",null,null],[17,"RGB12","","",null,null],[17,"RGB16","","",null,null],[17,"RGB16F","","",null,null],[17,"RGB16I","","",null,null],[17,"RGB16UI","","",null,null],[17,"RGB16_SNORM","","",null,null],[17,"RGB32F","","",null,null],[17,"RGB32I","","",null,null],[17,"RGB32UI","","",null,null],[17,"RGB4","","",null,null],[17,"RGB5","","",null,null],[17,"RGB565","","",null,null],[17,"RGB5_A1","","",null,null],[17,"RGB8","","",null,null],[17,"RGB8I","","",null,null],[17,"RGB8UI","","",null,null],[17,"RGB8_SNORM","","",null,null],[17,"RGB9_E5","","",null,null],[17,"RGBA","","",null,null],[17,"RGBA12","","",null,null],[17,"RGBA16","","",null,null],[17,"RGBA16F","","",null,null],[17,"RGBA16I","","",null,null],[17,"RGBA16UI","","",null,null],[17,"RGBA16_SNORM","","",null,null],[17,"RGBA2","","",null,null],[17,"RGBA32F","","",null,null],[17,"RGBA32I","","",null,null],[17,"RGBA32UI","","",null,null],[17,"RGBA4","","",null,null],[17,"RGBA8","","",null,null],[17,"RGBA8I","","",null,null],[17,"RGBA8UI","","",null,null],[17,"RGBA8_SNORM","","",null,null],[17,"RGBA_INTEGER","","",null,null],[17,"RGB_INTEGER","","",null,null],[17,"RG_INTEGER","","",null,null],[17,"RIGHT","","",null,null],[17,"SAMPLER","","",null,null],[17,"SAMPLER_1D","","",null,null],[17,"SAMPLER_1D_ARRAY","","",null,null],[17,"SAMPLER_1D_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_1D_SHADOW","","",null,null],[17,"SAMPLER_2D","","",null,null],[17,"SAMPLER_2D_ARRAY","","",null,null],[17,"SAMPLER_2D_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"SAMPLER_2D_RECT","","",null,null],[17,"SAMPLER_2D_RECT_SHADOW","","",null,null],[17,"SAMPLER_2D_SHADOW","","",null,null],[17,"SAMPLER_3D","","",null,null],[17,"SAMPLER_BINDING","","",null,null],[17,"SAMPLER_BUFFER","","",null,null],[17,"SAMPLER_CUBE","","",null,null],[17,"SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"SAMPLER_CUBE_MAP_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_CUBE_SHADOW","","",null,null],[17,"SAMPLES","","",null,null],[17,"SAMPLES_PASSED","","",null,null],[17,"SAMPLE_ALPHA_TO_COVERAGE","","",null,null],[17,"SAMPLE_ALPHA_TO_ONE","","",null,null],[17,"SAMPLE_BUFFERS","","",null,null],[17,"SAMPLE_COVERAGE","","",null,null],[17,"SAMPLE_COVERAGE_INVERT","","",null,null],[17,"SAMPLE_COVERAGE_VALUE","","",null,null],[17,"SAMPLE_MASK","","",null,null],[17,"SAMPLE_MASK_VALUE","","",null,null],[17,"SAMPLE_POSITION","","",null,null],[17,"SAMPLE_SHADING","","",null,null],[17,"SCISSOR_BOX","","",null,null],[17,"SCISSOR_TEST","","",null,null],[17,"SEPARATE_ATTRIBS","","",null,null],[17,"SET","","",null,null],[17,"SHADER","","",null,null],[17,"SHADER_BINARY_FORMATS","","",null,null],[17,"SHADER_COMPILER","","",null,null],[17,"SHADER_IMAGE_ACCESS_BARRIER_BIT","","",null,null],[17,"SHADER_IMAGE_ATOMIC","","",null,null],[17,"SHADER_IMAGE_LOAD","","",null,null],[17,"SHADER_IMAGE_STORE","","",null,null],[17,"SHADER_SOURCE_LENGTH","","",null,null],[17,"SHADER_STORAGE_BARRIER_BIT","","",null,null],[17,"SHADER_STORAGE_BLOCK","","",null,null],[17,"SHADER_STORAGE_BUFFER","","",null,null],[17,"SHADER_STORAGE_BUFFER_BINDING","","",null,null],[17,"SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"SHADER_STORAGE_BUFFER_SIZE","","",null,null],[17,"SHADER_STORAGE_BUFFER_START","","",null,null],[17,"SHADER_TYPE","","",null,null],[17,"SHADING_LANGUAGE_VERSION","","",null,null],[17,"SHORT","","",null,null],[17,"SIGNALED","","",null,null],[17,"SIGNED_NORMALIZED","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","","",null,null],[17,"SMOOTH_LINE_WIDTH_GRANULARITY","","",null,null],[17,"SMOOTH_LINE_WIDTH_RANGE","","",null,null],[17,"SMOOTH_POINT_SIZE_GRANULARITY","","",null,null],[17,"SMOOTH_POINT_SIZE_RANGE","","",null,null],[17,"SRC1_ALPHA","","",null,null],[17,"SRC1_COLOR","","",null,null],[17,"SRC_ALPHA","","",null,null],[17,"SRC_ALPHA_SATURATE","","",null,null],[17,"SRC_COLOR","","",null,null],[17,"SRGB","","",null,null],[17,"SRGB8","","",null,null],[17,"SRGB8_ALPHA8","","",null,null],[17,"SRGB_ALPHA","","",null,null],[17,"SRGB_READ","","",null,null],[17,"SRGB_WRITE","","",null,null],[17,"STACK_OVERFLOW","","",null,null],[17,"STACK_UNDERFLOW","","",null,null],[17,"STATIC_COPY","","",null,null],[17,"STATIC_DRAW","","",null,null],[17,"STATIC_READ","","",null,null],[17,"STENCIL","","",null,null],[17,"STENCIL_ATTACHMENT","","",null,null],[17,"STENCIL_BACK_FAIL","","",null,null],[17,"STENCIL_BACK_FUNC","","",null,null],[17,"STENCIL_BACK_PASS_DEPTH_FAIL","","",null,null],[17,"STENCIL_BACK_PASS_DEPTH_PASS","","",null,null],[17,"STENCIL_BACK_REF","","",null,null],[17,"STENCIL_BACK_VALUE_MASK","","",null,null],[17,"STENCIL_BACK_WRITEMASK","","",null,null],[17,"STENCIL_BUFFER_BIT","","",null,null],[17,"STENCIL_CLEAR_VALUE","","",null,null],[17,"STENCIL_COMPONENTS","","",null,null],[17,"STENCIL_FAIL","","",null,null],[17,"STENCIL_FUNC","","",null,null],[17,"STENCIL_INDEX","","",null,null],[17,"STENCIL_INDEX1","","",null,null],[17,"STENCIL_INDEX16","","",null,null],[17,"STENCIL_INDEX4","","",null,null],[17,"STENCIL_INDEX8","","",null,null],[17,"STENCIL_PASS_DEPTH_FAIL","","",null,null],[17,"STENCIL_PASS_DEPTH_PASS","","",null,null],[17,"STENCIL_REF","","",null,null],[17,"STENCIL_RENDERABLE","","",null,null],[17,"STENCIL_TEST","","",null,null],[17,"STENCIL_VALUE_MASK","","",null,null],[17,"STENCIL_WRITEMASK","","",null,null],[17,"STEREO","","",null,null],[17,"STREAM_COPY","","",null,null],[17,"STREAM_DRAW","","",null,null],[17,"STREAM_READ","","",null,null],[17,"SUBPIXEL_BITS","","",null,null],[17,"SYNC_CONDITION","","",null,null],[17,"SYNC_FENCE","","",null,null],[17,"SYNC_FLAGS","","",null,null],[17,"SYNC_FLUSH_COMMANDS_BIT","","",null,null],[17,"SYNC_GPU_COMMANDS_COMPLETE","","",null,null],[17,"SYNC_STATUS","","",null,null],[17,"TESS_CONTROL_OUTPUT_VERTICES","","",null,null],[17,"TESS_CONTROL_SHADER","","",null,null],[17,"TESS_CONTROL_SHADER_BIT","","",null,null],[17,"TESS_CONTROL_SUBROUTINE","","",null,null],[17,"TESS_CONTROL_SUBROUTINE_UNIFORM","","",null,null],[17,"TESS_CONTROL_TEXTURE","","",null,null],[17,"TESS_EVALUATION_SHADER","","",null,null],[17,"TESS_EVALUATION_SHADER_BIT","","",null,null],[17,"TESS_EVALUATION_SUBROUTINE","","",null,null],[17,"TESS_EVALUATION_SUBROUTINE_UNIFORM","","",null,null],[17,"TESS_EVALUATION_TEXTURE","","",null,null],[17,"TESS_GEN_MODE","","",null,null],[17,"TESS_GEN_POINT_MODE","","",null,null],[17,"TESS_GEN_SPACING","","",null,null],[17,"TESS_GEN_VERTEX_ORDER","","",null,null],[17,"TEXTURE","","",null,null],[17,"TEXTURE0","","",null,null],[17,"TEXTURE1","","",null,null],[17,"TEXTURE10","","",null,null],[17,"TEXTURE11","","",null,null],[17,"TEXTURE12","","",null,null],[17,"TEXTURE13","","",null,null],[17,"TEXTURE14","","",null,null],[17,"TEXTURE15","","",null,null],[17,"TEXTURE16","","",null,null],[17,"TEXTURE17","","",null,null],[17,"TEXTURE18","","",null,null],[17,"TEXTURE19","","",null,null],[17,"TEXTURE2","","",null,null],[17,"TEXTURE20","","",null,null],[17,"TEXTURE21","","",null,null],[17,"TEXTURE22","","",null,null],[17,"TEXTURE23","","",null,null],[17,"TEXTURE24","","",null,null],[17,"TEXTURE25","","",null,null],[17,"TEXTURE26","","",null,null],[17,"TEXTURE27","","",null,null],[17,"TEXTURE28","","",null,null],[17,"TEXTURE29","","",null,null],[17,"TEXTURE3","","",null,null],[17,"TEXTURE30","","",null,null],[17,"TEXTURE31","","",null,null],[17,"TEXTURE4","","",null,null],[17,"TEXTURE5","","",null,null],[17,"TEXTURE6","","",null,null],[17,"TEXTURE7","","",null,null],[17,"TEXTURE8","","",null,null],[17,"TEXTURE9","","",null,null],[17,"TEXTURE_1D","","",null,null],[17,"TEXTURE_1D_ARRAY","","",null,null],[17,"TEXTURE_2D","","",null,null],[17,"TEXTURE_2D_ARRAY","","",null,null],[17,"TEXTURE_2D_MULTISAMPLE","","",null,null],[17,"TEXTURE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"TEXTURE_3D","","",null,null],[17,"TEXTURE_ALPHA_SIZE","","",null,null],[17,"TEXTURE_ALPHA_TYPE","","",null,null],[17,"TEXTURE_BASE_LEVEL","","",null,null],[17,"TEXTURE_BINDING_1D","","",null,null],[17,"TEXTURE_BINDING_1D_ARRAY","","",null,null],[17,"TEXTURE_BINDING_2D","","",null,null],[17,"TEXTURE_BINDING_2D_ARRAY","","",null,null],[17,"TEXTURE_BINDING_2D_MULTISAMPLE","","",null,null],[17,"TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"TEXTURE_BINDING_3D","","",null,null],[17,"TEXTURE_BINDING_BUFFER","","",null,null],[17,"TEXTURE_BINDING_CUBE_MAP","","",null,null],[17,"TEXTURE_BINDING_CUBE_MAP_ARRAY","","",null,null],[17,"TEXTURE_BINDING_RECTANGLE","","",null,null],[17,"TEXTURE_BLUE_SIZE","","",null,null],[17,"TEXTURE_BLUE_TYPE","","",null,null],[17,"TEXTURE_BORDER_COLOR","","",null,null],[17,"TEXTURE_BUFFER","","",null,null],[17,"TEXTURE_BUFFER_BINDING","","",null,null],[17,"TEXTURE_BUFFER_DATA_STORE_BINDING","","",null,null],[17,"TEXTURE_BUFFER_OFFSET","","",null,null],[17,"TEXTURE_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"TEXTURE_BUFFER_SIZE","","",null,null],[17,"TEXTURE_COMPARE_FUNC","","",null,null],[17,"TEXTURE_COMPARE_MODE","","",null,null],[17,"TEXTURE_COMPRESSED","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"TEXTURE_COMPRESSED_IMAGE_SIZE","","",null,null],[17,"TEXTURE_COMPRESSION_HINT","","",null,null],[17,"TEXTURE_CUBE_MAP","","",null,null],[17,"TEXTURE_CUBE_MAP_ARRAY","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_X","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Y","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Z","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_X","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_Y","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_Z","","",null,null],[17,"TEXTURE_CUBE_MAP_SEAMLESS","","",null,null],[17,"TEXTURE_DEPTH","","",null,null],[17,"TEXTURE_DEPTH_SIZE","","",null,null],[17,"TEXTURE_DEPTH_TYPE","","",null,null],[17,"TEXTURE_FETCH_BARRIER_BIT","","",null,null],[17,"TEXTURE_FIXED_SAMPLE_LOCATIONS","","",null,null],[17,"TEXTURE_GATHER","","",null,null],[17,"TEXTURE_GATHER_SHADOW","","",null,null],[17,"TEXTURE_GREEN_SIZE","","",null,null],[17,"TEXTURE_GREEN_TYPE","","",null,null],[17,"TEXTURE_HEIGHT","","",null,null],[17,"TEXTURE_IMAGE_FORMAT","","",null,null],[17,"TEXTURE_IMAGE_TYPE","","",null,null],[17,"TEXTURE_IMMUTABLE_FORMAT","","",null,null],[17,"TEXTURE_IMMUTABLE_LEVELS","","",null,null],[17,"TEXTURE_INTERNAL_FORMAT","","",null,null],[17,"TEXTURE_LOD_BIAS","","",null,null],[17,"TEXTURE_MAG_FILTER","","",null,null],[17,"TEXTURE_MAX_ANISOTROPY_EXT","","",null,null],[17,"TEXTURE_MAX_LEVEL","","",null,null],[17,"TEXTURE_MAX_LOD","","",null,null],[17,"TEXTURE_MIN_FILTER","","",null,null],[17,"TEXTURE_MIN_LOD","","",null,null],[17,"TEXTURE_RECTANGLE","","",null,null],[17,"TEXTURE_RED_SIZE","","",null,null],[17,"TEXTURE_RED_TYPE","","",null,null],[17,"TEXTURE_SAMPLES","","",null,null],[17,"TEXTURE_SHADOW","","",null,null],[17,"TEXTURE_SHARED_SIZE","","",null,null],[17,"TEXTURE_STENCIL_SIZE","","",null,null],[17,"TEXTURE_SWIZZLE_A","","",null,null],[17,"TEXTURE_SWIZZLE_B","","",null,null],[17,"TEXTURE_SWIZZLE_G","","",null,null],[17,"TEXTURE_SWIZZLE_R","","",null,null],[17,"TEXTURE_SWIZZLE_RGBA","","",null,null],[17,"TEXTURE_TARGET","","",null,null],[17,"TEXTURE_UPDATE_BARRIER_BIT","","",null,null],[17,"TEXTURE_VIEW","","",null,null],[17,"TEXTURE_VIEW_MIN_LAYER","","",null,null],[17,"TEXTURE_VIEW_MIN_LEVEL","","",null,null],[17,"TEXTURE_VIEW_NUM_LAYERS","","",null,null],[17,"TEXTURE_VIEW_NUM_LEVELS","","",null,null],[17,"TEXTURE_WIDTH","","",null,null],[17,"TEXTURE_WRAP_R","","",null,null],[17,"TEXTURE_WRAP_S","","",null,null],[17,"TEXTURE_WRAP_T","","",null,null],[17,"TIMEOUT_EXPIRED","","",null,null],[17,"TIMEOUT_IGNORED","","",null,null],[17,"TIMESTAMP","","",null,null],[17,"TIME_ELAPSED","","",null,null],[17,"TOP_LEVEL_ARRAY_SIZE","","",null,null],[17,"TOP_LEVEL_ARRAY_STRIDE","","",null,null],[17,"TRANSFORM_FEEDBACK","","",null,null],[17,"TRANSFORM_FEEDBACK_ACTIVE","","",null,null],[17,"TRANSFORM_FEEDBACK_BARRIER_BIT","","",null,null],[17,"TRANSFORM_FEEDBACK_BINDING","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_ACTIVE","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_BINDING","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_INDEX","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_MODE","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_PAUSED","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_SIZE","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_START","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_STRIDE","","",null,null],[17,"TRANSFORM_FEEDBACK_PAUSED","","",null,null],[17,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYING","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYINGS","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","","",null,null],[17,"TRIANGLES","","",null,null],[17,"TRIANGLES_ADJACENCY","","",null,null],[17,"TRIANGLE_FAN","","",null,null],[17,"TRIANGLE_STRIP","","",null,null],[17,"TRIANGLE_STRIP_ADJACENCY","","",null,null],[17,"TRUE","","",null,null],[17,"TYPE","","",null,null],[17,"UNDEFINED_VERTEX","","",null,null],[17,"UNIFORM","","",null,null],[17,"UNIFORM_ARRAY_STRIDE","","",null,null],[17,"UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","","",null,null],[17,"UNIFORM_BARRIER_BIT","","",null,null],[17,"UNIFORM_BLOCK","","",null,null],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORMS","","",null,null],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","","",null,null],[17,"UNIFORM_BLOCK_BINDING","","",null,null],[17,"UNIFORM_BLOCK_DATA_SIZE","","",null,null],[17,"UNIFORM_BLOCK_INDEX","","",null,null],[17,"UNIFORM_BLOCK_NAME_LENGTH","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"UNIFORM_BUFFER","","",null,null],[17,"UNIFORM_BUFFER_BINDING","","",null,null],[17,"UNIFORM_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"UNIFORM_BUFFER_SIZE","","",null,null],[17,"UNIFORM_BUFFER_START","","",null,null],[17,"UNIFORM_IS_ROW_MAJOR","","",null,null],[17,"UNIFORM_MATRIX_STRIDE","","",null,null],[17,"UNIFORM_NAME_LENGTH","","",null,null],[17,"UNIFORM_OFFSET","","",null,null],[17,"UNIFORM_SIZE","","",null,null],[17,"UNIFORM_TYPE","","",null,null],[17,"UNKNOWN_CONTEXT_RESET","","",null,null],[17,"UNPACK_ALIGNMENT","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_DEPTH","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"UNPACK_IMAGE_HEIGHT","","",null,null],[17,"UNPACK_LSB_FIRST","","",null,null],[17,"UNPACK_ROW_LENGTH","","",null,null],[17,"UNPACK_SKIP_IMAGES","","",null,null],[17,"UNPACK_SKIP_PIXELS","","",null,null],[17,"UNPACK_SKIP_ROWS","","",null,null],[17,"UNPACK_SWAP_BYTES","","",null,null],[17,"UNSIGNALED","","",null,null],[17,"UNSIGNED_BYTE","","",null,null],[17,"UNSIGNED_BYTE_2_3_3_REV","","",null,null],[17,"UNSIGNED_BYTE_3_3_2","","",null,null],[17,"UNSIGNED_INT","","",null,null],[17,"UNSIGNED_INT_10F_11F_11F_REV","","",null,null],[17,"UNSIGNED_INT_10_10_10_2","","",null,null],[17,"UNSIGNED_INT_24_8","","",null,null],[17,"UNSIGNED_INT_2_10_10_10_REV","","",null,null],[17,"UNSIGNED_INT_5_9_9_9_REV","","",null,null],[17,"UNSIGNED_INT_8_8_8_8","","",null,null],[17,"UNSIGNED_INT_8_8_8_8_REV","","",null,null],[17,"UNSIGNED_INT_ATOMIC_COUNTER","","",null,null],[17,"UNSIGNED_INT_IMAGE_1D","","",null,null],[17,"UNSIGNED_INT_IMAGE_1D_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_RECT","","",null,null],[17,"UNSIGNED_INT_IMAGE_3D","","",null,null],[17,"UNSIGNED_INT_IMAGE_BUFFER","","",null,null],[17,"UNSIGNED_INT_IMAGE_CUBE","","",null,null],[17,"UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_1D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_1D_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_RECT","","",null,null],[17,"UNSIGNED_INT_SAMPLER_3D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_BUFFER","","",null,null],[17,"UNSIGNED_INT_SAMPLER_CUBE","","",null,null],[17,"UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"UNSIGNED_INT_VEC2","","",null,null],[17,"UNSIGNED_INT_VEC3","","",null,null],[17,"UNSIGNED_INT_VEC4","","",null,null],[17,"UNSIGNED_NORMALIZED","","",null,null],[17,"UNSIGNED_SHORT","","",null,null],[17,"UNSIGNED_SHORT_1_5_5_5_REV","","",null,null],[17,"UNSIGNED_SHORT_4_4_4_4","","",null,null],[17,"UNSIGNED_SHORT_4_4_4_4_REV","","",null,null],[17,"UNSIGNED_SHORT_5_5_5_1","","",null,null],[17,"UNSIGNED_SHORT_5_6_5","","",null,null],[17,"UNSIGNED_SHORT_5_6_5_REV","","",null,null],[17,"UPPER_LEFT","","",null,null],[17,"VALIDATE_STATUS","","",null,null],[17,"VENDOR","","",null,null],[17,"VERSION","","",null,null],[17,"VERTEX_ARRAY","","",null,null],[17,"VERTEX_ARRAY_BINDING","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_BARRIER_BIT","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_DIVISOR","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_ENABLED","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_INTEGER","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_LONG","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_NORMALIZED","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_POINTER","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_SIZE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_STRIDE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_TYPE","","",null,null],[17,"VERTEX_ATTRIB_BINDING","","",null,null],[17,"VERTEX_ATTRIB_RELATIVE_OFFSET","","",null,null],[17,"VERTEX_BINDING_BUFFER","","",null,null],[17,"VERTEX_BINDING_DIVISOR","","",null,null],[17,"VERTEX_BINDING_OFFSET","","",null,null],[17,"VERTEX_BINDING_STRIDE","","",null,null],[17,"VERTEX_PROGRAM_POINT_SIZE","","",null,null],[17,"VERTEX_SHADER","","",null,null],[17,"VERTEX_SHADER_BIT","","",null,null],[17,"VERTEX_SUBROUTINE","","",null,null],[17,"VERTEX_SUBROUTINE_UNIFORM","","",null,null],[17,"VERTEX_TEXTURE","","",null,null],[17,"VIEWPORT","","",null,null],[17,"VIEWPORT_BOUNDS_RANGE","","",null,null],[17,"VIEWPORT_INDEX_PROVOKING_VERTEX","","",null,null],[17,"VIEWPORT_SUBPIXEL_BITS","","",null,null],[17,"VIEW_CLASS_128_BITS","","",null,null],[17,"VIEW_CLASS_16_BITS","","",null,null],[17,"VIEW_CLASS_24_BITS","","",null,null],[17,"VIEW_CLASS_32_BITS","","",null,null],[17,"VIEW_CLASS_48_BITS","","",null,null],[17,"VIEW_CLASS_64_BITS","","",null,null],[17,"VIEW_CLASS_8_BITS","","",null,null],[17,"VIEW_CLASS_96_BITS","","",null,null],[17,"VIEW_CLASS_BPTC_FLOAT","","",null,null],[17,"VIEW_CLASS_BPTC_UNORM","","",null,null],[17,"VIEW_CLASS_RGTC1_RED","","",null,null],[17,"VIEW_CLASS_RGTC2_RG","","",null,null],[17,"VIEW_CLASS_S3TC_DXT1_RGB","","",null,null],[17,"VIEW_CLASS_S3TC_DXT1_RGBA","","",null,null],[17,"VIEW_CLASS_S3TC_DXT3_RGBA","","",null,null],[17,"VIEW_CLASS_S3TC_DXT5_RGBA","","",null,null],[17,"VIEW_COMPATIBILITY_CLASS","","",null,null],[17,"WAIT_FAILED","","",null,null],[17,"WRITE_ONLY","","",null,null],[17,"XOR","","",null,null],[17,"ZERO","","",null,null],[17,"ZERO_TO_ONE","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"fnptr"}}],[11,"is_loaded","","Returns `true` if the function has been successfully loaded.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"gl"}}],[11,"load_with","","Load each OpenGL symbol using a custom load function. This allows for the use of functions like `glfwGetProcAddress` or `SDL_GL_GetProcAddress`.",0,{"inputs":[{"name":"f"}],"output":{"name":"gl"}}],[11,"ActiveShaderProgram","","",0,null],[11,"ActiveTexture","","",0,null],[11,"AttachShader","","",0,null],[11,"BeginConditionalRender","","",0,null],[11,"BeginQuery","","",0,null],[11,"BeginQueryIndexed","","",0,null],[11,"BeginTransformFeedback","","",0,null],[11,"BindAttribLocation","","",0,null],[11,"BindBuffer","","",0,null],[11,"BindBufferBase","","",0,null],[11,"BindBufferRange","","",0,null],[11,"BindBuffersBase","","",0,null],[11,"BindBuffersRange","","",0,null],[11,"BindFragDataLocation","","",0,null],[11,"BindFragDataLocationIndexed","","",0,null],[11,"BindFramebuffer","","",0,null],[11,"BindImageTexture","","",0,null],[11,"BindImageTextures","","",0,null],[11,"BindProgramPipeline","","",0,null],[11,"BindRenderbuffer","","",0,null],[11,"BindSampler","","",0,null],[11,"BindSamplers","","",0,null],[11,"BindTexture","","",0,null],[11,"BindTextureUnit","","",0,null],[11,"BindTextures","","",0,null],[11,"BindTransformFeedback","","",0,null],[11,"BindVertexArray","","",0,null],[11,"BindVertexBuffer","","",0,null],[11,"BindVertexBuffers","","",0,null],[11,"BlendColor","","",0,null],[11,"BlendEquation","","",0,null],[11,"BlendEquationSeparate","","",0,null],[11,"BlendEquationSeparatei","","",0,null],[11,"BlendEquationSeparateiARB","","",0,null],[11,"BlendEquationi","","",0,null],[11,"BlendEquationiARB","","",0,null],[11,"BlendFunc","","",0,null],[11,"BlendFuncSeparate","","",0,null],[11,"BlendFuncSeparatei","","",0,null],[11,"BlendFuncSeparateiARB","","",0,null],[11,"BlendFunci","","",0,null],[11,"BlendFunciARB","","",0,null],[11,"BlitFramebuffer","","",0,null],[11,"BlitNamedFramebuffer","","",0,null],[11,"BufferData","","",0,null],[11,"BufferStorage","","",0,null],[11,"BufferSubData","","",0,null],[11,"CheckFramebufferStatus","","",0,{"inputs":[{"name":"self"},{"name":"glenum"}],"output":{"name":"glenum"}}],[11,"CheckNamedFramebufferStatus","","",0,{"inputs":[{"name":"self"},{"name":"gluint"},{"name":"glenum"}],"output":{"name":"glenum"}}],[11,"ClampColor","","",0,null],[11,"Clear","","",0,null],[11,"ClearBufferData","","",0,null],[11,"ClearBufferSubData","","",0,null],[11,"ClearBufferfi","","",0,null],[11,"ClearBufferfv","","",0,null],[11,"ClearBufferiv","","",0,null],[11,"ClearBufferuiv","","",0,null],[11,"ClearColor","","",0,null],[11,"ClearDepth","","",0,null],[11,"ClearDepthf","","",0,null],[11,"ClearNamedBufferData","","",0,null],[11,"ClearNamedBufferSubData","","",0,null],[11,"ClearNamedFramebufferfi","","",0,null],[11,"ClearNamedFramebufferfv","","",0,null],[11,"ClearNamedFramebufferiv","","",0,null],[11,"ClearNamedFramebufferuiv","","",0,null],[11,"ClearStencil","","",0,null],[11,"ClearTexImage","","",0,null],[11,"ClearTexSubImage","","",0,null],[11,"ClientWaitSync","","",0,{"inputs":[{"name":"self"},{"name":"glsync"},{"name":"glbitfield"},{"name":"gluint64"}],"output":{"name":"glenum"}}],[11,"ClipControl","","",0,null],[11,"ColorMask","","",0,null],[11,"ColorMaski","","",0,null],[11,"ColorP3ui","","",0,null],[11,"ColorP3uiv","","",0,null],[11,"ColorP4ui","","",0,null],[11,"ColorP4uiv","","",0,null],[11,"CompileShader","","",0,null],[11,"CompressedTexImage1D","","",0,null],[11,"CompressedTexImage2D","","",0,null],[11,"CompressedTexImage3D","","",0,null],[11,"CompressedTexSubImage1D","","",0,null],[11,"CompressedTexSubImage2D","","",0,null],[11,"CompressedTexSubImage3D","","",0,null],[11,"CompressedTextureSubImage1D","","",0,null],[11,"CompressedTextureSubImage2D","","",0,null],[11,"CompressedTextureSubImage3D","","",0,null],[11,"CopyBufferSubData","","",0,null],[11,"CopyImageSubData","","",0,null],[11,"CopyNamedBufferSubData","","",0,null],[11,"CopyTexImage1D","","",0,null],[11,"CopyTexImage2D","","",0,null],[11,"CopyTexSubImage1D","","",0,null],[11,"CopyTexSubImage2D","","",0,null],[11,"CopyTexSubImage3D","","",0,null],[11,"CopyTextureSubImage1D","","",0,null],[11,"CopyTextureSubImage2D","","",0,null],[11,"CopyTextureSubImage3D","","",0,null],[11,"CreateBuffers","","",0,null],[11,"CreateFramebuffers","","",0,null],[11,"CreateProgram","","",0,{"inputs":[{"name":"self"}],"output":{"name":"gluint"}}],[11,"CreateProgramPipelines","","",0,null],[11,"CreateQueries","","",0,null],[11,"CreateRenderbuffers","","",0,null],[11,"CreateSamplers","","",0,null],[11,"CreateShader","","",0,{"inputs":[{"name":"self"},{"name":"glenum"}],"output":{"name":"gluint"}}],[11,"CreateShaderProgramv","","",0,null],[11,"CreateTextures","","",0,null],[11,"CreateTransformFeedbacks","","",0,null],[11,"CreateVertexArrays","","",0,null],[11,"CullFace","","",0,null],[11,"DebugMessageCallback","","",0,null],[11,"DebugMessageControl","","",0,null],[11,"DebugMessageInsert","","",0,null],[11,"DeleteBuffers","","",0,null],[11,"DeleteFramebuffers","","",0,null],[11,"DeleteProgram","","",0,null],[11,"DeleteProgramPipelines","","",0,null],[11,"DeleteQueries","","",0,null],[11,"DeleteRenderbuffers","","",0,null],[11,"DeleteSamplers","","",0,null],[11,"DeleteShader","","",0,null],[11,"DeleteSync","","",0,null],[11,"DeleteTextures","","",0,null],[11,"DeleteTransformFeedbacks","","",0,null],[11,"DeleteVertexArrays","","",0,null],[11,"DepthFunc","","",0,null],[11,"DepthMask","","",0,null],[11,"DepthRange","","",0,null],[11,"DepthRangeArrayv","","",0,null],[11,"DepthRangeIndexed","","",0,null],[11,"DepthRangef","","",0,null],[11,"DetachShader","","",0,null],[11,"Disable","","",0,null],[11,"DisableVertexArrayAttrib","","",0,null],[11,"DisableVertexAttribArray","","",0,null],[11,"Disablei","","",0,null],[11,"DispatchCompute","","",0,null],[11,"DispatchComputeIndirect","","",0,null],[11,"DrawArrays","","",0,null],[11,"DrawArraysIndirect","","",0,null],[11,"DrawArraysInstanced","","",0,null],[11,"DrawArraysInstancedBaseInstance","","",0,null],[11,"DrawBuffer","","",0,null],[11,"DrawBuffers","","",0,null],[11,"DrawElements","","",0,null],[11,"DrawElementsBaseVertex","","",0,null],[11,"DrawElementsIndirect","","",0,null],[11,"DrawElementsInstanced","","",0,null],[11,"DrawElementsInstancedBaseInstance","","",0,null],[11,"DrawElementsInstancedBaseVertex","","",0,null],[11,"DrawElementsInstancedBaseVertexBaseInstance","","",0,null],[11,"DrawRangeElements","","",0,null],[11,"DrawRangeElementsBaseVertex","","",0,null],[11,"DrawTransformFeedback","","",0,null],[11,"DrawTransformFeedbackInstanced","","",0,null],[11,"DrawTransformFeedbackStream","","",0,null],[11,"DrawTransformFeedbackStreamInstanced","","",0,null],[11,"Enable","","",0,null],[11,"EnableVertexArrayAttrib","","",0,null],[11,"EnableVertexAttribArray","","",0,null],[11,"Enablei","","",0,null],[11,"EndConditionalRender","","",0,null],[11,"EndQuery","","",0,null],[11,"EndQueryIndexed","","",0,null],[11,"EndTransformFeedback","","",0,null],[11,"FenceSync","","",0,{"inputs":[{"name":"self"},{"name":"glenum"},{"name":"glbitfield"}],"output":{"name":"glsync"}}],[11,"Finish","","",0,null],[11,"Flush","","",0,null],[11,"FlushMappedBufferRange","","",0,null],[11,"FlushMappedNamedBufferRange","","",0,null],[11,"FramebufferParameteri","","",0,null],[11,"FramebufferRenderbuffer","","",0,null],[11,"FramebufferTexture","","",0,null],[11,"FramebufferTexture1D","","",0,null],[11,"FramebufferTexture2D","","",0,null],[11,"FramebufferTexture3D","","",0,null],[11,"FramebufferTextureLayer","","",0,null],[11,"FrontFace","","",0,null],[11,"GenBuffers","","",0,null],[11,"GenFramebuffers","","",0,null],[11,"GenProgramPipelines","","",0,null],[11,"GenQueries","","",0,null],[11,"GenRenderbuffers","","",0,null],[11,"GenSamplers","","",0,null],[11,"GenTextures","","",0,null],[11,"GenTransformFeedbacks","","",0,null],[11,"GenVertexArrays","","",0,null],[11,"GenerateMipmap","","",0,null],[11,"GenerateTextureMipmap","","",0,null],[11,"GetActiveAtomicCounterBufferiv","","",0,null],[11,"GetActiveAttrib","","",0,null],[11,"GetActiveSubroutineName","","",0,null],[11,"GetActiveSubroutineUniformName","","",0,null],[11,"GetActiveSubroutineUniformiv","","",0,null],[11,"GetActiveUniform","","",0,null],[11,"GetActiveUniformBlockName","","",0,null],[11,"GetActiveUniformBlockiv","","",0,null],[11,"GetActiveUniformName","","",0,null],[11,"GetActiveUniformsiv","","",0,null],[11,"GetAttachedShaders","","",0,null],[11,"GetAttribLocation","","",0,null],[11,"GetBooleani_v","","",0,null],[11,"GetBooleanv","","",0,null],[11,"GetBufferParameteri64v","","",0,null],[11,"GetBufferParameteriv","","",0,null],[11,"GetBufferPointerv","","",0,null],[11,"GetBufferSubData","","",0,null],[11,"GetCompressedTexImage","","",0,null],[11,"GetCompressedTextureImage","","",0,null],[11,"GetCompressedTextureSubImage","","",0,null],[11,"GetDebugMessageLog","","",0,null],[11,"GetDoublei_v","","",0,null],[11,"GetDoublev","","",0,null],[11,"GetError","","",0,{"inputs":[{"name":"self"}],"output":{"name":"glenum"}}],[11,"GetFloati_v","","",0,null],[11,"GetFloatv","","",0,null],[11,"GetFragDataIndex","","",0,null],[11,"GetFragDataLocation","","",0,null],[11,"GetFramebufferAttachmentParameteriv","","",0,null],[11,"GetFramebufferParameteriv","","",0,null],[11,"GetGraphicsResetStatus","","",0,{"inputs":[{"name":"self"}],"output":{"name":"glenum"}}],[11,"GetInteger64i_v","","",0,null],[11,"GetInteger64v","","",0,null],[11,"GetIntegeri_v","","",0,null],[11,"GetIntegerv","","",0,null],[11,"GetInternalformati64v","","",0,null],[11,"GetInternalformativ","","",0,null],[11,"GetMultisamplefv","","",0,null],[11,"GetNamedBufferParameteri64v","","",0,null],[11,"GetNamedBufferParameteriv","","",0,null],[11,"GetNamedBufferPointerv","","",0,null],[11,"GetNamedBufferSubData","","",0,null],[11,"GetNamedFramebufferAttachmentParameteriv","","",0,null],[11,"GetNamedFramebufferParameteriv","","",0,null],[11,"GetNamedRenderbufferParameteriv","","",0,null],[11,"GetObjectLabel","","",0,null],[11,"GetObjectPtrLabel","","",0,null],[11,"GetPointerv","","",0,null],[11,"GetProgramBinary","","",0,null],[11,"GetProgramInfoLog","","",0,null],[11,"GetProgramInterfaceiv","","",0,null],[11,"GetProgramPipelineInfoLog","","",0,null],[11,"GetProgramPipelineiv","","",0,null],[11,"GetProgramResourceIndex","","",0,null],[11,"GetProgramResourceLocation","","",0,null],[11,"GetProgramResourceLocationIndex","","",0,null],[11,"GetProgramResourceName","","",0,null],[11,"GetProgramResourceiv","","",0,null],[11,"GetProgramStageiv","","",0,null],[11,"GetProgramiv","","",0,null],[11,"GetQueryBufferObjecti64v","","",0,null],[11,"GetQueryBufferObjectiv","","",0,null],[11,"GetQueryBufferObjectui64v","","",0,null],[11,"GetQueryBufferObjectuiv","","",0,null],[11,"GetQueryIndexediv","","",0,null],[11,"GetQueryObjecti64v","","",0,null],[11,"GetQueryObjectiv","","",0,null],[11,"GetQueryObjectui64v","","",0,null],[11,"GetQueryObjectuiv","","",0,null],[11,"GetQueryiv","","",0,null],[11,"GetRenderbufferParameteriv","","",0,null],[11,"GetSamplerParameterIiv","","",0,null],[11,"GetSamplerParameterIuiv","","",0,null],[11,"GetSamplerParameterfv","","",0,null],[11,"GetSamplerParameteriv","","",0,null],[11,"GetShaderInfoLog","","",0,null],[11,"GetShaderPrecisionFormat","","",0,null],[11,"GetShaderSource","","",0,null],[11,"GetShaderiv","","",0,null],[11,"GetString","","",0,null],[11,"GetStringi","","",0,null],[11,"GetSubroutineIndex","","",0,null],[11,"GetSubroutineUniformLocation","","",0,null],[11,"GetSynciv","","",0,null],[11,"GetTexImage","","",0,null],[11,"GetTexLevelParameterfv","","",0,null],[11,"GetTexLevelParameteriv","","",0,null],[11,"GetTexParameterIiv","","",0,null],[11,"GetTexParameterIuiv","","",0,null],[11,"GetTexParameterfv","","",0,null],[11,"GetTexParameteriv","","",0,null],[11,"GetTextureImage","","",0,null],[11,"GetTextureLevelParameterfv","","",0,null],[11,"GetTextureLevelParameteriv","","",0,null],[11,"GetTextureParameterIiv","","",0,null],[11,"GetTextureParameterIuiv","","",0,null],[11,"GetTextureParameterfv","","",0,null],[11,"GetTextureParameteriv","","",0,null],[11,"GetTextureSubImage","","",0,null],[11,"GetTransformFeedbackVarying","","",0,null],[11,"GetTransformFeedbacki64_v","","",0,null],[11,"GetTransformFeedbacki_v","","",0,null],[11,"GetTransformFeedbackiv","","",0,null],[11,"GetUniformBlockIndex","","",0,null],[11,"GetUniformIndices","","",0,null],[11,"GetUniformLocation","","",0,null],[11,"GetUniformSubroutineuiv","","",0,null],[11,"GetUniformdv","","",0,null],[11,"GetUniformfv","","",0,null],[11,"GetUniformiv","","",0,null],[11,"GetUniformuiv","","",0,null],[11,"GetVertexArrayIndexed64iv","","",0,null],[11,"GetVertexArrayIndexediv","","",0,null],[11,"GetVertexArrayiv","","",0,null],[11,"GetVertexAttribIiv","","",0,null],[11,"GetVertexAttribIuiv","","",0,null],[11,"GetVertexAttribLdv","","",0,null],[11,"GetVertexAttribPointerv","","",0,null],[11,"GetVertexAttribdv","","",0,null],[11,"GetVertexAttribfv","","",0,null],[11,"GetVertexAttribiv","","",0,null],[11,"GetnColorTable","","",0,null],[11,"GetnCompressedTexImage","","",0,null],[11,"GetnConvolutionFilter","","",0,null],[11,"GetnHistogram","","",0,null],[11,"GetnMapdv","","",0,null],[11,"GetnMapfv","","",0,null],[11,"GetnMapiv","","",0,null],[11,"GetnMinmax","","",0,null],[11,"GetnPixelMapfv","","",0,null],[11,"GetnPixelMapuiv","","",0,null],[11,"GetnPixelMapusv","","",0,null],[11,"GetnPolygonStipple","","",0,null],[11,"GetnSeparableFilter","","",0,null],[11,"GetnTexImage","","",0,null],[11,"GetnUniformdv","","",0,null],[11,"GetnUniformfv","","",0,null],[11,"GetnUniformiv","","",0,null],[11,"GetnUniformuiv","","",0,null],[11,"Hint","","",0,null],[11,"InvalidateBufferData","","",0,null],[11,"InvalidateBufferSubData","","",0,null],[11,"InvalidateFramebuffer","","",0,null],[11,"InvalidateNamedFramebufferData","","",0,null],[11,"InvalidateNamedFramebufferSubData","","",0,null],[11,"InvalidateSubFramebuffer","","",0,null],[11,"InvalidateTexImage","","",0,null],[11,"InvalidateTexSubImage","","",0,null],[11,"IsBuffer","","",0,{"inputs":[{"name":"self"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsEnabled","","",0,{"inputs":[{"name":"self"},{"name":"glenum"}],"output":{"name":"glboolean"}}],[11,"IsEnabledi","","",0,{"inputs":[{"name":"self"},{"name":"glenum"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsFramebuffer","","",0,{"inputs":[{"name":"self"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsProgram","","",0,{"inputs":[{"name":"self"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsProgramPipeline","","",0,{"inputs":[{"name":"self"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsQuery","","",0,{"inputs":[{"name":"self"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsRenderbuffer","","",0,{"inputs":[{"name":"self"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsSampler","","",0,{"inputs":[{"name":"self"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsShader","","",0,{"inputs":[{"name":"self"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsSync","","",0,{"inputs":[{"name":"self"},{"name":"glsync"}],"output":{"name":"glboolean"}}],[11,"IsTexture","","",0,{"inputs":[{"name":"self"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsTransformFeedback","","",0,{"inputs":[{"name":"self"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsVertexArray","","",0,{"inputs":[{"name":"self"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"LineWidth","","",0,null],[11,"LinkProgram","","",0,null],[11,"LogicOp","","",0,null],[11,"MapBuffer","","",0,null],[11,"MapBufferRange","","",0,null],[11,"MapNamedBuffer","","",0,null],[11,"MapNamedBufferRange","","",0,null],[11,"MemoryBarrier","","",0,null],[11,"MemoryBarrierByRegion","","",0,null],[11,"MinSampleShading","","",0,null],[11,"MultiDrawArrays","","",0,null],[11,"MultiDrawArraysIndirect","","",0,null],[11,"MultiDrawElements","","",0,null],[11,"MultiDrawElementsBaseVertex","","",0,null],[11,"MultiDrawElementsIndirect","","",0,null],[11,"MultiTexCoordP1ui","","",0,null],[11,"MultiTexCoordP1uiv","","",0,null],[11,"MultiTexCoordP2ui","","",0,null],[11,"MultiTexCoordP2uiv","","",0,null],[11,"MultiTexCoordP3ui","","",0,null],[11,"MultiTexCoordP3uiv","","",0,null],[11,"MultiTexCoordP4ui","","",0,null],[11,"MultiTexCoordP4uiv","","",0,null],[11,"NamedBufferData","","",0,null],[11,"NamedBufferStorage","","",0,null],[11,"NamedBufferSubData","","",0,null],[11,"NamedFramebufferDrawBuffer","","",0,null],[11,"NamedFramebufferDrawBuffers","","",0,null],[11,"NamedFramebufferParameteri","","",0,null],[11,"NamedFramebufferReadBuffer","","",0,null],[11,"NamedFramebufferRenderbuffer","","",0,null],[11,"NamedFramebufferTexture","","",0,null],[11,"NamedFramebufferTextureLayer","","",0,null],[11,"NamedRenderbufferStorage","","",0,null],[11,"NamedRenderbufferStorageMultisample","","",0,null],[11,"NormalP3ui","","",0,null],[11,"NormalP3uiv","","",0,null],[11,"ObjectLabel","","",0,null],[11,"ObjectPtrLabel","","",0,null],[11,"PatchParameterfv","","",0,null],[11,"PatchParameteri","","",0,null],[11,"PauseTransformFeedback","","",0,null],[11,"PixelStoref","","",0,null],[11,"PixelStorei","","",0,null],[11,"PointParameterf","","",0,null],[11,"PointParameterfv","","",0,null],[11,"PointParameteri","","",0,null],[11,"PointParameteriv","","",0,null],[11,"PointSize","","",0,null],[11,"PolygonMode","","",0,null],[11,"PolygonOffset","","",0,null],[11,"PopDebugGroup","","",0,null],[11,"PrimitiveRestartIndex","","",0,null],[11,"ProgramBinary","","",0,null],[11,"ProgramParameteri","","",0,null],[11,"ProgramUniform1d","","",0,null],[11,"ProgramUniform1dv","","",0,null],[11,"ProgramUniform1f","","",0,null],[11,"ProgramUniform1fv","","",0,null],[11,"ProgramUniform1i","","",0,null],[11,"ProgramUniform1iv","","",0,null],[11,"ProgramUniform1ui","","",0,null],[11,"ProgramUniform1uiv","","",0,null],[11,"ProgramUniform2d","","",0,null],[11,"ProgramUniform2dv","","",0,null],[11,"ProgramUniform2f","","",0,null],[11,"ProgramUniform2fv","","",0,null],[11,"ProgramUniform2i","","",0,null],[11,"ProgramUniform2iv","","",0,null],[11,"ProgramUniform2ui","","",0,null],[11,"ProgramUniform2uiv","","",0,null],[11,"ProgramUniform3d","","",0,null],[11,"ProgramUniform3dv","","",0,null],[11,"ProgramUniform3f","","",0,null],[11,"ProgramUniform3fv","","",0,null],[11,"ProgramUniform3i","","",0,null],[11,"ProgramUniform3iv","","",0,null],[11,"ProgramUniform3ui","","",0,null],[11,"ProgramUniform3uiv","","",0,null],[11,"ProgramUniform4d","","",0,null],[11,"ProgramUniform4dv","","",0,null],[11,"ProgramUniform4f","","",0,null],[11,"ProgramUniform4fv","","",0,null],[11,"ProgramUniform4i","","",0,null],[11,"ProgramUniform4iv","","",0,null],[11,"ProgramUniform4ui","","",0,null],[11,"ProgramUniform4uiv","","",0,null],[11,"ProgramUniformMatrix2dv","","",0,null],[11,"ProgramUniformMatrix2fv","","",0,null],[11,"ProgramUniformMatrix2x3dv","","",0,null],[11,"ProgramUniformMatrix2x3fv","","",0,null],[11,"ProgramUniformMatrix2x4dv","","",0,null],[11,"ProgramUniformMatrix2x4fv","","",0,null],[11,"ProgramUniformMatrix3dv","","",0,null],[11,"ProgramUniformMatrix3fv","","",0,null],[11,"ProgramUniformMatrix3x2dv","","",0,null],[11,"ProgramUniformMatrix3x2fv","","",0,null],[11,"ProgramUniformMatrix3x4dv","","",0,null],[11,"ProgramUniformMatrix3x4fv","","",0,null],[11,"ProgramUniformMatrix4dv","","",0,null],[11,"ProgramUniformMatrix4fv","","",0,null],[11,"ProgramUniformMatrix4x2dv","","",0,null],[11,"ProgramUniformMatrix4x2fv","","",0,null],[11,"ProgramUniformMatrix4x3dv","","",0,null],[11,"ProgramUniformMatrix4x3fv","","",0,null],[11,"ProvokingVertex","","",0,null],[11,"PushDebugGroup","","",0,null],[11,"QueryCounter","","",0,null],[11,"ReadBuffer","","",0,null],[11,"ReadPixels","","",0,null],[11,"ReadnPixels","","",0,null],[11,"ReleaseShaderCompiler","","",0,null],[11,"RenderbufferStorage","","",0,null],[11,"RenderbufferStorageMultisample","","",0,null],[11,"ResumeTransformFeedback","","",0,null],[11,"SampleCoverage","","",0,null],[11,"SampleMaski","","",0,null],[11,"SamplerParameterIiv","","",0,null],[11,"SamplerParameterIuiv","","",0,null],[11,"SamplerParameterf","","",0,null],[11,"SamplerParameterfv","","",0,null],[11,"SamplerParameteri","","",0,null],[11,"SamplerParameteriv","","",0,null],[11,"Scissor","","",0,null],[11,"ScissorArrayv","","",0,null],[11,"ScissorIndexed","","",0,null],[11,"ScissorIndexedv","","",0,null],[11,"SecondaryColorP3ui","","",0,null],[11,"SecondaryColorP3uiv","","",0,null],[11,"ShaderBinary","","",0,null],[11,"ShaderSource","","",0,null],[11,"ShaderStorageBlockBinding","","",0,null],[11,"StencilFunc","","",0,null],[11,"StencilFuncSeparate","","",0,null],[11,"StencilMask","","",0,null],[11,"StencilMaskSeparate","","",0,null],[11,"StencilOp","","",0,null],[11,"StencilOpSeparate","","",0,null],[11,"TexBuffer","","",0,null],[11,"TexBufferRange","","",0,null],[11,"TexCoordP1ui","","",0,null],[11,"TexCoordP1uiv","","",0,null],[11,"TexCoordP2ui","","",0,null],[11,"TexCoordP2uiv","","",0,null],[11,"TexCoordP3ui","","",0,null],[11,"TexCoordP3uiv","","",0,null],[11,"TexCoordP4ui","","",0,null],[11,"TexCoordP4uiv","","",0,null],[11,"TexImage1D","","",0,null],[11,"TexImage2D","","",0,null],[11,"TexImage2DMultisample","","",0,null],[11,"TexImage3D","","",0,null],[11,"TexImage3DMultisample","","",0,null],[11,"TexParameterIiv","","",0,null],[11,"TexParameterIuiv","","",0,null],[11,"TexParameterf","","",0,null],[11,"TexParameterfv","","",0,null],[11,"TexParameteri","","",0,null],[11,"TexParameteriv","","",0,null],[11,"TexStorage1D","","",0,null],[11,"TexStorage2D","","",0,null],[11,"TexStorage2DMultisample","","",0,null],[11,"TexStorage3D","","",0,null],[11,"TexStorage3DMultisample","","",0,null],[11,"TexSubImage1D","","",0,null],[11,"TexSubImage2D","","",0,null],[11,"TexSubImage3D","","",0,null],[11,"TextureBarrier","","",0,null],[11,"TextureBuffer","","",0,null],[11,"TextureBufferRange","","",0,null],[11,"TextureParameterIiv","","",0,null],[11,"TextureParameterIuiv","","",0,null],[11,"TextureParameterf","","",0,null],[11,"TextureParameterfv","","",0,null],[11,"TextureParameteri","","",0,null],[11,"TextureParameteriv","","",0,null],[11,"TextureStorage1D","","",0,null],[11,"TextureStorage2D","","",0,null],[11,"TextureStorage2DMultisample","","",0,null],[11,"TextureStorage3D","","",0,null],[11,"TextureStorage3DMultisample","","",0,null],[11,"TextureSubImage1D","","",0,null],[11,"TextureSubImage2D","","",0,null],[11,"TextureSubImage3D","","",0,null],[11,"TextureView","","",0,null],[11,"TransformFeedbackBufferBase","","",0,null],[11,"TransformFeedbackBufferRange","","",0,null],[11,"TransformFeedbackVaryings","","",0,null],[11,"Uniform1d","","",0,null],[11,"Uniform1dv","","",0,null],[11,"Uniform1f","","",0,null],[11,"Uniform1fv","","",0,null],[11,"Uniform1i","","",0,null],[11,"Uniform1iv","","",0,null],[11,"Uniform1ui","","",0,null],[11,"Uniform1uiv","","",0,null],[11,"Uniform2d","","",0,null],[11,"Uniform2dv","","",0,null],[11,"Uniform2f","","",0,null],[11,"Uniform2fv","","",0,null],[11,"Uniform2i","","",0,null],[11,"Uniform2iv","","",0,null],[11,"Uniform2ui","","",0,null],[11,"Uniform2uiv","","",0,null],[11,"Uniform3d","","",0,null],[11,"Uniform3dv","","",0,null],[11,"Uniform3f","","",0,null],[11,"Uniform3fv","","",0,null],[11,"Uniform3i","","",0,null],[11,"Uniform3iv","","",0,null],[11,"Uniform3ui","","",0,null],[11,"Uniform3uiv","","",0,null],[11,"Uniform4d","","",0,null],[11,"Uniform4dv","","",0,null],[11,"Uniform4f","","",0,null],[11,"Uniform4fv","","",0,null],[11,"Uniform4i","","",0,null],[11,"Uniform4iv","","",0,null],[11,"Uniform4ui","","",0,null],[11,"Uniform4uiv","","",0,null],[11,"UniformBlockBinding","","",0,null],[11,"UniformMatrix2dv","","",0,null],[11,"UniformMatrix2fv","","",0,null],[11,"UniformMatrix2x3dv","","",0,null],[11,"UniformMatrix2x3fv","","",0,null],[11,"UniformMatrix2x4dv","","",0,null],[11,"UniformMatrix2x4fv","","",0,null],[11,"UniformMatrix3dv","","",0,null],[11,"UniformMatrix3fv","","",0,null],[11,"UniformMatrix3x2dv","","",0,null],[11,"UniformMatrix3x2fv","","",0,null],[11,"UniformMatrix3x4dv","","",0,null],[11,"UniformMatrix3x4fv","","",0,null],[11,"UniformMatrix4dv","","",0,null],[11,"UniformMatrix4fv","","",0,null],[11,"UniformMatrix4x2dv","","",0,null],[11,"UniformMatrix4x2fv","","",0,null],[11,"UniformMatrix4x3dv","","",0,null],[11,"UniformMatrix4x3fv","","",0,null],[11,"UniformSubroutinesuiv","","",0,null],[11,"UnmapBuffer","","",0,{"inputs":[{"name":"self"},{"name":"glenum"}],"output":{"name":"glboolean"}}],[11,"UnmapNamedBuffer","","",0,{"inputs":[{"name":"self"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"UseProgram","","",0,null],[11,"UseProgramStages","","",0,null],[11,"ValidateProgram","","",0,null],[11,"ValidateProgramPipeline","","",0,null],[11,"VertexArrayAttribBinding","","",0,null],[11,"VertexArrayAttribFormat","","",0,null],[11,"VertexArrayAttribIFormat","","",0,null],[11,"VertexArrayAttribLFormat","","",0,null],[11,"VertexArrayBindingDivisor","","",0,null],[11,"VertexArrayElementBuffer","","",0,null],[11,"VertexArrayVertexBuffer","","",0,null],[11,"VertexArrayVertexBuffers","","",0,null],[11,"VertexAttrib1d","","",0,null],[11,"VertexAttrib1dv","","",0,null],[11,"VertexAttrib1f","","",0,null],[11,"VertexAttrib1fv","","",0,null],[11,"VertexAttrib1s","","",0,null],[11,"VertexAttrib1sv","","",0,null],[11,"VertexAttrib2d","","",0,null],[11,"VertexAttrib2dv","","",0,null],[11,"VertexAttrib2f","","",0,null],[11,"VertexAttrib2fv","","",0,null],[11,"VertexAttrib2s","","",0,null],[11,"VertexAttrib2sv","","",0,null],[11,"VertexAttrib3d","","",0,null],[11,"VertexAttrib3dv","","",0,null],[11,"VertexAttrib3f","","",0,null],[11,"VertexAttrib3fv","","",0,null],[11,"VertexAttrib3s","","",0,null],[11,"VertexAttrib3sv","","",0,null],[11,"VertexAttrib4Nbv","","",0,null],[11,"VertexAttrib4Niv","","",0,null],[11,"VertexAttrib4Nsv","","",0,null],[11,"VertexAttrib4Nub","","",0,null],[11,"VertexAttrib4Nubv","","",0,null],[11,"VertexAttrib4Nuiv","","",0,null],[11,"VertexAttrib4Nusv","","",0,null],[11,"VertexAttrib4bv","","",0,null],[11,"VertexAttrib4d","","",0,null],[11,"VertexAttrib4dv","","",0,null],[11,"VertexAttrib4f","","",0,null],[11,"VertexAttrib4fv","","",0,null],[11,"VertexAttrib4iv","","",0,null],[11,"VertexAttrib4s","","",0,null],[11,"VertexAttrib4sv","","",0,null],[11,"VertexAttrib4ubv","","",0,null],[11,"VertexAttrib4uiv","","",0,null],[11,"VertexAttrib4usv","","",0,null],[11,"VertexAttribBinding","","",0,null],[11,"VertexAttribDivisor","","",0,null],[11,"VertexAttribFormat","","",0,null],[11,"VertexAttribI1i","","",0,null],[11,"VertexAttribI1iv","","",0,null],[11,"VertexAttribI1ui","","",0,null],[11,"VertexAttribI1uiv","","",0,null],[11,"VertexAttribI2i","","",0,null],[11,"VertexAttribI2iv","","",0,null],[11,"VertexAttribI2ui","","",0,null],[11,"VertexAttribI2uiv","","",0,null],[11,"VertexAttribI3i","","",0,null],[11,"VertexAttribI3iv","","",0,null],[11,"VertexAttribI3ui","","",0,null],[11,"VertexAttribI3uiv","","",0,null],[11,"VertexAttribI4bv","","",0,null],[11,"VertexAttribI4i","","",0,null],[11,"VertexAttribI4iv","","",0,null],[11,"VertexAttribI4sv","","",0,null],[11,"VertexAttribI4ubv","","",0,null],[11,"VertexAttribI4ui","","",0,null],[11,"VertexAttribI4uiv","","",0,null],[11,"VertexAttribI4usv","","",0,null],[11,"VertexAttribIFormat","","",0,null],[11,"VertexAttribIPointer","","",0,null],[11,"VertexAttribL1d","","",0,null],[11,"VertexAttribL1dv","","",0,null],[11,"VertexAttribL2d","","",0,null],[11,"VertexAttribL2dv","","",0,null],[11,"VertexAttribL3d","","",0,null],[11,"VertexAttribL3dv","","",0,null],[11,"VertexAttribL4d","","",0,null],[11,"VertexAttribL4dv","","",0,null],[11,"VertexAttribLFormat","","",0,null],[11,"VertexAttribLPointer","","",0,null],[11,"VertexAttribP1ui","","",0,null],[11,"VertexAttribP1uiv","","",0,null],[11,"VertexAttribP2ui","","",0,null],[11,"VertexAttribP2uiv","","",0,null],[11,"VertexAttribP3ui","","",0,null],[11,"VertexAttribP3uiv","","",0,null],[11,"VertexAttribP4ui","","",0,null],[11,"VertexAttribP4uiv","","",0,null],[11,"VertexAttribPointer","","",0,null],[11,"VertexBindingDivisor","","",0,null],[11,"VertexP2ui","","",0,null],[11,"VertexP2uiv","","",0,null],[11,"VertexP3ui","","",0,null],[11,"VertexP3uiv","","",0,null],[11,"VertexP4ui","","",0,null],[11,"VertexP4uiv","","",0,null],[11,"Viewport","","",0,null],[11,"ViewportArrayv","","",0,null],[11,"ViewportIndexedf","","",0,null],[11,"ViewportIndexedfv","","",0,null],[11,"WaitSync","","",0,null]],"paths":[[3,"Gl"],[3,"FnPtr"]]};
searchIndex["gfx_glyph"] = {"doc":"Fast GPU cached text rendering using gfx-rs & rusttype.","items":[[3,"VariedSection","gfx_glyph","An object that contains all the info to render a varied section of text. That is one including many parts with differing fonts/scales/colors bowing to a single layout.",null,null],[12,"screen_position","","Position on screen to render text, in pixels from top-left. Defaults to (0, 0).",0,null],[12,"bounds","","Max (width, height) bounds, in pixels from top-left. Defaults to unbounded.",0,null],[12,"z","","Z values for use in depth testing. Defaults to 0.0",0,null],[12,"layout","","Built in layout, can be overridden with custom layout logic see `queue_custom_layout`",0,null],[12,"text","","Text to render, rendered next to one another according the layout.",0,null],[3,"SectionText","","",null,null],[12,"text","","Text to render",1,null],[12,"scale","","Position on screen to render text, in pixels from top-left. Defaults to (0, 0).",1,null],[12,"color","","Rgba color of rendered text. Defaults to black.",1,null],[12,"font_id","","Font id to use for this section.",1,null],[3,"FontId","","Id for a font, the default `FontId(0)` will always be present in a `GlyphBrush`",null,null],[12,"0","","",2,null],[3,"Section","","An object that contains all the info to render a section of text.",null,null],[12,"text","","Text to render",3,null],[12,"screen_position","","Position on screen to render text, in pixels from top-left. Defaults to (0, 0).",3,null],[12,"bounds","","Max (width, height) bounds, in pixels from top-left. Defaults to unbounded.",3,null],[12,"scale","","Font scale. Defaults to 16",3,null],[12,"color","","Rgba color of rendered text. Defaults to black.",3,null],[12,"z","","Z values for use in depth testing. Defaults to 0.0",3,null],[12,"layout","","Built in layout, can overridden with custom layout logic see `queue_custom_layout`",3,null],[12,"font_id","","Font id to use for this section.",3,null],[3,"SectionGlyphInfo","","",null,null],[12,"screen_position","","Position on screen to render text, in pixels from top-left.",4,null],[12,"bounds","","Max (width, height) bounds, in pixels from top-left.",4,null],[12,"text","","",4,null],[12,"text_index","","",4,null],[3,"GlyphInfo","","A specialised view on a `Section` for the purposes of calculating glyph positions. Used by a `GlyphPositioner`.",null,null],[12,"text","","Section text, use `remaining_chars()` instead in order to respect skip settings, ie in leftover payloads.",5,null],[12,"scale","","",5,null],[12,"color","","",5,null],[12,"font_id","","",5,null],[3,"GlyphBrushBuilder","","Builder for a `GlyphBrush`.",null,null],[3,"GlyphBrush","","Object allowing glyph drawing, containing cache state. Manages glyph positioning cacheing, glyph draw caching & efficient GPU texture cache updating and re-sizing on demand.",null,null],[3,"GlyphedSectionText","","",null,null],[12,"0","","",6,null],[12,"1","","",6,null],[12,"2","","",6,null],[4,"Layout","","Built-in `GlyphPositioner` implementations.",null,null],[13,"SingleLine","","Renders a single line from left-to-right according to the inner alignment. Hard breaking will end the line, partially hitting the width bound will end the line.",7,null],[12,"line_breaker","gfx_glyph::Layout","",7,null],[12,"h_align","","",7,null],[12,"v_align","","",7,null],[13,"Wrap","gfx_glyph","Renders multiple lines from left-to-right according to the inner alignment. Hard breaking characters will cause advancement to another line. A characters hitting the width bound will also cause another line to start.",7,null],[12,"line_breaker","gfx_glyph::Layout","",7,null],[12,"h_align","","",7,null],[12,"v_align","","",7,null],[4,"HorizontalAlign","gfx_glyph","Describes horizontal alignment preference for positioning & bounds.",null,null],[13,"Left","","Leftmost character is immediately to the right of the render position. Bounds start from the render position and advance rightwards.",8,null],[13,"Center","","Leftmost & rightmost characters are equidistant to the render position. Bounds start from the render position and advance equally left & right.",8,null],[13,"Right","","Rightmost character is immetiately to the left of the render position. Bounds start from the render position and advance leftwards.",8,null],[4,"VerticalAlign","","Describes vertical alignment preference for positioning & bounds. Currently a placeholder for future functionality.",null,null],[13,"Top","","Characters/bounds start underneath the render position and progress downwards",9,null],[4,"LayoutLeftover","","Container for glyphs leftover/unable to fit in a layout and/or within render bounds",null,null],[13,"HardBreak","","leftover text after a new hard line break, indicated by the `LineBreaker`",10,null],[13,"OutOfWidthBound","","text that would fall outside of the horizontal bound",10,null],[13,"OutOfHeightBound","","text that would fall fully outside the vertical bound note: does not include hidden text within a layout for example a `_` character hidden but between visible characters would be ignored",10,null],[4,"LineBreak","","Indicator that a character is a line break, soft or hard. Includes the offset position.",null,null],[13,"Soft","","Soft line break (offset).",11,null],[13,"Hard","","Hard line break (offset).",11,null],[4,"BuiltInLineBreaker","","",null,null],[13,"UnicodeLineBreaker","","LineBreaker that follows Unicode Standard Annex #14. That effectively means it wraps words in a way that should work for most cases.",12,null],[13,"AnyCharLineBreaker","","LineBreaker that soft breaks on any character, and hard breaks similarly to UnicodeLineBreaker.",12,null],[5,"font","","Returns a Font from font bytes info or an error reason.",null,{"inputs":[{"name":"b"}],"output":{"generics":["font","str"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"variedsection"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"hash","","",0,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"sectiontext"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"hash","","",1,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"fontid"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"fontid"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"fontid"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"fontid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"self"},{"name":"fontid"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"self"},{"name":"fontid"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"self"},{"name":"fontid"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"self"},{"name":"fontid"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"self"},{"name":"fontid"}],"output":{"name":"ordering"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"fontid"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"section"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"section"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"section"}],"output":{"name":"self"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"sectionglyphinfo"}}],[11,"from","","",4,{"inputs":[{"name":"variedsection"}],"output":{"name":"self"}}],[11,"with_info","","Returns a clone info that has marked text up to `index` as processed, and `GlyphInfo` at index as input `info`",4,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"glyphinfo"}],"output":{"name":"self"}}],[11,"remaining_info","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["enumerate"],"name":"skip"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"glyphinfo"}}],[11,"remaining_chars","","Returns a unicode normalized char iterator, that respects the skipped chars that have already been already processed",5,{"inputs":[{"name":"self"}],"output":{"generics":["recompositions"],"name":"skip"}}],[11,"skip","","Returns a new GlyphInfo instance whose `remaining_chars()` method will skip additional chars.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"glyphinfo"}}],[11,"substring","","Returns a substring reference according the current skip value",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",5,{"inputs":[{"name":"sectiontext"}],"output":{"name":"self"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"layout"}}],[11,"hash","","",7,null],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"layout"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"layout"}],"output":{"name":"bool"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"self"}}],[11,"default_single_line","","",7,{"inputs":[],"output":{"name":"self"}}],[11,"default_wrap","","",7,{"inputs":[],"output":{"name":"self"}}],[11,"h_align","","Returns an identical `Layout` but with the input `h_align`",7,{"inputs":[{"name":"self"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"v_align","","Returns an identical `Layout` but with the input `v_align`",7,{"inputs":[{"name":"self"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"line_breaker","","Returns an identical `Layout` but with the input `line_breaker`",7,{"inputs":[{"name":"self"},{"name":"l2"}],"output":{"name":"layout"}}],[11,"calculate_glyphs","","",7,{"inputs":[{"name":"self"},{"name":"hashmap"},{"name":"g"}],"output":{"generics":["glyphedsectiontext"],"name":"vec"}}],[11,"bounds_rect","","",7,{"inputs":[{"name":"self"},{"name":"g"}],"output":{"generics":["f32"],"name":"rect"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"horizontalalign"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"horizontalalign"}],"output":{"name":"bool"}}],[11,"hash","","",8,null],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"verticalalign"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"verticalalign"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"layoutleftover"}}],[11,"calculate_glyphs_and_leftover","","",7,null],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"linebreak"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"linebreak"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"linebreak"}],"output":{"name":"bool"}}],[11,"hash","","",11,null],[11,"offset","","Returns the offset of the line break, the index after the breaking character.",11,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"builtinlinebreaker"}}],[11,"hash","","",12,null],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"builtinlinebreaker"}],"output":{"name":"bool"}}],[11,"default","","",12,{"inputs":[],"output":{"name":"self"}}],[11,"line_breaks","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["iterator"],"name":"box"}}],[11,"using_font_bytes","","Specifies the default font data used to render glyphs. Referenced with `FontId(0)`, which is default.",13,{"inputs":[{"name":"b"}],"output":{"name":"self"}}],[11,"using_font","","Specifies the default font used to render glyphs. Referenced with `FontId(0)`, which is default.",13,{"inputs":[{"name":"font"}],"output":{"name":"self"}}],[11,"add_font_bytes","","Adds additional fonts to the one added in `using_font` / `using_font_bytes`. Returns a `FontId` to reference this font.",13,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"fontid"}}],[11,"add_font","","Adds additional fonts to the one added in `using_font` / `using_font_bytes`. Returns a `FontId` to reference this font.",13,{"inputs":[{"name":"self"},{"name":"font"}],"output":{"name":"fontid"}}],[11,"initial_cache_size","","Initial size of 2D texture used as a gpu cache, pixels (width, height). The GPU cache will dynamically quadruple in size whenever the current size is insufficient.",13,null],[11,"gpu_cache_scale_tolerance","","Sets the maximum allowed difference in scale used for judging whether to reuse an existing glyph in the GPU cache.",13,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"self"}}],[11,"gpu_cache_position_tolerance","","Sets the maximum allowed difference in subpixel position used for judging whether to reuse an existing glyph in the GPU cache. Anything greater than or equal to 1.0 means \"don't care\".",13,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"self"}}],[11,"cache_glyph_positioning","","Sets whether perform the calculation of glyph positioning according to the layout every time, or use a cached result if the input `Section` and `GlyphPositioner` are the same hash as a previous call.",13,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"cache_glyph_drawing","","Sets optimising drawing by reusing the last draw requesting an identical draw queue.",13,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"depth_test","","Sets the depth test to use on the text section z values.",13,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"self"}}],[11,"build","","Builds a `GlyphBrush` using the input gfx factory",13,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"glyphbrush"}}],[6,"Font","","Aliased type to allow lib usage without declaring underlying rusttype lib",null,null],[6,"Scale","","Aliased type to allow lib usage without declaring underlying rusttype lib",null,null],[6,"Rect","","Aliased type to allow lib usage without declaring underlying rusttype lib",null,null],[6,"Point","","Aliased type to allow lib usage without declaring underlying rusttype lib",null,null],[6,"PositionedGlyph","","Aliased type to allow lib usage without declaring underlying rusttype lib",null,null],[6,"ScaledGlyph","","Aliased type to allow lib usage without declaring underlying rusttype lib",null,null],[6,"Glyph","","Aliased type to allow lib usage without declaring underlying rusttype lib",null,null],[6,"SharedBytes","","Aliased type to allow lib usage without declaring underlying rusttype lib",null,null],[6,"HMetrics","","Aliased type to allow lib usage without declaring underlying rusttype lib",null,null],[6,"VMetrics","","Aliased type to allow lib usage without declaring underlying rusttype lib",null,null],[6,"GlyphId","","Aliased type to allow lib usage without declaring underlying rusttype lib",null,null],[6,"PositionedGlyphIter","","An iterator over `PositionedGlyph`s from the `GlyphBrush`",null,null],[8,"GlyphPositioner","","Logic to calculate glyph positioning based on `Font` and `GlyphInfo`",null,null],[10,"calculate_glyphs","","Calculate a sequence of positioned glyphs to render. Custom implementations should always return the same result when called with the same arguments. If not consider disabling `cache_glyph_positioning`.",14,{"inputs":[{"name":"self"},{"name":"hashmap"},{"name":"g"}],"output":{"generics":["glyphedsectiontext"],"name":"vec"}}],[10,"bounds_rect","","Return a rectangle according to the requested render position and bounds appropriate for the glyph layout.",14,{"inputs":[{"name":"self"},{"name":"g"}],"output":{"generics":["f32"],"name":"rect"}}],[8,"LineBreaker","","Producer of a `LineBreak` iterator. Used to allow to the `Layout` to be line break aware in a generic way.",null,null],[10,"line_breaks","","",15,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["iterator"],"name":"box"}}],[11,"pixel_bounds_custom_layout","","Returns the pixel bounding box for the input section using a custom layout. The box is a conservative whole number pixel rectangle that can contain the section.",16,{"inputs":[{"name":"self"},{"name":"s"},{"name":"l"}],"output":{"generics":["rect"],"name":"option"}}],[11,"pixel_bounds","","Returns the pixel bounding box for the input section. The box is a conservative whole number pixel rectangle that can contain the section.",16,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"generics":["rect"],"name":"option"}}],[11,"glyphs_custom_layout","","Returns an iterator over the `PositionedGlyph`s of the given section with a custom layout.",16,{"inputs":[{"name":"self"},{"name":"s"},{"name":"l"}],"output":{"name":"positionedglyphiter"}}],[11,"glyphs","","Returns an iterator over the `PositionedGlyph`s of the given section.",16,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"positionedglyphiter"}}],[11,"queue_custom_layout","","Queues a section/layout to be drawn by the next call of `draw_queued`. Can be called multiple times to queue multiple sections for drawing.",16,{"inputs":[{"name":"self"},{"name":"s"},{"name":"g"}],"output":null}],[11,"queue","","Queues a section/layout to be drawn by the next call of `draw_queued`. Can be called multiple times to queue multiple sections for drawing.",16,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"draw_queued","","Draws all queued sections onto a render target, applying a position transform (e.g. a projection). See `queue`.",16,{"inputs":[{"name":"self"},{"name":"encoder"},{"name":"rendertargetview"},{"name":"depthstencilview"}],"output":{"generics":["string"],"name":"result"}}],[11,"draw_queued_with_transform","","Draws all queued sections onto a render target, applying a position transform (e.g. a projection). See `queue`.",16,null],[11,"fonts","","Returns `FontId` -> `Font` map of available fonts.",16,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"glyphedsectiontext"}}]],"paths":[[3,"VariedSection"],[3,"SectionText"],[3,"FontId"],[3,"Section"],[3,"SectionGlyphInfo"],[3,"GlyphInfo"],[3,"GlyphedSectionText"],[4,"Layout"],[4,"HorizontalAlign"],[4,"VerticalAlign"],[4,"LayoutLeftover"],[4,"LineBreak"],[4,"BuiltInLineBreaker"],[3,"GlyphBrushBuilder"],[8,"GlyphPositioner"],[8,"LineBreaker"],[3,"GlyphBrush"]]};
searchIndex["gfx_macros"] = {"doc":"","items":[[5,"vertex","gfx_macros","",null,{"inputs":[{"name":"tokenstream"}],"output":{"name":"tokenstream"}}],[5,"constant","","",null,{"inputs":[{"name":"tokenstream"}],"output":{"name":"tokenstream"}}]],"paths":[]};
searchIndex["gfx_window_glutin"] = {"doc":"","items":[[5,"init","gfx_window_glutin","Initialize with a window builder. Generically parametrized version over the main framebuffer format.",null,null],[5,"init_existing","","Initialize with an existing Glutin window. Generically parametrized version over the main framebuffer format.",null,null],[5,"init_raw","","Initialize with a window builder. Raw version.",null,null],[5,"init_existing_raw","","Initialize with an existing Glutin window. Raw version.",null,null],[5,"update_views","","Update the internal dimensions of the main framebuffer targets. Generic version over the format.",null,{"inputs":[{"name":"glwindow"},{"name":"rendertargetview"},{"name":"depthstencilview"}],"output":null}],[5,"update_views_raw","","Return new main target views if the window resolution has changed from the old dimensions.",null,{"inputs":[{"name":"glwindow"},{"name":"dimensions"},{"name":"format"},{"name":"format"}],"output":{"name":"option"}}],[5,"new_views","","Create new main target views based on the current size of the window. Best called just after a WindowResize event.",null,null]],"paths":[]};
searchIndex["glutin"] = {"doc":"The purpose of this library is to provide an OpenGL context on as many platforms as possible.","items":[[3,"AvailableMonitorsIter","glutin","An iterator for the list of available monitors.",null,null],[6,"AxisId","","Identifier for a specific analog axis on some device.",null,null],[6,"ButtonId","","Identifier for a specific button on some device.",null,null],[4,"ControlFlow","","Returned by the user callback given to the `EventsLoop::run_forever` method.",null,null],[13,"Continue","","Continue looping and waiting for events.",0,null],[13,"Break","","Break from the event loop.",0,null],[4,"WindowCreationError","","Error that can happen while creating a window or a headless renderer.",null,null],[13,"OsError","","",1,null],[13,"NotSupported","","TODO: remove this error",1,null],[4,"CursorState","","Describes how winit handles the cursor.",null,null],[13,"Normal","","Normal cursor behavior.",2,null],[13,"Hide","","The cursor will be invisible when over the window.",2,null],[13,"Grab","","Grabs the mouse cursor. The cursor's motion will be confined to this window and the window has exclusive access to further events regarding the cursor.",2,null],[4,"DeviceEvent","","Represents raw hardware events that are not associated with any particular window.",null,null],[13,"Added","","",3,null],[13,"Removed","","",3,null],[13,"Motion","","",3,null],[12,"axis","glutin::DeviceEvent","",3,null],[12,"value","","",3,null],[13,"Button","glutin","",3,null],[12,"button","glutin::DeviceEvent","",3,null],[12,"state","","",3,null],[13,"Key","glutin","",3,null],[13,"Text","","",3,null],[12,"codepoint","glutin::DeviceEvent","",3,null],[3,"DeviceId","glutin","Identifier of an input device.",null,null],[4,"ElementState","","",null,null],[13,"Pressed","","",4,null],[13,"Released","","",4,null],[4,"Event","","",null,null],[13,"WindowEvent","","",5,null],[12,"window_id","glutin::Event","",5,null],[12,"event","","",5,null],[13,"DeviceEvent","glutin","",5,null],[12,"device_id","glutin::Event","",5,null],[12,"event","","",5,null],[13,"Awakened","glutin","",5,null],[3,"EventsLoop","","Provides a way to retreive events from the windows that were registered to it.",null,null],[3,"EventsLoopClosed","","The error that is returned when an `EventsLoopProxy` attempts to wake up an `EventsLoop` that no longer exists.",null,null],[3,"EventsLoopProxy","","Used to wake up the `EventsLoop` from another thread.",null,null],[5,"get_available_monitors","","Returns the list of all available monitors.",null,{"inputs":[],"output":{"name":"availablemonitorsiter"}}],[5,"get_primary_monitor","","Returns the primary monitor of the system.",null,{"inputs":[],"output":{"name":"monitorid"}}],[3,"KeyboardInput","","",null,null],[12,"scancode","","Identifies the physical key pressed",6,null],[12,"state","","",6,null],[12,"virtual_keycode","","Identifies the semantic meaning of the key",6,null],[12,"modifiers","","Modifier keys active at the time of this input.",6,null],[3,"ModifiersState","","Represents the current state of the keyboard modifiers",null,null],[12,"shift","","The \"shift\" key",7,null],[12,"ctrl","","The \"control\" key",7,null],[12,"alt","","The \"alt\" key",7,null],[12,"logo","","The \"logo\" key",7,null],[3,"MonitorId","","Identifier for a monitor.",null,null],[4,"MouseButton","","",null,null],[13,"Left","","",8,null],[13,"Right","","",8,null],[13,"Middle","","",8,null],[13,"Other","","",8,null],[4,"MouseCursor","","",null,null],[13,"Default","","The platform-dependent default cursor.",9,null],[13,"Crosshair","","A simple crosshair.",9,null],[13,"Hand","","A hand (often used to indicate links in web browsers).",9,null],[13,"Arrow","","Self explanatory.",9,null],[13,"Move","","Indicates something is to be moved.",9,null],[13,"Text","","Indicates text that may be selected or edited.",9,null],[13,"Wait","","Program busy indicator.",9,null],[13,"Help","","Help indicator (often rendered as a \"?\")",9,null],[13,"Progress","","Progress indicator. Shows that processing is being done. But in contrast with \"Wait\" the user may still interact with the program. Often rendered as a spinning beach ball, or an arrow with a watch or hourglass.",9,null],[13,"NotAllowed","","Cursor showing that something cannot be done.",9,null],[13,"ContextMenu","","",9,null],[13,"NoneCursor","","",9,null],[13,"Cell","","",9,null],[13,"VerticalText","","",9,null],[13,"Alias","","",9,null],[13,"Copy","","",9,null],[13,"NoDrop","","",9,null],[13,"Grab","","",9,null],[13,"Grabbing","","",9,null],[13,"AllScroll","","",9,null],[13,"ZoomIn","","",9,null],[13,"ZoomOut","","",9,null],[13,"EResize","","Indicate that some edge is to be moved. For example, the 'SeResize' cursor is used when the movement starts from the south-east corner of the box.",9,null],[13,"NResize","","",9,null],[13,"NeResize","","",9,null],[13,"NwResize","","",9,null],[13,"SResize","","",9,null],[13,"SeResize","","",9,null],[13,"SwResize","","",9,null],[13,"WResize","","",9,null],[13,"EwResize","","",9,null],[13,"NsResize","","",9,null],[13,"NeswResize","","",9,null],[13,"NwseResize","","",9,null],[13,"ColResize","","",9,null],[13,"RowResize","","",9,null],[4,"MouseScrollDelta","","",null,null],[13,"LineDelta","","Amount in lines or rows to scroll in the horizontal and vertical directions.",10,null],[13,"PixelDelta","","Amount in pixels to scroll in the horizontal and vertical direction.",10,null],[4,"NativeMonitorId","","Native platform identifier for a monitor. Different platforms use fundamentally different types to represent a monitor ID.",null,null],[13,"Numeric","","Cocoa and X11 use a numeric identifier to represent a monitor.",11,null],[13,"Name","","Win32 uses a Unicode string to represent a monitor.",11,null],[13,"Unavailable","","Other platforms (Android) don't support monitor identification.",11,null],[6,"ScanCode","","",null,null],[3,"Touch","","Represents touch event",null,null],[12,"device_id","","",12,null],[12,"phase","","",12,null],[12,"location","","",12,null],[12,"id","","unique identifier of a finger.",12,null],[4,"TouchPhase","","",null,null],[13,"Started","","",13,null],[13,"Moved","","",13,null],[13,"Ended","","",13,null],[13,"Cancelled","","",13,null],[4,"VirtualKeyCode","","",null,null],[13,"Key1","","The '1' key over the letters.",14,null],[13,"Key2","","The '2' key over the letters.",14,null],[13,"Key3","","The '3' key over the letters.",14,null],[13,"Key4","","The '4' key over the letters.",14,null],[13,"Key5","","The '5' key over the letters.",14,null],[13,"Key6","","The '6' key over the letters.",14,null],[13,"Key7","","The '7' key over the letters.",14,null],[13,"Key8","","The '8' key over the letters.",14,null],[13,"Key9","","The '9' key over the letters.",14,null],[13,"Key0","","The '0' key over the 'O' and 'P' keys.",14,null],[13,"A","","",14,null],[13,"B","","",14,null],[13,"C","","",14,null],[13,"D","","",14,null],[13,"E","","",14,null],[13,"F","","",14,null],[13,"G","","",14,null],[13,"H","","",14,null],[13,"I","","",14,null],[13,"J","","",14,null],[13,"K","","",14,null],[13,"L","","",14,null],[13,"M","","",14,null],[13,"N","","",14,null],[13,"O","","",14,null],[13,"P","","",14,null],[13,"Q","","",14,null],[13,"R","","",14,null],[13,"S","","",14,null],[13,"T","","",14,null],[13,"U","","",14,null],[13,"V","","",14,null],[13,"W","","",14,null],[13,"X","","",14,null],[13,"Y","","",14,null],[13,"Z","","",14,null],[13,"Escape","","The Escape key, next to F1.",14,null],[13,"F1","","",14,null],[13,"F2","","",14,null],[13,"F3","","",14,null],[13,"F4","","",14,null],[13,"F5","","",14,null],[13,"F6","","",14,null],[13,"F7","","",14,null],[13,"F8","","",14,null],[13,"F9","","",14,null],[13,"F10","","",14,null],[13,"F11","","",14,null],[13,"F12","","",14,null],[13,"F13","","",14,null],[13,"F14","","",14,null],[13,"F15","","",14,null],[13,"Snapshot","","Print Screen/SysRq.",14,null],[13,"Scroll","","Scroll Lock.",14,null],[13,"Pause","","Pause/Break key, next to Scroll lock.",14,null],[13,"Insert","","`Insert`, next to Backspace.",14,null],[13,"Home","","",14,null],[13,"Delete","","",14,null],[13,"End","","",14,null],[13,"PageDown","","",14,null],[13,"PageUp","","",14,null],[13,"Left","","",14,null],[13,"Up","","",14,null],[13,"Right","","",14,null],[13,"Down","","",14,null],[13,"Back","","The Backspace key, right over Enter.",14,null],[13,"Return","","The Enter key.",14,null],[13,"Space","","The space bar.",14,null],[13,"Compose","","The \"Compose\" key on Linux.",14,null],[13,"Numlock","","",14,null],[13,"Numpad0","","",14,null],[13,"Numpad1","","",14,null],[13,"Numpad2","","",14,null],[13,"Numpad3","","",14,null],[13,"Numpad4","","",14,null],[13,"Numpad5","","",14,null],[13,"Numpad6","","",14,null],[13,"Numpad7","","",14,null],[13,"Numpad8","","",14,null],[13,"Numpad9","","",14,null],[13,"AbntC1","","",14,null],[13,"AbntC2","","",14,null],[13,"Add","","",14,null],[13,"Apostrophe","","",14,null],[13,"Apps","","",14,null],[13,"At","","",14,null],[13,"Ax","","",14,null],[13,"Backslash","","",14,null],[13,"Calculator","","",14,null],[13,"Capital","","",14,null],[13,"Colon","","",14,null],[13,"Comma","","",14,null],[13,"Convert","","",14,null],[13,"Decimal","","",14,null],[13,"Divide","","",14,null],[13,"Equals","","",14,null],[13,"Grave","","",14,null],[13,"Kana","","",14,null],[13,"Kanji","","",14,null],[13,"LAlt","","",14,null],[13,"LBracket","","",14,null],[13,"LControl","","",14,null],[13,"LMenu","","",14,null],[13,"LShift","","",14,null],[13,"LWin","","",14,null],[13,"Mail","","",14,null],[13,"MediaSelect","","",14,null],[13,"MediaStop","","",14,null],[13,"Minus","","",14,null],[13,"Multiply","","",14,null],[13,"Mute","","",14,null],[13,"MyComputer","","",14,null],[13,"NavigateForward","","",14,null],[13,"NavigateBackward","","",14,null],[13,"NextTrack","","",14,null],[13,"NoConvert","","",14,null],[13,"NumpadComma","","",14,null],[13,"NumpadEnter","","",14,null],[13,"NumpadEquals","","",14,null],[13,"OEM102","","",14,null],[13,"Period","","",14,null],[13,"PlayPause","","",14,null],[13,"Power","","",14,null],[13,"PrevTrack","","",14,null],[13,"RAlt","","",14,null],[13,"RBracket","","",14,null],[13,"RControl","","",14,null],[13,"RMenu","","",14,null],[13,"RShift","","",14,null],[13,"RWin","","",14,null],[13,"Semicolon","","",14,null],[13,"Slash","","",14,null],[13,"Sleep","","",14,null],[13,"Stop","","",14,null],[13,"Subtract","","",14,null],[13,"Sysrq","","",14,null],[13,"Tab","","",14,null],[13,"Underline","","",14,null],[13,"Unlabeled","","",14,null],[13,"VolumeDown","","",14,null],[13,"VolumeUp","","",14,null],[13,"Wake","","",14,null],[13,"WebBack","","",14,null],[13,"WebFavorites","","",14,null],[13,"WebForward","","",14,null],[13,"WebHome","","",14,null],[13,"WebRefresh","","",14,null],[13,"WebSearch","","",14,null],[13,"WebStop","","",14,null],[13,"Yen","","",14,null],[3,"Window","","Represents a window.",null,null],[3,"WindowAttributes","","Attributes to use when creating a window.",null,null],[12,"dimensions","","The dimensions of the window. If this is `None`, some platform-specific dimensions will be used.",15,null],[12,"min_dimensions","","The minimum dimensions a window can be, If this is `None`, the window will have no minimum dimensions (aside from reserved).",15,null],[12,"max_dimensions","","The maximum dimensions a window can be, If this is `None`, the maximum will have no maximum or will be set to the primary monitor's dimensions by the platform.",15,null],[12,"monitor","","If `Some`, the window will be in fullscreen mode with the given monitor.",15,null],[12,"title","","The title of the window in the title bar.",15,null],[12,"visible","","Whether the window should be immediately visible upon creation.",15,null],[12,"transparent","","Whether the the window should be transparent. If this is true, writing colors with alpha values different than `1.0` will produce a transparent window.",15,null],[12,"decorations","","Whether the window should have borders and bars.",15,null],[12,"multitouch","","[iOS only] Enable multitouch, see [UIView#multipleTouchEnabled] (https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIView_Class/#//apple_ref/occ/instp/UIView/multipleTouchEnabled)",15,null],[3,"WindowBuilder","","Object that allows you to build windows.",null,null],[12,"window","","The attributes to use to create the window.",16,null],[4,"WindowEvent","","",null,null],[13,"Resized","","The size of the window has changed.",17,null],[13,"Moved","","The position of the window has changed.",17,null],[13,"Closed","","The window has been closed.",17,null],[13,"DroppedFile","","A file has been dropped into the window.",17,null],[13,"HoveredFile","","A file is being hovered over the window.",17,null],[13,"HoveredFileCancelled","","A file was hovered, but has exited the window.",17,null],[13,"ReceivedCharacter","","The window received a unicode character.",17,null],[13,"Focused","","The window gained or lost focus.",17,null],[13,"KeyboardInput","","An event from the keyboard has been received.",17,null],[12,"device_id","glutin::WindowEvent","",17,null],[12,"input","","",17,null],[13,"MouseMoved","glutin","The cursor has moved on the window.",17,null],[12,"device_id","glutin::WindowEvent","",17,null],[12,"position","","",17,null],[13,"MouseEntered","glutin","The cursor has entered the window.",17,null],[12,"device_id","glutin::WindowEvent","",17,null],[13,"MouseLeft","glutin","The cursor has left the window.",17,null],[12,"device_id","glutin::WindowEvent","",17,null],[13,"MouseWheel","glutin","A mouse wheel movement or touchpad scroll occurred.",17,null],[12,"device_id","glutin::WindowEvent","",17,null],[12,"delta","","",17,null],[12,"phase","","",17,null],[13,"MouseInput","glutin","An mouse button press has been received.",17,null],[12,"device_id","glutin::WindowEvent","",17,null],[12,"state","","",17,null],[12,"button","","",17,null],[13,"TouchpadPressure","glutin","Touchpad pressure event.",17,null],[12,"device_id","glutin::WindowEvent","",17,null],[12,"pressure","","",17,null],[12,"stage","","",17,null],[13,"AxisMotion","glutin","Motion on some analog axis not otherwise handled. May overlap with mouse motion.",17,null],[12,"device_id","glutin::WindowEvent","",17,null],[12,"axis","","",17,null],[12,"value","","",17,null],[13,"Refresh","glutin","The window needs to be redrawn.",17,null],[13,"Suspended","","App has been suspended or resumed.",17,null],[13,"Touch","","Touch event has been received",17,null],[3,"WindowId","","Identifier of a window. Unique for each window.",null,null],[3,"HeadlessRendererBuilder","","Object that allows you to build headless contexts.",null,null],[12,"dimensions","","The dimensions to use.",18,null],[12,"opengl","","The OpenGL attributes to build the context with.",18,null],[3,"HeadlessContext","","Represents a headless OpenGL context.",null,null],[3,"Context","","Represents an OpenGL context.",null,null],[3,"ContextBuilder","","Object that allows you to build `Context`s.",null,null],[12,"gl_attr","","The attributes to use to create the context.",19,null],[3,"GlWindow","","Represents an OpenGL context and a Window with which it is associated.",null,null],[3,"PixelFormat","","Describes a possible format. Unused.",null,null],[12,"hardware_accelerated","","",20,null],[12,"color_bits","","",20,null],[12,"alpha_bits","","",20,null],[12,"depth_bits","","",20,null],[12,"stencil_bits","","",20,null],[12,"stereoscopy","","",20,null],[12,"double_buffer","","",20,null],[12,"multisampling","","",20,null],[12,"srgb","","",20,null],[3,"PixelFormatRequirements","","Describes how the backend should choose a pixel format.",null,null],[12,"hardware_accelerated","","If true, only hardware-accelerated formats will be conisdered. If false, only software renderers. `None` means \"don't care\". Default is `Some(true)`.",21,null],[12,"color_bits","","Minimum number of bits for the color buffer, excluding alpha. `None` means \"don't care\". The default is `Some(24)`.",21,null],[12,"float_color_buffer","","If true, the color buffer must be in a floating point format. Default is `false`.",21,null],[12,"alpha_bits","","Minimum number of bits for the alpha in the color buffer. `None` means \"don't care\". The default is `Some(8)`.",21,null],[12,"depth_bits","","Minimum number of bits for the depth buffer. `None` means \"don't care\". The default value is `Some(24)`.",21,null],[12,"stencil_bits","","Minimum number of bits for the depth buffer. `None` means \"don't care\". The default value is `Some(8)`.",21,null],[12,"double_buffer","","If true, only double-buffered formats will be considered. If false, only single-buffer formats. `None` means \"don't care\". The default is `Some(true)`.",21,null],[12,"multisampling","","Contains the minimum number of samples per pixel in the color, depth and stencil buffers. `None` means \"don't care\". Default is `None`. A value of `Some(0)` indicates that multisampling must not be enabled.",21,null],[12,"stereoscopy","","If true, only stereoscopic formats will be considered. If false, only non-stereoscopic formats. The default is `false`.",21,null],[12,"srgb","","If true, only sRGB-capable formats will be considered. If false, don't care. The default is `false`.",21,null],[12,"release_behavior","","The behavior when changing the current context. Default is `Flush`.",21,null],[3,"GlAttributes","","Attributes to use when creating an OpenGL context.",null,null],[12,"sharing","","An existing context to share the new the context with.",22,null],[12,"version","","Version to try create. See `GlRequest` for more infos.",22,null],[12,"profile","","OpenGL profile to use.",22,null],[12,"debug","","Whether to enable the `debug` flag of the context.",22,null],[12,"robustness","","How the OpenGL context should detect errors.",22,null],[12,"vsync","","Whether to use vsync. If vsync is enabled, calling `swap_buffers` will block until the screen refreshes. This is typically used to prevent screen tearing.",22,null],[4,"CreationError","","Error that can happen while creating a window or a headless renderer.",null,null],[13,"OsError","","",23,null],[13,"NotSupported","","TODO: remove this error",23,null],[13,"NoBackendAvailable","","",23,null],[13,"RobustnessNotSupported","","",23,null],[13,"OpenGlVersionNotSupported","","",23,null],[13,"NoAvailablePixelFormat","","",23,null],[13,"PlatformSpecific","","",23,null],[13,"Window","","",23,null],[4,"ContextError","","Error that can happen when manipulating an OpenGL context.",null,null],[13,"IoError","","",24,null],[13,"ContextLost","","",24,null],[4,"Api","","All APIs related to OpenGL that you can possibly get while using glutin.",null,null],[13,"OpenGl","","The classical OpenGL. Available on Windows, Linux, OS/X.",25,null],[13,"OpenGlEs","","OpenGL embedded system. Available on Linux, Android.",25,null],[13,"WebGl","","OpenGL for the web. Very similar to OpenGL ES.",25,null],[4,"GlProfile","","Describes the requested OpenGL context profiles.",null,null],[13,"Compatibility","","Include all the immediate more functions and definitions.",26,null],[13,"Core","","Include all the future-compatible functions and definitions.",26,null],[4,"GlRequest","","Describes the OpenGL API and version that are being requested when a context is created.",null,null],[13,"Latest","","Request the latest version of the \"best\" API of this platform.",27,null],[13,"Specific","","Request a specific version of a specific API.",27,null],[13,"GlThenGles","","If OpenGL is available, create an OpenGL context with the specified `opengl_version`. Else if OpenGL ES or WebGL is available, create a context with the specified `opengles_version`.",27,null],[12,"opengl_version","glutin::GlRequest","The version to use for OpenGL.",27,null],[12,"opengles_version","","The version to use for OpenGL ES.",27,null],[4,"Robustness","glutin","Specifies the tolerance of the OpenGL context to faults. If you accept raw OpenGL commands and/or raw shader code from an untrusted source, you should definitely care about this.",null,null],[13,"NotRobust","","Not everything is checked. Your application can crash if you do something wrong with your shaders.",28,null],[13,"NoError","","The driver doesn't check anything. This option is very dangerous. Please know what you're doing before using it. See the `GL_KHR_no_error` extension.",28,null],[13,"RobustNoResetNotification","","Everything is checked to avoid any crash. The driver will attempt to avoid any problem, but if a problem occurs the behavior is implementation-defined. You are just guaranteed not to get a crash.",28,null],[13,"TryRobustNoResetNotification","","Same as `RobustNoResetNotification` but the context creation doesn't fail if it's not supported.",28,null],[13,"RobustLoseContextOnReset","","Everything is checked to avoid any crash. If a problem occurs, the context will enter a \"context lost\" state. It must then be recreated. For the moment, glutin doesn't provide a way to recreate a context with the same window :-/",28,null],[13,"TryRobustLoseContextOnReset","","Same as `RobustLoseContextOnReset` but the context creation doesn't fail if it's not supported.",28,null],[4,"ReleaseBehavior","","The behavior of the driver when you change the current context.",null,null],[13,"None","","Doesn't do anything. Most notably doesn't flush.",29,null],[13,"Flush","","Flushes the context that was previously current as if `glFlush` was called.",29,null],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"headlessrendererbuilder"}}],[11,"new","","Initializes a new `HeadlessRendererBuilder` with default values.",18,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",18,{"inputs":[{"name":"self"},{"name":"glrequest"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl_profile","","Sets the desired OpenGL context profile.",18,{"inputs":[{"name":"self"},{"name":"glprofile"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl_debug_flag","","Sets the debug flag for the OpenGL context.",18,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",18,{"inputs":[{"name":"self"},{"name":"robustness"}],"output":{"name":"headlessrendererbuilder"}}],[11,"build","","Builds the headless context.",18,{"inputs":[{"name":"self"}],"output":{"generics":["headlesscontext","creationerror"],"name":"result"}}],[11,"build_strict","","Builds the headless context.",18,{"inputs":[{"name":"self"}],"output":{"generics":["headlesscontext","creationerror"],"name":"result"}}],[11,"make_current","","Creates a new OpenGL context Sets the context as the current context.",30,{"inputs":[{"name":"self"}],"output":{"generics":["contexterror"],"name":"result"}}],[11,"is_current","","Returns true if this context is the current one in this thread.",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_proc_address","","Returns the address of an OpenGL function.",30,null],[11,"get_api","","Returns the API that is currently provided by this window.",30,{"inputs":[{"name":"self"}],"output":{"name":"api"}}],[11,"swap_buffers","","",30,{"inputs":[{"name":"self"}],"output":{"generics":["contexterror"],"name":"result"}}],[11,"get_pixel_format","","",30,{"inputs":[{"name":"self"}],"output":{"name":"pixelformat"}}],[11,"resize","","",30,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[0,"os","","Contains traits with platform-specific methods in them.",null,null],[0,"unix","glutin::os","",null,null],[5,"get_x11_xconnection","glutin::os::unix","",null,{"inputs":[],"output":{"generics":["arc"],"name":"option"}}],[0,"x11","","",null,null],[0,"ffi","glutin::os::unix::x11","",null,null],[17,"XkbLC_ForceLatinLookup","glutin::os::unix::x11::ffi","",null,null],[17,"XK_KP_Equal","","",null,null],[17,"XK_ncaron","","",null,null],[17,"XK_hebrew_teth","","",null,null],[3,"XIEventMask","","",null,null],[12,"deviceid","","",31,null],[12,"mask_len","","",31,null],[12,"mask","","",31,null],[17,"KBLedMode","","",null,null],[17,"XK_kana_I","","",null,null],[17,"XK_minus","","",null,null],[17,"XK_odiaeresis","","",null,null],[17,"XA_ITALIC_ANGLE","","",null,null],[17,"XF86XK_Switch_VT_10","","",null,null],[3,"XKeymapEvent","","",null,null],[12,"type_","","",32,null],[12,"serial","","",32,null],[12,"send_event","","",32,null],[12,"display","","",32,null],[12,"window","","",32,null],[12,"key_vector","","",32,null],[17,"XK_emopencircle","","",null,null],[17,"XK_5","","",null,null],[17,"CapRound","","",null,null],[17,"True","","",null,null],[17,"XK_kana_MO","","",null,null],[17,"XK_Begin","","",null,null],[3,"XF86VidModeNotifyEvent","","",null,null],[12,"type_","","",33,null],[12,"serial","","",33,null],[12,"send_event","","",33,null],[12,"display","","",33,null],[12,"root","","",33,null],[12,"state","","",33,null],[12,"kind","","",33,null],[12,"forced","","",33,null],[12,"time","","",33,null],[17,"XK_section","","",null,null],[17,"XK_blank","","",null,null],[17,"XK_cursor","","",null,null],[17,"XK_Cyrillic_u","","",null,null],[17,"XA_STRING","","",null,null],[17,"XBufferOverflow","","",null,null],[3,"XDeviceState","","",null,null],[12,"device_id","","",34,null],[12,"num_classes","","",34,null],[12,"data","","",34,null],[17,"XK_Pointer_Button1","","",null,null],[17,"XK_Greek_DELTA","","",null,null],[17,"XK_z","","",null,null],[17,"MappingPointer","","",null,null],[17,"XK_Ukranian_je","","",null,null],[17,"XIDeviceChange","","",null,null],[3,"Xcursor","","",null,null],[12,"XcursorAnimateCreate","","",35,null],[12,"XcursorAnimateDestroy","","",35,null],[12,"XcursorAnimateNext","","",35,null],[12,"XcursorCommentCreate","","",35,null],[12,"XcursorCommentDestroy","","",35,null],[12,"XcursorCommentsCreate","","",35,null],[12,"XcursorCommentsDestroy","","",35,null],[12,"XcursorCursorsCreate","","",35,null],[12,"XcursorCursorsDestroy","","",35,null],[12,"XcursorFileLoad","","",35,null],[12,"XcursorFileLoadAllImages","","",35,null],[12,"XcursorFileLoadImage","","",35,null],[12,"XcursorFileLoadImages","","",35,null],[12,"XcursorFilenameLoad","","",35,null],[12,"XcursorFilenameLoadAllImages","","",35,null],[12,"XcursorFilenameLoadCursor","","",35,null],[12,"XcursorFilenameLoadCursors","","",35,null],[12,"XcursorFilenameLoadImage","","",35,null],[12,"XcursorFilenameLoadImages","","",35,null],[12,"XcursorFilenameSave","","",35,null],[12,"XcursorFilenameSaveImages","","",35,null],[12,"XcursorFileSave","","",35,null],[12,"XcursorFileSaveImages","","",35,null],[12,"XcursorGetDefaultSize","","",35,null],[12,"XcursorGetTheme","","",35,null],[12,"XcursorGetThemeCore","","",35,null],[12,"XcursorImageCreate","","",35,null],[12,"XcursorImageDestroy","","",35,null],[12,"XcursorImageHash","","",35,null],[12,"XcursorImageLoadCursor","","",35,null],[12,"XcursorImagesCreate","","",35,null],[12,"XcursorImagesDestroy","","",35,null],[12,"XcursorImagesLoadCursor","","",35,null],[12,"XcursorImagesLoadCursors","","",35,null],[12,"XcursorImagesSetName","","",35,null],[12,"XcursorLibraryLoadCursor","","",35,null],[12,"XcursorLibraryLoadCursors","","",35,null],[12,"XcursorLibraryLoadImage","","",35,null],[12,"XcursorLibraryLoadImages","","",35,null],[12,"XcursorLibraryPath","","",35,null],[12,"XcursorLibraryShape","","",35,null],[12,"XcursorNoticeCreateBitmap","","",35,null],[12,"XcursorNoticePutBitmap","","",35,null],[12,"XcursorSetDefaultSize","","",35,null],[12,"XcursorSetTheme","","",35,null],[12,"XcursorSetThemeCore","","",35,null],[12,"XcursorShapeLoadCursor","","",35,null],[12,"XcursorShapeLoadCursors","","",35,null],[12,"XcursorShapeLoadImage","","",35,null],[12,"XcursorShapeLoadImages","","",35,null],[12,"XcursorSupportsAnim","","",35,null],[12,"XcursorSupportsARGB","","",35,null],[12,"XcursorTryShapeBitmapCursor","","",35,null],[12,"XcursorTryShapeCursor","","",35,null],[12,"XcursorXcFileLoad","","",35,null],[12,"XcursorXcFileLoadAllImages","","",35,null],[12,"XcursorXcFileLoadImage","","",35,null],[12,"XcursorXcFileLoadImages","","",35,null],[12,"XcursorXcFileSave","","",35,null],[17,"XF86XK_PowerOff","","",null,null],[17,"XK_Cyrillic_shcha","","",null,null],[17,"XK_Odoubleacute","","",null,null],[17,"XIMPreeditNone","","",null,null],[17,"XF86XK_LaunchE","","",null,null],[17,"XK_eogonek","","",null,null],[3,"XrmOptionDescRec","","",null,null],[12,"option","","",36,null],[12,"specifier","","",36,null],[12,"argKind","","",36,null],[12,"value","","",36,null],[17,"KBKeyClickPercent","","",null,null],[17,"XK_botvertsummationconnector","","",null,null],[17,"FamilyServerInterpreted","","",null,null],[17,"XK_Rcedilla","","",null,null],[17,"XF86XK_Standby","","",null,null],[17,"XK_KP_F4","","",null,null],[17,"XK_hebrew_samekh","","",null,null],[17,"VisualScreenMask","","",null,null],[17,"XK_KP_End","","",null,null],[17,"BadAlloc","","",null,null],[3,"_XkbOverlayKey","","",null,null],[17,"XK_Greek_phi","","",null,null],[6,"XkbAction","","",null,null],[17,"XLookupBoth","","",null,null],[17,"XK_Arabic_sheen","","",null,null],[17,"XINotifyAncestor","","",null,null],[6,"XkbOverlayRowPtr","","",null,null],[17,"XK_Ediaeresis","","",null,null],[17,"XF86XK_Word","","",null,null],[17,"XkbLC_ConsumeLookupMods","","",null,null],[17,"XK_KP_0","","",null,null],[17,"Mod3Mask","","",null,null],[17,"XI_LeaveMask","","",null,null],[6,"XrmOptionKind","","",null,null],[17,"XK_enspace","","",null,null],[17,"PWinGravity","","",null,null],[17,"XF86XK_Switch_VT_1","","",null,null],[17,"XK_kana_U","","",null,null],[17,"XK_emopenrectangle","","",null,null],[17,"CapProjecting","","",null,null],[17,"XK_braceright","","",null,null],[17,"XIFloatingSlave","","",null,null],[17,"XI_BarrierHitMask","","",null,null],[17,"XK_ISO_Prev_Group_Lock","","",null,null],[17,"XK_Ukranian_I","","",null,null],[17,"AllocAll","","",null,null],[17,"XK_soliddiamond","","",null,null],[3,"_XkbKeyNameRec","","",null,null],[12,"name","","",37,null],[17,"XK_dead_E","","",null,null],[17,"XK_Arabic_ra","","",null,null],[3,"XDeviceTimeCoord","","",null,null],[12,"time","","",38,null],[12,"data","","",38,null],[17,"XK_Aogonek","","",null,null],[17,"XK_Macedonia_dse","","",null,null],[17,"XK_R6","","",null,null],[17,"XF86XK_WakeUp","","",null,null],[3,"XInput2","","",null,null],[12,"XIAllowEvents","","",39,null],[12,"XIAllowTouchEvents","","",39,null],[12,"XIBarrierReleasePointer","","",39,null],[12,"XIBarrierReleasePointers","","",39,null],[12,"XIChangeHierarchy","","",39,null],[12,"XIChangeProperty","","",39,null],[12,"XIDefineCursor","","",39,null],[12,"XIDeleteProperty","","",39,null],[12,"XIFreeDeviceInfo","","",39,null],[12,"XIGetClientPointer","","",39,null],[12,"XIGetFocus","","",39,null],[12,"XIGetProperty","","",39,null],[12,"XIGetSelectedEvents","","",39,null],[12,"XIGrabButton","","",39,null],[12,"XIGrabDevice","","",39,null],[12,"XIGrabEnter","","",39,null],[12,"XIGrabFocusIn","","",39,null],[12,"XIGrabKeycode","","",39,null],[12,"XIGrabTouchBegin","","",39,null],[12,"XIListProperties","","",39,null],[12,"XIQueryDevice","","",39,null],[12,"XIQueryPointer","","",39,null],[12,"XIQueryVersion","","",39,null],[12,"XISelectEvents","","",39,null],[12,"XISetClientPointer","","",39,null],[12,"XISetFocus","","",39,null],[12,"XIUndefineCursor","","",39,null],[12,"XIUngrabButton","","",39,null],[12,"XIUngrabDevice","","",39,null],[12,"XIUngrabEnter","","",39,null],[12,"XIUngrabFocusIn","","",39,null],[12,"XIUngrabKeycode","","",39,null],[12,"XIUngrabTouchBegin","","",39,null],[12,"XIWarpPointer","","",39,null],[17,"LASTEvent","","",null,null],[3,"_XkbMapNotifyEvent","","",null,null],[12,"type_","","",40,null],[12,"serial","","",40,null],[12,"send_event","","",40,null],[12,"display","","",40,null],[12,"time","","",40,null],[12,"xkb_type","","",40,null],[12,"device","","",40,null],[12,"changed","","",40,null],[12,"flags","","",40,null],[12,"first_type","","",40,null],[12,"num_types","","",40,null],[12,"min_key_code","","",40,null],[12,"max_key_code","","",40,null],[12,"first_key_sym","","",40,null],[12,"first_key_act","","",40,null],[12,"first_key_bahavior","","",40,null],[12,"first_key_explicit","","",40,null],[12,"first_modmap_key","","",40,null],[12,"first_vmodmap_key","","",40,null],[12,"num_key_syms","","",40,null],[12,"num_key_acts","","",40,null],[12,"num_key_behaviors","","",40,null],[12,"num_key_explicit","","",40,null],[12,"num_modmap_keys","","",40,null],[12,"num_vmodmap_keys","","",40,null],[12,"vmods","","",40,null],[6,"KeySym","","",null,null],[17,"XK_Rcaron","","",null,null],[17,"XK_ISO_Emphasize","","",null,null],[3,"_XkbColor","","",null,null],[17,"XK_Greek_lambda","","",null,null],[17,"XK_Hiragana_Katakana","","",null,null],[17,"XK_jot","","",null,null],[17,"XK_egrave","","",null,null],[17,"KBBellPercent","","",null,null],[17,"XK_toprightsummation","","",null,null],[17,"XK_KP_Home","","",null,null],[3,"_XcursorAnimate","","",null,null],[12,"cursors","","",41,null],[12,"sequence","","",41,null],[17,"XK_Greek_MU","","",null,null],[17,"XNAreaNeeded_0","","",null,null],[17,"XK_dagger","","",null,null],[17,"XK_kana_YA","","",null,null],[17,"XK_Pointer_DownRight","","",null,null],[3,"XITouchOwnershipEvent","","",null,null],[12,"_type","","",42,null],[12,"serial","","",42,null],[12,"send_event","","",42,null],[12,"display","","",42,null],[12,"extension","","",42,null],[12,"evtype","","",42,null],[12,"time","","",42,null],[12,"deviceid","","",42,null],[12,"sourceid","","",42,null],[12,"touchid","","",42,null],[12,"root","","",42,null],[12,"event","","",42,null],[12,"child","","",42,null],[12,"flags","","",42,null],[6,"XkbBoundsPtr","","",null,null],[17,"PointerRoot","","",null,null],[17,"XK_diaeresis","","",null,null],[17,"XF86XK_Market","","",null,null],[17,"SyncKeyboard","","",null,null],[17,"XNFontSet","","",null,null],[6,"XkbExtensionDeviceNotifyEvent","","",null,null],[17,"XK_Igrave","","",null,null],[17,"XF86XK_Xfer","","",null,null],[17,"XK_KP_1","","",null,null],[17,"Mod5Mask","","",null,null],[17,"XK_em3space","","",null,null],[17,"XISlaveAttached","","",null,null],[17,"XF86XK_LaunchA","","",null,null],[17,"XK_R11","","",null,null],[17,"NotifyNonlinear","","",null,null],[17,"XK_rightmiddlecurlybrace","","",null,null],[3,"XAnyEvent","","",null,null],[12,"type_","","",43,null],[12,"serial","","",43,null],[12,"send_event","","",43,null],[12,"display","","",43,null],[12,"window","","",43,null],[17,"XK_KP_Enter","","",null,null],[17,"XI_BarrierLeaveMask","","",null,null],[17,"XK_ISO_First_Group","","",null,null],[17,"XK_O","","",null,null],[17,"XK_checkerboard","","",null,null],[17,"XK_L9","","",null,null],[17,"VisualDepthMask","","",null,null],[17,"XK_Arabic_zain","","",null,null],[17,"XF86XK_Music","","",null,null],[17,"XK_r","","",null,null],[17,"XNSeparatorofNestedList_0","","",null,null],[17,"BadColor","","",null,null],[3,"Screen","","",null,null],[12,"ext_data","","",44,null],[12,"display","","",44,null],[12,"root","","",44,null],[12,"width","","",44,null],[12,"height","","",44,null],[12,"mwidth","","",44,null],[12,"mheight","","",44,null],[12,"ndepths","","",44,null],[12,"depths","","",44,null],[12,"root_depth","","",44,null],[12,"root_visual","","",44,null],[12,"default_gc","","",44,null],[12,"cmap","","",44,null],[12,"white_pixel","","",44,null],[12,"black_pixel","","",44,null],[12,"max_maps","","",44,null],[12,"min_maps","","",44,null],[12,"backing_store","","",44,null],[12,"save_unders","","",44,null],[12,"root_input_mask","","",44,null],[17,"XK_breve","","",null,null],[17,"XK_ISO_Level3_Shift","","",null,null],[17,"NoEventMask","","",null,null],[3,"XITouchClassInfo","","",null,null],[12,"_type","","",45,null],[12,"sourceid","","",45,null],[12,"mode","","",45,null],[12,"num_touches","","",45,null],[17,"XK_Uring","","",null,null],[17,"XK_Cyrillic_U","","",null,null],[17,"XK_Zenkaku","","",null,null],[17,"XA_FONT_NAME","","",null,null],[5,"XIMaskIsSet","","",null,null],[17,"XK_eacute","","",null,null],[17,"XA_WM_ZOOM_HINTS","","",null,null],[3,"XChar2b","","",null,null],[12,"byte1","","",46,null],[12,"byte2","","",46,null],[17,"XF86XK_TouchpadToggle","","",null,null],[17,"XK_Gabovedot","","",null,null],[17,"XK_trademarkincircle","","",null,null],[17,"XI_RawTouchBegin","","",null,null],[3,"_XcursorChunkHeader","","",null,null],[12,"header","","",47,null],[12,"type_","","",47,null],[12,"subtype","","",47,null],[12,"version","","",47,null],[6,"XILeaveEvent","","",null,null],[17,"XK_amacron","","",null,null],[17,"XK_Overlay2_Enable","","",null,null],[17,"AnyPropertyType","","",null,null],[17,"XK_dead_breve","","",null,null],[6,"Bool","","",null,null],[17,"XK_m","","",null,null],[17,"ReplayKeyboard","","",null,null],[17,"XK_Pointer_DownLeft","","",null,null],[3,"XIPropertyEvent","","",null,null],[12,"_type","","",48,null],[12,"serial","","",48,null],[12,"send_event","","",48,null],[12,"display","","",48,null],[12,"extension","","",48,null],[12,"evtype","","",48,null],[12,"time","","",48,null],[12,"deviceid","","",48,null],[12,"property","","",48,null],[12,"what","","",48,null],[6,"XkbGeometryPtr","","",null,null],[17,"XINotifyPassiveGrab","","",null,null],[17,"XF86XK_RockerEnter","","",null,null],[17,"Button4","","",null,null],[17,"SelectionClear","","",null,null],[17,"XK_hebrew_resh","","",null,null],[17,"XK_Ukrainian_i","","",null,null],[17,"XI_TouchUpdate","","",null,null],[17,"XISlaveDetached","","",null,null],[6,"XcursorPixel","","",null,null],[17,"XkbControlsNotifyMask","","",null,null],[17,"XF86XK_LaunchB","","",null,null],[17,"XK_topleftsqbracket","","",null,null],[17,"NotifyNonlinearVirtual","","",null,null],[17,"XF86XK_TouchpadOff","","",null,null],[17,"NoValue","","",null,null],[17,"XK_comma","","",null,null],[17,"GXinvert","","",null,null],[17,"XK_topleftsummation","","",null,null],[17,"XK_kana_NO","","",null,null],[17,"XK_KP_F1","","",null,null],[17,"KBBellPitch","","",null,null],[17,"XK_ISO_First_Group_Lock","","",null,null],[17,"XK_P","","",null,null],[17,"GCLineStyle","","",null,null],[17,"XK_Arabic_tehmarbuta","","",null,null],[3,"XFocusChangeEvent","","",null,null],[12,"type_","","",49,null],[12,"serial","","",49,null],[12,"send_event","","",49,null],[12,"display","","",49,null],[12,"window","","",49,null],[12,"mode","","",49,null],[12,"detail","","",49,null],[3,"_XkbSection","","",null,null],[17,"XF86XK_Battery","","",null,null],[17,"XK_Arabic_seen","","",null,null],[17,"XK_Agrave","","",null,null],[17,"XK_F1","","",null,null],[17,"BadGC","","",null,null],[17,"XK_doubledagger","","",null,null],[17,"XK_Lstroke","","",null,null],[17,"CopyFromParent","","",null,null],[17,"Success","","",null,null],[17,"XK_6","","",null,null],[17,"XK_Cyrillic_er","","",null,null],[17,"XK_Egrave","","",null,null],[17,"XA_COLORMAP","","",null,null],[17,"XF86XK_User2KB","","",null,null],[17,"XNLineSpace","","",null,null],[17,"XK_Cyrillic_ZHE","","",null,null],[17,"XK_Gcircumflex","","",null,null],[3,"XKeyEvent","","",null,null],[12,"type_","","",50,null],[12,"serial","","",50,null],[12,"send_event","","",50,null],[12,"display","","",50,null],[12,"window","","",50,null],[12,"root","","",50,null],[12,"subwindow","","",50,null],[12,"time","","",50,null],[12,"x","","",50,null],[12,"y","","",50,null],[12,"x_root","","",50,null],[12,"y_root","","",50,null],[12,"state","","",50,null],[12,"keycode","","",50,null],[12,"same_screen","","",50,null],[17,"XK_dead_belowdiaeresis","","",null,null],[17,"XK_Serbian_NJE","","",null,null],[17,"HostDelete","","",null,null],[17,"XI_RawTouchUpdate","","",null,null],[17,"XK_iogonek","","",null,null],[17,"XK_ISO_Next_Group","","",null,null],[17,"XK_K","","",null,null],[17,"GCFunction","","",null,null],[17,"GrabModeAsync","","",null,null],[17,"XK_ecaron","","",null,null],[17,"ReparentNotify","","",null,null],[3,"XInputClass","","",null,null],[12,"class","","",51,null],[12,"length","","",51,null],[17,"XK_dead_abovedot","","",null,null],[17,"XK_n","","",null,null],[17,"XK_F20","","",null,null],[17,"AsyncBoth","","",null,null],[17,"XF86XK_AudioRecord","","",null,null],[17,"XK_hebrew_doublelowline","","",null,null],[17,"Button3","","",null,null],[17,"XA_UNDERLINE_POSITION","","",null,null],[17,"XINotifyPassiveUngrab","","",null,null],[17,"XLookupNone","","",null,null],[4,"_XIM","","",null,null],[17,"XK_Greek_PSI","","",null,null],[17,"SelectionRequest","","",null,null],[17,"XIDeviceEnabled","","",null,null],[6,"XcursorUInt","","",null,null],[6,"XkbOutlinePtr","","",null,null],[17,"XkbIndicatorStateNotifyMask","","",null,null],[17,"XK_botleftsqbracket","","",null,null],[17,"XK_Cyrillic_YA","","",null,null],[17,"XF86XK_AudioMicMute","","",null,null],[17,"GXorReverse","","",null,null],[17,"XK_kana_HA","","",null,null],[17,"XNLineSpace_0","","",null,null],[17,"XI_ButtonPressMask","","",null,null],[17,"XK_Greek_omegaaccent","","",null,null],[17,"XNDestroyCallback_0","","",null,null],[4,"_XrmHashBucketRec","","",null,null],[17,"XF86XK_TouchpadOn","","",null,null],[17,"XF86XK_Paste","","",null,null],[17,"GCCapStyle","","",null,null],[17,"CWBorderWidth","","",null,null],[17,"XISlavePointer","","",null,null],[17,"XK_Kcedilla","","",null,null],[17,"XK_StickyKeys_Enable","","",null,null],[17,"XK_leftopentriangle","","",null,null],[17,"XF86XK_Bluetooth","","",null,null],[17,"XK_F2","","",null,null],[17,"PAllHints","","",null,null],[17,"XK_kana_E","","",null,null],[17,"XA_INTEGER","","",null,null],[6,"XkbClientMapPtr","","",null,null],[17,"XK_Shift_Lock","","",null,null],[17,"AnyKey","","",null,null],[17,"XK_Cyrillic_es","","",null,null],[17,"Button4Mask","","",null,null],[17,"XK_signifblank","","",null,null],[17,"XK_crossinglines","","",null,null],[3,"XWMHints","","",null,null],[12,"flags","","",52,null],[12,"input","","",52,null],[12,"initial_state","","",52,null],[12,"icon_pixmap","","",52,null],[12,"icon_window","","",52,null],[12,"icon_x","","",52,null],[12,"icon_y","","",52,null],[12,"icon_mask","","",52,null],[12,"window_group","","",52,null],[6,"XLeaveWindowEvent","","",null,null],[17,"XIRejectTouch","","",null,null],[3,"Xlib","","",null,null],[12,"XActivateScreenSaver","","",53,null],[12,"XAddConnectionWatch","","",53,null],[12,"XAddExtension","","",53,null],[12,"XAddHost","","",53,null],[12,"XAddHosts","","",53,null],[12,"XAddPixel","","",53,null],[12,"XAddToExtensionList","","",53,null],[12,"XAddToSaveSet","","",53,null],[12,"XAllocClassHint","","",53,null],[12,"XAllocColor","","",53,null],[12,"XAllocColorCells","","",53,null],[12,"XAllocColorPlanes","","",53,null],[12,"XAllocIconSize","","",53,null],[12,"XAllocNamedColor","","",53,null],[12,"XAllocSizeHints","","",53,null],[12,"XAllocStandardColormap","","",53,null],[12,"XAllocWMHints","","",53,null],[12,"XAllowEvents","","",53,null],[12,"XAllPlanes","","",53,null],[12,"XAutoRepeatOff","","",53,null],[12,"XAutoRepeatOn","","",53,null],[12,"XBaseFontNameListOfFontSet","","",53,null],[12,"XBell","","",53,null],[12,"XBitmapBitOrder","","",53,null],[12,"XBitmapPad","","",53,null],[12,"XBitmapUnit","","",53,null],[12,"XBlackPixel","","",53,null],[12,"XBlackPixelOfScreen","","",53,null],[12,"XCellsOfScreen","","",53,null],[12,"XChangeActivePointerGrab","","",53,null],[12,"XChangeGC","","",53,null],[12,"XChangeKeyboardControl","","",53,null],[12,"XChangeKeyboardMapping","","",53,null],[12,"XChangePointerControl","","",53,null],[12,"XChangeProperty","","",53,null],[12,"XChangeSaveSet","","",53,null],[12,"XChangeWindowAttributes","","",53,null],[12,"XCheckIfEvent","","",53,null],[12,"XCheckMaskEvent","","",53,null],[12,"XCheckTypedEvent","","",53,null],[12,"XCheckTypedWindowEvent","","",53,null],[12,"XCheckWindowEvent","","",53,null],[12,"XCirculateSubwindows","","",53,null],[12,"XCirculateSubwindowsDown","","",53,null],[12,"XCirculateSubwindowsUp","","",53,null],[12,"XClearArea","","",53,null],[12,"XClearWindow","","",53,null],[12,"XClipBox","","",53,null],[12,"XCloseDisplay","","",53,null],[12,"XCloseIM","","",53,null],[12,"XCloseOM","","",53,null],[12,"XcmsAddColorSpace","","",53,null],[12,"XcmsAddFunctionSet","","",53,null],[12,"XcmsAllocColor","","",53,null],[12,"XcmsAllocNamedColor","","",53,null],[12,"XcmsCCCOfColormap","","",53,null],[12,"XcmsCIELabClipab","","",53,null],[12,"XcmsCIELabClipL","","",53,null],[12,"XcmsCIELabClipLab","","",53,null],[12,"XcmsCIELabQueryMaxC","","",53,null],[12,"XcmsCIELabQueryMaxL","","",53,null],[12,"XcmsCIELabQueryMaxLC","","",53,null],[12,"XcmsCIELabQueryMinL","","",53,null],[12,"XcmsCIELabToCIEXYZ","","",53,null],[12,"XcmsCIELabWhiteShiftColors","","",53,null],[12,"XcmsCIELuvClipL","","",53,null],[12,"XcmsCIELuvClipLuv","","",53,null],[12,"XcmsCIELuvClipuv","","",53,null],[12,"XcmsCIELuvQueryMaxC","","",53,null],[12,"XcmsCIELuvQueryMaxL","","",53,null],[12,"XcmsCIELuvQueryMaxLC","","",53,null],[12,"XcmsCIELuvQueryMinL","","",53,null],[12,"XcmsCIELuvToCIEuvY","","",53,null],[12,"XcmsCIELuvWhiteShiftColors","","",53,null],[12,"XcmsCIEuvYToCIELuv","","",53,null],[12,"XcmsCIEuvYToCIEXYZ","","",53,null],[12,"XcmsCIEuvYToTekHVC","","",53,null],[12,"XcmsCIExyYToCIEXYZ","","",53,null],[12,"XcmsCIEXYZToCIELab","","",53,null],[12,"XcmsCIEXYZToCIEuvY","","",53,null],[12,"XcmsCIEXYZToCIExyY","","",53,null],[12,"XcmsCIEXYZToRGBi","","",53,null],[12,"XcmsClientWhitePointOfCCC","","",53,null],[12,"XcmsConvertColors","","",53,null],[12,"XcmsCreateCCC","","",53,null],[12,"XcmsDefaultCCC","","",53,null],[12,"XcmsDisplayOfCCC","","",53,null],[12,"XcmsFormatOfPrefix","","",53,null],[12,"XcmsFreeCCC","","",53,null],[12,"XcmsLookupColor","","",53,null],[12,"XcmsPrefixOfFormat","","",53,null],[12,"XcmsQueryBlack","","",53,null],[12,"XcmsQueryBlue","","",53,null],[12,"XcmsQueryColor","","",53,null],[12,"XcmsQueryColors","","",53,null],[12,"XcmsQueryGreen","","",53,null],[12,"XcmsQueryRed","","",53,null],[12,"XcmsQueryWhite","","",53,null],[12,"XcmsRGBiToCIEXYZ","","",53,null],[12,"XcmsRGBiToRGB","","",53,null],[12,"XcmsRGBToRGBi","","",53,null],[12,"XcmsScreenNumberOfCCC","","",53,null],[12,"XcmsScreenWhitePointOfCCC","","",53,null],[12,"XcmsSetCCCOfColormap","","",53,null],[12,"XcmsSetCompressionProc","","",53,null],[12,"XcmsSetWhiteAdjustProc","","",53,null],[12,"XcmsSetWhitePoint","","",53,null],[12,"XcmsStoreColor","","",53,null],[12,"XcmsStoreColors","","",53,null],[12,"XcmsTekHVCClipC","","",53,null],[12,"XcmsTekHVCClipV","","",53,null],[12,"XcmsTekHVCClipVC","","",53,null],[12,"XcmsTekHVCQueryMaxC","","",53,null],[12,"XcmsTekHVCQueryMaxV","","",53,null],[12,"XcmsTekHVCQueryMaxVC","","",53,null],[12,"XcmsTekHVCQueryMaxVSamples","","",53,null],[12,"XcmsTekHVCQueryMinV","","",53,null],[12,"XcmsTekHVCToCIEuvY","","",53,null],[12,"XcmsTekHVCWhiteShiftColors","","",53,null],[12,"XcmsVisualOfCCC","","",53,null],[12,"XConfigureWindow","","",53,null],[12,"XConnectionNumber","","",53,null],[12,"XContextDependentDrawing","","",53,null],[12,"XContextualDrawing","","",53,null],[12,"XConvertCase","","",53,null],[12,"XConvertSelection","","",53,null],[12,"XCopyArea","","",53,null],[12,"XCopyColormapAndFree","","",53,null],[12,"XCopyGC","","",53,null],[12,"XCopyPlane","","",53,null],[12,"XCreateBitmapFromData","","",53,null],[12,"XCreateColormap","","",53,null],[12,"XCreateFontCursor","","",53,null],[12,"XCreateFontSet","","",53,null],[12,"XCreateGC","","",53,null],[12,"XCreateGlyphCursor","","",53,null],[12,"XCreateImage","","",53,null],[12,"XCreatePixmap","","",53,null],[12,"XCreatePixmapCursor","","",53,null],[12,"XCreatePixmapFromBitmapData","","",53,null],[12,"XCreateRegion","","",53,null],[12,"XCreateSimpleWindow","","",53,null],[12,"XCreateWindow","","",53,null],[12,"XDefaultColormap","","",53,null],[12,"XDefaultColormapOfScreen","","",53,null],[12,"XDefaultDepth","","",53,null],[12,"XDefaultDepthOfScreen","","",53,null],[12,"XDefaultGC","","",53,null],[12,"XDefaultGCOfScreen","","",53,null],[12,"XDefaultRootWindow","","",53,null],[12,"XDefaultScreen","","",53,null],[12,"XDefaultScreenOfDisplay","","",53,null],[12,"XDefaultString","","",53,null],[12,"XDefaultVisual","","",53,null],[12,"XDefaultVisualOfScreen","","",53,null],[12,"XDefineCursor","","",53,null],[12,"XDeleteContext","","",53,null],[12,"XDeleteModifiermapEntry","","",53,null],[12,"XDeleteProperty","","",53,null],[12,"XDestroyIC","","",53,null],[12,"XDestroyImage","","",53,null],[12,"XDestroyOC","","",53,null],[12,"XDestroyRegion","","",53,null],[12,"XDestroySubwindows","","",53,null],[12,"XDestroyWindow","","",53,null],[12,"XDirectionalDependentDrawing","","",53,null],[12,"XDisableAccessControl","","",53,null],[12,"XDisplayCells","","",53,null],[12,"XDisplayHeight","","",53,null],[12,"XDisplayHeightMM","","",53,null],[12,"XDisplayKeycodes","","",53,null],[12,"XDisplayMotionBufferSize","","",53,null],[12,"XDisplayName","","",53,null],[12,"XDisplayOfIM","","",53,null],[12,"XDisplayOfOM","","",53,null],[12,"XDisplayOfScreen","","",53,null],[12,"XDisplayPlanes","","",53,null],[12,"XDisplayString","","",53,null],[12,"XDisplayWidth","","",53,null],[12,"XDisplayWidthMM","","",53,null],[12,"XDoesBackingStore","","",53,null],[12,"XDoesSaveUnders","","",53,null],[12,"XDrawArc","","",53,null],[12,"XDrawArcs","","",53,null],[12,"XDrawImageString","","",53,null],[12,"XDrawImageString16","","",53,null],[12,"XDrawLine","","",53,null],[12,"XDrawLines","","",53,null],[12,"XDrawPoint","","",53,null],[12,"XDrawPoints","","",53,null],[12,"XDrawRectangle","","",53,null],[12,"XDrawRectangles","","",53,null],[12,"XDrawSegments","","",53,null],[12,"XDrawString","","",53,null],[12,"XDrawString16","","",53,null],[12,"XDrawText","","",53,null],[12,"XDrawText16","","",53,null],[12,"XEHeadOfExtensionList","","",53,null],[12,"XEmptyRegion","","",53,null],[12,"XEnableAccessControl","","",53,null],[12,"XEqualRegion","","",53,null],[12,"XESetBeforeFlush","","",53,null],[12,"XESetCloseDisplay","","",53,null],[12,"XESetCopyEventCookie","","",53,null],[12,"XESetCopyGC","","",53,null],[12,"XESetCreateFont","","",53,null],[12,"XESetCreateGC","","",53,null],[12,"XESetError","","",53,null],[12,"XESetErrorString","","",53,null],[12,"XESetEventToWire","","",53,null],[12,"XESetFlushGC","","",53,null],[12,"XESetFreeFont","","",53,null],[12,"XESetFreeGC","","",53,null],[12,"XESetPrintErrorValues","","",53,null],[12,"XESetWireToError","","",53,null],[12,"XESetWireToEvent","","",53,null],[12,"XESetWireToEventCookie","","",53,null],[12,"XEventMaskOfScreen","","",53,null],[12,"XEventsQueued","","",53,null],[12,"XExtendedMaxRequestSize","","",53,null],[12,"XExtentsOfFontSet","","",53,null],[12,"XFetchBuffer","","",53,null],[12,"XFetchBytes","","",53,null],[12,"XFetchName","","",53,null],[12,"XFillArc","","",53,null],[12,"XFillArcs","","",53,null],[12,"XFillPolygon","","",53,null],[12,"XFillRectangle","","",53,null],[12,"XFillRectangles","","",53,null],[12,"XFilterEvent","","",53,null],[12,"XFindContext","","",53,null],[12,"XFindOnExtensionList","","",53,null],[12,"XFlush","","",53,null],[12,"XFlushGC","","",53,null],[12,"XFontsOfFontSet","","",53,null],[12,"XForceScreenSaver","","",53,null],[12,"XFree","","",53,null],[12,"XFreeColormap","","",53,null],[12,"XFreeColors","","",53,null],[12,"XFreeCursor","","",53,null],[12,"XFreeEventData","","",53,null],[12,"XFreeExtensionList","","",53,null],[12,"XFreeFont","","",53,null],[12,"XFreeFontInfo","","",53,null],[12,"XFreeFontNames","","",53,null],[12,"XFreeFontPath","","",53,null],[12,"XFreeFontSet","","",53,null],[12,"XFreeGC","","",53,null],[12,"XFreeModifiermap","","",53,null],[12,"XFreePixmap","","",53,null],[12,"XFreeStringList","","",53,null],[12,"XGContextFromGC","","",53,null],[12,"XGeometry","","",53,null],[12,"XGetAtomName","","",53,null],[12,"XGetAtomNames","","",53,null],[12,"XGetClassHint","","",53,null],[12,"XGetCommand","","",53,null],[12,"XGetDefault","","",53,null],[12,"XGetErrorDatabaseText","","",53,null],[12,"XGetErrorText","","",53,null],[12,"XGetEventData","","",53,null],[12,"XGetFontPath","","",53,null],[12,"XGetFontProperty","","",53,null],[12,"XGetGCValues","","",53,null],[12,"XGetGeometry","","",53,null],[12,"XGetIconName","","",53,null],[12,"XGetIconSizes","","",53,null],[12,"XGetImage","","",53,null],[12,"XGetInputFocus","","",53,null],[12,"XGetKeyboardControl","","",53,null],[12,"XGetKeyboardMapping","","",53,null],[12,"XGetModifierMapping","","",53,null],[12,"XGetMotionEvents","","",53,null],[12,"XGetNormalHints","","",53,null],[12,"XGetPixel","","",53,null],[12,"XGetPointerControl","","",53,null],[12,"XGetPointerMapping","","",53,null],[12,"XGetRGBColormaps","","",53,null],[12,"XGetScreenSaver","","",53,null],[12,"XGetSelectionOwner","","",53,null],[12,"XGetSizeHints","","",53,null],[12,"XGetStandardColormap","","",53,null],[12,"XGetSubImage","","",53,null],[12,"XGetTextProperty","","",53,null],[12,"XGetTransientForHint","","",53,null],[12,"XGetVisualInfo","","",53,null],[12,"XGetWindowAttributes","","",53,null],[12,"XGetWindowProperty","","",53,null],[12,"XGetWMClientMachine","","",53,null],[12,"XGetWMColormapWindows","","",53,null],[12,"XGetWMHints","","",53,null],[12,"XGetWMIconName","","",53,null],[12,"XGetWMName","","",53,null],[12,"XGetWMNormalHints","","",53,null],[12,"XGetWMProtocols","","",53,null],[12,"XGetWMSizeHints","","",53,null],[12,"XGetZoomHints","","",53,null],[12,"XGrabButton","","",53,null],[12,"XGrabKey","","",53,null],[12,"XGrabKeyboard","","",53,null],[12,"XGrabPointer","","",53,null],[12,"XGrabServer","","",53,null],[12,"XHeightMMOfScreen","","",53,null],[12,"XHeightOfScreen","","",53,null],[12,"XIconifyWindow","","",53,null],[12,"XIfEvent","","",53,null],[12,"XImageByteOrder","","",53,null],[12,"XIMOfIC","","",53,null],[12,"XInitExtension","","",53,null],[12,"XInitImage","","",53,null],[12,"XInitThreads","","",53,null],[12,"XInsertModifiermapEntry","","",53,null],[12,"XInstallColormap","","",53,null],[12,"XInternalConnectionNumbers","","",53,null],[12,"XInternAtom","","",53,null],[12,"XInternAtoms","","",53,null],[12,"XIntersectRegion","","",53,null],[12,"XkbAddDeviceLedInfo","","",53,null],[12,"XkbAddGeomColor","","",53,null],[12,"XkbAddGeomDoodad","","",53,null],[12,"XkbAddGeomKey","","",53,null],[12,"XkbAddGeomKeyAlias","","",53,null],[12,"XkbAddGeomOutline","","",53,null],[12,"XkbAddGeomOverlay","","",53,null],[12,"XkbAddGeomOverlayKey","","",53,null],[12,"XkbAddGeomOverlayRow","","",53,null],[12,"XkbAddGeomProperty","","",53,null],[12,"XkbAddGeomRow","","",53,null],[12,"XkbAddGeomSection","","",53,null],[12,"XkbAddGeomShape","","",53,null],[12,"XkbAddKeyType","","",53,null],[12,"XkbAllocClientMap","","",53,null],[12,"XkbAllocCompatMap","","",53,null],[12,"XkbAllocControls","","",53,null],[12,"XkbAllocDeviceInfo","","",53,null],[12,"XkbAllocGeomColors","","",53,null],[12,"XkbAllocGeomDoodads","","",53,null],[12,"XkbAllocGeometry","","",53,null],[12,"XkbAllocGeomKeyAliases","","",53,null],[12,"XkbAllocGeomKeys","","",53,null],[12,"XkbAllocGeomOutlines","","",53,null],[12,"XkbAllocGeomOverlayKeys","","",53,null],[12,"XkbAllocGeomOverlayRows","","",53,null],[12,"XkbAllocGeomOverlays","","",53,null],[12,"XkbAllocGeomPoints","","",53,null],[12,"XkbAllocGeomProps","","",53,null],[12,"XkbAllocGeomRows","","",53,null],[12,"XkbAllocGeomSectionDoodads","","",53,null],[12,"XkbAllocGeomSections","","",53,null],[12,"XkbAllocGeomShapes","","",53,null],[12,"XkbAllocIndicatorMaps","","",53,null],[12,"XkbAllocKeyboard","","",53,null],[12,"XkbAllocNames","","",53,null],[12,"XkbAllocServerMap","","",53,null],[12,"XkbApplyCompatMapToKey","","",53,null],[12,"XkbApplyVirtualModChanges","","",53,null],[12,"XkbBell","","",53,null],[12,"XkbBellEvent","","",53,null],[12,"XkbChangeDeviceInfo","","",53,null],[12,"XkbChangeEnabledControls","","",53,null],[12,"XkbChangeKeycodeRange","","",53,null],[12,"XkbChangeMap","","",53,null],[12,"XkbChangeNames","","",53,null],[12,"XkbChangeTypesOfKey","","",53,null],[12,"XkbComputeEffectiveMap","","",53,null],[12,"XkbComputeRowBounds","","",53,null],[12,"XkbComputeSectionBounds","","",53,null],[12,"XkbComputeShapeBounds","","",53,null],[12,"XkbComputeShapeTop","","",53,null],[12,"XkbCopyKeyType","","",53,null],[12,"XkbCopyKeyTypes","","",53,null],[12,"XkbDeviceBell","","",53,null],[12,"XkbDeviceBellEvent","","",53,null],[12,"XkbFindOverlayForKey","","",53,null],[12,"XkbForceBell","","",53,null],[12,"XkbForceDeviceBell","","",53,null],[12,"XkbFreeClientMap","","",53,null],[12,"XkbFreeCompatMap","","",53,null],[12,"XkbFreeComponentList","","",53,null],[12,"XkbFreeControls","","",53,null],[12,"XkbFreeDeviceInfo","","",53,null],[12,"XkbFreeGeomColors","","",53,null],[12,"XkbFreeGeomDoodads","","",53,null],[12,"XkbFreeGeometry","","",53,null],[12,"XkbFreeGeomKeyAliases","","",53,null],[12,"XkbFreeGeomKeys","","",53,null],[12,"XkbFreeGeomOutlines","","",53,null],[12,"XkbFreeGeomOverlayKeys","","",53,null],[12,"XkbFreeGeomOverlayRows","","",53,null],[12,"XkbFreeGeomOverlays","","",53,null],[12,"XkbFreeGeomPoints","","",53,null],[12,"XkbFreeGeomProperties","","",53,null],[12,"XkbFreeGeomRows","","",53,null],[12,"XkbFreeGeomSections","","",53,null],[12,"XkbFreeGeomShapes","","",53,null],[12,"XkbFreeIndicatorMaps","","",53,null],[12,"XkbFreeKeyboard","","",53,null],[12,"XkbFreeNames","","",53,null],[12,"XkbFreeServerMap","","",53,null],[12,"XkbGetAutoRepeatRate","","",53,null],[12,"XkbGetAutoResetControls","","",53,null],[12,"XkbGetCompatMap","","",53,null],[12,"XkbGetControls","","",53,null],[12,"XkbGetDetectableAutoRepeat","","",53,null],[12,"XkbGetDeviceButtonActions","","",53,null],[12,"XkbGetDeviceInfo","","",53,null],[12,"XkbGetDeviceInfoChanges","","",53,null],[12,"XkbGetDeviceLedInfo","","",53,null],[12,"XkbGetGeometry","","",53,null],[12,"XkbGetIndicatorMap","","",53,null],[12,"XkbGetIndicatorState","","",53,null],[12,"XkbGetKeyActions","","",53,null],[12,"XkbGetKeyBehaviors","","",53,null],[12,"XkbGetKeyboard","","",53,null],[12,"XkbGetKeyboardByName","","",53,null],[12,"XkbGetKeyExplicitComponents","","",53,null],[12,"XkbGetKeyModifierMap","","",53,null],[12,"XkbGetKeySyms","","",53,null],[12,"XkbGetKeyTypes","","",53,null],[12,"XkbGetKeyVirtualModMap","","",53,null],[12,"XkbGetMap","","",53,null],[12,"XkbGetMapChanges","","",53,null],[12,"XkbGetNamedDeviceIndicator","","",53,null],[12,"XkbGetNamedGeometry","","",53,null],[12,"XkbGetNamedIndicator","","",53,null],[12,"XkbGetNames","","",53,null],[12,"XkbGetPerClientControls","","",53,null],[12,"XkbGetState","","",53,null],[12,"XkbGetUpdatedMap","","",53,null],[12,"XkbGetVirtualMods","","",53,null],[12,"XkbGetXlibControls","","",53,null],[12,"XkbIgnoreExtension","","",53,null],[12,"XkbInitCanonicalKeyTypes","","",53,null],[12,"XkbKeycodeToKeysym","","",53,null],[12,"XkbKeysymToModifiers","","",53,null],[12,"XkbKeyTypesForCoreSymbols","","",53,null],[12,"XkbLatchGroup","","",53,null],[12,"XkbLatchModifiers","","",53,null],[12,"XkbLibraryVersion","","",53,null],[12,"XkbListComponents","","",53,null],[12,"XkbLockGroup","","",53,null],[12,"XkbLockModifiers","","",53,null],[12,"XkbLookupKeyBinding","","",53,null],[12,"XkbLookupKeySym","","",53,null],[12,"XkbNoteControlsChanges","","",53,null],[12,"XkbNoteDeviceChanges","","",53,null],[12,"XkbNoteMapChanges","","",53,null],[12,"XkbNoteNameChanges","","",53,null],[12,"XkbOpenDisplay","","",53,null],[12,"XkbQueryExtension","","",53,null],[12,"XkbRefreshKeyboardMapping","","",53,null],[12,"XkbResizeDeviceButtonActions","","",53,null],[12,"XkbResizeKeyActions","","",53,null],[12,"XkbResizeKeySyms","","",53,null],[12,"XkbResizeKeyType","","",53,null],[12,"XkbSelectEventDetails","","",53,null],[12,"XkbSelectEvents","","",53,null],[12,"XkbSetAtomFuncs","","",53,null],[12,"XkbSetAutoRepeatRate","","",53,null],[12,"XkbSetAutoResetControls","","",53,null],[12,"XkbSetCompatMap","","",53,null],[12,"XkbSetControls","","",53,null],[12,"XkbSetDebuggingFlags","","",53,null],[12,"XkbSetDetectableAutoRepeat","","",53,null],[12,"XkbSetDeviceButtonActions","","",53,null],[12,"XkbSetDeviceInfo","","",53,null],[12,"XkbSetDeviceLedInfo","","",53,null],[12,"XkbSetGeometry","","",53,null],[12,"XkbSetIgnoreLockMods","","",53,null],[12,"XkbSetIndicatorMap","","",53,null],[12,"XkbSetMap","","",53,null],[12,"XkbSetNamedDeviceIndicator","","",53,null],[12,"XkbSetNamedIndicator","","",53,null],[12,"XkbSetNames","","",53,null],[12,"XkbSetPerClientControls","","",53,null],[12,"XkbSetServerInternalMods","","",53,null],[12,"XkbSetXlibControls","","",53,null],[12,"XkbToControl","","",53,null],[12,"XkbTranslateKeyCode","","",53,null],[12,"XkbTranslateKeySym","","",53,null],[12,"XkbUpdateActionVirtualMods","","",53,null],[12,"XkbUpdateKeyTypeVirtualMods","","",53,null],[12,"XkbUpdateMapFromCore","","",53,null],[12,"XkbUseExtension","","",53,null],[12,"XkbVirtualModsToReal","","",53,null],[12,"XkbXlibControlsImplemented","","",53,null],[12,"XKeycodeToKeysym","","",53,null],[12,"XKeysymToKeycode","","",53,null],[12,"XKeysymToString","","",53,null],[12,"XKillClient","","",53,null],[12,"XLastKnownRequestProcessed","","",53,null],[12,"XListDepths","","",53,null],[12,"XListExtensions","","",53,null],[12,"XListFonts","","",53,null],[12,"XListFontsWithInfo","","",53,null],[12,"XListHosts","","",53,null],[12,"XListInstalledColormaps","","",53,null],[12,"XListPixmapFormats","","",53,null],[12,"XListProperties","","",53,null],[12,"XLoadFont","","",53,null],[12,"XLoadQueryFont","","",53,null],[12,"XLocaleOfFontSet","","",53,null],[12,"XLocaleOfIM","","",53,null],[12,"XLocaleOfOM","","",53,null],[12,"XLockDisplay","","",53,null],[12,"XLookupColor","","",53,null],[12,"XLookupKeysym","","",53,null],[12,"XLookupString","","",53,null],[12,"XLowerWindow","","",53,null],[12,"XMapRaised","","",53,null],[12,"XMapSubwindows","","",53,null],[12,"XMapWindow","","",53,null],[12,"XMaskEvent","","",53,null],[12,"XMatchVisualInfo","","",53,null],[12,"XMaxCmapsOfScreen","","",53,null],[12,"XMaxRequestSize","","",53,null],[12,"XmbDrawImageString","","",53,null],[12,"XmbDrawString","","",53,null],[12,"XmbDrawText","","",53,null],[12,"XmbLookupString","","",53,null],[12,"XmbResetIC","","",53,null],[12,"XmbSetWMProperties","","",53,null],[12,"XmbTextEscapement","","",53,null],[12,"XmbTextExtents","","",53,null],[12,"XmbTextListToTextProperty","","",53,null],[12,"XmbTextPerCharExtents","","",53,null],[12,"XmbTextPropertyToTextList","","",53,null],[12,"XMinCmapsOfScreen","","",53,null],[12,"XMoveResizeWindow","","",53,null],[12,"XMoveWindow","","",53,null],[12,"XNewModifiermap","","",53,null],[12,"XNextEvent","","",53,null],[12,"XNextRequest","","",53,null],[12,"XNoOp","","",53,null],[12,"XOffsetRegion","","",53,null],[12,"XOMOfOC","","",53,null],[12,"XOpenDisplay","","",53,null],[12,"XOpenIM","","",53,null],[12,"XOpenOM","","",53,null],[12,"XParseColor","","",53,null],[12,"XParseGeometry","","",53,null],[12,"XPeekEvent","","",53,null],[12,"XPeekIfEvent","","",53,null],[12,"XPending","","",53,null],[12,"Xpermalloc","","",53,null],[12,"XPlanesOfScreen","","",53,null],[12,"XPointInRegion","","",53,null],[12,"XPolygonRegion","","",53,null],[12,"XProcessInternalConnection","","",53,null],[12,"XProtocolRevision","","",53,null],[12,"XProtocolVersion","","",53,null],[12,"XPutBackEvent","","",53,null],[12,"XPutImage","","",53,null],[12,"XPutPixel","","",53,null],[12,"XQLength","","",53,null],[12,"XQueryBestCursor","","",53,null],[12,"XQueryBestSize","","",53,null],[12,"XQueryBestStipple","","",53,null],[12,"XQueryBestTile","","",53,null],[12,"XQueryColor","","",53,null],[12,"XQueryColors","","",53,null],[12,"XQueryExtension","","",53,null],[12,"XQueryFont","","",53,null],[12,"XQueryKeymap","","",53,null],[12,"XQueryPointer","","",53,null],[12,"XQueryTextExtents","","",53,null],[12,"XQueryTextExtents16","","",53,null],[12,"XQueryTree","","",53,null],[12,"XRaiseWindow","","",53,null],[12,"XReadBitmapFile","","",53,null],[12,"XReadBitmapFileData","","",53,null],[12,"XRebindKeysym","","",53,null],[12,"XRecolorCursor","","",53,null],[12,"XReconfigureWMWindow","","",53,null],[12,"XRectInRegion","","",53,null],[12,"XRefreshKeyboardMapping","","",53,null],[12,"XRegisterIMInstantiateCallback","","",53,null],[12,"XRemoveConnectionWatch","","",53,null],[12,"XRemoveFromSaveSet","","",53,null],[12,"XRemoveHost","","",53,null],[12,"XRemoveHosts","","",53,null],[12,"XReparentWindow","","",53,null],[12,"XResetScreenSaver","","",53,null],[12,"XResizeWindow","","",53,null],[12,"XResourceManagerString","","",53,null],[12,"XRestackWindows","","",53,null],[12,"XrmCombineDatabase","","",53,null],[12,"XrmCombineFileDatabase","","",53,null],[12,"XrmDestroyDatabase","","",53,null],[12,"XrmEnumerateDatabase","","",53,null],[12,"XrmGetDatabase","","",53,null],[12,"XrmGetFileDatabase","","",53,null],[12,"XrmGetResource","","",53,null],[12,"XrmGetStringDatabase","","",53,null],[12,"XrmInitialize","","",53,null],[12,"XrmLocaleOfDatabase","","",53,null],[12,"XrmMergeDatabases","","",53,null],[12,"XrmParseCommand","","",53,null],[12,"XrmPermStringToQuark","","",53,null],[12,"XrmPutFileDatabase","","",53,null],[12,"XrmPutLineResource","","",53,null],[12,"XrmPutResource","","",53,null],[12,"XrmPutStringResource","","",53,null],[12,"XrmQGetResource","","",53,null],[12,"XrmQGetSearchList","","",53,null],[12,"XrmQGetSearchResource","","",53,null],[12,"XrmQPutResource","","",53,null],[12,"XrmQPutStringResource","","",53,null],[12,"XrmQuarkToString","","",53,null],[12,"XrmSetDatabase","","",53,null],[12,"XrmStringToBindingQuarkList","","",53,null],[12,"XrmStringToQuark","","",53,null],[12,"XrmStringToQuarkList","","",53,null],[12,"XrmUniqueQuark","","",53,null],[12,"XRootWindow","","",53,null],[12,"XRootWindowOfScreen","","",53,null],[12,"XRotateBuffers","","",53,null],[12,"XRotateWindowProperties","","",53,null],[12,"XSaveContext","","",53,null],[12,"XScreenCount","","",53,null],[12,"XScreenNumberOfScreen","","",53,null],[12,"XScreenOfDisplay","","",53,null],[12,"XScreenResourceString","","",53,null],[12,"XSelectInput","","",53,null],[12,"XSendEvent","","",53,null],[12,"XServerVendor","","",53,null],[12,"XSetAccessControl","","",53,null],[12,"XSetAfterFunction","","",53,null],[12,"XSetArcMode","","",53,null],[12,"XSetAuthorization","","",53,null],[12,"XSetBackground","","",53,null],[12,"XSetClassHint","","",53,null],[12,"XSetClipMask","","",53,null],[12,"XSetClipOrigin","","",53,null],[12,"XSetClipRectangles","","",53,null],[12,"XSetCloseDownMode","","",53,null],[12,"XSetCommand","","",53,null],[12,"XSetDashes","","",53,null],[12,"XSetErrorHandler","","",53,null],[12,"XSetFillRule","","",53,null],[12,"XSetFillStyle","","",53,null],[12,"XSetFont","","",53,null],[12,"XSetFontPath","","",53,null],[12,"XSetForeground","","",53,null],[12,"XSetFunction","","",53,null],[12,"XSetGraphicsExposures","","",53,null],[12,"XSetICFocus","","",53,null],[12,"XSetIconName","","",53,null],[12,"XSetIconSizes","","",53,null],[12,"XSetInputFocus","","",53,null],[12,"XSetIOErrorHandler","","",53,null],[12,"XSetLineAttributes","","",53,null],[12,"XSetLocaleModifiers","","",53,null],[12,"XSetModifierMapping","","",53,null],[12,"XSetNormalHints","","",53,null],[12,"XSetPlaneMask","","",53,null],[12,"XSetPointerMapping","","",53,null],[12,"XSetRegion","","",53,null],[12,"XSetRGBColormaps","","",53,null],[12,"XSetScreenSaver","","",53,null],[12,"XSetSelectionOwner","","",53,null],[12,"XSetSizeHints","","",53,null],[12,"XSetStandardColormap","","",53,null],[12,"XSetStandardProperties","","",53,null],[12,"XSetState","","",53,null],[12,"XSetStipple","","",53,null],[12,"XSetSubwindowMode","","",53,null],[12,"XSetTextProperty","","",53,null],[12,"XSetTile","","",53,null],[12,"XSetTransientForHint","","",53,null],[12,"XSetTSOrigin","","",53,null],[12,"XSetWindowBackground","","",53,null],[12,"XSetWindowBackgroundPixmap","","",53,null],[12,"XSetWindowBorder","","",53,null],[12,"XSetWindowBorderPixmap","","",53,null],[12,"XSetWindowBorderWidth","","",53,null],[12,"XSetWindowColormap","","",53,null],[12,"XSetWMClientMachine","","",53,null],[12,"XSetWMColormapWindows","","",53,null],[12,"XSetWMHints","","",53,null],[12,"XSetWMIconName","","",53,null],[12,"XSetWMName","","",53,null],[12,"XSetWMNormalHints","","",53,null],[12,"XSetWMProperties","","",53,null],[12,"XSetWMProtocols","","",53,null],[12,"XSetWMSizeHints","","",53,null],[12,"XSetZoomHints","","",53,null],[12,"XShrinkRegion","","",53,null],[12,"XStoreBuffer","","",53,null],[12,"XStoreBytes","","",53,null],[12,"XStoreColor","","",53,null],[12,"XStoreColors","","",53,null],[12,"XStoreName","","",53,null],[12,"XStoreNamedColor","","",53,null],[12,"XStringListToTextProperty","","",53,null],[12,"XStringToKeysym","","",53,null],[12,"XSubImage","","",53,null],[12,"XSubtractRegion","","",53,null],[12,"XSupportsLocale","","",53,null],[12,"XSync","","",53,null],[12,"XSynchronize","","",53,null],[12,"XTextExtents","","",53,null],[12,"XTextExtents16","","",53,null],[12,"XTextPropertyToStringList","","",53,null],[12,"XTextWidth","","",53,null],[12,"XTextWidth16","","",53,null],[12,"XTranslateCoordinates","","",53,null],[12,"XUndefineCursor","","",53,null],[12,"XUngrabButton","","",53,null],[12,"XUngrabKey","","",53,null],[12,"XUngrabKeyboard","","",53,null],[12,"XUngrabPointer","","",53,null],[12,"XUngrabServer","","",53,null],[12,"XUninstallColormap","","",53,null],[12,"XUnionRectWithRegion","","",53,null],[12,"XUnionRegion","","",53,null],[12,"XUnloadFont","","",53,null],[12,"XUnlockDisplay","","",53,null],[12,"XUnmapSubwindows","","",53,null],[12,"XUnmapWindow","","",53,null],[12,"XUnregisterIMInstantiateCallback","","",53,null],[12,"XUnsetICFocus","","",53,null],[12,"Xutf8DrawImageString","","",53,null],[12,"Xutf8DrawString","","",53,null],[12,"Xutf8DrawText","","",53,null],[12,"Xutf8LookupString","","",53,null],[12,"Xutf8ResetIC","","",53,null],[12,"Xutf8SetWMProperties","","",53,null],[12,"Xutf8TextEscapement","","",53,null],[12,"Xutf8TextExtents","","",53,null],[12,"Xutf8TextListToTextProperty","","",53,null],[12,"Xutf8TextPerCharExtents","","",53,null],[12,"Xutf8TextPropertyToTextList","","",53,null],[12,"XVendorRelease","","",53,null],[12,"XVisualIDFromVisual","","",53,null],[12,"XWarpPointer","","",53,null],[12,"XwcDrawImageString","","",53,null],[12,"XwcDrawString","","",53,null],[12,"XwcDrawText","","",53,null],[12,"XwcFreeStringList","","",53,null],[12,"XwcLookupString","","",53,null],[12,"XwcResetIC","","",53,null],[12,"XwcTextEscapement","","",53,null],[12,"XwcTextExtents","","",53,null],[12,"XwcTextListToTextProperty","","",53,null],[12,"XwcTextPerCharExtents","","",53,null],[12,"XwcTextPropertyToTextList","","",53,null],[12,"XWhitePixel","","",53,null],[12,"XWhitePixelOfScreen","","",53,null],[12,"XWidthMMOfScreen","","",53,null],[12,"XWidthOfScreen","","",53,null],[12,"XWindowEvent","","",53,null],[12,"XWithdrawWindow","","",53,null],[12,"XWMGeometry","","",53,null],[12,"XWriteBitmapFile","","",53,null],[12,"XXorRegion","","",53,null],[12,"XCreateIC","","",53,null],[12,"XCreateOC","","",53,null],[12,"XGetICValues","","",53,null],[12,"XGetIMValues","","",53,null],[12,"XGetOCValues","","",53,null],[12,"XGetOMValues","","",53,null],[12,"XSetICValues","","",53,null],[12,"XSetIMValues","","",53,null],[12,"XSetOCValues","","",53,null],[12,"XSetOMValues","","",53,null],[12,"XVaCreateNestedList","","",53,null],[17,"XkbExtensionDeviceNotify","","",null,null],[17,"XK_Ubreve","","",null,null],[17,"XK_hebrew_shin","","",null,null],[17,"XI_TouchEnd","","",null,null],[17,"XK_Serbian_TSHE","","",null,null],[17,"EnableAccess","","",null,null],[17,"XI_RawTouchEnd","","",null,null],[17,"XK_includes","","",null,null],[17,"XK_aogonek","","",null,null],[17,"BadRequest","","",null,null],[17,"XK_ISO_Next_Group_Lock","","",null,null],[6,"Status","","",null,null],[17,"XK_L","","",null,null],[17,"GCPlaneMask","","",null,null],[17,"XK_Arabic_hamzaunderalef","","",null,null],[17,"XK_KP_F2","","",null,null],[17,"XK_hebrew_nun","","",null,null],[17,"XK_maltesecross","","",null,null],[3,"XInputClassInfo","","",null,null],[12,"input_class","","",54,null],[12,"event_type_base","","",54,null],[17,"XK_o","","",null,null],[17,"XF86XK_Calculator","","",null,null],[17,"XA_UNDERLINE_THICKNESS","","",null,null],[17,"XI_Motion","","",null,null],[3,"XIHierarchyInfo","","",null,null],[12,"deviceid","","",55,null],[12,"attachment","","",55,null],[12,"_use","","",55,null],[12,"enabled","","",55,null],[12,"flags","","",55,null],[17,"XLookupChars","","",null,null],[17,"XK_ch","","",null,null],[17,"XK_Greek_OMEGA","","",null,null],[17,"InputOutput","","",null,null],[17,"XK_righttack","","",null,null],[17,"XF86XK_BackForward","","",null,null],[17,"XK_Cyrillic_ER","","",null,null],[17,"XK_copyright","","",null,null],[17,"GXcopyInverted","","",null,null],[17,"XF86XK_Meeting","","",null,null],[17,"XK_jcircumflex","","",null,null],[17,"XK_Greek_ALPHA","","",null,null],[3,"_XcmsCCC","","",null,null],[17,"XF86XK_Phone","","",null,null],[17,"XK_union","","",null,null],[17,"CWSibling","","",null,null],[17,"XK_Uogonek","","",null,null],[17,"XIMPreeditArea","","",null,null],[3,"_XkbDeviceInfo","","",null,null],[17,"XK_em4space","","",null,null],[17,"XK_F19","","",null,null],[17,"XK_Greek_theta","","",null,null],[17,"False","","",null,null],[17,"IconWindowHint","","",null,null],[6,"XkbColorPtr","","",null,null],[17,"XK_therefore","","",null,null],[5,"XISetMask","","",null,null],[3,"Depth","","",null,null],[12,"depth","","",56,null],[12,"nvisuals","","",56,null],[12,"visuals","","",56,null],[17,"XkbIndicatorStateNotify","","",null,null],[6,"XkbIndicatorPtr","","",null,null],[17,"XK_dead_diaeresis","","",null,null],[17,"XK_Arabic_kasratan","","",null,null],[17,"XIAnyButton","","",null,null],[17,"XK_hebrew_aleph","","",null,null],[17,"XK_Ukrainian_ie","","",null,null],[17,"XK_Thorn","","",null,null],[17,"FontChange","","",null,null],[17,"XISlaveSwitch","","",null,null],[17,"XF86XK_FrameForward","","",null,null],[17,"XkbNewKeyboardNotifyMask","","",null,null],[17,"XK_F12","","",null,null],[17,"XK_topintegral","","",null,null],[17,"XK_hebrew_taw","","",null,null],[17,"GXor","","",null,null],[17,"XK_ISO_Level3_Latch","","",null,null],[17,"XF86XK_Game","","",null,null],[17,"XK_kana_NI","","",null,null],[17,"XK_C","","",null,null],[17,"XK_caret","","",null,null],[17,"XK_ogonek","","",null,null],[17,"XK_enfilledcircbullet","","",null,null],[17,"GCForeground","","",null,null],[3,"XMapEvent","","",null,null],[12,"type_","","",57,null],[12,"serial","","",57,null],[12,"send_event","","",57,null],[12,"display","","",57,null],[12,"event","","",57,null],[12,"window","","",57,null],[12,"override_redirect","","",57,null],[17,"XK_KP_F3","","",null,null],[17,"XK_hebrew_samech","","",null,null],[17,"XA_DRAWABLE","","",null,null],[17,"Button5MotionMask","","",null,null],[17,"XK_topt","","",null,null],[3,"XCharStruct","","",null,null],[12,"lbearing","","",58,null],[12,"rbearing","","",58,null],[12,"width","","",58,null],[12,"ascent","","",58,null],[12,"descent","","",58,null],[12,"attributes","","",58,null],[17,"XK_MouseKeys_Enable","","",null,null],[17,"XK_heart","","",null,null],[3,"XIDeviceChangedEvent","","",null,null],[12,"_type","","",59,null],[12,"serial","","",59,null],[12,"send_event","","",59,null],[12,"display","","",59,null],[12,"extension","","",59,null],[12,"evtype","","",59,null],[12,"time","","",59,null],[12,"deviceid","","",59,null],[12,"sourceid","","",59,null],[12,"reason","","",59,null],[12,"num_classes","","",59,null],[12,"classes","","",59,null],[17,"XF86XK_Start","","",null,null],[17,"XK_Ch","","",null,null],[17,"XK_Ukranian_JE","","",null,null],[17,"XK_Meta_L","","",null,null],[17,"XF86XK_Launch0","","",null,null],[17,"XNBackground","","",null,null],[17,"Button5Mask","","",null,null],[17,"XK_Cyrillic_ES","","",null,null],[17,"XK_dead_a","","",null,null],[17,"XK_Hstroke","","",null,null],[17,"XK_dead_hook","","",null,null],[3,"_XkbOverlay","","",null,null],[17,"XK_vertconnector","","",null,null],[17,"XF86XK_MenuKB","","",null,null],[6,"XIFocusOutEvent","","",null,null],[17,"XK_yacute","","",null,null],[17,"ScreenSaverReset","","",null,null],[17,"XF86XK_LogWindowTree","","",null,null],[17,"XK_logicaland","","",null,null],[17,"XK_F25","","",null,null],[17,"CWStackMode","","",null,null],[17,"XF86XK_Stop","","",null,null],[17,"XK_L3","","",null,null],[3,"_XkbDeviceLedInfo","","",null,null],[17,"XK_intersection","","",null,null],[17,"XK_bar","","",null,null],[17,"XK_Greek_iota","","",null,null],[17,"XK_ISO_Prev_Group","","",null,null],[17,"XK_Romaji","","",null,null],[17,"XK_upshoe","","",null,null],[17,"XK_Arabic_hamzaonyeh","","",null,null],[5,"XIClearMask","","",null,null],[17,"XK_botleftsummation","","",null,null],[6,"XkbKeyTypePtr","","",null,null],[17,"XK_onehalf","","",null,null],[17,"XK_Arabic_fatha","","",null,null],[17,"XNHotKeyState_0","","",null,null],[17,"XIAnyKeycode","","",null,null],[17,"XK_Pointer_EnableKeys","","",null,null],[17,"XK_hebrew_bet","","",null,null],[17,"XNStatusDrawCallback_0","","",null,null],[17,"XA_STRIKEOUT_ASCENT","","",null,null],[6,"XkbPropertyPtr","","",null,null],[17,"XK_ssharp","","",null,null],[17,"XF86XK_Time","","",null,null],[17,"XK_kana_MU","","",null,null],[17,"XkbMapNotifyMask","","",null,null],[17,"XK_F13","","",null,null],[17,"RaiseLowest","","",null,null],[17,"XK_kana_SO","","",null,null],[17,"XK_leftanglebracket","","",null,null],[17,"XITouchEmulatingPointer","","",null,null],[17,"GXnor","","",null,null],[17,"XK_yen","","",null,null],[17,"XF86XK_Go","","",null,null],[17,"XK_Eacute","","",null,null],[3,"XMappingEvent","","",null,null],[12,"type_","","",60,null],[12,"serial","","",60,null],[12,"send_event","","",60,null],[12,"display","","",60,null],[12,"event","","",60,null],[12,"request","","",60,null],[12,"first_keycode","","",60,null],[12,"count","","",60,null],[17,"XA_CURSOR","","",null,null],[17,"XF86XK_Video","","",null,null],[17,"XK_Insert","","",null,null],[17,"XK_ISO_Discontinuous_Underline","","",null,null],[17,"ButtonMotionMask","","",null,null],[17,"XK_vertbar","","",null,null],[17,"XK_Utilde","","",null,null],[3,"XIDeviceEvent","","",null,null],[12,"_type","","",61,null],[12,"serial","","",61,null],[12,"send_event","","",61,null],[12,"display","","",61,null],[12,"extension","","",61,null],[12,"evtype","","",61,null],[12,"time","","",61,null],[12,"deviceid","","",61,null],[12,"sourceid","","",61,null],[12,"detail","","",61,null],[12,"root","","",61,null],[12,"event","","",61,null],[12,"child","","",61,null],[12,"root_x","","",61,null],[12,"root_y","","",61,null],[12,"event_x","","",61,null],[12,"event_y","","",61,null],[12,"flags","","",61,null],[12,"buttons","","",61,null],[12,"valuators","","",61,null],[12,"mods","","",61,null],[12,"group","","",61,null],[17,"XK_MouseKeys_Accel_Enable","","",null,null],[17,"XIMPreeditCallbacks","","",null,null],[17,"XK_Cyrillic_ef","","",null,null],[17,"XK_Arabic_fathatan","","",null,null],[17,"XF86XK_Suspend","","",null,null],[17,"UnmapNotify","","",null,null],[3,"XPixmapFormatValues","","",null,null],[12,"depth","","",62,null],[12,"bits_per_pixel","","",62,null],[12,"scanline_pad","","",62,null],[17,"XK_zcaron","","",null,null],[17,"XK_Cyrillic_SHORTI","","",null,null],[4,"_XIC","","",null,null],[17,"XK_Meta_R","","",null,null],[17,"XF86XK_Launch1","","",null,null],[17,"AnyModifier","","",null,null],[3,"Xlib_xcb","","",null,null],[12,"XGetXCBConnection","","",63,null],[17,"XK_Hcircumflex","","",null,null],[17,"XK_hebrew_qoph","","",null,null],[17,"XK_Find","","",null,null],[17,"XK_Greek_horizbar","","",null,null],[17,"BadDrawable","","",null,null],[17,"XK_thorn","","",null,null],[17,"XF86XK_LogGrabInfo","","",null,null],[17,"XK_botintegral","","",null,null],[17,"XK_Greek_upsilonaccentdieresis","","",null,null],[3,"XSetWindowAttributes","","",null,null],[12,"background_pixmap","","",64,null],[12,"background_pixel","","",64,null],[12,"border_pixmap","","",64,null],[12,"border_pixel","","",64,null],[12,"bit_gravity","","",64,null],[12,"win_gravity","","",64,null],[12,"backing_store","","",64,null],[12,"backing_planes","","",64,null],[12,"backing_pixel","","",64,null],[12,"save_under","","",64,null],[12,"event_mask","","",64,null],[12,"do_not_propagate_mask","","",64,null],[12,"override_redirect","","",64,null],[12,"colormap","","",64,null],[12,"cursor","","",64,null],[17,"XK_kana_NU","","",null,null],[17,"XK_Greek_kappa","","",null,null],[17,"XK_kana_e","","",null,null],[17,"XK_Pointer_DblClick5","","",null,null],[17,"XK_Hiragana","","",null,null],[17,"GCBackground","","",null,null],[17,"XK_Arabic_alef","","",null,null],[17,"XInput_2_0","","",null,null],[3,"XIRemoveMasterInfo","","",null,null],[12,"_type","","",65,null],[12,"deviceid","","",65,null],[12,"return_mode","","",65,null],[12,"return_pointer","","",65,null],[12,"return_keyboard","","",65,null],[17,"XNPreeditStateNotifyCallback","","",null,null],[17,"XA_FONT","","",null,null],[17,"XK_threequarters","","",null,null],[17,"XK_kana_A","","",null,null],[17,"SouthGravity","","",null,null],[17,"XK_Pointer_Accelerate","","",null,null],[17,"XK_utilde","","",null,null],[17,"XF86XK_AudioMedia","","",null,null],[6,"XkbRowPtr","","",null,null],[17,"XK_rightopentriangle","","",null,null],[17,"XK_agrave","","",null,null],[17,"XF86XK_Finance","","",null,null],[17,"LowerHighest","","",null,null],[17,"Button1Mask","","",null,null],[17,"XK_Macedonia_DSE","","",null,null],[17,"XIBarrierPointerReleased","","",null,null],[17,"XK_brokenbar","","",null,null],[17,"XF86XK_iTouch","","",null,null],[17,"ReplayPointer","","",null,null],[17,"XK_lcedilla","","",null,null],[17,"XK_Cyrillic_te","","",null,null],[17,"XUTF8StringStyle","","",null,null],[17,"XK_includedin","","",null,null],[17,"XINotifyGrab","","",null,null],[3,"XMapRequestEvent","","",null,null],[12,"type_","","",66,null],[12,"serial","","",66,null],[12,"send_event","","",66,null],[12,"display","","",66,null],[12,"parent","","",66,null],[12,"window","","",66,null],[17,"XK_KP_Decimal","","",null,null],[17,"ScreenSaverActive","","",null,null],[17,"XK_Cyrillic_nje","","",null,null],[17,"XK_d","","",null,null],[3,"XkbAnyEvent","","",null,null],[12,"type_","","",67,null],[12,"serial","","",67,null],[12,"send_event","","",67,null],[12,"display","","",67,null],[12,"time","","",67,null],[12,"xkb_type","","",67,null],[12,"device","","",67,null],[17,"XIMPreeditPosition","","",null,null],[17,"XK_Cyrillic_ghe","","",null,null],[17,"XF86XK_Hibernate","","",null,null],[17,"XK_space","","",null,null],[17,"MapNotify","","",null,null],[17,"XK_dead_macron","","",null,null],[3,"XRectangle","","",null,null],[12,"x","","",68,null],[12,"y","","",68,null],[12,"width","","",68,null],[12,"height","","",68,null],[17,"XK_zabovedot","","",null,null],[17,"XK_downstile","","",null,null],[17,"XK_l","","",null,null],[17,"LedModeOn","","",null,null],[17,"XK_Arabic_yeh","","",null,null],[17,"XK_Pointer_DfltBtnPrev","","",null,null],[17,"XK_M","","",null,null],[6,"Window","","",null,null],[17,"NotifyNormal","","",null,null],[17,"XA_SUBSCRIPT_X","","",null,null],[17,"XK_Udiaeresis","","",null,null],[17,"XF86XK_AudioCycleTrack","","",null,null],[17,"PSize","","",null,null],[17,"XNStatusAttributes_0","","",null,null],[17,"XK_Greek_alphaaccent","","",null,null],[17,"BadAccess","","",null,null],[17,"XI_TouchBegin","","",null,null],[17,"XK_ydiaeresis","","",null,null],[3,"XStandardColormap","","",null,null],[12,"colormap","","",69,null],[12,"red_max","","",69,null],[12,"red_mult","","",69,null],[12,"green_max","","",69,null],[12,"green_mult","","",69,null],[12,"blue_max","","",69,null],[12,"blue_mult","","",69,null],[12,"base_pixel","","",69,null],[12,"visualid","","",69,null],[12,"killid","","",69,null],[17,"XK_gcedilla","","",null,null],[17,"XK_Cyrillic_o","","",null,null],[17,"XA_ATOM","","",null,null],[17,"XK_kana_o","","",null,null],[3,"XIAttachSlaveInfo","","",null,null],[12,"_type","","",70,null],[12,"deviceid","","",70,null],[12,"new_master","","",70,null],[17,"XNQueryIMValuesList_0","","",null,null],[17,"XK_Cabovedot","","",null,null],[17,"XK_dead_belowcircumflex","","",null,null],[17,"XK_emspace","","",null,null],[17,"XK_R10","","",null,null],[17,"SouthEastGravity","","",null,null],[17,"XK_Pointer_DfltBtnNext","","",null,null],[17,"XF86XK_MyComputer","","",null,null],[17,"XK_Arabic_dammatan","","",null,null],[6,"XkbSectionPtr","","",null,null],[17,"XIGrabtypeTouchBegin","","",null,null],[17,"XkbMapNotify","","",null,null],[17,"Button2Mask","","",null,null],[17,"XK_uring","","",null,null],[17,"XK_hebrew_lamed","","",null,null],[17,"XK_Ukrainian_I","","",null,null],[17,"XIBarrierDeviceIsGrabbed","","",null,null],[6,"XButtonReleasedEvent","","",null,null],[17,"IconPositionHint","","",null,null],[17,"XK_variation","","",null,null],[17,"AsyncKeyboard","","",null,null],[17,"XIScrollClass","","",null,null],[6,"XIC","","",null,null],[17,"XK_Arabic_thal","","",null,null],[17,"XK_B","","",null,null],[17,"ClipByChildren","","",null,null],[17,"XINotifyUngrab","","",null,null],[17,"XK_voicedsound","","",null,null],[17,"XK_Greek_UPSILON","","",null,null],[17,"XK_ISO_Lock","","",null,null],[17,"XF86XK_User1KB","","",null,null],[17,"CursorShape","","",null,null],[17,"XK_Page_Down","","",null,null],[17,"IsUnmapped","","",null,null],[3,"XkbNewKeyboardNotifyEvent","","",null,null],[12,"type_","","",71,null],[12,"serial","","",71,null],[12,"send_event","","",71,null],[12,"display","","",71,null],[12,"time","","",71,null],[12,"xkb_type","","",71,null],[12,"device","","",71,null],[12,"old_device","","",71,null],[12,"min_key_code","","",71,null],[12,"max_key_code","","",71,null],[12,"old_min_key_code","","",71,null],[12,"old_max_key_code","","",71,null],[12,"changed","","",71,null],[12,"req_major","","",71,null],[12,"req_minor","","",71,null],[17,"XK_opentribulletup","","",null,null],[17,"XK_Arabic_hamzaonalef","","",null,null],[17,"XK_apostrophe","","",null,null],[17,"XK_Katakana","","",null,null],[17,"XK_underbar","","",null,null],[17,"XA_WM_NORMAL_HINTS","","",null,null],[6,"XkbMapNotifyEvent","","",null,null],[17,"XK_Oacute","","",null,null],[17,"XNPreeditAttributes","","",null,null],[17,"XK_Cyrillic_HA","","",null,null],[17,"XA_SUBSCRIPT_Y","","",null,null],[17,"XK_trademark","","",null,null],[17,"XK_Yacute","","",null,null],[17,"PMinSize","","",null,null],[17,"XNArea_0","","",null,null],[17,"XK_Greek_epsilonaccent","","",null,null],[17,"XK_Macedonia_GJE","","",null,null],[17,"XIScrollFlagPreferred","","",null,null],[17,"Mod4Mask","","",null,null],[17,"XK_tslash","","",null,null],[17,"XF86XK_Search","","",null,null],[17,"InputFocus","","",null,null],[17,"XK_Cyrillic_pe","","",null,null],[17,"CWBitGravity","","",null,null],[17,"XF86XK_LogOff","","",null,null],[3,"_XcursorComments","","",null,null],[12,"ncomment","","",72,null],[12,"comments","","",72,null],[17,"XK_emacron","","",null,null],[17,"XNGeometryCallback_0","","",null,null],[17,"XK_Dstroke","","",null,null],[17,"XK_ISO_Fast_Cursor_Up","","",null,null],[17,"GCArcMode","","",null,null],[6,"Display","","",null,null],[17,"XK_KP_Divide","","",null,null],[3,"XIDetachSlaveInfo","","",null,null],[12,"_type","","",73,null],[12,"deviceid","","",73,null],[17,"XF86XK_KbdBrightnessUp","","",null,null],[17,"XK_Ccircumflex","","",null,null],[6,"Drawable","","",null,null],[17,"XK_F31","","",null,null],[17,"XF86XK_VendorHome","","",null,null],[17,"XK_upcaret","","",null,null],[17,"DoRed","","",null,null],[17,"XI_Enter","","",null,null],[17,"XkbStateNotify","","",null,null],[3,"_XkbDoodad","","",null,null],[17,"XK_Greek_tau","","",null,null],[17,"XK_KP_Tab","","",null,null],[17,"Button3Mask","","",null,null],[17,"XK_hebrew_finalmem","","",null,null],[17,"XK_Eisu_toggle","","",null,null],[17,"XK_N","","",null,null],[3,"XIValuatorClassInfo","","",null,null],[12,"_type","","",74,null],[12,"sourceid","","",74,null],[12,"number","","",74,null],[12,"label","","",74,null],[12,"min","","",74,null],[12,"max","","",74,null],[12,"value","","",74,null],[12,"resolution","","",74,null],[12,"mode","","",74,null],[6,"XEnterWindowEvent","","",null,null],[17,"IconMaskHint","","",null,null],[17,"XNPreeditAttributes_0","","",null,null],[17,"XK_Greek_UPSILONdieresis","","",null,null],[17,"XF86XK_CycleAngle","","",null,null],[17,"IncludeInferiors","","",null,null],[17,"XINotifyWhileGrabbed","","",null,null],[17,"XF86XK_Send","","",null,null],[17,"XNPreeditState_0","","",null,null],[17,"XK_Delete","","",null,null],[17,"XK_Greek_PHI","","",null,null],[17,"XK_ISO_Level2_Latch","","",null,null],[17,"XK_End","","",null,null],[17,"IsUnviewable","","",null,null],[17,"XK_kana_a","","",null,null],[17,"XK_opentribulletdown","","",null,null],[17,"XA_BITMAP","","",null,null],[17,"XF86XK_UserPB","","",null,null],[17,"XK_plusminus","","",null,null],[17,"XK_plus","","",null,null],[17,"GXequiv","","",null,null],[3,"XArc","","",null,null],[12,"x","","",75,null],[12,"y","","",75,null],[12,"width","","",75,null],[12,"height","","",75,null],[12,"angle1","","",75,null],[12,"angle2","","",75,null],[17,"XA_WM_SIZE_HINTS","","",null,null],[6,"XkbModsPtr","","",null,null],[17,"XK_Ocircumflex","","",null,null],[3,"XOMCharSetList","","",null,null],[12,"charset_count","","",76,null],[12,"charset_list","","",76,null],[17,"XNStatusStartCallback","","",null,null],[17,"XK_Cyrillic_I","","",null,null],[17,"XK_dead_belowtilde","","",null,null],[17,"XK_signaturemark","","",null,null],[17,"XK_asciicircum","","",null,null],[17,"XK_hebrew_finalnun","","",null,null],[17,"XK_Cyrillic_IO","","",null,null],[17,"XIKeyRepeat","","",null,null],[17,"InputHint","","",null,null],[17,"XK_notequal","","",null,null],[17,"XK_tcedilla","","",null,null],[17,"XK_Cyrillic_ya","","",null,null],[17,"XK_X","","",null,null],[17,"XK_Nacute","","",null,null],[17,"XK_lefttack","","",null,null],[17,"XK_a","","",null,null],[17,"GCLastBit","","",null,null],[17,"XK_L1","","",null,null],[17,"XF86XK_KbdBrightnessDown","","",null,null],[17,"XK_Dcaron","","",null,null],[6,"XcursorDim","","",null,null],[6,"Font","","",null,null],[17,"XK_Pointer_DblClick2","","",null,null],[17,"XK_Henkan_Mode","","",null,null],[17,"XK_overbar","","",null,null],[17,"XK_kana_NE","","",null,null],[17,"XkbControlsNotify","","",null,null],[17,"XK_hebrew_mem","","",null,null],[17,"XK_quoteleft","","",null,null],[17,"XF86XK_Clear","","",null,null],[17,"XNStatusStartCallback_0","","",null,null],[17,"FamilyDECnet","","",null,null],[17,"XK_Greek_OMEGAaccent","","",null,null],[17,"XK_SlowKeys_Enable","","",null,null],[3,"_XkbRow","","",null,null],[17,"XK_questiondown","","",null,null],[17,"SyncPointer","","",null,null],[17,"XF86XK_Spell","","",null,null],[17,"XF86XK_AudioNext","","",null,null],[17,"XK_itilde","","",null,null],[3,"XErrorEvent","","",null,null],[12,"type_","","",77,null],[12,"display","","",77,null],[12,"resourceid","","",77,null],[12,"serial","","",77,null],[12,"error_code","","",77,null],[12,"request_code","","",77,null],[12,"minor_code","","",77,null],[17,"XK_Multi_key","","",null,null],[17,"XK_R15","","",null,null],[17,"LockMask","","",null,null],[17,"XF86XK_Community","","",null,null],[17,"XA_CARDINAL","","",null,null],[3,"_XkbStateRec","","",null,null],[17,"XK_twosuperior","","",null,null],[17,"XK_upleftcorner","","",null,null],[17,"XK_horizconnector","","",null,null],[17,"XK_ISO_Fast_Cursor_Down","","",null,null],[17,"XK_bott","","",null,null],[17,"XK_Arabic_tatweel","","",null,null],[17,"XINotifyDetailNone","","",null,null],[17,"XK_F29","","",null,null],[17,"XK_dead_belowbreve","","",null,null],[17,"HostInsert","","",null,null],[17,"XK_Serbian_nje","","",null,null],[17,"XkbLC_AllComposeControls","","",null,null],[17,"XIModeRelative","","",null,null],[17,"XK_underscore","","",null,null],[6,"XkbShapePtr","","",null,null],[17,"VisualNoMask","","",null,null],[17,"DoGreen","","",null,null],[17,"XK_ISO_Group_Lock","","",null,null],[17,"XK_Ukrainian_IE","","",null,null],[17,"XK_ocircumflex","","",null,null],[17,"XF86XK_Switch_VT_8","","",null,null],[17,"StateHint","","",null,null],[17,"XK_3","","",null,null],[17,"CapNotLast","","",null,null],[17,"MapRequest","","",null,null],[3,"XFeedbackState","","",null,null],[12,"class","","",78,null],[12,"length","","",78,null],[12,"id","","",78,null],[17,"XK_Racute","","",null,null],[17,"XK_masculine","","",null,null],[17,"FillOpaqueStippled","","",null,null],[17,"XF86XK_Save","","",null,null],[17,"XK_udiaeresis","","",null,null],[17,"XK_Linefeed","","",null,null],[17,"Button2","","",null,null],[3,"XkbIndicatorNotifyEvent","","",null,null],[12,"type_","","",79,null],[12,"serial","","",79,null],[12,"send_event","","",79,null],[12,"display","","",79,null],[12,"time","","",79,null],[12,"xkb_type","","",79,null],[12,"device","","",79,null],[12,"changed","","",79,null],[12,"state","","",79,null],[17,"XK_Greek_CHI","","",null,null],[17,"XK_F10","","",null,null],[17,"MotionNotify","","",null,null],[17,"XK_fivesixths","","",null,null],[17,"XK_kana_i","","",null,null],[17,"XK_Pointer_DblClick3","","",null,null],[17,"XK_Henkan","","",null,null],[17,"ButtonReleaseMask","","",null,null],[17,"XNClientWindow","","",null,null],[17,"XK_downtack","","",null,null],[17,"XK_Cyrillic_sha","","",null,null],[17,"XK_F30","","",null,null],[17,"XK_dead_doublegrave","","",null,null],[4,"_XOM","","",null,null],[17,"XK_Cyrillic_je","","",null,null],[17,"XK_braceleft","","",null,null],[17,"XF86XK_Close","","",null,null],[17,"XK_Omacron","","",null,null],[17,"XNStatusDoneCallback_0","","",null,null],[17,"FamilyChaos","","",null,null],[17,"XK_BounceKeys_Enable","","",null,null],[17,"XK_kra","","",null,null],[17,"Opposite","","",null,null],[17,"XK_F18","","",null,null],[17,"XF86XK_HomePage","","",null,null],[17,"VisibilityNotify","","",null,null],[17,"XITouchPendingEnd","","",null,null],[17,"XK_tcaron","","",null,null],[17,"XK_ISO_Move_Line_Up","","",null,null],[17,"XK_greaterthanequal","","",null,null],[17,"XK_Caps_Lock","","",null,null],[17,"XF86XK_AudioRewind","","",null,null],[17,"XK_kana_RO","","",null,null],[17,"XK_lowleftcorner","","",null,null],[17,"XK_Ncaron","","",null,null],[17,"XK_ISO_Continuous_Underline","","",null,null],[17,"XK_Undo","","",null,null],[17,"FontLeftToRight","","",null,null],[17,"XK_Arabic_feh","","",null,null],[17,"XIGrabModeSync","","",null,null],[17,"XK_topleftradical","","",null,null],[17,"XK_R9","","",null,null],[6,"XkbComponentListPtr","","",null,null],[17,"XkbOD_BadServerVersion","","",null,null],[17,"XA_WM_NAME","","",null,null],[17,"XK_Ograve","","",null,null],[17,"XK_Serbian_tshe","","",null,null],[17,"XK_kana_TO","","",null,null],[6,"XkbStatePtr","","",null,null],[17,"DoBlue","","",null,null],[6,"XKeyPressedEvent","","",null,null],[17,"XK_otilde","","",null,null],[17,"XK_greater","","",null,null],[17,"XK_Arabic_hamzaonwaw","","",null,null],[17,"XIAllMasterDevices","","",null,null],[17,"XK_Cyrillic_ie","","",null,null],[17,"XA_CUT_BUFFER6","","",null,null],[17,"ControlMask","","",null,null],[17,"XI_RawTouchEndMask","","",null,null],[17,"XK_guillemotright","","",null,null],[17,"XF86XK_ScrollUp","","",null,null],[17,"XK_Greek_accentdieresis","","",null,null],[17,"XK_Tab","","",null,null],[17,"CenterGravity","","",null,null],[17,"XK_omacron","","",null,null],[17,"XK_THORN","","",null,null],[3,"_XkbNamesNotifyEvent","","",null,null],[12,"type_","","",80,null],[12,"serial","","",80,null],[12,"send_event","","",80,null],[12,"display","","",80,null],[12,"time","","",80,null],[12,"xkb_type","","",80,null],[12,"device","","",80,null],[12,"changed","","",80,null],[12,"first_type","","",80,null],[12,"num_types","","",80,null],[12,"first_lvl","","",80,null],[12,"num_lvls","","",80,null],[12,"num_aliases","","",80,null],[12,"num_radio_groups","","",80,null],[12,"changed_vmods","","",80,null],[12,"changed_groups","","",80,null],[12,"changed_indicators","","",80,null],[12,"first_key","","",80,null],[12,"num_keys","","",80,null],[17,"VisualAllMask","","",null,null],[17,"XK_Serbian_LJE","","",null,null],[17,"Mod2Mask","","",null,null],[17,"XK_kana_u","","",null,null],[17,"XK_Pointer_DblClick4","","",null,null],[3,"XComposeStatus","","",null,null],[12,"compose_ptr","","",81,null],[12,"chars_matched","","",81,null],[17,"XNInputStyle","","",null,null],[17,"XK_Cyrillic_e","","",null,null],[17,"XA_WM_ICON_SIZE","","",null,null],[17,"XK_gbreve","","",null,null],[17,"PropModeAppend","","",null,null],[17,"XK_dead_belowring","","",null,null],[3,"_XcursorCursors","","",null,null],[12,"dpy","","",82,null],[12,"ref_","","",82,null],[12,"ncursor","","",82,null],[12,"cursors","","",82,null],[17,"XK_hebrew_waw","","",null,null],[17,"XK_ccaron","","",null,null],[17,"AllowExposures","","",null,null],[17,"XK_Serbian_je","","",null,null],[17,"FamilyInternet6","","",null,null],[17,"YSorted","","",null,null],[17,"InputOnly","","",null,null],[17,"XK_Cyrillic_de","","",null,null],[17,"XK_L8","","",null,null],[17,"XNPreeditState","","",null,null],[17,"XF86XK_Mail","","",null,null],[17,"XK_Greek_LAMDA","","",null,null],[17,"CreateNotify","","",null,null],[17,"XISlaveRemoved","","",null,null],[17,"XK_zacute","","",null,null],[17,"IconPixmapHint","","",null,null],[17,"XK_integral","","",null,null],[6,"XkbIndicatorMapRec","","",null,null],[17,"XK_Cyrillic_DE","","",null,null],[3,"XIDeviceInfo","","",null,null],[12,"deviceid","","",83,null],[12,"name","","",83,null],[12,"_use","","",83,null],[12,"attachment","","",83,null],[12,"enabled","","",83,null],[12,"num_classes","","",83,null],[12,"classes","","",83,null],[17,"XK_Greek_SIGMA","","",null,null],[17,"XNBackgroundPixmap_0","","",null,null],[6,"XcursorChunkHeader","","",null,null],[17,"FontRightToLeft","","",null,null],[17,"XF86XK_FrameBack","","",null,null],[17,"XK_Arabic_qaf","","",null,null],[17,"XK_kana_conjunctive","","",null,null],[17,"XK_F11","","",null,null],[17,"XK_Pointer_Button5","","",null,null],[17,"XK_careof","","",null,null],[17,"GXxor","","",null,null],[17,"XK_kana_NA","","",null,null],[17,"XK_numbersign","","",null,null],[17,"PBaseSize","","",null,null],[17,"XF86XK_Launch8","","",null,null],[17,"XNInputStyle_0","","",null,null],[17,"XK_Serbian_lje","","",null,null],[17,"XK_openstar","","",null,null],[17,"XK_question","","",null,null],[17,"Expose","","",null,null],[17,"XF86XK_Book","","",null,null],[17,"PlaceOnTop","","",null,null],[17,"XA_CUT_BUFFER7","","",null,null],[17,"XI_RawTouchUpdateMask","","",null,null],[17,"XK_onequarter","","",null,null],[17,"EastGravity","","",null,null],[17,"XK_Arabic_alefmaksura","","",null,null],[17,"XIGrabtypeKeycode","","",null,null],[3,"XMotionEvent","","",null,null],[12,"type_","","",84,null],[12,"serial","","",84,null],[12,"send_event","","",84,null],[12,"display","","",84,null],[12,"window","","",84,null],[12,"root","","",84,null],[12,"subwindow","","",84,null],[12,"time","","",84,null],[12,"x","","",84,null],[12,"y","","",84,null],[12,"x_root","","",84,null],[12,"y_root","","",84,null],[12,"state","","",84,null],[12,"is_hint","","",84,null],[12,"same_screen","","",84,null],[17,"CWBackPixmap","","",null,null],[17,"XK_ISO_Move_Line_Down","","",null,null],[3,"XExtCodes","","",null,null],[12,"extension","","",85,null],[12,"major_opcode","","",85,null],[12,"first_event","","",85,null],[12,"first_error","","",85,null],[17,"XK_abovedot","","",null,null],[17,"XNFocusWindow","","",null,null],[17,"GCDashOffset","","",null,null],[17,"XK_dead_belowdot","","",null,null],[17,"XK_Arabic_zah","","",null,null],[17,"XK_x","","",null,null],[17,"XK_at","","",null,null],[17,"XK_Redo","","",null,null],[17,"ShiftMapIndex","","",null,null],[17,"XK_dead_belowmacron","","",null,null],[17,"XK_hebrew_zain","","",null,null],[17,"DefaultExposures","","",null,null],[17,"XK_Cyrillic_lje","","",null,null],[17,"XNResourceName_0","","",null,null],[17,"XK_L2","","",null,null],[17,"YXSorted","","",null,null],[17,"XK_ntilde","","",null,null],[17,"XK_enopencircbullet","","",null,null],[17,"XI_RawKeyRelease","","",null,null],[17,"LineSolid","","",null,null],[3,"_XkbProperty","","",null,null],[17,"XNSeparatorofNestedList","","",null,null],[17,"XK_Greek_LAMBDA","","",null,null],[17,"DestroyNotify","","",null,null],[17,"XNPreeditDrawCallback","","",null,null],[17,"XK_Cyrillic_IE","","",null,null],[17,"XF86XK_ScrollDown","","",null,null],[17,"XK_Return","","",null,null],[17,"XK_Greek_TAU","","",null,null],[17,"XK_kcedilla","","",null,null],[17,"XNFontSet_0","","",null,null],[6,"XcursorComment","","",null,null],[17,"XK_uprightcorner","","",null,null],[17,"XK_R3","","",null,null],[17,"X_PROTOCOL_REVISION","","",null,null],[17,"XK_figdash","","",null,null],[3,"_XcmsColorSpace","","",null,null],[17,"XK_dollar","","",null,null],[17,"XF86XK_Launch9","","",null,null],[17,"XNFocusWindow_0","","",null,null],[17,"XIFloating","","",null,null],[17,"XK_identical","","",null,null],[17,"XkbExtensionDeviceNotifyMask","","",null,null],[3,"_XkbSymInterpretRec","","",null,null],[17,"XK_KP_Separator","","",null,null],[17,"PlaceOnBottom","","",null,null],[17,"XF86XK_MonBrightnessUp","","",null,null],[17,"XK_Arabic_maddaonalef","","",null,null],[17,"XK_b","","",null,null],[17,"XF86XK_Switch_VT_5","","",null,null],[17,"GCTileStipYOrigin","","",null,null],[17,"XIGrabtypeEnter","","",null,null],[17,"XkbLC_AllControls","","",null,null],[17,"XK_Greek_rho","","",null,null],[17,"XK_doubleacute","","",null,null],[17,"XK_ISO_Partial_Line_Up","","",null,null],[17,"XK_V","","",null,null],[17,"GCStipple","","",null,null],[17,"XK_F9","","",null,null],[17,"Below","","",null,null],[3,"XFontProp","","",null,null],[12,"name","","",86,null],[12,"card32","","",86,null],[17,"XK_telephonerecorder","","",null,null],[17,"XA_RGB_BLUE_MAP","","",null,null],[17,"XF86XK_AudioRandomPlay","","",null,null],[17,"XK_y","","",null,null],[17,"EvenOddRule","","",null,null],[17,"XK_Menu","","",null,null],[17,"XK_hebrew_zayin","","",null,null],[17,"XK_threefifths","","",null,null],[17,"XA_NOTICE","","",null,null],[3,"XrmValue","","",null,null],[12,"size","","",87,null],[12,"addr","","",87,null],[6,"XrmOptionDescList","","",null,null],[17,"XK_equal","","",null,null],[17,"XNResourceClass_0","","",null,null],[17,"XK_dead_capital_schwa","","",null,null],[17,"XK_Cyrillic_CHE","","",null,null],[17,"YXBanded","","",null,null],[17,"XK_enopensquarebullet","","",null,null],[17,"XK_registered","","",null,null],[17,"CWDontPropagate","","",null,null],[17,"XK_Cyrillic_be","","",null,null],[17,"KeymapStateMask","","",null,null],[17,"XI_PropertyEventMask","","",null,null],[3,"XIAddMasterInfo","","",null,null],[12,"_type","","",88,null],[12,"name","","",88,null],[12,"send_core","","",88,null],[12,"enable","","",88,null],[17,"XK_gcircumflex","","",null,null],[17,"XNPreeditCaretCallback","","",null,null],[17,"XK_Cyrillic_EF","","",null,null],[17,"XF86XK_ScrollClick","","",null,null],[17,"XK_Escape","","",null,null],[17,"SouthWestGravity","","",null,null],[17,"XK_uogonek","","",null,null],[17,"MappingBusy","","",null,null],[17,"XF86XK_BrightnessAdjust","","",null,null],[17,"XK_F24","","",null,null],[17,"XF86XK_RockerDown","","",null,null],[17,"XK_udoubleacute","","",null,null],[17,"XNVaNestedList","","",null,null],[17,"PropertyNotify","","",null,null],[3,"XIAnyHierarchyChangeInfo","","",null,null],[12,"_bindgen_data_","","",89,null],[17,"XIAllDevices","","",null,null],[3,"_XcmsFunctionSet","","",null,null],[17,"XK_percent","","",null,null],[17,"XK_Select","","",null,null],[17,"XK_hebrew_dalet","","",null,null],[17,"XK_radical","","",null,null],[17,"XK_kana_WA","","",null,null],[17,"XkbAllEventsMask","","",null,null],[17,"XK_KP_Subtract","","",null,null],[3,"_XkbExtensionDeviceNotify","","",null,null],[17,"XF86XK_MonBrightnessDown","","",null,null],[17,"XK_c","","",null,null],[6,"Cursor","","",null,null],[17,"XNResetState","","",null,null],[17,"XK_Greek_THETA","","",null,null],[6,"XkbComponentNamesPtr","","",null,null],[17,"KeyPressMask","","",null,null],[17,"LineOnOffDash","","",null,null],[17,"XK_Alt_R","","",null,null],[17,"XkbNewKeyboardNotify","","",null,null],[17,"XK_KP_9","","",null,null],[17,"XK_ISO_Partial_Line_Down","","",null,null],[17,"XF86XK_RotationPB","","",null,null],[17,"XK_W","","",null,null],[17,"GCTileStipXOrigin","","",null,null],[17,"TopIf","","",null,null],[17,"XK_Ucircumflex","","",null,null],[17,"XA_RGB_DEFAULT_MAP","","",null,null],[17,"XF86XK_Subtitle","","",null,null],[17,"XK_emdash","","",null,null],[17,"XK_Ccedilla","","",null,null],[17,"XK_F8","","",null,null],[17,"Above","","",null,null],[3,"XCirculateEvent","","",null,null],[12,"type_","","",90,null],[12,"serial","","",90,null],[12,"send_event","","",90,null],[12,"display","","",90,null],[12,"event","","",90,null],[12,"window","","",90,null],[12,"place","","",90,null],[3,"XClientMessageEvent","","",null,null],[12,"type_","","",91,null],[12,"serial","","",91,null],[12,"send_event","","",91,null],[12,"display","","",91,null],[12,"window","","",91,null],[12,"message_type","","",91,null],[12,"format","","",91,null],[12,"data","","",91,null],[17,"XK_dead_voiced_sound","","",null,null],[17,"XK_v","","",null,null],[17,"XK_fourfifths","","",null,null],[3,"XSegment","","",null,null],[12,"x1","","",92,null],[12,"y1","","",92,null],[12,"x2","","",92,null],[12,"y2","","",92,null],[17,"XK_Hyper_R","","",null,null],[17,"XK_dead_greek","","",null,null],[17,"XK_openrectbullet","","",null,null],[17,"XK_Cyrillic_NJE","","",null,null],[17,"XA_ARC","","",null,null],[17,"XK_macron","","",null,null],[3,"_XkbCompatMapRec","","",null,null],[12,"sym_interpret","","",93,null],[12,"groups","","",93,null],[12,"num_si","","",93,null],[12,"size_si","","",93,null],[17,"CWCursor","","",null,null],[17,"ButtonPress","","",null,null],[17,"XK_ISO_Fast_Cursor_Left","","",null,null],[17,"XK_Cyrillic_tse","","",null,null],[17,"FamilyInternet","","",null,null],[17,"XK_ubreve","","",null,null],[3,"XIBarrierEvent","","",null,null],[12,"_type","","",94,null],[12,"serial","","",94,null],[12,"send_event","","",94,null],[12,"display","","",94,null],[12,"extension","","",94,null],[12,"evtype","","",94,null],[12,"time","","",94,null],[12,"deviceid","","",94,null],[12,"sourceid","","",94,null],[12,"event","","",94,null],[12,"root","","",94,null],[12,"root_x","","",94,null],[12,"root_y","","",94,null],[12,"dx","","",94,null],[12,"dy","","",94,null],[12,"dtime","","",94,null],[12,"flags","","",94,null],[12,"barrier","","",94,null],[12,"eventid","","",94,null],[17,"XK_scaron","","",null,null],[17,"XIGrabtypeFocusIn","","",null,null],[17,"XK_R4","","",null,null],[17,"XK_Greek_sigma","","",null,null],[17,"XK_rcaron","","",null,null],[3,"XIModifierState","","",null,null],[12,"base","","",95,null],[12,"latched","","",95,null],[12,"locked","","",95,null],[12,"effective","","",95,null],[17,"XIMasterRemoved","","",null,null],[17,"XK_kana_SHI","","",null,null],[17,"XK_Print","","",null,null],[17,"XK_hebrew_daleth","","",null,null],[6,"XIM","","",null,null],[17,"XA_WEIGHT","","",null,null],[17,"XK_A","","",null,null],[17,"WindingRule","","",null,null],[17,"XK_kana_N","","",null,null],[17,"XK_dead_O","","",null,null],[3,"_XkbGeometry","","",null,null],[17,"XI_MotionMask","","",null,null],[17,"LastExtensionError","","",null,null],[17,"XF86XK_Option","","",null,null],[17,"XK_kana_middledot","","",null,null],[17,"XNHotKey","","",null,null],[17,"CWHeight","","",null,null],[17,"XISlaveKeyboard","","",null,null],[17,"XK_Pointer_DblClick_Dflt","","",null,null],[6,"XkbControlsChangesPtr","","",null,null],[17,"PointerMotionMask","","",null,null],[17,"LineDoubleDash","","",null,null],[17,"XK_R8","","",null,null],[17,"XF86XK_Sleep","","",null,null],[17,"XI_TouchOwnershipChangedMask","","",null,null],[6,"XkbMapChangesPtr","","",null,null],[17,"XK_uparrow","","",null,null],[17,"NorthEastGravity","","",null,null],[6,"XkbServerMapPtr","","",null,null],[17,"XF86XK_CD","","",null,null],[17,"XK_Cyrillic_GHE","","",null,null],[17,"XA_RGB_GRAY_MAP","","",null,null],[17,"XK_endash","","",null,null],[17,"XK_F22","","",null,null],[17,"XK_dead_semivoiced_sound","","",null,null],[17,"XK_w","","",null,null],[17,"MappingFailed","","",null,null],[17,"XIScrollFlagNoEmulation","","",null,null],[17,"XK_Macedonia_gje","","",null,null],[17,"XIAcceptTouch","","",null,null],[17,"XK_rightmiddlesummation","","",null,null],[17,"XK_exclam","","",null,null],[17,"XK_First_Virtual_Screen","","",null,null],[17,"XF86XK_Next_VMode","","",null,null],[3,"XNoExposeEvent","","",null,null],[12,"type_","","",96,null],[12,"serial","","",96,null],[12,"send_event","","",96,null],[12,"display","","",96,null],[12,"drawable","","",96,null],[12,"major_code","","",96,null],[12,"minor_code","","",96,null],[17,"CWBorderPixmap","","",null,null],[17,"XK_kana_RI","","",null,null],[17,"XkbBellNotifyMask","","",null,null],[3,"_XcursorComment","","",null,null],[12,"version","","",97,null],[12,"comment_type","","",97,null],[12,"comment","","",97,null],[3,"_XkbIndicatorRec","","",null,null],[12,"phys_indicators","","",98,null],[12,"maps","","",98,null],[17,"ButtonRelease","","",null,null],[17,"XI_RawKeyPress","","",null,null],[17,"XK_ISO_Fast_Cursor_Right","","",null,null],[17,"XK_Zabovedot","","",null,null],[17,"GCDashList","","",null,null],[17,"XK_grave","","",null,null],[17,"XK_Arabic_ain","","",null,null],[17,"XINotifyPointer","","",null,null],[17,"XF86XK_KbdLightOnOff","","",null,null],[17,"XI_RawMotion","","",null,null],[17,"XA_WM_CLIENT_MACHINE","","",null,null],[17,"XK_ETH","","",null,null],[17,"XF86XK_Messenger","","",null,null],[17,"XK_Greek_IOTA","","",null,null],[17,"NoExpose","","",null,null],[17,"XK_scedilla","","",null,null],[17,"XK_ograve","","",null,null],[17,"XK_Greek_finalsmallsigma","","",null,null],[17,"XK_Eisu_Shift","","",null,null],[17,"XA_RESOURCE_MANAGER","","",null,null],[17,"BottomIf","","",null,null],[17,"XK_kana_SU","","",null,null],[17,"XK_Greek_UPSILONaccent","","",null,null],[17,"XK_Execute","","",null,null],[17,"XNStdColormap","","",null,null],[17,"XA_POINT_SIZE","","",null,null],[17,"XK_Tslash","","",null,null],[17,"XK_dead_u","","",null,null],[3,"XInput","","",null,null],[12,"XAllowDeviceEvents","","",99,null],[12,"XChangeDeviceControl","","",99,null],[12,"XChangeDeviceDontPropagateList","","",99,null],[12,"XChangeDeviceKeyMapping","","",99,null],[12,"XChangeDeviceProperty","","",99,null],[12,"XChangeFeedbackControl","","",99,null],[12,"XChangeKeyboardDevice","","",99,null],[12,"XChangePointerDevice","","",99,null],[12,"XCloseDevice","","",99,null],[12,"XDeleteDeviceProperty","","",99,null],[12,"XDeviceBell","","",99,null],[12,"XFreeDeviceControl","","",99,null],[12,"XFreeDeviceList","","",99,null],[12,"XFreeDeviceMotionEvents","","",99,null],[12,"XFreeDeviceState","","",99,null],[12,"XFreeFeedbackList","","",99,null],[12,"XGetDeviceButtonMapping","","",99,null],[12,"XGetDeviceControl","","",99,null],[12,"XGetDeviceDontPropagateList","","",99,null],[12,"XGetDeviceFocus","","",99,null],[12,"XGetDeviceKeyMapping","","",99,null],[12,"XGetDeviceModifierMapping","","",99,null],[12,"XGetDeviceMotionEvents","","",99,null],[12,"XGetDeviceProperty","","",99,null],[12,"XGetExtensionVersion","","",99,null],[12,"XGetFeedbackControl","","",99,null],[12,"XGetSelectedExtensionEvents","","",99,null],[12,"XGrabDevice","","",99,null],[12,"XGrabDeviceButton","","",99,null],[12,"XGrabDeviceKey","","",99,null],[12,"XListDeviceProperties","","",99,null],[12,"XListInputDevices","","",99,null],[12,"XOpenDevice","","",99,null],[12,"XQueryDeviceState","","",99,null],[12,"XSelectExtensionEvent","","",99,null],[12,"XSendExtensionEvent","","",99,null],[12,"XSetDeviceButtonMapping","","",99,null],[12,"XSetDeviceFocus","","",99,null],[12,"XSetDeviceMode","","",99,null],[12,"XSetDeviceModifierMapping","","",99,null],[12,"XSetDeviceValuators","","",99,null],[12,"XUngrabDevice","","",99,null],[12,"XUngrabDeviceButton","","",99,null],[12,"XUngrabDeviceKey","","",99,null],[3,"_XkbGeometrySizes","","",null,null],[17,"VisualBlueMaskMask","","",null,null],[17,"XK_Cyrillic_JE","","",null,null],[17,"XK_KP_Add","","",null,null],[17,"XK_kana_WO","","",null,null],[17,"XK_Pointer_DblClick1","","",null,null],[17,"KeyReleaseMask","","",null,null],[3,"_XkbServerMapRec","","",null,null],[17,"XK_degree","","",null,null],[17,"XF86XK_Favorites","","",null,null],[17,"ColormapChangeMask","","",null,null],[17,"XK_abreve","","",null,null],[17,"XK_rightarrow","","",null,null],[17,"WestGravity","","",null,null],[17,"GCTile","","",null,null],[17,"XIGrabFrozen","","",null,null],[17,"XK_Arabic_khah","","",null,null],[17,"XK_Greek_xi","","",null,null],[17,"XI_TouchEndMask","","",null,null],[17,"MappingModifier","","",null,null],[17,"XK_Cyrillic_io","","",null,null],[17,"XF86XK_Switch_VT_6","","",null,null],[17,"YNegative","","",null,null],[17,"XK_1","","",null,null],[17,"XK_lessthanequal","","",null,null],[6,"XkbNamesNotifyEvent","","",null,null],[17,"XA_COPYRIGHT","","",null,null],[17,"XF86XK_Prev_VMode","","",null,null],[3,"XPropertyEvent","","",null,null],[12,"type_","","",100,null],[12,"serial","","",100,null],[12,"send_event","","",100,null],[12,"display","","",100,null],[12,"window","","",100,null],[12,"atom","","",100,null],[12,"time","","",100,null],[12,"state","","",100,null],[17,"XK_ccedilla","","",null,null],[17,"XK_prescription","","",null,null],[17,"FillTiled","","",null,null],[17,"XK_kana_RU","","",null,null],[17,"XK_hebrew_he","","",null,null],[17,"XNStdColormap_0","","",null,null],[17,"XA_PRIMARY","","",null,null],[17,"XK_phonographcopyright","","",null,null],[17,"XK_hyphen","","",null,null],[3,"XkbStateNotifyEvent","","",null,null],[12,"type_","","",101,null],[12,"serial","","",101,null],[12,"send_event","","",101,null],[12,"display","","",101,null],[12,"time","","",101,null],[12,"xkb_type","","",101,null],[12,"device","","",101,null],[12,"changed","","",101,null],[12,"group","","",101,null],[12,"base_group","","",101,null],[12,"latched_group","","",101,null],[12,"locked_group","","",101,null],[12,"mods","","",101,null],[12,"base_mods","","",101,null],[12,"latched_mods","","",101,null],[12,"locked_mods","","",101,null],[12,"compat_state","","",101,null],[12,"grab_mods","","",101,null],[12,"compat_grab_mods","","",101,null],[12,"lookup_mods","","",101,null],[12,"compat_lookup_mods","","",101,null],[12,"ptr_buttons","","",101,null],[12,"keycode","","",101,null],[12,"event_type","","",101,null],[12,"req_major","","",101,null],[12,"req_minor","","",101,null],[17,"XK_Arabic_ghain","","",null,null],[6,"XIGroupState","","",null,null],[17,"XA_WM_ICON_NAME","","",null,null],[17,"XK_Eth","","",null,null],[17,"XNHotKeyState","","",null,null],[17,"XK_Greek_KAPPA","","",null,null],[17,"PPosition","","",null,null],[17,"XK_Cyrillic_TSE","","",null,null],[17,"ParentRelative","","",null,null],[17,"XK_Cyrillic_en","","",null,null],[17,"XK_dead_circumflex","","",null,null],[17,"GrabFrozen","","",null,null],[17,"XK_kana_SE","","",null,null],[17,"XF86XK_Calculater","","",null,null],[6,"XcursorAnimate","","",null,null],[3,"XTextProperty","","",null,null],[12,"value","","",102,null],[12,"encoding","","",102,null],[12,"format","","",102,null],[12,"nitems","","",102,null],[17,"XNForeground","","",null,null],[17,"KBKey","","",null,null],[17,"AsyncPointer","","",null,null],[17,"XK_rcedilla","","",null,null],[17,"XK_KP_Prior","","",null,null],[17,"NotifyInferior","","",null,null],[17,"XK_dead_U","","",null,null],[17,"XK_hebrew_zade","","",null,null],[17,"VisualColormapSizeMask","","",null,null],[17,"XK_Serbian_JE","","",null,null],[17,"XK_quotedbl","","",null,null],[17,"BadImplementation","","",null,null],[17,"XNQueryInputStyle","","",null,null],[3,"_XkbShape","","",null,null],[17,"OwnerGrabButtonMask","","",null,null],[17,"XK_downarrow","","",null,null],[17,"XINotifyPointerRoot","","",null,null],[17,"XNClientWindow_0","","",null,null],[17,"XK_Cyrillic_ZE","","",null,null],[17,"XF86XK_WebCam","","",null,null],[17,"XkbLC_BeepOnComposeFail","","",null,null],[17,"XK_KP_6","","",null,null],[6,"XcursorFileHeader","","",null,null],[17,"XK_Greek_omicron","","",null,null],[17,"XK_kana_tu","","",null,null],[17,"XNHotKey_0","","",null,null],[6,"XFocusInEvent","","",null,null],[17,"XK_oacute","","",null,null],[17,"MappingKeyboard","","",null,null],[17,"RetainTemporary","","",null,null],[17,"XF86XK_Switch_VT_7","","",null,null],[17,"XK_2","","",null,null],[3,"XGenericEventCookie","","",null,null],[12,"type_","","",103,null],[12,"serial","","",103,null],[12,"send_event","","",103,null],[12,"display","","",103,null],[12,"extension","","",103,null],[12,"evtype","","",103,null],[12,"cookie","","",103,null],[12,"data","","",103,null],[17,"XNArea","","",null,null],[17,"XK_minutes","","",null,null],[17,"FillStippled","","",null,null],[17,"XK_kana_RE","","",null,null],[17,"XF86XK_RotationKB","","",null,null],[17,"XK_currency","","",null,null],[17,"XNForeground_0","","",null,null],[17,"XA_RESOLUTION","","",null,null],[17,"XA_SECONDARY","","",null,null],[17,"XK_nl","","",null,null],[3,"_XkbControlsNotifyEvent","","",null,null],[12,"type_","","",104,null],[12,"serial","","",104,null],[12,"send_event","","",104,null],[12,"display","","",104,null],[12,"time","","",104,null],[12,"xkb_type","","",104,null],[12,"device","","",104,null],[12,"changed_ctrls","","",104,null],[12,"enabled_ctrls","","",104,null],[12,"enabled_ctrl_changes","","",104,null],[12,"num_groups","","",104,null],[12,"keycode","","",104,null],[12,"event_type","","",104,null],[12,"req_major","","",104,null],[12,"req_minor","","",104,null],[17,"CWX","","",null,null],[6,"BarrierEventID","","",null,null],[17,"XK_onesixth","","",null,null],[17,"XI_HierarchyChangedMask","","",null,null],[17,"ButtonPressMask","","",null,null],[17,"XK_Cyrillic_ze","","",null,null],[17,"XIAttachSlave","","",null,null],[17,"XF86XK_AudioPause","","",null,null],[17,"XK_botleftparens","","",null,null],[17,"XK_lacute","","",null,null],[17,"XK_dead_tilde","","",null,null],[17,"XK_j","","",null,null],[17,"AutoRepeatModeDefault","","",null,null],[17,"XK_Kana_Lock","","",null,null],[17,"XK_scircumflex","","",null,null],[17,"KBAutoRepeatMode","","",null,null],[17,"XK_Arabic_sukun","","",null,null],[17,"XF86XK_Switch_VT_2","","",null,null],[17,"XK_period","","",null,null],[17,"XK_KP_Page_Up","","",null,null],[17,"XIMasterAdded","","",null,null],[17,"XK_hebrew_zadi","","",null,null],[17,"VisualBitsPerRGBMask","","",null,null],[3,"_XcursorFileHeader","","",null,null],[12,"magic","","",105,null],[12,"header","","",105,null],[12,"version","","",105,null],[12,"ntoc","","",105,null],[12,"tocs","","",105,null],[17,"BadMatch","","",null,null],[17,"XK_ISO_Left_Tab","","",null,null],[17,"XK_S","","",null,null],[17,"FirstExtensionError","","",null,null],[17,"XK_malesymbol","","",null,null],[3,"XIButtonState","","",null,null],[12,"mask_len","","",106,null],[12,"mask","","",106,null],[17,"X_PROTOCOL","","",null,null],[6,"Mask","","",null,null],[6,"XkbCompatMapPtr","","",null,null],[17,"XkbOD_NonXkbServer","","",null,null],[17,"XK_Cyrillic_SHA","","",null,null],[17,"XK_Ntilde","","",null,null],[17,"XF86XK_MailForward","","",null,null],[17,"XK_KP_7","","",null,null],[17,"PResizeInc","","",null,null],[17,"XK_Greek_pi","","",null,null],[17,"XK_prolongedsound","","",null,null],[6,"XFocusOutEvent","","",null,null],[3,"XSizeHints","","",null,null],[12,"flags","","",107,null],[12,"x","","",107,null],[12,"y","","",107,null],[12,"width","","",107,null],[12,"height","","",107,null],[12,"min_width","","",107,null],[12,"min_height","","",107,null],[12,"max_width","","",107,null],[12,"max_height","","",107,null],[12,"width_inc","","",107,null],[12,"height_inc","","",107,null],[12,"min_aspect","","",107,null],[12,"max_aspect","","",107,null],[12,"base_width","","",107,null],[12,"base_height","","",107,null],[12,"win_gravity","","",107,null],[17,"XF86XK_ApplicationLeft","","",null,null],[17,"XK_R14","","",null,null],[17,"XK_cabovedot","","",null,null],[17,"XNAreaNeeded","","",null,null],[17,"XK_seconds","","",null,null],[17,"XI_RawTouchBeginMask","","",null,null],[17,"XK_botrightsummation","","",null,null],[17,"ClientMessage","","",null,null],[3,"_XkbMapChanges","","",null,null],[17,"XK_BackSpace","","",null,null],[17,"XK_U","","",null,null],[17,"XK_vt","","",null,null],[17,"XStdICCTextStyle","","",null,null],[17,"XK_R2","","",null,null],[17,"XF86XK_PowerDown","","",null,null],[17,"XK_Cyrillic_LJE","","",null,null],[17,"XI_PropertyEvent","","",null,null],[17,"XINotifyNonlinearVirtual","","",null,null],[3,"XClassHint","","",null,null],[12,"res_name","","",108,null],[12,"res_class","","",108,null],[17,"XK_Tcaron","","",null,null],[17,"XK_ISO_Group_Shift","","",null,null],[17,"Convex","","",null,null],[17,"XK_semicolon","","",null,null],[17,"XkbActionMessageMask","","",null,null],[17,"PropModePrepend","","",null,null],[17,"XK_cacute","","",null,null],[17,"XK_dead_perispomeni","","",null,null],[17,"XF86XK_ZoomIn","","",null,null],[17,"XK_k","","",null,null],[17,"LedModeOff","","",null,null],[17,"XIRemoveMaster","","",null,null],[17,"XK_hebrew_kaph","","",null,null],[17,"XK_Kana_Shift","","",null,null],[17,"XK_leftshoe","","",null,null],[17,"XK_idiaeresis","","",null,null],[17,"XA_SUPERSCRIPT_Y","","",null,null],[3,"XFontSetExtents","","",null,null],[12,"max_ink_extent","","",109,null],[12,"max_logical_extent","","",109,null],[17,"XF86XK_Switch_VT_3","","",null,null],[17,"GXnand","","",null,null],[17,"XK_KP_Next","","",null,null],[17,"XK_rightsinglequotemark","","",null,null],[3,"_XcursorFileToc","","",null,null],[12,"type_","","",110,null],[12,"subtype","","",110,null],[12,"position","","",110,null],[17,"XK_T","","",null,null],[17,"XK_Pointer_UpLeft","","",null,null],[17,"XK_femalesymbol","","",null,null],[17,"XA_RGB_COLOR_MAP","","",null,null],[17,"XK_Adiaeresis","","",null,null],[17,"XNBackground_0","","",null,null],[17,"XK_Cyrillic_softsign","","",null,null],[17,"XK_dead_cedilla","","",null,null],[6,"Pixmap","","",null,null],[17,"XK_s","","",null,null],[17,"CWY","","",null,null],[17,"XK_Pointer_Button4","","",null,null],[17,"XK_Imacron","","",null,null],[17,"XK_RepeatKeys_Enable","","",null,null],[17,"XF86XK_Pictures","","",null,null],[17,"PAspect","","",null,null],[17,"XK_Udoubleacute","","",null,null],[17,"XIDetachSlave","","",null,null],[6,"XcursorCursors","","",null,null],[17,"XF86XK_ApplicationRight","","",null,null],[17,"XK_F35","","",null,null],[17,"XK_toprightparens","","",null,null],[17,"VisibilityFullyObscured","","",null,null],[17,"XK_ccircumflex","","",null,null],[17,"XK_dead_lowline","","",null,null],[17,"XK_0","","",null,null],[3,"XButtonEvent","","",null,null],[12,"type_","","",111,null],[12,"serial","","",111,null],[12,"send_event","","",111,null],[12,"display","","",111,null],[12,"window","","",111,null],[12,"root","","",111,null],[12,"subwindow","","",111,null],[12,"time","","",111,null],[12,"x","","",111,null],[12,"y","","",111,null],[12,"x_root","","",111,null],[12,"y_root","","",111,null],[12,"state","","",111,null],[12,"button","","",111,null],[12,"same_screen","","",111,null],[17,"XK_KP_Up","","",null,null],[17,"XK_hebrew_pe","","",null,null],[17,"XK_lowrightcorner","","",null,null],[17,"XIGrabtypeButton","","",null,null],[17,"XK_Arabic_dal","","",null,null],[17,"XK_F23","","",null,null],[6,"GC","","",null,null],[17,"XI_TouchOwnership","","",null,null],[17,"XK_kana_KE","","",null,null],[17,"XkbOD_BadLibraryVersion","","",null,null],[17,"XK_C_H","","",null,null],[6,"XkbNamesPtr","","",null,null],[17,"XK_Arabic_tah","","",null,null],[17,"ArcChord","","",null,null],[17,"XINotifyNonlinear","","",null,null],[17,"XK_Icircumflex","","",null,null],[17,"XF86XK_ZoomOut","","",null,null],[17,"Button5","","",null,null],[17,"XF86XK_News","","",null,null],[17,"XK_Cyrillic_E","","",null,null],[17,"XIValuatorClass","","",null,null],[17,"XK_eth","","",null,null],[17,"XF86XK_Switch_VT_4","","",null,null],[17,"XK_seveneighths","","",null,null],[17,"XK_slash","","",null,null],[17,"GXset","","",null,null],[17,"XK_dead_belowverticalline","","",null,null],[17,"PseudoColor","","",null,null],[17,"XK_leftdoublequotemark","","",null,null],[17,"XI_KeyPressMask","","",null,null],[17,"XK_exclamdown","","",null,null],[17,"XK_Pointer_UpRight","","",null,null],[17,"XK_ISO_Last_Group","","",null,null],[3,"XkbBellNotifyEvent","","",null,null],[12,"type_","","",112,null],[12,"serial","","",112,null],[12,"send_event","","",112,null],[12,"display","","",112,null],[12,"time","","",112,null],[12,"xkb_type","","",112,null],[12,"device","","",112,null],[12,"percent","","",112,null],[12,"pitch","","",112,null],[12,"duration","","",112,null],[12,"bell_class","","",112,null],[12,"bell_id","","",112,null],[12,"name","","",112,null],[12,"window","","",112,null],[12,"event_only","","",112,null],[17,"PointerWindow","","",null,null],[17,"XA_RGB_BEST_MAP","","",null,null],[17,"XK_Pointer_Down","","",null,null],[17,"XK_Greek_upsilondieresis","","",null,null],[17,"XK_dead_ogonek","","",null,null],[6,"Time","","",null,null],[17,"XK_t","","",null,null],[17,"CWWidth","","",null,null],[17,"XF86XK_ContrastAdjust","","",null,null],[17,"XK_dead_small_schwa","","",null,null],[3,"XcmsColor","","",null,null],[17,"XK_Greek_epsilon","","",null,null],[17,"FocusChangeMask","","",null,null],[17,"XK_Tcedilla","","",null,null],[17,"XK_dead_grave","","",null,null],[17,"XIAttachToMaster","","",null,null],[6,"XcursorFile","","",null,null],[17,"XkbAccessXNotifyMask","","",null,null],[17,"XK_botrightparens","","",null,null],[17,"XK_gabovedot","","",null,null],[17,"XI_RawButtonRelease","","",null,null],[17,"XK_kana_MA","","",null,null],[17,"XK_Greek_ZETA","","",null,null],[17,"XK_KP_Right","","",null,null],[17,"BadAtom","","",null,null],[17,"XK_eabovedot","","",null,null],[17,"XK_Pointer_Left","","",null,null],[6,"Region","","",null,null],[17,"XI_2_Minor","","",null,null],[17,"XK_kana_KO","","",null,null],[17,"XK_telephone","","",null,null],[6,"XkbControlsNotifyEvent","","",null,null],[17,"XK_Aring","","",null,null],[17,"ArcPieSlice","","",null,null],[17,"XF86XK_Travel","","",null,null],[17,"XF86XK_Launch5","","",null,null],[17,"XK_Cyrillic_yeru","","",null,null],[6,"XrmDatabase","","",null,null],[17,"XK_leftt","","",null,null],[17,"USPosition","","",null,null],[17,"XK_Cyrillic_SHCHA","","",null,null],[17,"XIDeviceDisabled","","",null,null],[17,"XK_toprightsqbracket","","",null,null],[17,"XK_dead_longsolidusoverlay","","",null,null],[17,"XK_Cyrillic_a","","",null,null],[17,"TrueColor","","",null,null],[17,"XI_KeyReleaseMask","","",null,null],[17,"XK_H","","",null,null],[17,"XK_function","","",null,null],[3,"XSelectionEvent","","",null,null],[12,"type_","","",113,null],[12,"serial","","",113,null],[12,"send_event","","",113,null],[12,"display","","",113,null],[12,"requestor","","",113,null],[12,"selection","","",113,null],[12,"target","","",113,null],[12,"property","","",113,null],[12,"time","","",113,null],[17,"XK_dead_aboveverticalline","","",null,null],[17,"XK_ISO_Last_Group_Lock","","",null,null],[3,"XkbActionMessageEvent","","",null,null],[12,"type_","","",114,null],[12,"serial","","",114,null],[12,"send_event","","",114,null],[12,"display","","",114,null],[12,"time","","",114,null],[12,"xkb_type","","",114,null],[12,"device","","",114,null],[12,"keycode","","",114,null],[12,"press","","",114,null],[12,"key_event_follows","","",114,null],[12,"group","","",114,null],[12,"mods","","",114,null],[12,"message","","",114,null],[17,"XK_R","","",null,null],[17,"GCJoinStyle","","",null,null],[17,"XK_Arabic_theh","","",null,null],[3,"XIHierarchyEvent","","",null,null],[12,"_type","","",115,null],[12,"serial","","",115,null],[12,"send_event","","",115,null],[12,"display","","",115,null],[12,"extension","","",115,null],[12,"evtype","","",115,null],[12,"time","","",115,null],[12,"flags","","",115,null],[12,"num_info","","",115,null],[12,"info","","",115,null],[17,"XK_hebrew_finalzade","","",null,null],[17,"XK_dead_iota","","",null,null],[17,"XK_u","","",null,null],[17,"MappingSuccess","","",null,null],[17,"XK_Arabic_switch","","",null,null],[17,"XF86XK_RockerUp","","",null,null],[17,"CirculateRequest","","",null,null],[17,"XK_adiaeresis","","",null,null],[17,"XkbOD_ConnectionRefused","","",null,null],[17,"XK_Greek_zeta","","",null,null],[17,"XK_hebrew_gimmel","","",null,null],[17,"XK_Muhenkan","","",null,null],[17,"XK_leftmiddlecurlybrace","","",null,null],[17,"XK_Cyrillic_SOFTSIGN","","",null,null],[17,"XA_MAX_SPACE","","",null,null],[17,"XF86XK_OfficeHome","","",null,null],[17,"XK_kana_MI","","",null,null],[17,"XNStringConversion","","",null,null],[17,"XI_TouchUpdateMask","","",null,null],[17,"XK_Greek_ETA","","",null,null],[17,"XK_imacron","","",null,null],[17,"XK_KP_8","","",null,null],[17,"XK_Pointer_Right","","",null,null],[17,"XIMStatusNone","","",null,null],[17,"XK_Cyrillic_ka","","",null,null],[3,"_XkbIndicatorMapRec","","",null,null],[17,"XK_cent","","",null,null],[17,"XF86XK_Excel","","",null,null],[17,"XK_kana_SA","","",null,null],[6,"XkbControlsPtr","","",null,null],[17,"XK_AE","","",null,null],[17,"NotifyHint","","",null,null],[17,"XK_rightt","","",null,null],[17,"XIAsyncPair","","",null,null],[17,"USSize","","",null,null],[17,"XK_Hyper_L","","",null,null],[17,"XF86XK_Launch4","","",null,null],[17,"XK_Ukranian_yi","","",null,null],[17,"XF86XK_Green","","",null,null],[17,"XkbNamesNotifyMask","","",null,null],[17,"XK_botrightsqbracket","","",null,null],[6,"XPointerMovedEvent","","",null,null],[3,"XConfigureRequestEvent","","",null,null],[12,"type_","","",116,null],[12,"serial","","",116,null],[12,"send_event","","",116,null],[12,"display","","",116,null],[12,"parent","","",116,null],[12,"window","","",116,null],[12,"x","","",116,null],[12,"y","","",116,null],[12,"width","","",116,null],[12,"height","","",116,null],[12,"border_width","","",116,null],[12,"above","","",116,null],[12,"detail","","",116,null],[12,"value_mask","","",116,null],[17,"XK_Zacute","","",null,null],[17,"DirectColor","","",null,null],[17,"GXorInverted","","",null,null],[17,"XK_ISO_Group_Latch","","",null,null],[17,"XK_I","","",null,null],[17,"XK_leftarrow","","",null,null],[17,"XK_club","","",null,null],[17,"GCFillStyle","","",null,null],[17,"XK_Arabic_jeem","","",null,null],[17,"XK_KP_3","","",null,null],[17,"BadCursor","","",null,null],[6,"XkbKbdDpyStatePtr","","",null,null],[17,"XK_Atilde","","",null,null],[17,"XK_digitspace","","",null,null],[3,"XFontStruct","","",null,null],[12,"ext_data","","",117,null],[12,"fid","","",117,null],[12,"direction","","",117,null],[12,"min_char_or_byte2","","",117,null],[12,"max_char_or_byte2","","",117,null],[12,"min_byte1","","",117,null],[12,"max_byte1","","",117,null],[12,"all_chars_exist","","",117,null],[12,"default_char","","",117,null],[12,"n_properties","","",117,null],[12,"properties","","",117,null],[12,"min_bounds","","",117,null],[12,"max_bounds","","",117,null],[12,"per_char","","",117,null],[12,"ascent","","",117,null],[12,"descent","","",117,null],[17,"Button1","","",null,null],[17,"XK_musicalsharp","","",null,null],[17,"XNSpotLocation","","",null,null],[17,"XK_Cyrillic_O","","",null,null],[17,"XA_QUAD_WIDTH","","",null,null],[17,"XF86XK_Launch6","","",null,null],[17,"XNQueryInputStyle_0","","",null,null],[17,"XK_Cyrillic_YERU","","",null,null],[17,"XK_hcircumflex","","",null,null],[17,"XNPreeditDoneCallback","","",null,null],[17,"XK_dead_dasia","","",null,null],[17,"XK_oneeighth","","",null,null],[17,"XF86XK_Open","","",null,null],[17,"XK_Ncedilla","","",null,null],[17,"StaticGray","","",null,null],[17,"XK_ncedilla","","",null,null],[17,"XF86XK_WWW","","",null,null],[17,"XK_L7","","",null,null],[17,"LSBFirst","","",null,null],[17,"XK_sterling","","",null,null],[17,"XK_g","","",null,null],[17,"XF86XK_Explorer","","",null,null],[4,"_XDisplay","","",null,null],[17,"XK_Zenkaku_Hankaku","","",null,null],[17,"ResizeRequest","","",null,null],[6,"XkbDescPtr","","",null,null],[17,"XIPropModePrepend","","",null,null],[17,"XK_R1","","",null,null],[17,"RevertToParent","","",null,null],[17,"XNStringConversionCallback_0","","",null,null],[17,"XF86XK_ToDoList","","",null,null],[17,"XK_Serbian_dje","","",null,null],[17,"XISyncPair","","",null,null],[6,"XkbModsRec","","",null,null],[17,"XK_Greek_iotaaccentdieresis","","",null,null],[6,"XkbSymInterpretPtr","","",null,null],[17,"XK_aring","","",null,null],[17,"XF86XK_Yellow","","",null,null],[17,"XkbCompatMapNotifyMask","","",null,null],[17,"XK_Control_R","","",null,null],[17,"GXandInverted","","",null,null],[17,"XK_topleftparens","","",null,null],[17,"XK_kana_TE","","",null,null],[3,"XConfigureEvent","","",null,null],[12,"type_","","",118,null],[12,"serial","","",118,null],[12,"send_event","","",118,null],[12,"display","","",118,null],[12,"event","","",118,null],[12,"window","","",118,null],[12,"x","","",118,null],[12,"y","","",118,null],[12,"width","","",118,null],[12,"height","","",118,null],[12,"border_width","","",118,null],[12,"above","","",118,null],[12,"override_redirect","","",118,null],[17,"XK_Zcaron","","",null,null],[17,"XF86XK_MenuPB","","",null,null],[17,"XK_J","","",null,null],[17,"XK_eng","","",null,null],[17,"XNPreeditDoneCallback_0","","",null,null],[3,"XColormapEvent","","",null,null],[12,"type_","","",119,null],[12,"serial","","",119,null],[12,"send_event","","",119,null],[12,"display","","",119,null],[12,"window","","",119,null],[12,"colormap","","",119,null],[12,"new","","",119,null],[12,"state","","",119,null],[17,"XK_diamond","","",null,null],[17,"XK_Idiaeresis","","",null,null],[17,"GCFillRule","","",null,null],[17,"XA_CUT_BUFFER5","","",null,null],[3,"XResizeRequestEvent","","",null,null],[12,"type_","","",120,null],[12,"serial","","",120,null],[12,"send_event","","",120,null],[12,"display","","",120,null],[12,"window","","",120,null],[12,"width","","",120,null],[12,"height","","",120,null],[17,"ShiftMask","","",null,null],[17,"Button2MotionMask","","",null,null],[17,"XF86XK_Away","","",null,null],[17,"XK_KP_4","","",null,null],[17,"BadFont","","",null,null],[3,"XExtData","","",null,null],[12,"number","","",121,null],[12,"next","","",121,null],[12,"free_private","","",121,null],[12,"private_data","","",121,null],[17,"XK_rightpointer","","",null,null],[17,"XK_punctspace","","",null,null],[3,"XGCValues","","",null,null],[12,"function","","",122,null],[12,"plane_mask","","",122,null],[12,"foreground","","",122,null],[12,"background","","",122,null],[12,"line_width","","",122,null],[12,"line_style","","",122,null],[12,"cap_style","","",122,null],[12,"join_style","","",122,null],[12,"fill_style","","",122,null],[12,"fill_rule","","",122,null],[12,"arc_mode","","",122,null],[12,"tile","","",122,null],[12,"stipple","","",122,null],[12,"ts_x_origin","","",122,null],[12,"ts_y_origin","","",122,null],[12,"font","","",122,null],[12,"subwindow_mode","","",122,null],[12,"graphics_exposures","","",122,null],[12,"clip_x_origin","","",122,null],[12,"clip_y_origin","","",122,null],[12,"clip_mask","","",122,null],[12,"dash_offset","","",122,null],[12,"dashes","","",122,null],[17,"XK_Pointer_Up","","",null,null],[17,"XK_F33","","",null,null],[17,"XK_Cyrillic_el","","",null,null],[17,"XA_RECTANGLE","","",null,null],[17,"XK_rightdoublequotemark","","",null,null],[17,"MappingNotify","","",null,null],[3,"XTextItem","","",null,null],[12,"chars","","",123,null],[12,"nchars","","",123,null],[12,"delta","","",123,null],[12,"font","","",123,null],[6,"GContext","","",null,null],[17,"XNColormap","","",null,null],[17,"XK_Cyrillic_PE","","",null,null],[17,"XIAsyncDevice","","",null,null],[17,"XF86XK_Launch7","","",null,null],[17,"NotifyAncestor","","",null,null],[17,"XK_idotless","","",null,null],[17,"XK_Ukranian_YI","","",null,null],[17,"DontAllowExposures","","",null,null],[17,"XI_DeviceChanged","","",null,null],[17,"XK_Hebrew_switch","","",null,null],[17,"XK_Num_Lock","","",null,null],[17,"XK_Sacute","","",null,null],[17,"GrayScale","","",null,null],[17,"XK_ISO_Level5_Shift","","",null,null],[17,"XK_E","","",null,null],[17,"PropertyChangeMask","","",null,null],[17,"XK_racute","","",null,null],[3,"XDeviceInfo","","",null,null],[12,"id","","",124,null],[12,"type_","","",124,null],[12,"name","","",124,null],[12,"num_classes","","",124,null],[12,"use_","","",124,null],[12,"inputclassinfo","","",124,null],[17,"XK_dead_acute","","",null,null],[17,"XK_h","","",null,null],[17,"XK_Touroku","","",null,null],[17,"XK_upstile","","",null,null],[17,"XK_Arabic_hah","","",null,null],[3,"XPoint","","",null,null],[12,"x","","",125,null],[12,"y","","",125,null],[17,"XIPropModeAppend","","",null,null],[3,"XIValuatorState","","",null,null],[12,"mask_len","","",126,null],[12,"mask","","",126,null],[12,"values","","",126,null],[17,"CurrentTime","","",null,null],[17,"XNStringConversion_0","","",null,null],[17,"XK_Greek_RHO","","",null,null],[3,"_XkbChanges","","",null,null],[17,"NotUseful","","",null,null],[17,"XK_c_h","","",null,null],[6,"XkbNameChangesPtr","","",null,null],[17,"XkbAccessXNotify","","",null,null],[6,"XOM","","",null,null],[17,"XK_ae","","",null,null],[17,"XF86XK_Blue","","",null,null],[17,"XF86XK_Launch2","","",null,null],[17,"XK_Alt_L","","",null,null],[17,"GXnoop","","",null,null],[17,"PMaxSize","","",null,null],[6,"XcursorImage","","",null,null],[17,"XI_KeyRelease","","",null,null],[17,"XK_notsign","","",null,null],[17,"XStringStyle","","",null,null],[17,"XF86XK_MySites","","",null,null],[17,"XK_ifonlyif","","",null,null],[17,"RevertToNone","","",null,null],[17,"XIScrollTypeHorizontal","","",null,null],[17,"XK_Amacron","","",null,null],[17,"XK_Terminate_Server","","",null,null],[17,"XK_threeeighths","","",null,null],[17,"XK_partialderivative","","",null,null],[17,"Button3MotionMask","","",null,null],[3,"XSelectionClearEvent","","",null,null],[12,"type_","","",127,null],[12,"serial","","",127,null],[12,"send_event","","",127,null],[12,"display","","",127,null],[12,"window","","",127,null],[12,"selection","","",127,null],[12,"time","","",127,null],[17,"XK_KP_5","","",null,null],[17,"XK_thinspace","","",null,null],[17,"XIAddMaster","","",null,null],[17,"XK_Arabic_waw","","",null,null],[17,"XI_2_Major","","",null,null],[17,"XK_R13","","",null,null],[17,"MSBFirst","","",null,null],[17,"XK_Cyrillic_em","","",null,null],[17,"XIPropertyDeleted","","",null,null],[17,"CirculateNotify","","",null,null],[17,"XK_dead_caron","","",null,null],[3,"XTextItem16","","",null,null],[12,"chars","","",128,null],[12,"nchars","","",128,null],[12,"delta","","",128,null],[12,"font","","",128,null],[6,"XrmBinding","","",null,null],[17,"XK_Arabic_kasra","","",null,null],[17,"XK_Ooblique","","",null,null],[17,"GCClipMask","","",null,null],[17,"XISyncDevice","","",null,null],[17,"XK_KP_Down","","",null,null],[17,"NotifyVirtual","","",null,null],[17,"XK_hebrew_finalzadi","","",null,null],[17,"XK_aacute","","",null,null],[17,"XF86XK_View","","",null,null],[17,"XI_KeyPress","","",null,null],[17,"XF86XK_ModeLock","","",null,null],[17,"XK_KP_Space","","",null,null],[17,"XK_Greek_omicronaccent","","",null,null],[17,"BadLength","","",null,null],[17,"XK_Scaron","","",null,null],[17,"XK_ISO_Level5_Latch","","",null,null],[17,"XK_F","","",null,null],[17,"Complex","","",null,null],[17,"XK_Greek_eta","","",null,null],[17,"XK_filledtribulletdown","","",null,null],[17,"XA_CUT_BUFFER1","","",null,null],[17,"EnterWindowMask","","",null,null],[17,"XNPreeditDrawCallback_0","","",null,null],[17,"XK_Greek_IOTAdiaeresis","","",null,null],[17,"XK_Massyo","","",null,null],[17,"CWBackPixel","","",null,null],[3,"XIButtonClassInfo","","",null,null],[12,"_type","","",129,null],[12,"sourceid","","",129,null],[12,"num_buttons","","",129,null],[12,"labels","","",129,null],[12,"state","","",129,null],[17,"XNResetState_0","","",null,null],[17,"XK_Pointer_Drag4","","",null,null],[17,"XK_dead_currency","","",null,null],[3,"_XkbClientMapRec","","",null,null],[17,"XK_kana_KU","","",null,null],[17,"WhenMapped","","",null,null],[17,"XK_C_h","","",null,null],[17,"XF86XK_AddFavorite","","",null,null],[17,"XNStatusAttributes","","",null,null],[17,"XK_Cyrillic_EL","","",null,null],[17,"XIAsyncPairedDevice","","",null,null],[3,"_XkbKey","","",null,null],[17,"NotifyGrab","","",null,null],[17,"XK_Gbreve","","",null,null],[6,"XcursorImages","","",null,null],[17,"XK_dead_abovecomma","","",null,null],[6,"XKeyReleasedEvent","","",null,null],[17,"XCompoundTextStyle","","",null,null],[17,"XF86XK_New","","",null,null],[6,"Atom","","",null,null],[17,"XK_implies","","",null,null],[17,"RevertToPointerRoot","","",null,null],[17,"XIScrollTypeVertical","","",null,null],[17,"XK_Iogonek","","",null,null],[17,"XK_fiveeighths","","",null,null],[17,"XINotifyInferior","","",null,null],[17,"Button4MotionMask","","",null,null],[17,"PropModeReplace","","",null,null],[17,"XK_F16","","",null,null],[17,"XK_Greek_beta","","",null,null],[17,"XK_logicalor","","",null,null],[3,"XkbCompatMapNotifyEvent","","",null,null],[12,"type_","","",130,null],[12,"serial","","",130,null],[12,"send_event","","",130,null],[12,"display","","",130,null],[12,"time","","",130,null],[12,"xkb_type","","",130,null],[12,"device","","",130,null],[12,"changed_groups","","",130,null],[12,"first_si","","",130,null],[12,"num_si","","",130,null],[12,"num_total_si","","",130,null],[6,"XkbDoodadPtr","","",null,null],[17,"XK_i","","",null,null],[17,"XK_kana_HU","","",null,null],[17,"XK_downshoe","","",null,null],[17,"SubstructureNotifyMask","","",null,null],[17,"XA_END_SPACE","","",null,null],[17,"XK_Arabic_shadda","","",null,null],[17,"XK_Ugrave","","",null,null],[17,"XIReplayDevice","","",null,null],[17,"XF86XK_AudioRepeat","","",null,null],[17,"XK_Cyrillic_EN","","",null,null],[3,"_XcursorFile","","",null,null],[12,"closure","","",131,null],[12,"read","","",131,null],[12,"write","","",131,null],[12,"seek","","",131,null],[17,"XI_FocusOut","","",null,null],[17,"GXand","","",null,null],[17,"XK_kana_TI","","",null,null],[17,"XF86XK_Cut","","",null,null],[17,"XK_Greek_upsilonaccent","","",null,null],[17,"XK_Scedilla","","",null,null],[17,"XK_musicalflat","","",null,null],[3,"XDestroyWindowEvent","","",null,null],[12,"type_","","",132,null],[12,"serial","","",132,null],[12,"send_event","","",132,null],[12,"display","","",132,null],[12,"event","","",132,null],[12,"window","","",132,null],[17,"XK_Cyrillic_zhe","","",null,null],[17,"CWSaveUnder","","",null,null],[17,"XA_CUT_BUFFER2","","",null,null],[17,"LeaveWindowMask","","",null,null],[17,"XK_horizlinescan5","","",null,null],[17,"XK_AccessX_Enable","","",null,null],[17,"XK_ISO_Enter","","",null,null],[3,"XKeyboardControl","","",null,null],[12,"key_click_percent","","",133,null],[12,"bell_percent","","",133,null],[12,"bell_pitch","","",133,null],[12,"bell_duration","","",133,null],[12,"led","","",133,null],[12,"led_mode","","",133,null],[12,"key","","",133,null],[12,"auto_repeat_mode","","",133,null],[3,"XIKeyClassInfo","","",null,null],[12,"_type","","",134,null],[12,"sourceid","","",134,null],[12,"num_keycodes","","",134,null],[12,"keycodes","","",134,null],[17,"XF86XK_AudioPlay","","",null,null],[17,"XIMStatusArea","","",null,null],[17,"XK_Pointer_Drag5","","",null,null],[17,"XK_Cyrillic_i","","",null,null],[17,"XK_hairspace","","",null,null],[6,"VisualID","","",null,null],[17,"XK_F34","","",null,null],[17,"XF86XK_HotLinks","","",null,null],[17,"Mod4MapIndex","","",null,null],[17,"XK_Cyrillic_EM","","",null,null],[17,"XK_dead_belowcomma","","",null,null],[17,"XK_odoubleacute","","",null,null],[17,"XkbBellNotify","","",null,null],[3,"_XkbKeyType","","",null,null],[17,"XK_Greek_switch","","",null,null],[17,"NotifyUngrab","","",null,null],[17,"XK_Jcircumflex","","",null,null],[17,"XK_hebrew_ayin","","",null,null],[17,"XI_Leave","","",null,null],[17,"XTextStyle","","",null,null],[17,"XK_Greek_etaaccent","","",null,null],[17,"XF86XK_Calendar","","",null,null],[17,"XF86XK_Tools","","",null,null],[17,"XkbActionMessageLength","","",null,null],[17,"XK_Right","","",null,null],[4,"_XAnyClassinfo","","",null,null],[17,"XK_Greek_gamma","","",null,null],[17,"XK_ISO_Level5_Lock","","",null,null],[17,"XK_G","","",null,null],[17,"Nonconvex","","",null,null],[17,"XK_Arabic_question_mark","","",null,null],[17,"XK_kana_yu","","",null,null],[17,"XK_Pointer_Drag2","","",null,null],[17,"XK_periodcentered","","",null,null],[17,"XF86XK_RotateWindows","","",null,null],[17,"XK_kana_HE","","",null,null],[17,"XK_rightshoe","","",null,null],[17,"XA_SUPERSCRIPT_X","","",null,null],[17,"XIPointerEmulated","","",null,null],[6,"XkbKeyNamePtr","","",null,null],[17,"XK_Uacute","","",null,null],[17,"XkbCompatMapNotify","","",null,null],[17,"XK_leftsinglequotemark","","",null,null],[17,"XK_Serbian_dze","","",null,null],[17,"XIButtonClass","","",null,null],[17,"XK_asciitilde","","",null,null],[17,"GXandReverse","","",null,null],[17,"XF86XK_Display","","",null,null],[17,"XK_Ukrainian_YI","","",null,null],[17,"XIDependentTouch","","",null,null],[17,"WindowGroupHint","","",null,null],[17,"XK_nabla","","",null,null],[3,"XExposeEvent","","",null,null],[12,"type_","","",135,null],[12,"serial","","",135,null],[12,"send_event","","",135,null],[12,"display","","",135,null],[12,"window","","",135,null],[12,"x","","",135,null],[12,"y","","",135,null],[12,"width","","",135,null],[12,"height","","",135,null],[12,"count","","",135,null],[17,"XK_dead_psili","","",null,null],[17,"XK_Cyrillic_ve","","",null,null],[17,"XK_Eogonek","","",null,null],[17,"XK_ISO_Release_Both_Margins","","",null,null],[17,"PointerMotionHintMask","","",null,null],[17,"XK_bracketright","","",null,null],[17,"XK_Eabovedot","","",null,null],[17,"XK_AccessX_Feedback_Enable","","",null,null],[3,"XSelectionRequestEvent","","",null,null],[12,"type_","","",136,null],[12,"serial","","",136,null],[12,"send_event","","",136,null],[12,"display","","",136,null],[12,"owner","","",136,null],[12,"requestor","","",136,null],[12,"selection","","",136,null],[12,"target","","",136,null],[12,"property","","",136,null],[12,"time","","",136,null],[17,"StippleShape","","",null,null],[17,"XK_Arabic_noon","","",null,null],[17,"XK_L6","","",null,null],[17,"XF86XK_AudioStop","","",null,null],[17,"KeymapNotify","","",null,null],[17,"XK_ISO_Center_Object","","",null,null],[17,"XK_caron","","",null,null],[6,"XcursorComments","","",null,null],[3,"XWindowAttributes","","",null,null],[12,"x","","",137,null],[12,"y","","",137,null],[12,"width","","",137,null],[12,"height","","",137,null],[12,"border_width","","",137,null],[12,"depth","","",137,null],[12,"visual","","",137,null],[12,"root","","",137,null],[12,"class","","",137,null],[12,"bit_gravity","","",137,null],[12,"win_gravity","","",137,null],[12,"backing_store","","",137,null],[12,"backing_planes","","",137,null],[12,"backing_pixel","","",137,null],[12,"save_under","","",137,null],[12,"colormap","","",137,null],[12,"map_installed","","",137,null],[12,"map_state","","",137,null],[12,"all_event_masks","","",137,null],[12,"your_event_mask","","",137,null],[12,"do_not_propagate_mask","","",137,null],[12,"override_redirect","","",137,null],[12,"screen","","",137,null],[6,"XID","","",null,null],[17,"XK_quad","","",null,null],[17,"Mod5MapIndex","","",null,null],[17,"XI_ButtonPress","","",null,null],[17,"XkbActionMessage","","",null,null],[17,"XK_leftradical","","",null,null],[17,"XK_KP_Left","","",null,null],[17,"XK_hebrew_finalpe","","",null,null],[17,"BadWindow","","",null,null],[17,"XK_oslash","","",null,null],[17,"XF86XK_Documents","","",null,null],[17,"XNSpotLocation_0","","",null,null],[17,"XINotifyNormal","","",null,null],[17,"XK_Greek_iotaaccent","","",null,null],[6,"XEDataObject","","",null,null],[17,"XK_kana_TSU","","",null,null],[17,"XkbOD_Success","","",null,null],[17,"XK_Down","","",null,null],[6,"XAnyClassPtr","","",null,null],[17,"XK_Greek_delta","","",null,null],[17,"XK_Arabic_hamza","","",null,null],[17,"XK_kana_yo","","",null,null],[17,"XF86XK_Launch3","","",null,null],[17,"XA_CUT_BUFFER3","","",null,null],[6,"XcmsColorSpace","","",null,null],[17,"XK_cedilla","","",null,null],[17,"XK_horizlinescan7","","",null,null],[17,"XK_KP_2","","",null,null],[17,"XK_kana_ya","","",null,null],[6,"XkbKeyPtr","","",null,null],[17,"XK_F32","","",null,null],[17,"XF86XK_Shop","","",null,null],[17,"StaticColor","","",null,null],[17,"XK_numerosign","","",null,null],[17,"XITouchClass","","",null,null],[17,"XK_nobreakspace","","",null,null],[6,"XConnectionWatchProc","","",null,null],[17,"XF86XK_DOS","","",null,null],[17,"XK_uacute","","",null,null],[17,"XF86XK_ClearGrab","","",null,null],[17,"AllHints","","",null,null],[17,"XK_approximate","","",null,null],[17,"XIPropertyCreated","","",null,null],[3,"XColor","","",null,null],[12,"pixel","","",138,null],[12,"red","","",138,null],[12,"green","","",138,null],[12,"blue","","",138,null],[12,"flags","","",138,null],[12,"pad","","",138,null],[17,"XK_Ecaron","","",null,null],[17,"CoordModePrevious","","",null,null],[3,"XUnmapEvent","","",null,null],[12,"type_","","",139,null],[12,"serial","","",139,null],[12,"send_event","","",139,null],[12,"display","","",139,null],[12,"event","","",139,null],[12,"window","","",139,null],[12,"from_configure","","",139,null],[17,"XK_filledlefttribullet","","",null,null],[6,"XkbChangesPtr","","",null,null],[17,"XK_acircumflex","","",null,null],[17,"AutoRepeatModeOff","","",null,null],[17,"XF86XK_TopMenu","","",null,null],[17,"XK_Shift_L","","",null,null],[17,"XK_Sys_Req","","",null,null],[17,"GraphicsExpose","","",null,null],[17,"XK_rightcaret","","",null,null],[17,"XK_marker","","",null,null],[3,"XWindowChanges","","",null,null],[12,"x","","",140,null],[12,"y","","",140,null],[12,"width","","",140,null],[12,"height","","",140,null],[12,"border_width","","",140,null],[12,"sibling","","",140,null],[12,"stack_mode","","",140,null],[6,"XPointer","","",null,null],[17,"XK_Pointer_Drag3","","",null,null],[17,"XK_Hankaku","","",null,null],[17,"XNDestroyCallback","","",null,null],[17,"CWBorderPixel","","",null,null],[17,"XK_Cyrillic_A","","",null,null],[17,"XA_MIN_SPACE","","",null,null],[17,"XK_Odiaeresis","","",null,null],[17,"XK_kana_HO","","",null,null],[3,"_XcursorImages","","",null,null],[12,"nimage","","",141,null],[12,"images","","",141,null],[12,"name","","",141,null],[17,"XNPreeditCaretCallback_0","","",null,null],[3,"_XkbAction","","",null,null],[17,"XK_Greek_OMICRONaccent","","",null,null],[17,"BadPixmap","","",null,null],[17,"XI_FocusIn","","",null,null],[17,"XNColormap_0","","",null,null],[17,"ColormapInstalled","","",null,null],[17,"XI_RawKeyReleaseMask","","",null,null],[17,"XK_Greek_iotadieresis","","",null,null],[17,"XK_AudibleBell_Enable","","",null,null],[17,"XK_Gcedilla","","",null,null],[17,"XF86XK_Memo","","",null,null],[17,"XK_Page_Up","","",null,null],[17,"Always","","",null,null],[17,"XK_Abreve","","",null,null],[17,"CWBackingPlanes","","",null,null],[17,"XK_ENG","","",null,null],[17,"Button1MotionMask","","",null,null],[17,"XK_horizlinescan9","","",null,null],[17,"XF86XK_Forward","","",null,null],[17,"XK_R7","","",null,null],[17,"XK_Break","","",null,null],[17,"XK_Arabic_ha","","",null,null],[17,"XIGrabNotViewable","","",null,null],[17,"XK_R12","","",null,null],[6,"XkbDeviceChangesPtr","","",null,null],[17,"XkbLC_ConsumeKeysOnComposeFail","","",null,null],[17,"XF86XK_History","","",null,null],[17,"XK_Greek_nu","","",null,null],[3,"XCirculateRequestEvent","","",null,null],[12,"type_","","",142,null],[12,"serial","","",142,null],[12,"send_event","","",142,null],[12,"display","","",142,null],[12,"parent","","",142,null],[12,"window","","",142,null],[12,"place","","",142,null],[3,"_XkbNamesNotify","","",null,null],[17,"XK_Serbian_DJE","","",null,null],[3,"XIAnyClassInfo","","",null,null],[12,"_type","","",143,null],[12,"sourceid","","",143,null],[6,"XICCEncodingStyle","","",null,null],[17,"XNegative","","",null,null],[17,"XK_leftpointer","","",null,null],[17,"XK_ucircumflex","","",null,null],[17,"XK_Q","","",null,null],[17,"XK_Arabic_teh","","",null,null],[17,"XUrgencyHint","","",null,null],[17,"XK_colon","","",null,null],[17,"FillSolid","","",null,null],[17,"XIPropertyModified","","",null,null],[17,"IsViewable","","",null,null],[6,"xcb_connection_t","","",null,null],[17,"XK_ugrave","","",null,null],[17,"DisableScreenInterval","","",null,null],[17,"XK_Aacute","","",null,null],[17,"XF86XK_Support","","",null,null],[17,"XK_Home","","",null,null],[17,"XYBitmap","","",null,null],[17,"XK_kana_fullstop","","",null,null],[6,"KeyCode","","",null,null],[3,"XVisibilityEvent","","",null,null],[12,"type_","","",144,null],[12,"serial","","",144,null],[12,"send_event","","",144,null],[12,"display","","",144,null],[12,"window","","",144,null],[12,"state","","",144,null],[17,"XK_filledrighttribullet","","",null,null],[17,"XK_atilde","","",null,null],[3,"XkbEvent","","",null,null],[17,"XF86XK_Red","","",null,null],[17,"XK_Shift_R","","",null,null],[17,"XK_Kanji","","",null,null],[17,"XK_downcaret","","",null,null],[17,"XK_kana_tsu","","",null,null],[3,"XHostAddress","","",null,null],[12,"family","","",145,null],[12,"length","","",145,null],[12,"address","","",145,null],[17,"XNFilterEvents","","",null,null],[17,"XK_Cyrillic_BE","","",null,null],[17,"XA_NORM_SPACE","","",null,null],[17,"XK_rightanglebracket","","",null,null],[17,"XK_multiply","","",null,null],[17,"GrabNotViewable","","",null,null],[17,"Mod3MapIndex","","",null,null],[17,"XK_dead_invertedbreve","","",null,null],[3,"XF86VidModeGamma","","",null,null],[12,"red","","",146,null],[12,"green","","",146,null],[12,"blue","","",146,null],[3,"_XkbBounds","","",null,null],[17,"XNPreeditStateNotifyCallback_0","","",null,null],[17,"XK_Macedonia_kje","","",null,null],[17,"XIMasterPointer","","",null,null],[17,"GrabModeSync","","",null,null],[17,"XIMStatusCallbacks","","",null,null],[17,"XK_Cyrillic_shorti","","",null,null],[17,"XK_Greek_PI","","",null,null],[17,"ConfigureRequest","","",null,null],[17,"XK_Lacute","","",null,null],[17,"XK_ISO_Set_Margin_Right","","",null,null],[17,"XK_similarequal","","",null,null],[17,"XK_bracketleft","","",null,null],[17,"GCGraphicsExposures","","",null,null],[17,"XK_KP_Delete","","",null,null],[17,"NotifyWhileGrabbed","","",null,null],[17,"XNVisiblePosition","","",null,null],[17,"XK_F28","","",null,null],[17,"XK_Mode_switch","","",null,null],[17,"AutoRepeatModeOn","","",null,null],[17,"XK_Arabic_heh","","",null,null],[17,"XkbLC_ComposeLED","","",null,null],[3,"_XkbControls","","",null,null],[17,"XK_Help","","",null,null],[3,"_XkbOutline","","",null,null],[17,"XK_kana_HI","","",null,null],[17,"XK_parenright","","",null,null],[17,"RetainPermanent","","",null,null],[3,"XIScrollClassInfo","","",null,null],[12,"_type","","",147,null],[12,"sourceid","","",147,null],[12,"number","","",147,null],[12,"scroll_type","","",147,null],[12,"increment","","",147,null],[12,"flags","","",147,null],[6,"XOrientation","","",null,null],[17,"XNFilterEvents_0","","",null,null],[17,"XK_Greek_EPSILONaccent","","",null,null],[17,"XIPropModeReplace","","",null,null],[17,"XNR6PreeditCallback_0","","",null,null],[4,"XkbKbdDpyStateRec","","",null,null],[17,"XK_Acircumflex","","",null,null],[17,"XF86XK_TaskPane","","",null,null],[17,"XK_lf","","",null,null],[17,"XK_Left","","",null,null],[17,"XYPixmap","","",null,null],[17,"XK_emfilledcircle","","",null,null],[17,"XK_horizlinescan1","","",null,null],[3,"_XkbExtensionDeviceNotifyEvent","","",null,null],[12,"type_","","",148,null],[12,"serial","","",148,null],[12,"send_event","","",148,null],[12,"display","","",148,null],[12,"time","","",148,null],[12,"xkb_type","","",148,null],[12,"device","","",148,null],[12,"reason","","",148,null],[12,"supported","","",148,null],[12,"unsupported","","",148,null],[12,"first_btn","","",148,null],[12,"num_btns","","",148,null],[12,"leds_defined","","",148,null],[12,"led_state","","",148,null],[12,"led_class","","",148,null],[12,"led_id","","",148,null],[17,"XA_WM_HINTS","","",null,null],[3,"XIconSize","","",null,null],[12,"min_width","","",149,null],[12,"min_height","","",149,null],[12,"max_width","","",149,null],[12,"max_height","","",149,null],[12,"width_inc","","",149,null],[12,"height_inc","","",149,null],[17,"XK_hstroke","","",null,null],[17,"XNPreeditStartCallback","","",null,null],[17,"XK_dead_abovereversedcomma","","",null,null],[17,"XK_Arabic_kaf","","",null,null],[3,"XF86VidModeModeLine","","",null,null],[12,"hdisplay","","",150,null],[12,"hsyncstart","","",150,null],[12,"hsyncend","","",150,null],[12,"htotal","","",150,null],[12,"hskew","","",150,null],[12,"vdisplay","","",150,null],[12,"vsyncstart","","",150,null],[12,"vsyncend","","",150,null],[12,"vtotal","","",150,null],[12,"flags","","",150,null],[12,"privsize","","",150,null],[12,"private","","",150,null],[17,"XK_hebrew_yod","","",null,null],[17,"DisableAccess","","",null,null],[17,"XA_WM_CLASS","","",null,null],[17,"XK_Byelorussian_shortu","","",null,null],[17,"XK_iacute","","",null,null],[17,"XIMasterKeyboard","","",null,null],[17,"YValue","","",null,null],[17,"XK_F17","","",null,null],[17,"BadValue","","",null,null],[17,"XF86XK_AudioPrev","","",null,null],[17,"XK_division","","",null,null],[3,"XDevice","","",null,null],[12,"device_id","","",151,null],[12,"num_classes","","",151,null],[12,"classes","","",151,null],[17,"XISlaveAdded","","",null,null],[17,"XF86XK_Switch_VT_11","","",null,null],[17,"GravityNotify","","",null,null],[17,"XK_uptack","","",null,null],[17,"XK_Cacute","","",null,null],[17,"XI_ButtonRelease","","",null,null],[17,"XK_Greek_OMICRON","","",null,null],[17,"XK_KP_Multiply","","",null,null],[17,"XK_Cyrillic_KA","","",null,null],[17,"XK_Scroll_Lock","","",null,null],[17,"XK_Greek_alpha","","",null,null],[17,"XK_kana_openingbracket","","",null,null],[17,"XK_Pointer_Button2","","",null,null],[17,"XK_Clear","","",null,null],[4,"_XGC","","",null,null],[17,"XK_Control_L","","",null,null],[17,"GXcopy","","",null,null],[17,"XK_kana_TU","","",null,null],[17,"XNResourceName","","",null,null],[17,"XK_Cyrillic_che","","",null,null],[4,"xError","","",null,null],[17,"XK_kana_FU","","",null,null],[17,"XK_asterisk","","",null,null],[17,"XF86XK_LaunchF","","",null,null],[17,"XNPreeditStartCallback_0","","",null,null],[17,"XK_Scircumflex","","",null,null],[17,"XA_CUT_BUFFER4","","",null,null],[3,"XReparentEvent","","",null,null],[12,"type_","","",152,null],[12,"serial","","",152,null],[12,"send_event","","",152,null],[12,"display","","",152,null],[12,"event","","",152,null],[12,"window","","",152,null],[12,"parent","","",152,null],[12,"x","","",152,null],[12,"y","","",152,null],[12,"override_redirect","","",152,null],[17,"Mod1Mask","","",null,null],[6,"XcmsFunctionSet","","",null,null],[17,"XK_onesuperior","","",null,null],[17,"PropertyNewValue","","",null,null],[17,"XF86XK_AudioLowerVolume","","",null,null],[17,"XK_Itilde","","",null,null],[3,"OpenError","","",null,null],[17,"XIMPreeditNothing","","",null,null],[17,"XkbNumVirtualMods","","",null,null],[17,"XkbIndicatorMapNotify","","",null,null],[17,"XK_Greek_chi","","",null,null],[17,"XK_ISO_Release_Margin_Left","","",null,null],[17,"GCClipXOrigin","","",null,null],[17,"XK_horizlinescan3","","",null,null],[17,"XK_Arabic_sad","","",null,null],[3,"XImage","","",null,null],[12,"width","","",153,null],[12,"height","","",153,null],[12,"xoffset","","",153,null],[12,"format","","",153,null],[12,"data","","",153,null],[12,"byte_order","","",153,null],[12,"bitmap_unit","","",153,null],[12,"bitmap_bit_order","","",153,null],[12,"bitmap_pad","","",153,null],[12,"depth","","",153,null],[12,"bytes_per_line","","",153,null],[12,"bits_per_pixel","","",153,null],[12,"red_mask","","",153,null],[12,"green_mask","","",153,null],[12,"blue_mask","","",153,null],[12,"obdata","","",153,null],[12,"funcs","","",153,null],[17,"XK_leftcaret","","",null,null],[17,"XA_VISUALID","","",null,null],[17,"XkbLC_AlwaysConsumeShiftAndLock","","",null,null],[17,"XK_script_switch","","",null,null],[17,"XK_hebrew_finalkaph","","",null,null],[3,"XTimeCoord","","",null,null],[12,"time","","",154,null],[12,"x","","",154,null],[12,"y","","",154,null],[17,"XA_WM_TRANSIENT_FOR","","",null,null],[17,"XK_ISO_Level3_Lock","","",null,null],[17,"XK_Cyrillic_dzhe","","",null,null],[17,"XK_icircumflex","","",null,null],[17,"XK_D","","",null,null],[17,"XK_enfilledsqbullet","","",null,null],[3,"XDeviceControl","","",null,null],[12,"control","","",155,null],[12,"length","","",155,null],[17,"KeyPress","","",null,null],[17,"XK_acute","","",null,null],[17,"JoinMiter","","",null,null],[17,"XF86XK_Q","","",null,null],[17,"XK_Greek_ETAaccent","","",null,null],[17,"XK_Cyrillic_ha","","",null,null],[17,"CWColormap","","",null,null],[17,"XK_circle","","",null,null],[3,"_XkbNamesRec","","",null,null],[12,"keycodes","","",156,null],[12,"geometry","","",156,null],[12,"symbols","","",156,null],[12,"types","","",156,null],[12,"compat","","",156,null],[12,"vmods","","",156,null],[12,"indicators","","",156,null],[12,"groups","","",156,null],[12,"keys","","",156,null],[12,"key_aliases","","",156,null],[12,"radio_groups","","",156,null],[12,"phys_symbols","","",156,null],[12,"num_keys","","",156,null],[12,"num_key_aliases","","",156,null],[12,"num_rg","","",156,null],[17,"XK_dead_i","","",null,null],[17,"XF86XK_Terminal","","",null,null],[17,"ZPixmap","","",null,null],[17,"XK_kana_closingbracket","","",null,null],[17,"XK_Pointer_Button3","","",null,null],[17,"XK_Pause","","",null,null],[17,"StructureNotifyMask","","",null,null],[17,"AllTemporary","","",null,null],[17,"XK_F27","","",null,null],[17,"XF86XK_Eject","","",null,null],[6,"XcursorFileToc","","",null,null],[17,"XK_dead_horn","","",null,null],[4,"xEvent","","",null,null],[3,"_XkbComponentList","","",null,null],[17,"XK_less","","",null,null],[17,"XK_hebrew_chet","","",null,null],[17,"VisibilityPartiallyObscured","","",null,null],[17,"XK_Last_Virtual_Screen","","",null,null],[17,"XK_Arabic_semicolon","","",null,null],[17,"AllValues","","",null,null],[6,"XContext","","",null,null],[17,"XK_L4","","",null,null],[17,"XI_FocusInMask","","",null,null],[17,"XF86XK_AudioMute","","",null,null],[17,"LeaveNotify","","",null,null],[17,"XIKeyClass","","",null,null],[17,"XK_lstroke","","",null,null],[17,"WidthValue","","",null,null],[17,"XNQueryICValuesList_0","","",null,null],[17,"XK_Greek_NU","","",null,null],[6,"XkbDeviceInfoPtr","","",null,null],[17,"XIMStatusNothing","","",null,null],[17,"XK_kana_YU","","",null,null],[17,"XkbNamesNotify","","",null,null],[17,"XK_F6","","",null,null],[17,"XK_Ccaron","","",null,null],[17,"XK_ISO_Release_Margin_Right","","",null,null],[17,"XK_backslash","","",null,null],[17,"GCClipYOrigin","","",null,null],[17,"XK_Arabic_dad","","",null,null],[17,"XI_RawMotionMask","","",null,null],[17,"XA_WINDOW","","",null,null],[17,"XF86XK_Select","","",null,null],[19,"XEvent","","",null,null],[12,"type_","","",157,null],[12,"any","","",157,null],[12,"button","","",157,null],[12,"circulate","","",157,null],[12,"circulate_request","","",157,null],[12,"client_message","","",157,null],[12,"colormap","","",157,null],[12,"configure","","",157,null],[12,"configure_request","","",157,null],[12,"create_window","","",157,null],[12,"crossing","","",157,null],[12,"destroy_window","","",157,null],[12,"error","","",157,null],[12,"expose","","",157,null],[12,"focus_change","","",157,null],[12,"generic_event_cookie","","",157,null],[12,"graphics_expose","","",157,null],[12,"gravity","","",157,null],[12,"key","","",157,null],[12,"keymap","","",157,null],[12,"map","","",157,null],[12,"mapping","","",157,null],[12,"map_request","","",157,null],[12,"motion","","",157,null],[12,"no_expose","","",157,null],[12,"property","","",157,null],[12,"reparent","","",157,null],[12,"resize_request","","",157,null],[12,"selection_clear","","",157,null],[12,"selection","","",157,null],[12,"selection_request","","",157,null],[12,"unmap","","",157,null],[12,"visibility","","",157,null],[12,"pad","","",157,null],[12,"xf86vm_notify","","",157,null],[12,"xrr_screen_change_notify","","",157,null],[12,"xrr_notify","","",157,null],[12,"xrr_output_change_notify","","",157,null],[12,"xrr_crtc_change_notify","","",157,null],[12,"xrr_output_property_notify","","",157,null],[12,"xrr_provider_change_notify","","",157,null],[12,"xrr_provider_property_notify","","",157,null],[12,"xrr_resource_change_notify","","",157,null],[12,"xss_notify","","",157,null],[17,"XK_Iacute","","",null,null],[17,"XK_twothirds","","",null,null],[17,"XK_F14","","",null,null],[17,"XK_kana_TA","","",null,null],[17,"XkbLC_IgnoreNewKeyboards","","",null,null],[17,"XK_decimalpoint","","",null,null],[3,"XwcTextItem","","",null,null],[12,"chars","","",158,null],[12,"nchars","","",158,null],[12,"delta","","",158,null],[12,"font_set","","",158,null],[17,"Unsorted","","",null,null],[6,"XButtonPressedEvent","","",null,null],[17,"XK_ampersand","","",null,null],[17,"XK_Arabic_comma","","",null,null],[17,"CWBackingPixel","","",null,null],[17,"XK_filledtribulletup","","",null,null],[17,"XK_Serbian_DZE","","",null,null],[17,"XA_CUT_BUFFER0","","",null,null],[17,"KeyRelease","","",null,null],[17,"XI_DeviceChangedMask","","",null,null],[17,"XK_mu","","",null,null],[17,"XK_Greek_IOTAaccent","","",null,null],[17,"CWEventMask","","",null,null],[17,"XK_ht","","",null,null],[17,"XIGrabModeTouch","","",null,null],[17,"VisualClassMask","","",null,null],[17,"XF86XK_OpenURL","","",null,null],[17,"XK_kana_comma","","",null,null],[17,"XK_ISO_Partial_Space_Left","","",null,null],[3,"ScreenFormat","","",null,null],[12,"ext_data","","",159,null],[12,"depth","","",159,null],[12,"bits_per_pixel","","",159,null],[12,"scanline_pad","","",159,null],[17,"NoSymbol","","",null,null],[17,"VisibilityChangeMask","","",null,null],[17,"XK_Greek_psi","","",null,null],[17,"XK_Iabovedot","","",null,null],[17,"XK_Win_L","","",null,null],[17,"ResizeRedirectMask","","",null,null],[17,"XK_dead_stroke","","",null,null],[17,"XK_hebrew_beth","","",null,null],[17,"XF86XK_Back","","",null,null],[17,"DontPreferBlanking","","",null,null],[3,"XIRawEvent","","",null,null],[12,"_type","","",160,null],[12,"serial","","",160,null],[12,"send_event","","",160,null],[12,"display","","",160,null],[12,"extension","","",160,null],[12,"evtype","","",160,null],[12,"time","","",160,null],[12,"deviceid","","",160,null],[12,"sourceid","","",160,null],[12,"detail","","",160,null],[12,"flags","","",160,null],[12,"valuators","","",160,null],[12,"raw_values","","",160,null],[3,"_XkbComponentNames","","",null,null],[17,"XK_Cancel","","",null,null],[17,"XK_hebrew_het","","",null,null],[17,"XA_FAMILY_NAME","","",null,null],[17,"XK_ecircumflex","","",null,null],[17,"XK_L5","","",null,null],[3,"_XkbMods","","",null,null],[17,"XNR6PreeditCallback","","",null,null],[17,"XI_FocusOutMask","","",null,null],[17,"XF86XK_AudioRaiseVolume","","",null,null],[17,"XK_Greek_EPSILON","","",null,null],[17,"FocusIn","","",null,null],[17,"XI_HierarchyChanged","","",null,null],[17,"HeightValue","","",null,null],[17,"XNVisiblePosition_0","","",null,null],[17,"XK_Pointer_Drag_Dflt","","",null,null],[17,"XK_Greek_XI","","",null,null],[6,"XkbDeviceLedInfoPtr","","",null,null],[17,"JoinRound","","",null,null],[17,"XK_kana_YO","","",null,null],[17,"XF86XK_Reply","","",null,null],[17,"XK_F7","","",null,null],[17,"SubstructureRedirectMask","","",null,null],[6,"Colormap","","",null,null],[17,"XF86XK_AudioForward","","",null,null],[17,"XK_umacron","","",null,null],[17,"XK_F5","","",null,null],[17,"XI_RawButtonPressMask","","",null,null],[17,"XA_WM_COMMAND","","",null,null],[17,"XK_onefifth","","",null,null],[17,"GXclear","","",null,null],[17,"XK_kana_CHI","","",null,null],[17,"XK_Up","","",null,null],[17,"DefaultBlanking","","",null,null],[17,"XK_Ukranian_i","","",null,null],[17,"XK_emfilledrect","","",null,null],[17,"XK_quoteright","","",null,null],[3,"XCrossingEvent","","",null,null],[12,"type_","","",161,null],[12,"serial","","",161,null],[12,"send_event","","",161,null],[12,"display","","",161,null],[12,"window","","",161,null],[12,"root","","",161,null],[12,"subwindow","","",161,null],[12,"time","","",161,null],[12,"x","","",161,null],[12,"y","","",161,null],[12,"x_root","","",161,null],[12,"y_root","","",161,null],[12,"mode","","",161,null],[12,"detail","","",161,null],[12,"same_screen","","",161,null],[12,"focus","","",161,null],[12,"state","","",161,null],[17,"XF86XK_LaunchC","","",null,null],[17,"NotifyPointer","","",null,null],[17,"CWOverrideRedirect","","",null,null],[17,"XK_Cyrillic_yu","","",null,null],[3,"_XcursorImage","","",null,null],[12,"version","","",162,null],[12,"size","","",162,null],[12,"width","","",162,null],[12,"height","","",162,null],[12,"xhot","","",162,null],[12,"yhot","","",162,null],[12,"delay","","",162,null],[12,"pixels","","",162,null],[17,"XK_e","","",null,null],[17,"XK_Arabic_lam","","",null,null],[17,"XIGrabSuccess","","",null,null],[3,"XGraphicsExposeEvent","","",null,null],[12,"type_","","",163,null],[12,"serial","","",163,null],[12,"send_event","","",163,null],[12,"display","","",163,null],[12,"drawable","","",163,null],[12,"x","","",163,null],[12,"y","","",163,null],[12,"width","","",163,null],[12,"height","","",163,null],[12,"count","","",163,null],[12,"major_code","","",163,null],[12,"minor_code","","",163,null],[17,"XK_lcaron","","",null,null],[17,"VisualRedMaskMask","","",null,null],[17,"XK_Otilde","","",null,null],[3,"Visual","","",null,null],[12,"ext_data","","",164,null],[12,"visualid","","",164,null],[12,"class","","",164,null],[12,"red_mask","","",164,null],[12,"green_mask","","",164,null],[12,"blue_mask","","",164,null],[12,"bits_per_rgb","","",164,null],[12,"map_entries","","",164,null],[17,"XK_checkmark","","",null,null],[17,"GCFont","","",null,null],[3,"XF86VidModeModeInfo","","",null,null],[12,"dotclock","","",165,null],[12,"hdisplay","","",165,null],[12,"hsyncstart","","",165,null],[12,"hsyncend","","",165,null],[12,"htotal","","",165,null],[12,"hskew","","",165,null],[12,"vdisplay","","",165,null],[12,"vsyncstart","","",165,null],[12,"vsyncend","","",165,null],[12,"vtotal","","",165,null],[12,"flags","","",165,null],[12,"privsize","","",165,null],[12,"private","","",165,null],[17,"XK_Greek_omega","","",null,null],[17,"XK_7","","",null,null],[17,"XK_Win_R","","",null,null],[17,"XA_RGB_GREEN_MAP","","",null,null],[17,"XK_hebrew_gimel","","",null,null],[17,"PreferBlanking","","",null,null],[3,"XKeyboardState","","",null,null],[12,"key_click_percent","","",166,null],[12,"bell_percent","","",166,null],[12,"bell_pitch","","",166,null],[12,"bell_duration","","",166,null],[12,"led_mask","","",166,null],[12,"global_auto_repeat","","",166,null],[12,"auto_repeats","","",166,null],[17,"XNCursor","","",null,null],[17,"XK_Cyrillic_VE","","",null,null],[17,"XA_FULL_NAME","","",null,null],[17,"XK_hexagram","","",null,null],[17,"XK_Prev_Virtual_Screen","","",null,null],[3,"XExtensionVersion","","",null,null],[12,"present","","",167,null],[12,"major_version","","",167,null],[12,"minor_version","","",167,null],[3,"_XkbNameChanges","","",null,null],[17,"XNStringConversionCallback","","",null,null],[17,"XI_TouchBeginMask","","",null,null],[17,"NorthGravity","","",null,null],[17,"XK_Pointer_Drag1","","",null,null],[17,"XNResourceClass","","",null,null],[17,"XK_Cyrillic_hardsign","","",null,null],[17,"XK_paragraph","","",null,null],[17,"XF86XK_Reload","","",null,null],[17,"GrabSuccess","","",null,null],[17,"UnmapGravity","","",null,null],[17,"ControlMapIndex","","",null,null],[17,"XK_dcaron","","",null,null],[6,"XcursorBool","","",null,null],[6,"XkbKeyAliasPtr","","",null,null],[17,"XK_ff","","",null,null],[17,"StaticGravity","","",null,null],[17,"XK_L10","","",null,null],[17,"PropertyDelete","","",null,null],[17,"XI_RawButtonReleaseMask","","",null,null],[17,"XK_twofifths","","",null,null],[4,"_XRegion","","",null,null],[17,"XK_Super_R","","",null,null],[17,"SelectionNotify","","",null,null],[17,"DisableScreenSaver","","",null,null],[17,"XIDirectTouch","","",null,null],[17,"XF86XK_Switch_VT_12","","",null,null],[17,"XK_Ukrainian_yi","","",null,null],[17,"XK_infinity","","",null,null],[17,"XK_parenleft","","",null,null],[17,"XkbIndicatorMapNotifyMask","","",null,null],[17,"XK_semivoicedsound","","",null,null],[17,"XNCursor_0","","",null,null],[17,"XI_ButtonReleaseMask","","",null,null],[17,"XK_ediaeresis","","",null,null],[17,"XK_f","","",null,null],[17,"TileShape","","",null,null],[17,"GenericEvent","","",null,null],[17,"XK_Arabic_meem","","",null,null],[17,"FocusOut","","",null,null],[3,"XGravityEvent","","",null,null],[12,"type_","","",168,null],[12,"serial","","",168,null],[12,"send_event","","",168,null],[12,"display","","",168,null],[12,"event","","",168,null],[12,"window","","",168,null],[12,"x","","",168,null],[12,"y","","",168,null],[17,"XK_sacute","","",null,null],[17,"XF86XK_WLAN","","",null,null],[17,"XK_F3","","",null,null],[17,"SetModeInsert","","",null,null],[17,"XK_ballotcross","","",null,null],[17,"GCSubwindowMode","","",null,null],[17,"XA_PIXMAP","","",null,null],[3,"_XkbDesc","","",null,null],[12,"dpy","","",169,null],[12,"flags","","",169,null],[12,"device_spec","","",169,null],[12,"min_key_code","","",169,null],[12,"max_key_code","","",169,null],[12,"ctrls","","",169,null],[12,"server","","",169,null],[12,"map","","",169,null],[12,"indicators","","",169,null],[12,"names","","",169,null],[12,"compat","","",169,null],[12,"geom","","",169,null],[17,"AnyButton","","",null,null],[17,"XK_App","","",null,null],[17,"XK_ellipsis","","",null,null],[3,"XmbTextItem","","",null,null],[12,"chars","","",170,null],[12,"nchars","","",170,null],[12,"delta","","",170,null],[12,"font_set","","",170,null],[17,"XA_X_HEIGHT","","",null,null],[3,"AspectRatio","","",null,null],[12,"x","","",171,null],[12,"y","","",171,null],[17,"XK_Lcedilla","","",null,null],[17,"XNVaNestedList_0","","",null,null],[17,"XK_dead_I","","",null,null],[17,"XK_filledrectbullet","","",null,null],[3,"Xf86vmode","","",null,null],[12,"XF86VidModeAddModeLine","","",172,null],[12,"XF86VidModeDeleteModeLine","","",172,null],[12,"XF86VidModeGetAllModeLines","","",172,null],[12,"XF86VidModeGetDotClocks","","",172,null],[12,"XF86VidModeGetGamma","","",172,null],[12,"XF86VidModeGetGammaRamp","","",172,null],[12,"XF86VidModeGetGammaRampSize","","",172,null],[12,"XF86VidModeGetModeLine","","",172,null],[12,"XF86VidModeGetMonitor","","",172,null],[12,"XF86VidModeGetPermissions","","",172,null],[12,"XF86VidModeGetViewPort","","",172,null],[12,"XF86VidModeLockModeSwitch","","",172,null],[12,"XF86VidModeModModeLine","","",172,null],[12,"XF86VidModeQueryExtension","","",172,null],[12,"XF86VidModeQueryVersion","","",172,null],[12,"XF86VidModeSetClientVersion","","",172,null],[12,"XF86VidModeSetGamma","","",172,null],[12,"XF86VidModeSetGammaRamp","","",172,null],[12,"XF86VidModeSetViewPort","","",172,null],[12,"XF86VidModeSwitchMode","","",172,null],[12,"XF86VidModeSwitchToMode","","",172,null],[12,"XF86VidModeValidateModeLine","","",172,null],[17,"XK_KP_Insert","","",null,null],[17,"VisibilityUnobscured","","",null,null],[17,"XK_Next_Virtual_Screen","","",null,null],[3,"XFeedbackControl","","",null,null],[12,"class","","",173,null],[12,"length","","",173,null],[12,"id","","",173,null],[17,"CWWinGravity","","",null,null],[17,"XK_Macedonia_KJE","","",null,null],[17,"NotifyPointerRoot","","",null,null],[17,"EnterNotify","","",null,null],[17,"XF86XK_ScreenSaver","","",null,null],[17,"XNGeometryCallback","","",null,null],[3,"XIGrabModifiers","","",null,null],[12,"modifiers","","",174,null],[12,"status","","",174,null],[6,"XcmsCCC","","",null,null],[17,"NorthWestGravity","","",null,null],[17,"Mod1MapIndex","","",null,null],[17,"XIAlreadyGrabbed","","",null,null],[17,"XF86XK_LightBulb","","",null,null],[17,"XK_F21","","",null,null],[17,"LockMapIndex","","",null,null],[17,"XK_Greek_upsilon","","",null,null],[17,"XK_kana_O","","",null,null],[17,"XLookupKeySym","","",null,null],[4,"_XOC","","",null,null],[17,"XK_Prior","","",null,null],[17,"XF86XK_Ungrab","","",null,null],[17,"XK_8","","",null,null],[17,"XK_KP_Begin","","",null,null],[3,"_XkbControlsChanges","","",null,null],[17,"CoordModeOrigin","","",null,null],[17,"XkbNumIndicators","","",null,null],[17,"ConfigureNotify","","",null,null],[17,"XK_kana_switch","","",null,null],[17,"XK_ordfeminine","","",null,null],[17,"XNQueryIMValuesList","","",null,null],[17,"XI_EnterMask","","",null,null],[17,"XA_CAP_HEIGHT","","",null,null],[17,"XK_igrave","","",null,null],[3,"XkbAccessXNotifyEvent","","",null,null],[12,"type_","","",175,null],[12,"serial","","",175,null],[12,"send_event","","",175,null],[12,"display","","",175,null],[12,"time","","",175,null],[12,"xkb_type","","",175,null],[12,"device","","",175,null],[12,"detail","","",175,null],[12,"keycode","","",175,null],[12,"sk_delay","","",175,null],[12,"debounce_delay","","",175,null],[6,"XkbGeometrySizesPtr","","",null,null],[17,"XK_F15","","",null,null],[17,"XI_BarrierHit","","",null,null],[17,"XK_Cyrillic_YU","","",null,null],[17,"XA_POINT","","",null,null],[17,"AlreadyGrabbed","","",null,null],[3,"_XkbKeyAliasRec","","",null,null],[12,"real","","",176,null],[12,"alias","","",176,null],[17,"XValue","","",null,null],[17,"XK_dstroke","","",null,null],[17,"XK_dead_abovering","","",null,null],[17,"XK_p","","",null,null],[17,"KBBellDuration","","",null,null],[17,"XK_doubbaselinedot","","",null,null],[3,"XModifierKeymap","","",null,null],[12,"max_keypermod","","",177,null],[12,"modifiermap","","",177,null],[17,"ColormapUninstalled","","",null,null],[17,"XI_RawKeyPressMask","","",null,null],[3,"ImageFns","","",null,null],[12,"create_image","","",178,null],[12,"destroy_image","","",178,null],[12,"get_pixel","","",178,null],[12,"put_pixel","","",178,null],[12,"sub_image","","",178,null],[12,"add_pixel","","",178,null],[3,"XIEnterEvent","","",null,null],[12,"_type","","",179,null],[12,"serial","","",179,null],[12,"send_event","","",179,null],[12,"display","","",179,null],[12,"extension","","",179,null],[12,"evtype","","",179,null],[12,"time","","",179,null],[12,"deviceid","","",179,null],[12,"sourceid","","",179,null],[12,"detail","","",179,null],[12,"root","","",179,null],[12,"event","","",179,null],[12,"child","","",179,null],[12,"root_x","","",179,null],[12,"root_y","","",179,null],[12,"event_x","","",179,null],[12,"event_y","","",179,null],[12,"mode","","",179,null],[12,"focus","","",179,null],[12,"same_screen","","",179,null],[12,"buttons","","",179,null],[12,"mods","","",179,null],[12,"group","","",179,null],[17,"XK_Emacron","","",null,null],[17,"XK_dead_o","","",null,null],[17,"XkbKeyNameLength","","",null,null],[17,"XK_hebrew_taf","","",null,null],[17,"CWBackingStore","","",null,null],[3,"XF86VidModeMonitor","","",null,null],[12,"vendor","","",180,null],[12,"model","","",180,null],[12,"EMPTY","","",180,null],[12,"nhsync","","",180,null],[12,"hsync","","",180,null],[12,"nvsync","","",180,null],[12,"vsync","","",180,null],[17,"BadIDChoice","","",null,null],[17,"XK_ISO_Partial_Space_Right","","",null,null],[17,"XK_Byelorussian_SHORTU","","",null,null],[17,"XK_Lcaron","","",null,null],[17,"XK_Y","","",null,null],[17,"NotifyDetailNone","","",null,null],[3,"XVisualInfo","","",null,null],[12,"visual","","",181,null],[12,"visualid","","",181,null],[12,"screen","","",181,null],[12,"depth","","",181,null],[12,"class","","",181,null],[12,"red_mask","","",181,null],[12,"green_mask","","",181,null],[12,"blue_mask","","",181,null],[12,"colormap_size","","",181,null],[12,"bits_per_rgb","","",181,null],[17,"XK_singlelowquotemark","","",null,null],[3,"XIBarrierReleasePointerInfo","","",null,null],[12,"deviceid","","",182,null],[12,"barrier","","",182,null],[12,"eventid","","",182,null],[17,"XK_Greek_BETA","","",null,null],[17,"XK_hebrew_tet","","",null,null],[17,"XIGrabInvalidTime","","",null,null],[17,"XkbLC_ControlFallback","","",null,null],[17,"XK_Greek_mu","","",null,null],[17,"XF86XK_UWB","","",null,null],[17,"XK_F4","","",null,null],[17,"SetModeDelete","","",null,null],[17,"XK_kana_KA","","",null,null],[6,"XIFocusInEvent","","",null,null],[3,"ClientMessageData","","",null,null],[17,"XK_CH","","",null,null],[17,"XK_Cyrillic_HARDSIGN","","",null,null],[17,"XK_Next","","",null,null],[17,"XNStatusDoneCallback","","",null,null],[17,"XK_9","","",null,null],[17,"JoinBevel","","",null,null],[17,"XK_kana_RA","","",null,null],[17,"XNBackgroundPixmap","","",null,null],[17,"XK_Cyrillic_TE","","",null,null],[17,"XK_dead_A","","",null,null],[3,"_XkbControlsNotify","","",null,null],[17,"XkbNumKbdGroups","","",null,null],[3,"XCreateWindowEvent","","",null,null],[12,"type_","","",183,null],[12,"serial","","",183,null],[12,"send_event","","",183,null],[12,"display","","",183,null],[12,"parent","","",183,null],[12,"window","","",183,null],[12,"x","","",183,null],[12,"y","","",183,null],[12,"width","","",183,null],[12,"height","","",183,null],[12,"border_width","","",183,null],[12,"override_redirect","","",183,null],[17,"XF86XK_SplitScreen","","",null,null],[17,"XK_guillemotleft","","",null,null],[17,"XK_overline","","",null,null],[17,"SyncBoth","","",null,null],[17,"XK_Pointer_Button_Dflt","","",null,null],[6,"XkbIndicatorMapPtr","","",null,null],[17,"XK_R5","","",null,null],[17,"ForgetGravity","","",null,null],[17,"XF86XK_Refresh","","",null,null],[17,"XI_BarrierLeave","","",null,null],[17,"XK_threesuperior","","",null,null],[6,"XkbOverlayKeyPtr","","",null,null],[17,"GrabInvalidTime","","",null,null],[17,"Mod2MapIndex","","",null,null],[17,"XK_nacute","","",null,null],[17,"XK_dead_doubleacute","","",null,null],[17,"XK_q","","",null,null],[17,"KBLed","","",null,null],[17,"XK_onethird","","",null,null],[17,"XIModeAbsolute","","",null,null],[17,"XK_Arabic_damma","","",null,null],[17,"XA_STRIKEOUT_DESCENT","","",null,null],[17,"XF86XK_Switch_VT_9","","",null,null],[17,"VisualGreenMaskMask","","",null,null],[17,"XK_4","","",null,null],[17,"CapButt","","",null,null],[17,"XK_kana_ME","","",null,null],[17,"XK_latincross","","",null,null],[3,"XF86VidModeSyncRange","","",null,null],[12,"hi","","",184,null],[12,"lo","","",184,null],[17,"BadName","","",null,null],[17,"XI_RawButtonPress","","",null,null],[17,"XK_ISO_Set_Margin_Left","","",null,null],[17,"XK_Z","","",null,null],[17,"ExposureMask","","",null,null],[17,"XK_doublelowquotemark","","",null,null],[3,"XIEvent","","",null,null],[12,"_type","","",185,null],[12,"serial","","",185,null],[12,"send_event","","",185,null],[12,"display","","",185,null],[12,"extension","","",185,null],[12,"evtype","","",185,null],[12,"time","","",185,null],[17,"XA_RGB_RED_MAP","","",null,null],[17,"XK_Ecircumflex","","",null,null],[17,"XNQueryICValuesList","","",null,null],[17,"XK_Greek_GAMMA","","",null,null],[17,"XK_Umacron","","",null,null],[17,"XK_Overlay1_Enable","","",null,null],[17,"DestroyAll","","",null,null],[17,"XK_kana_KI","","",null,null],[17,"XF86XK_LaunchD","","",null,null],[17,"XK_Greek_ALPHAaccent","","",null,null],[0,"xkb","","",null,null],[17,"XNStatusDrawCallback","","",null,null],[17,"XF86XK_Copy","","",null,null],[17,"XK_Super_L","","",null,null],[17,"XK_topvertsummationconnector","","",null,null],[17,"XK_kappa","","",null,null],[17,"XK_dead_e","","",null,null],[3,"_XkbDeviceChanges","","",null,null],[17,"VisualIDMask","","",null,null],[3,"_XkbOverlayRow","","",null,null],[17,"XK_cr","","",null,null],[17,"XK_KP_Page_Down","","",null,null],[17,"XK_hebrew_kuf","","",null,null],[17,"AllocNone","","",null,null],[17,"XkbStateNotifyMask","","",null,null],[17,"XINotifyVirtual","","",null,null],[17,"XK_F26","","",null,null],[6,"XFontSet","","",null,null],[17,"XK_Cyrillic_DZHE","","",null,null],[17,"ColormapNotify","","",null,null],[17,"XI_LASTEVENT","","",null,null],[17,"XK_Greek_lamda","","",null,null],[6,"XkbOverlayPtr","","",null,null],[17,"GCLineWidth","","",null,null],[17,"XIGrabModeAsync","","",null,null],[17,"XK_Arabic_beh","","",null,null],[17,"XF86XK_WheelButton","","",null,null],[3,"EventsLoop","glutin::os::unix::x11","",null,null],[3,"EventsLoopProxy","","",null,null],[3,"WindowId","","",null,null],[3,"DeviceId","","",null,null],[3,"Window2","","",null,null],[12,"window","","",186,null],[5,"get_primary_monitor","","",null,{"inputs":[{"name":"arc"}],"output":{"name":"monitorid"}}],[3,"XError","","Error triggered by xlib.",null,null],[12,"description","","",187,null],[12,"error_code","","",187,null],[12,"request_code","","",187,null],[12,"minor_code","","",187,null],[5,"get_available_monitors","","",null,{"inputs":[{"name":"arc"}],"output":{"generics":["monitorid"],"name":"vecdeque"}}],[3,"WindowProxy","","",null,null],[3,"MonitorId","","",null,null],[12,"0","","",188,null],[12,"1","","",188,null],[3,"XConnection","","A connection to an X server.",null,null],[12,"xlib","","",189,null],[12,"xf86vmode","","",189,null],[12,"xcursor","","",189,null],[12,"xinput2","","",189,null],[12,"xlib_xcb","","",189,null],[12,"display","","",189,null],[12,"latest_error","","",189,null],[3,"XWindow","","",null,null],[3,"Window","","",null,null],[12,"x","","",190,null],[4,"XNotSupported","","Error returned if this system doesn't have XLib or can't create an X connection.",null,null],[13,"LibraryOpenError","","Failed to load one or several shared libraries.",191,null],[13,"XOpenDisplayFailed","","Connecting to the X server with `XOpenDisplay` failed.",191,null],[8,"WindowBuilderExt","glutin::os::unix","Additional methods on `WindowBuilder` that are specific to Unix.",null,null],[10,"with_x11_visual","","",192,null],[10,"with_x11_screen","","",192,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"windowbuilder"}}],[8,"WindowExt","","Additional methods on `Window` that are specific to Unix.",null,null],[10,"get_xlib_window","","Returns a pointer to the `Window` object of xlib that is used by this window.",193,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_xlib_display","","Returns a pointer to the `Display` object of xlib that is used by this window.",193,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_xlib_screen_id","","",193,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_xlib_xconnection","","",193,{"inputs":[{"name":"self"}],"output":{"generics":["arc"],"name":"option"}}],[10,"send_xim_spot","","",193,null],[10,"get_xcb_connection","","This function returns the underlying `xcb_connection_t` of an xlib `Display`.",193,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_wayland_surface","","Returns a pointer to the `wl_surface` object of wayland that is used by this window.",193,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_wayland_display","","Returns a pointer to the `wl_display` object of wayland that is used by this window.",193,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[7,"GL_CORE","glutin","The minimum core profile GL context. Useful for getting the minimum required GL version while still running on OSX, which often forbids the compatibility profile features.",null,null],[8,"GlContext","","A trait for types associated with a GL context.",null,null],[10,"make_current","","Sets the context as the current context.",194,{"inputs":[{"name":"self"}],"output":{"generics":["contexterror"],"name":"result"}}],[10,"is_current","","Returns true if this context is the current one in this thread.",194,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_proc_address","","Returns the address of an OpenGL function.",194,null],[10,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",194,{"inputs":[{"name":"self"}],"output":{"generics":["contexterror"],"name":"result"}}],[10,"get_api","","Returns the OpenGL API being used.",194,{"inputs":[{"name":"self"}],"output":{"name":"api"}}],[10,"get_pixel_format","","Returns the pixel format of the main framebuffer of the context.",194,{"inputs":[{"name":"self"}],"output":{"name":"pixelformat"}}],[10,"resize","","Resize the GL context.",194,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"new","","Initializes a new `ContextBuilder` with default values.",19,{"inputs":[],"output":{"name":"self"}}],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",19,{"inputs":[{"name":"self"},{"name":"glrequest"}],"output":{"name":"self"}}],[11,"with_gl_profile","","Sets the desired OpenGL context profile.",19,{"inputs":[{"name":"self"},{"name":"glprofile"}],"output":{"name":"self"}}],[11,"with_gl_debug_flag","","Sets the debug flag for the OpenGL context.",19,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",19,{"inputs":[{"name":"self"},{"name":"robustness"}],"output":{"name":"self"}}],[11,"with_vsync","","Requests that the window has vsync enabled.",19,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"with_shared_lists","","Share the display lists with the given `Context`.",19,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"self"}}],[11,"with_multisampling","","Sets the multisampling level to request. A value of `0` indicates that multisampling must not be enabled.",19,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"self"}}],[11,"with_depth_buffer","","Sets the number of bits in the depth buffer.",19,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"self"}}],[11,"with_stencil_buffer","","Sets the number of bits in the stencil buffer.",19,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"self"}}],[11,"with_pixel_format","","Sets the number of bits in the color buffer.",19,{"inputs":[{"name":"self"},{"name":"u8"},{"name":"u8"}],"output":{"name":"self"}}],[11,"with_stereoscopy","","Request the backend to be stereoscopic.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"with_srgb","","Sets whether sRGB should be enabled on the window.",19,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"new","","Builds the given window along with the associated GL context, returning the pair as a `GlWindow`.",195,{"inputs":[{"name":"windowbuilder"},{"name":"contextbuilder"},{"name":"eventsloop"}],"output":{"generics":["creationerror"],"name":"result"}}],[11,"window","","Borrow the inner `Window`.",195,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"context","","Borrow the inner GL `Context`.",195,{"inputs":[{"name":"self"}],"output":{"name":"context"}}],[11,"make_current","","",196,{"inputs":[{"name":"self"}],"output":{"generics":["contexterror"],"name":"result"}}],[11,"is_current","","",196,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",196,null],[11,"swap_buffers","","",196,{"inputs":[{"name":"self"}],"output":{"generics":["contexterror"],"name":"result"}}],[11,"get_api","","",196,{"inputs":[{"name":"self"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",196,{"inputs":[{"name":"self"}],"output":{"name":"pixelformat"}}],[11,"resize","","",196,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"make_current","","",195,{"inputs":[{"name":"self"}],"output":{"generics":["contexterror"],"name":"result"}}],[11,"is_current","","",195,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",195,null],[11,"swap_buffers","","",195,{"inputs":[{"name":"self"}],"output":{"generics":["contexterror"],"name":"result"}}],[11,"get_api","","",195,{"inputs":[{"name":"self"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",195,{"inputs":[{"name":"self"}],"output":{"name":"pixelformat"}}],[11,"resize","","",195,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"deref","","",195,null],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"description","","",23,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",23,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"from","","",23,{"inputs":[{"name":"windowcreationerror"}],"output":{"name":"self"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"description","","",24,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"api"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"api"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"glprofile"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"glprofile"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"glrequest"}}],[11,"to_gl_version","","Extract the desktop GL version, if any.",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"robustness"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"robustness"}],"output":{"name":"bool"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"releasebehavior"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"releasebehavior"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"pixelformat"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"pixelformatrequirements"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",21,{"inputs":[],"output":{"name":"pixelformatrequirements"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"glattributes"}}],[11,"map_sharing","","Turns the `sharing` parameter into another type by calling a closure.",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"glattributes"}}],[11,"default","","",22,{"inputs":[],"output":{"name":"glattributes"}}],[11,"fmt","glutin::os::unix::x11::ffi","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",197,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",166,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",178,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",167,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",159,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",198,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",149,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",185,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",165,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",180,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",177,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",179,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",147,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",142,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",168,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",164,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",169,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",138,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",139,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",163,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",141,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",183,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",170,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",151,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",174,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",160,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",155,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",181,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",156,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",199,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",153,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"default","","",160,{"inputs":[],"output":{"name":"xirawevent"}}],[11,"default","","",45,{"inputs":[],"output":{"name":"xitouchclassinfo"}}],[11,"default","","",89,{"inputs":[],"output":{"name":"xianyhierarchychangeinfo"}}],[11,"default","","",55,{"inputs":[],"output":{"name":"xihierarchyinfo"}}],[11,"default","","",174,{"inputs":[],"output":{"name":"xigrabmodifiers"}}],[11,"default","","",59,{"inputs":[],"output":{"name":"xidevicechangedevent"}}],[11,"default","","",126,{"inputs":[],"output":{"name":"xivaluatorstate"}}],[11,"default","","",31,{"inputs":[],"output":{"name":"xieventmask"}}],[11,"default","","",143,{"inputs":[],"output":{"name":"xianyclassinfo"}}],[11,"default","","",83,{"inputs":[],"output":{"name":"xideviceinfo"}}],[11,"default","","",115,{"inputs":[],"output":{"name":"xihierarchyevent"}}],[11,"default","","",74,{"inputs":[],"output":{"name":"xivaluatorclassinfo"}}],[11,"default","","",65,{"inputs":[],"output":{"name":"xiremovemasterinfo"}}],[11,"default","","",61,{"inputs":[],"output":{"name":"xideviceevent"}}],[11,"default","","",106,{"inputs":[],"output":{"name":"xibuttonstate"}}],[11,"default","","",129,{"inputs":[],"output":{"name":"xibuttonclassinfo"}}],[11,"default","","",134,{"inputs":[],"output":{"name":"xikeyclassinfo"}}],[11,"default","","",182,{"inputs":[],"output":{"name":"xibarrierreleasepointerinfo"}}],[11,"default","","",88,{"inputs":[],"output":{"name":"xiaddmasterinfo"}}],[11,"default","","",95,{"inputs":[],"output":{"name":"ximodifierstate"}}],[11,"default","","",42,{"inputs":[],"output":{"name":"xitouchownershipevent"}}],[11,"default","","",70,{"inputs":[],"output":{"name":"xiattachslaveinfo"}}],[11,"default","","",48,{"inputs":[],"output":{"name":"xipropertyevent"}}],[11,"default","","",197,{"inputs":[],"output":{"name":"clientmessagedata"}}],[11,"default","","",147,{"inputs":[],"output":{"name":"xiscrollclassinfo"}}],[11,"default","","",73,{"inputs":[],"output":{"name":"xidetachslaveinfo"}}],[11,"default","","",179,{"inputs":[],"output":{"name":"xienterevent"}}],[11,"default","","",185,{"inputs":[],"output":{"name":"xievent"}}],[11,"default","","",94,{"inputs":[],"output":{"name":"xibarrierevent"}}],[11,"eq","","",117,{"inputs":[{"name":"self"},{"name":"xfontstruct"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"self"},{"name":"xfontstruct"}],"output":{"name":"bool"}}],[11,"eq","","",76,{"inputs":[{"name":"self"},{"name":"xomcharsetlist"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"self"},{"name":"xomcharsetlist"}],"output":{"name":"bool"}}],[11,"eq","","",120,{"inputs":[{"name":"self"},{"name":"xresizerequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"self"},{"name":"xresizerequestevent"}],"output":{"name":"bool"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"xanyevent"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"xanyevent"}],"output":{"name":"bool"}}],[11,"eq","","",136,{"inputs":[{"name":"self"},{"name":"xselectionrequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"self"},{"name":"xselectionrequestevent"}],"output":{"name":"bool"}}],[11,"eq","","",153,{"inputs":[{"name":"self"},{"name":"ximage"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"self"},{"name":"ximage"}],"output":{"name":"bool"}}],[11,"eq","","",123,{"inputs":[{"name":"self"},{"name":"xtextitem"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"self"},{"name":"xtextitem"}],"output":{"name":"bool"}}],[11,"eq","","",145,{"inputs":[{"name":"self"},{"name":"xhostaddress"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"self"},{"name":"xhostaddress"}],"output":{"name":"bool"}}],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"xfontprop"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"self"},{"name":"xfontprop"}],"output":{"name":"bool"}}],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"xnoexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"self"},{"name":"xnoexposeevent"}],"output":{"name":"bool"}}],[11,"eq","","",165,{"inputs":[{"name":"self"},{"name":"xf86vidmodemodeinfo"}],"output":{"name":"bool"}}],[11,"ne","","",165,{"inputs":[{"name":"self"},{"name":"xf86vidmodemodeinfo"}],"output":{"name":"bool"}}],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"_xkbnamesnotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"self"},{"name":"_xkbnamesnotifyevent"}],"output":{"name":"bool"}}],[11,"eq","","",183,{"inputs":[{"name":"self"},{"name":"xcreatewindowevent"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"self"},{"name":"xcreatewindowevent"}],"output":{"name":"bool"}}],[11,"eq","","",92,{"inputs":[{"name":"self"},{"name":"xsegment"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"self"},{"name":"xsegment"}],"output":{"name":"bool"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"xinputclass"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"self"},{"name":"xinputclass"}],"output":{"name":"bool"}}],[11,"eq","","",197,{"inputs":[{"name":"self"},{"name":"clientmessagedata"}],"output":{"name":"bool"}}],[11,"ne","","",197,{"inputs":[{"name":"self"},{"name":"clientmessagedata"}],"output":{"name":"bool"}}],[11,"eq","","",177,{"inputs":[{"name":"self"},{"name":"xmodifierkeymap"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"self"},{"name":"xmodifierkeymap"}],"output":{"name":"bool"}}],[11,"eq","","",75,{"inputs":[{"name":"self"},{"name":"xarc"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"self"},{"name":"xarc"}],"output":{"name":"bool"}}],[11,"eq","","",167,{"inputs":[{"name":"self"},{"name":"xextensionversion"}],"output":{"name":"bool"}}],[11,"ne","","",167,{"inputs":[{"name":"self"},{"name":"xextensionversion"}],"output":{"name":"bool"}}],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"xcharstruct"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"self"},{"name":"xcharstruct"}],"output":{"name":"bool"}}],[11,"eq","","",161,{"inputs":[{"name":"self"},{"name":"xcrossingevent"}],"output":{"name":"bool"}}],[11,"ne","","",161,{"inputs":[{"name":"self"},{"name":"xcrossingevent"}],"output":{"name":"bool"}}],[11,"eq","","",139,{"inputs":[{"name":"self"},{"name":"xunmapevent"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"self"},{"name":"xunmapevent"}],"output":{"name":"bool"}}],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"xkbstatenotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"self"},{"name":"xkbstatenotifyevent"}],"output":{"name":"bool"}}],[11,"eq","","",66,{"inputs":[{"name":"self"},{"name":"xmaprequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"self"},{"name":"xmaprequestevent"}],"output":{"name":"bool"}}],[11,"eq","","",133,{"inputs":[{"name":"self"},{"name":"xkeyboardcontrol"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"self"},{"name":"xkeyboardcontrol"}],"output":{"name":"bool"}}],[11,"eq","","",90,{"inputs":[{"name":"self"},{"name":"xcirculateevent"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"self"},{"name":"xcirculateevent"}],"output":{"name":"bool"}}],[11,"eq","","",144,{"inputs":[{"name":"self"},{"name":"xvisibilityevent"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"self"},{"name":"xvisibilityevent"}],"output":{"name":"bool"}}],[11,"eq","","",107,{"inputs":[{"name":"self"},{"name":"xsizehints"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"self"},{"name":"xsizehints"}],"output":{"name":"bool"}}],[11,"eq","","",138,{"inputs":[{"name":"self"},{"name":"xcolor"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"self"},{"name":"xcolor"}],"output":{"name":"bool"}}],[11,"eq","","",112,{"inputs":[{"name":"self"},{"name":"xkbbellnotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"self"},{"name":"xkbbellnotifyevent"}],"output":{"name":"bool"}}],[11,"eq","","",130,{"inputs":[{"name":"self"},{"name":"xkbcompatmapnotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"self"},{"name":"xkbcompatmapnotifyevent"}],"output":{"name":"bool"}}],[11,"eq","","",102,{"inputs":[{"name":"self"},{"name":"xtextproperty"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"self"},{"name":"xtextproperty"}],"output":{"name":"bool"}}],[11,"eq","","",163,{"inputs":[{"name":"self"},{"name":"xgraphicsexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"self"},{"name":"xgraphicsexposeevent"}],"output":{"name":"bool"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"xfocuschangeevent"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"self"},{"name":"xfocuschangeevent"}],"output":{"name":"bool"}}],[11,"eq","","",119,{"inputs":[{"name":"self"},{"name":"xcolormapevent"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"self"},{"name":"xcolormapevent"}],"output":{"name":"bool"}}],[11,"eq","","",127,{"inputs":[{"name":"self"},{"name":"xselectionclearevent"}],"output":{"name":"bool"}}],[11,"ne","","",127,{"inputs":[{"name":"self"},{"name":"xselectionclearevent"}],"output":{"name":"bool"}}],[11,"eq","","",152,{"inputs":[{"name":"self"},{"name":"xreparentevent"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"self"},{"name":"xreparentevent"}],"output":{"name":"bool"}}],[11,"eq","","",114,{"inputs":[{"name":"self"},{"name":"xkbactionmessageevent"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"self"},{"name":"xkbactionmessageevent"}],"output":{"name":"bool"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"xdevicestate"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"self"},{"name":"xdevicestate"}],"output":{"name":"bool"}}],[11,"eq","","",140,{"inputs":[{"name":"self"},{"name":"xwindowchanges"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"self"},{"name":"xwindowchanges"}],"output":{"name":"bool"}}],[11,"eq","","",122,{"inputs":[{"name":"self"},{"name":"xgcvalues"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"self"},{"name":"xgcvalues"}],"output":{"name":"bool"}}],[11,"eq","","",135,{"inputs":[{"name":"self"},{"name":"xexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"self"},{"name":"xexposeevent"}],"output":{"name":"bool"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"_xkbkeynamerec"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"self"},{"name":"_xkbkeynamerec"}],"output":{"name":"bool"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"xkeymapevent"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"xkeymapevent"}],"output":{"name":"bool"}}],[11,"eq","","",168,{"inputs":[{"name":"self"},{"name":"xgravityevent"}],"output":{"name":"bool"}}],[11,"ne","","",168,{"inputs":[{"name":"self"},{"name":"xgravityevent"}],"output":{"name":"bool"}}],[11,"eq","","",198,{"inputs":[{"name":"self"},{"name":"xkbevent"}],"output":{"name":"bool"}}],[11,"ne","","",198,{"inputs":[{"name":"self"},{"name":"xkbevent"}],"output":{"name":"bool"}}],[11,"eq","","",175,{"inputs":[{"name":"self"},{"name":"xkbaccessxnotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"self"},{"name":"xkbaccessxnotifyevent"}],"output":{"name":"bool"}}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"eq","","",81,{"inputs":[{"name":"self"},{"name":"xcomposestatus"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"self"},{"name":"xcomposestatus"}],"output":{"name":"bool"}}],[11,"eq","","",173,{"inputs":[{"name":"self"},{"name":"xfeedbackcontrol"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"self"},{"name":"xfeedbackcontrol"}],"output":{"name":"bool"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"screen"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"screen"}],"output":{"name":"bool"}}],[11,"eq","","",170,{"inputs":[{"name":"self"},{"name":"xmbtextitem"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"self"},{"name":"xmbtextitem"}],"output":{"name":"bool"}}],[11,"eq","","",149,{"inputs":[{"name":"self"},{"name":"xiconsize"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"self"},{"name":"xiconsize"}],"output":{"name":"bool"}}],[11,"eq","","",104,{"inputs":[{"name":"self"},{"name":"_xkbcontrolsnotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"self"},{"name":"_xkbcontrolsnotifyevent"}],"output":{"name":"bool"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"xmapevent"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"self"},{"name":"xmapevent"}],"output":{"name":"bool"}}],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"xkbanyevent"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"self"},{"name":"xkbanyevent"}],"output":{"name":"bool"}}],[11,"eq","","",156,{"inputs":[{"name":"self"},{"name":"_xkbnamesrec"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"self"},{"name":"_xkbnamesrec"}],"output":{"name":"bool"}}],[11,"eq","","",124,{"inputs":[{"name":"self"},{"name":"xdeviceinfo"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"self"},{"name":"xdeviceinfo"}],"output":{"name":"bool"}}],[11,"eq","","",151,{"inputs":[{"name":"self"},{"name":"xdevice"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"self"},{"name":"xdevice"}],"output":{"name":"bool"}}],[11,"eq","","",164,{"inputs":[{"name":"self"},{"name":"visual"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"self"},{"name":"visual"}],"output":{"name":"bool"}}],[11,"eq","","",159,{"inputs":[{"name":"self"},{"name":"screenformat"}],"output":{"name":"bool"}}],[11,"ne","","",159,{"inputs":[{"name":"self"},{"name":"screenformat"}],"output":{"name":"bool"}}],[11,"eq","","",142,{"inputs":[{"name":"self"},{"name":"xcirculaterequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"self"},{"name":"xcirculaterequestevent"}],"output":{"name":"bool"}}],[11,"eq","","",171,{"inputs":[{"name":"self"},{"name":"aspectratio"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"self"},{"name":"aspectratio"}],"output":{"name":"bool"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"xdevicetimecoord"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"self"},{"name":"xdevicetimecoord"}],"output":{"name":"bool"}}],[11,"eq","","",132,{"inputs":[{"name":"self"},{"name":"xdestroywindowevent"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"self"},{"name":"xdestroywindowevent"}],"output":{"name":"bool"}}],[11,"eq","","",91,{"inputs":[{"name":"self"},{"name":"xclientmessageevent"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"self"},{"name":"xclientmessageevent"}],"output":{"name":"bool"}}],[11,"eq","","",148,{"inputs":[{"name":"self"},{"name":"_xkbextensiondevicenotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"self"},{"name":"_xkbextensiondevicenotifyevent"}],"output":{"name":"bool"}}],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"xkbindicatornotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"self"},{"name":"xkbindicatornotifyevent"}],"output":{"name":"bool"}}],[11,"eq","","",154,{"inputs":[{"name":"self"},{"name":"xtimecoord"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"self"},{"name":"xtimecoord"}],"output":{"name":"bool"}}],[11,"eq","","",108,{"inputs":[{"name":"self"},{"name":"xclasshint"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"self"},{"name":"xclasshint"}],"output":{"name":"bool"}}],[11,"eq","","",69,{"inputs":[{"name":"self"},{"name":"xstandardcolormap"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"self"},{"name":"xstandardcolormap"}],"output":{"name":"bool"}}],[11,"eq","","",137,{"inputs":[{"name":"self"},{"name":"xwindowattributes"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"self"},{"name":"xwindowattributes"}],"output":{"name":"bool"}}],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"xgenericeventcookie"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"self"},{"name":"xgenericeventcookie"}],"output":{"name":"bool"}}],[11,"eq","","",78,{"inputs":[{"name":"self"},{"name":"xfeedbackstate"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"self"},{"name":"xfeedbackstate"}],"output":{"name":"bool"}}],[11,"eq","","",181,{"inputs":[{"name":"self"},{"name":"xvisualinfo"}],"output":{"name":"bool"}}],[11,"ne","","",181,{"inputs":[{"name":"self"},{"name":"xvisualinfo"}],"output":{"name":"bool"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"xkeyevent"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"self"},{"name":"xkeyevent"}],"output":{"name":"bool"}}],[11,"eq","","",169,{"inputs":[{"name":"self"},{"name":"_xkbdesc"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"self"},{"name":"_xkbdesc"}],"output":{"name":"bool"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"_xkbmapnotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"_xkbmapnotifyevent"}],"output":{"name":"bool"}}],[11,"eq","","",178,{"inputs":[{"name":"self"},{"name":"imagefns"}],"output":{"name":"bool"}}],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"xrmvalue"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"self"},{"name":"xrmvalue"}],"output":{"name":"bool"}}],[11,"eq","","",166,{"inputs":[{"name":"self"},{"name":"xkeyboardstate"}],"output":{"name":"bool"}}],[11,"ne","","",166,{"inputs":[{"name":"self"},{"name":"xkeyboardstate"}],"output":{"name":"bool"}}],[11,"eq","","",111,{"inputs":[{"name":"self"},{"name":"xbuttonevent"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"self"},{"name":"xbuttonevent"}],"output":{"name":"bool"}}],[11,"eq","","",155,{"inputs":[{"name":"self"},{"name":"xdevicecontrol"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"self"},{"name":"xdevicecontrol"}],"output":{"name":"bool"}}],[11,"eq","","",118,{"inputs":[{"name":"self"},{"name":"xconfigureevent"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"self"},{"name":"xconfigureevent"}],"output":{"name":"bool"}}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"xinputclassinfo"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"self"},{"name":"xinputclassinfo"}],"output":{"name":"bool"}}],[11,"eq","","",84,{"inputs":[{"name":"self"},{"name":"xmotionevent"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"self"},{"name":"xmotionevent"}],"output":{"name":"bool"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"xchar2b"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"self"},{"name":"xchar2b"}],"output":{"name":"bool"}}],[11,"eq","","",116,{"inputs":[{"name":"self"},{"name":"xconfigurerequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"self"},{"name":"xconfigurerequestevent"}],"output":{"name":"bool"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"xsetwindowattributes"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"self"},{"name":"xsetwindowattributes"}],"output":{"name":"bool"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"xwmhints"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"self"},{"name":"xwmhints"}],"output":{"name":"bool"}}],[11,"eq","","",109,{"inputs":[{"name":"self"},{"name":"xfontsetextents"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"self"},{"name":"xfontsetextents"}],"output":{"name":"bool"}}],[11,"eq","","",158,{"inputs":[{"name":"self"},{"name":"xwctextitem"}],"output":{"name":"bool"}}],[11,"ne","","",158,{"inputs":[{"name":"self"},{"name":"xwctextitem"}],"output":{"name":"bool"}}],[11,"eq","","",77,{"inputs":[{"name":"self"},{"name":"xerrorevent"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"self"},{"name":"xerrorevent"}],"output":{"name":"bool"}}],[11,"eq","","",113,{"inputs":[{"name":"self"},{"name":"xselectionevent"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"self"},{"name":"xselectionevent"}],"output":{"name":"bool"}}],[11,"eq","","",125,{"inputs":[{"name":"self"},{"name":"xpoint"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"self"},{"name":"xpoint"}],"output":{"name":"bool"}}],[11,"eq","","",100,{"inputs":[{"name":"self"},{"name":"xpropertyevent"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"self"},{"name":"xpropertyevent"}],"output":{"name":"bool"}}],[11,"eq","","",68,{"inputs":[{"name":"self"},{"name":"xrectangle"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"self"},{"name":"xrectangle"}],"output":{"name":"bool"}}],[11,"eq","","",128,{"inputs":[{"name":"self"},{"name":"xtextitem16"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"self"},{"name":"xtextitem16"}],"output":{"name":"bool"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"xmappingevent"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"self"},{"name":"xmappingevent"}],"output":{"name":"bool"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"xpixmapformatvalues"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"self"},{"name":"xpixmapformatvalues"}],"output":{"name":"bool"}}],[11,"eq","","",176,{"inputs":[{"name":"self"},{"name":"_xkbkeyaliasrec"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"self"},{"name":"_xkbkeyaliasrec"}],"output":{"name":"bool"}}],[11,"eq","","",85,{"inputs":[{"name":"self"},{"name":"xextcodes"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"self"},{"name":"xextcodes"}],"output":{"name":"bool"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"xrmoptiondescrec"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"xrmoptiondescrec"}],"output":{"name":"bool"}}],[11,"eq","","",71,{"inputs":[{"name":"self"},{"name":"xkbnewkeyboardnotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"self"},{"name":"xkbnewkeyboardnotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",199,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","","",132,{"inputs":[{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"from","","",161,{"inputs":[{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"from","","",157,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xrrnotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",119,{"inputs":[{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"from","","",157,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",90,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"from","","",157,{"inputs":[{"name":"xrrscreenchangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",135,{"inputs":[{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"from","","",157,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",111,{"inputs":[{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"from","","",139,{"inputs":[{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"from","","",43,{"inputs":[{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"from","","",157,{"inputs":[{"name":"xrrnotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",119,{"inputs":[{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"from","","",103,{"inputs":[{"name":"xevent"}],"output":{"name":"xgenericeventcookie"}}],[11,"from","","",163,{"inputs":[{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"from","","",50,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"from","","",157,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",84,{"inputs":[{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"from","","",197,null],[11,"from","","",157,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",60,{"inputs":[{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"from","","",157,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",33,{"inputs":[{"name":"xevent"}],"output":{"name":"xf86vidmodenotifyevent"}}],[11,"from","","",183,{"inputs":[{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"from","","",152,{"inputs":[{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"from","","",157,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",118,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"from","","",157,{"inputs":[{"name":"xrrcrtcchangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",168,{"inputs":[{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"from","","",157,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",144,{"inputs":[{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"from","","",157,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",91,{"inputs":[{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"from","","",157,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",142,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"from","","",157,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",66,{"inputs":[{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"from","","",157,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",118,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"from","","",127,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"from","","",157,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",96,{"inputs":[{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"from","","",157,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",77,{"inputs":[{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"from","","",157,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",33,{"inputs":[{"name":"xevent"}],"output":{"name":"xf86vidmodenotifyevent"}}],[11,"from","","",111,{"inputs":[{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"from","","",183,{"inputs":[{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"from","","",57,{"inputs":[{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"from","","",157,{"inputs":[{"name":"xrroutputchangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",91,{"inputs":[{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"from","","",157,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",139,{"inputs":[{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"from","","",157,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",142,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"from","","",157,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xscreensavernotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",132,{"inputs":[{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"from","","",157,{"inputs":[{"name":"xrrproviderchangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",161,{"inputs":[{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"from","","",120,{"inputs":[{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"from","","",168,{"inputs":[{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"from","","",157,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xf86vidmodenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",197,null],[11,"from","","",157,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",50,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"from","","",157,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",32,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"from","","",116,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"from","","",113,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"from","","",152,{"inputs":[{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"from","","",157,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",135,{"inputs":[{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"from","","",157,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",60,{"inputs":[{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"from","","",113,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"from","","",157,{"inputs":[{"name":"xrroutputpropertynotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",43,{"inputs":[{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"from","","",197,null],[11,"from","","",197,null],[11,"from","","",157,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",136,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"from","","",157,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xrrproviderpropertynotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xf86vidmodenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"from","","",96,{"inputs":[{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"from","","",127,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"from","","",157,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",77,{"inputs":[{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"from","","",144,{"inputs":[{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"from","","",157,{"inputs":[{"name":"xrrresourcechangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",136,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"from","","",157,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",84,{"inputs":[{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"from","","",157,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xrrproviderchangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xrrcrtcchangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xrrscreenchangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xevent"}}],[11,"from","","",32,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"from","","",120,{"inputs":[{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"from","","",197,null],[11,"from","","",100,{"inputs":[{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"from","","",157,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xrroutputpropertynotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",49,{"inputs":[{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"from","","",103,{"inputs":[{"name":"xevent"}],"output":{"name":"xgenericeventcookie"}}],[11,"from","","",197,null],[11,"from","","",157,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xscreensavernotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xrrresourcechangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",90,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"from","","",157,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",157,{"inputs":[{"name":"xrrproviderpropertynotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",66,{"inputs":[{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"from","","",157,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",116,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"from","","",49,{"inputs":[{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"from","","",163,{"inputs":[{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"from","","",57,{"inputs":[{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"from","","",157,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",100,{"inputs":[{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"from","","",157,{"inputs":[{"name":"xrroutputchangenotifyevent"}],"output":{"name":"xevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xvisibilityevent"}}],[11,"as_ref","","",197,null],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xselectionrequestevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xrrcrtcchangenotifyevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xgenericeventcookie"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xrrresourcechangenotifyevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xexposeevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xfocuschangeevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xgravityevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xmaprequestevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xconfigurerequestevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xcirculaterequestevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xdestroywindowevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xresizerequestevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xmapevent"}}],[11,"as_ref","","",197,null],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xcreatewindowevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xcrossingevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xunmapevent"}}],[11,"as_ref","","",197,null],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xconfigureevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xrroutputpropertynotifyevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xpropertyevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xmappingevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xkeyevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xscreensavernotifyevent"}}],[11,"as_ref","","",197,null],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xanyevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xcolormapevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xrrnotifyevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xrrproviderpropertynotifyevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xselectionclearevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xkeymapevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xmotionevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xreparentevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xbuttonevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xrrproviderchangenotifyevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xrrscreenchangenotifyevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xclientmessageevent"}}],[11,"as_ref","","",197,null],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xf86vidmodenotifyevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xrroutputchangenotifyevent"}}],[11,"as_ref","","",197,null],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xnoexposeevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xcirculateevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xselectionevent"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xerrorevent"}}],[11,"description","","",199,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"as_mut","","",197,null],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xreparentevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xresizerequestevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xrrcrtcchangenotifyevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xrroutputpropertynotifyevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xfocuschangeevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xdestroywindowevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xconfigurerequestevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xrrproviderchangenotifyevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xmotionevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xcrossingevent"}}],[11,"as_mut","","",197,null],[11,"as_mut","","",197,null],[11,"as_mut","","",197,null],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xf86vidmodenotifyevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xrrscreenchangenotifyevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xselectionclearevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xanyevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xcirculaterequestevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xcreatewindowevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xrrresourcechangenotifyevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xmaprequestevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xcirculateevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xgravityevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xselectionevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xmapevent"}}],[11,"as_mut","","",197,null],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xgenericeventcookie"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xmappingevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xcolormapevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xpropertyevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xexposeevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xconfigureevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xkeyevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xrrproviderpropertynotifyevent"}}],[11,"as_mut","","",197,null],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xunmapevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xnoexposeevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xselectionrequestevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xbuttonevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xrrnotifyevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xclientmessageevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xscreensavernotifyevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xrroutputchangenotifyevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xvisibilityevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xerrorevent"}}],[11,"as_mut","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xkeymapevent"}}],[11,"clone","","",116,{"inputs":[{"name":"self"}],"output":{"name":"xconfigurerequestevent"}}],[11,"clone","","",198,{"inputs":[{"name":"self"}],"output":{"name":"xkbevent"}}],[11,"clone","","",120,{"inputs":[{"name":"self"}],"output":{"name":"xresizerequestevent"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"xcharstruct"}}],[11,"clone","","",140,{"inputs":[{"name":"self"}],"output":{"name":"xwindowchanges"}}],[11,"clone","","",113,{"inputs":[{"name":"self"}],"output":{"name":"xselectionevent"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"xkbnewkeyboardnotifyevent"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"xipropertyevent"}}],[11,"clone","","",148,{"inputs":[{"name":"self"}],"output":{"name":"_xkbextensiondevicenotifyevent"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"xclientmessageevent"}}],[11,"clone","","",137,{"inputs":[{"name":"self"}],"output":{"name":"xwindowattributes"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"xclasshint"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"xideviceevent"}}],[11,"clone","","",147,{"inputs":[{"name":"self"}],"output":{"name":"xiscrollclassinfo"}}],[11,"clone","","",129,{"inputs":[{"name":"self"}],"output":{"name":"xibuttonclassinfo"}}],[11,"clone","","",127,{"inputs":[{"name":"self"}],"output":{"name":"xselectionclearevent"}}],[11,"clone","","",131,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorfile"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"xextcodes"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"xiattachslaveinfo"}}],[11,"clone","","",136,{"inputs":[{"name":"self"}],"output":{"name":"xselectionrequestevent"}}],[11,"clone","","",170,{"inputs":[{"name":"self"}],"output":{"name":"xmbtextitem"}}],[11,"clone","","",135,{"inputs":[{"name":"self"}],"output":{"name":"xexposeevent"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"xmaprequestevent"}}],[11,"clone","","",169,{"inputs":[{"name":"self"}],"output":{"name":"_xkbdesc"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"xrectangle"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"xsizehints"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"xanyevent"}}],[11,"clone","","",138,{"inputs":[{"name":"self"}],"output":{"name":"xcolor"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"xmapevent"}}],[11,"clone","","",139,{"inputs":[{"name":"self"}],"output":{"name":"xunmapevent"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"xcomposestatus"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"xdevicestate"}}],[11,"clone","","",149,{"inputs":[{"name":"self"}],"output":{"name":"xiconsize"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"xianyhierarchychangeinfo"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"xinputclassinfo"}}],[11,"clone","","",162,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorimage"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"_xcursoranimate"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"xrmvalue"}}],[11,"clone","","",173,{"inputs":[{"name":"self"}],"output":{"name":"xfeedbackcontrol"}}],[11,"clone","","",153,{"inputs":[{"name":"self"}],"output":{"name":"ximage"}}],[11,"clone","","",166,{"inputs":[{"name":"self"}],"output":{"name":"xkeyboardstate"}}],[11,"clone","","",197,{"inputs":[{"name":"self"}],"output":{"name":"clientmessagedata"}}],[11,"clone","","",125,{"inputs":[{"name":"self"}],"output":{"name":"xpoint"}}],[11,"clone","","",117,{"inputs":[{"name":"self"}],"output":{"name":"xfontstruct"}}],[11,"clone","","",156,{"inputs":[{"name":"self"}],"output":{"name":"_xkbnamesrec"}}],[11,"clone","","",171,{"inputs":[{"name":"self"}],"output":{"name":"aspectratio"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"xibarrierevent"}}],[11,"clone","","",152,{"inputs":[{"name":"self"}],"output":{"name":"xreparentevent"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"xkbstatenotifyevent"}}],[11,"clone","","",145,{"inputs":[{"name":"self"}],"output":{"name":"xhostaddress"}}],[11,"clone","","",183,{"inputs":[{"name":"self"}],"output":{"name":"xcreatewindowevent"}}],[11,"clone","","",158,{"inputs":[{"name":"self"}],"output":{"name":"xwctextitem"}}],[11,"clone","","",175,{"inputs":[{"name":"self"}],"output":{"name":"xkbaccessxnotifyevent"}}],[11,"clone","","",146,{"inputs":[{"name":"self"}],"output":{"name":"xf86vidmodegamma"}}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"xtextproperty"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"xihierarchyinfo"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"xiaddmasterinfo"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorcomment"}}],[11,"clone","","",128,{"inputs":[{"name":"self"}],"output":{"name":"xtextitem16"}}],[11,"clone","","",199,{"inputs":[{"name":"self"}],"output":{"name":"openerror"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"xfocuschangeevent"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"_xkbnamesnotifyevent"}}],[11,"clone","","",165,{"inputs":[{"name":"self"}],"output":{"name":"xf86vidmodemodeinfo"}}],[11,"clone","","",142,{"inputs":[{"name":"self"}],"output":{"name":"xcirculaterequestevent"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"_xkbkeynamerec"}}],[11,"clone","","",122,{"inputs":[{"name":"self"}],"output":{"name":"xgcvalues"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"xfontprop"}}],[11,"clone","","",176,{"inputs":[{"name":"self"}],"output":{"name":"_xkbkeyaliasrec"}}],[11,"clone","","",161,{"inputs":[{"name":"self"}],"output":{"name":"xcrossingevent"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"xnoexposeevent"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"xkbanyevent"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"xidevicechangedevent"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"screen"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorcomments"}}],[11,"clone","","",114,{"inputs":[{"name":"self"}],"output":{"name":"xkbactionmessageevent"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"xerrorevent"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"xidetachslaveinfo"}}],[11,"clone","","",167,{"inputs":[{"name":"self"}],"output":{"name":"xextensionversion"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorcursors"}}],[11,"clone","","",159,{"inputs":[{"name":"self"}],"output":{"name":"screenformat"}}],[11,"clone","","",178,{"inputs":[{"name":"self"}],"output":{"name":"imagefns"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"xmotionevent"}}],[11,"clone","","",112,{"inputs":[{"name":"self"}],"output":{"name":"xkbbellnotifyevent"}}],[11,"clone","","",126,{"inputs":[{"name":"self"}],"output":{"name":"xivaluatorstate"}}],[11,"clone","","",182,{"inputs":[{"name":"self"}],"output":{"name":"xibarrierreleasepointerinfo"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"depth"}}],[11,"clone","","",132,{"inputs":[{"name":"self"}],"output":{"name":"xdestroywindowevent"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"xmappingevent"}}],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"xpropertyevent"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"xrmoptiondescrec"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"xibuttonstate"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"xkbindicatornotifyevent"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"xpixmapformatvalues"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"xstandardcolormap"}}],[11,"clone","","",144,{"inputs":[{"name":"self"}],"output":{"name":"xvisibilityevent"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"xideviceinfo"}}],[11,"clone","","",141,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorimages"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"xinputclass"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"xgenericeventcookie"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"xfeedbackstate"}}],[11,"clone","","",155,{"inputs":[{"name":"self"}],"output":{"name":"xdevicecontrol"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"xivaluatorclassinfo"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"xbuttonevent"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"xitouchclassinfo"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"xiremovemasterinfo"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"xcirculateevent"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"xchar2b"}}],[11,"clone","","",119,{"inputs":[{"name":"self"}],"output":{"name":"xcolormapevent"}}],[11,"clone","","",123,{"inputs":[{"name":"self"}],"output":{"name":"xtextitem"}}],[11,"clone","","",150,{"inputs":[{"name":"self"}],"output":{"name":"xf86vidmodemodeline"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"xomcharsetlist"}}],[11,"clone","","",115,{"inputs":[{"name":"self"}],"output":{"name":"xihierarchyevent"}}],[11,"clone","","",151,{"inputs":[{"name":"self"}],"output":{"name":"xdevice"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"xf86vidmodenotifyevent"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"xwmhints"}}],[11,"clone","","",177,{"inputs":[{"name":"self"}],"output":{"name":"xmodifierkeymap"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorchunkheader"}}],[11,"clone","","",143,{"inputs":[{"name":"self"}],"output":{"name":"xianyclassinfo"}}],[11,"clone","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xevent"}}],[11,"clone","","",134,{"inputs":[{"name":"self"}],"output":{"name":"xikeyclassinfo"}}],[11,"clone","","",163,{"inputs":[{"name":"self"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"clone","","",133,{"inputs":[{"name":"self"}],"output":{"name":"xkeyboardcontrol"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"xdevicetimecoord"}}],[11,"clone","","",184,{"inputs":[{"name":"self"}],"output":{"name":"xf86vidmodesyncrange"}}],[11,"clone","","",104,{"inputs":[{"name":"self"}],"output":{"name":"_xkbcontrolsnotifyevent"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"xitouchownershipevent"}}],[11,"clone","","",164,{"inputs":[{"name":"self"}],"output":{"name":"visual"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"xkeyevent"}}],[11,"clone","","",160,{"inputs":[{"name":"self"}],"output":{"name":"xirawevent"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"xsegment"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"ximodifierstate"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"xfontsetextents"}}],[11,"clone","","",154,{"inputs":[{"name":"self"}],"output":{"name":"xtimecoord"}}],[11,"clone","","",179,{"inputs":[{"name":"self"}],"output":{"name":"xienterevent"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"xarc"}}],[11,"clone","","",174,{"inputs":[{"name":"self"}],"output":{"name":"xigrabmodifiers"}}],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorfileheader"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"xconfigureevent"}}],[11,"clone","","",168,{"inputs":[{"name":"self"}],"output":{"name":"xgravityevent"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"xsetwindowattributes"}}],[11,"clone","","",130,{"inputs":[{"name":"self"}],"output":{"name":"xkbcompatmapnotifyevent"}}],[11,"clone","","",181,{"inputs":[{"name":"self"}],"output":{"name":"xvisualinfo"}}],[11,"clone","","",124,{"inputs":[{"name":"self"}],"output":{"name":"xdeviceinfo"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"_xkbmapnotifyevent"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"xkeymapevent"}}],[11,"clone","","",185,{"inputs":[{"name":"self"}],"output":{"name":"xievent"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorfiletoc"}}],[11,"clone","","",180,{"inputs":[{"name":"self"}],"output":{"name":"xf86vidmodemonitor"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"xieventmask"}}],[11,"partial_cmp","glutin::os::unix::x11","",200,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",200,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"le","","",200,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"gt","","",200,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"ge","","",200,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"partial_cmp","glutin","",201,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",201,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"le","","",201,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"gt","","",201,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"ge","","",201,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",202,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",202,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"le","","",202,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"gt","","",202,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"ge","","",202,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"partial_cmp","glutin::os::unix::x11","",203,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",203,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"le","","",203,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"gt","","",203,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"ge","","",203,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"cmp","","",203,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"ordering"}}],[11,"cmp","","",200,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"ordering"}}],[11,"cmp","glutin","",202,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"ordering"}}],[11,"cmp","","",201,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"ordering"}}],[11,"fmt","glutin::os::unix::x11","",191,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","glutin","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",204,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","glutin::os::unix::x11","",187,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","","",191,{"inputs":[{"name":"openerror"}],"output":{"name":"xnotsupported"}}],[11,"with_x11_visual","glutin","",16,null],[11,"with_x11_screen","","",16,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"windowbuilder"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"mousecursor"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"keyboardinput"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"controlflow"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"touchphase"}}],[11,"clone","glutin::os::unix::x11","",187,{"inputs":[{"name":"self"}],"output":{"name":"xerror"}}],[11,"clone","glutin","",15,{"inputs":[{"name":"self"}],"output":{"name":"windowattributes"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"elementstate"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"nativemonitorid"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"windowevent"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"virtualkeycode"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"touch"}}],[11,"clone","glutin::os::unix::x11","",188,{"inputs":[{"name":"self"}],"output":{"name":"monitorid"}}],[11,"clone","glutin","",16,{"inputs":[{"name":"self"}],"output":{"name":"windowbuilder"}}],[11,"clone","","",205,{"inputs":[{"name":"self"}],"output":{"name":"monitorid"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"modifiersstate"}}],[11,"clone","","",202,{"inputs":[{"name":"self"}],"output":{"name":"windowid"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"cursorstate"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"creationerror"}}],[11,"clone","glutin::os::unix::x11","",200,{"inputs":[{"name":"self"}],"output":{"name":"deviceid"}}],[11,"clone","glutin","",201,{"inputs":[{"name":"self"}],"output":{"name":"deviceid"}}],[11,"clone","glutin::os::unix::x11","",203,{"inputs":[{"name":"self"}],"output":{"name":"windowid"}}],[11,"clone","glutin","",10,{"inputs":[{"name":"self"}],"output":{"name":"mousescrolldelta"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"deviceevent"}}],[11,"clone","","",204,{"inputs":[{"name":"self"}],"output":{"name":"eventsloopclosed"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"mousebutton"}}],[11,"clone","glutin::os::unix::x11","",206,{"inputs":[{"name":"self"}],"output":{"name":"windowproxy"}}],[11,"clone","","",191,{"inputs":[{"name":"self"}],"output":{"name":"xnotsupported"}}],[11,"new","","",190,{"inputs":[{"name":"eventsloop"},{"name":"windowattributes"},{"name":"platformspecificwindowbuilderattributes"}],"output":{"generics":["window","creationerror"],"name":"result"}}],[11,"set_title","","",190,null],[11,"set_decorations","","",190,null],[11,"show","","",190,null],[11,"hide","","",190,null],[11,"get_position","","",190,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_position","","",190,null],[11,"get_inner_size","","",190,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_outer_size","","",190,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_inner_size","","",190,null],[11,"create_window_proxy","","",190,{"inputs":[{"name":"self"}],"output":{"name":"windowproxy"}}],[11,"get_xlib_display","","",190,null],[11,"get_xlib_screen_id","","",190,null],[11,"get_xlib_xconnection","","",190,{"inputs":[{"name":"self"}],"output":{"generics":["xconnection"],"name":"arc"}}],[11,"platform_display","","",190,null],[11,"get_xlib_window","","",190,null],[11,"platform_window","","",190,null],[11,"get_xcb_connection","","",190,null],[11,"set_window_resize_callback","","",190,null],[11,"set_cursor","","",190,null],[11,"set_cursor_state","","",190,{"inputs":[{"name":"self"},{"name":"cursorstate"}],"output":{"generics":["string"],"name":"result"}}],[11,"hidpi_factor","","",190,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"set_cursor_position","","",190,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"id","","",190,{"inputs":[{"name":"self"}],"output":{"name":"windowid"}}],[11,"deref","","",186,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"fmt","glutin","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","glutin::os::unix::x11","",191,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","glutin","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",202,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","glutin::os::unix::x11","",203,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","glutin","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","glutin::os::unix::x11","",200,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","glutin","",201,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","glutin::os::unix::x11","",187,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","glutin","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",204,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"modifiersstate"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"windowattributes"}}],[11,"drop","glutin::os::unix::x11","",189,null],[11,"drop","","",207,null],[11,"drop","","",186,null],[11,"eq","glutin","",14,{"inputs":[{"name":"self"},{"name":"virtualkeycode"}],"output":{"name":"bool"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"nativemonitorid"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"nativemonitorid"}],"output":{"name":"bool"}}],[11,"eq","","",204,{"inputs":[{"name":"self"},{"name":"eventsloopclosed"}],"output":{"name":"bool"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"touchphase"}],"output":{"name":"bool"}}],[11,"eq","glutin::os::unix::x11","",203,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"ne","","",203,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"eq","glutin","",8,{"inputs":[{"name":"self"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"cursorstate"}],"output":{"name":"bool"}}],[11,"eq","","",201,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"ne","","",201,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"eq","glutin::os::unix::x11","",200,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"ne","","",200,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"eq","glutin","",10,{"inputs":[{"name":"self"},{"name":"mousescrolldelta"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"mousescrolldelta"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"controlflow"}],"output":{"name":"bool"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"mousecursor"}],"output":{"name":"bool"}}],[11,"eq","","",202,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"ne","","",202,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"elementstate"}],"output":{"name":"bool"}}],[11,"next","","",208,{"inputs":[{"name":"self"}],"output":{"generics":["monitorid"],"name":"option"}}],[11,"size_hint","","",208,null],[11,"hash","","",8,null],[11,"hash","","",201,null],[11,"hash","","",204,null],[11,"hash","","",13,null],[11,"hash","","",4,null],[11,"hash","","",14,null],[11,"hash","glutin::os::unix::x11","",200,null],[11,"hash","glutin","",202,null],[11,"hash","glutin::os::unix::x11","",203,null],[11,"description","","",187,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"description","glutin","",204,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"description","glutin::os::unix::x11","",191,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",191,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"get_xlib_window","glutin","",209,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_xlib_display","","",209,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_xlib_screen_id","","",209,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_xlib_xconnection","","",209,{"inputs":[{"name":"self"}],"output":{"generics":["arc"],"name":"option"}}],[11,"get_xcb_connection","","",209,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"send_xim_spot","","",209,null],[11,"get_wayland_surface","","",209,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_wayland_display","","",209,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","Builds a new events loop.",210,{"inputs":[],"output":{"name":"eventsloop"}}],[11,"poll_events","","Fetches all the events that are pending, calls the callback function for each of them, and returns.",210,null],[11,"run_forever","","Runs forever until `interrupt()` is called. Whenever an event happens, calls the callback.",210,null],[11,"create_proxy","","Creates an `EventsLoopProxy` that can be used to wake up the `EventsLoop` from another thread.",210,{"inputs":[{"name":"self"}],"output":{"name":"eventsloopproxy"}}],[11,"wakeup","","Wake up the `EventsLoop` from which this proxy was created.",211,{"inputs":[{"name":"self"}],"output":{"generics":["eventsloopclosed"],"name":"result"}}],[11,"get_name","","Returns a human-readable name of the monitor.",205,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"option"}}],[11,"get_native_identifier","","Returns the native platform identifier for this monitor.",205,{"inputs":[{"name":"self"}],"output":{"name":"nativemonitorid"}}],[11,"get_dimensions","","Returns the number of pixels currently displayed on the monitor.",205,null],[11,"new","","Creates a new Window for platforms where this is appropriate.",209,{"inputs":[{"name":"eventsloop"}],"output":{"generics":["window","creationerror"],"name":"result"}}],[11,"set_title","","Modifies the title of the window.",209,null],[11,"show","","Shows the window if it was hidden.",209,null],[11,"hide","","Hides the window if it was visible.",209,null],[11,"get_position","","Returns the position of the top-left hand corner of the window relative to the  top-left hand corner of the desktop.",209,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_position","","Modifies the position of the window.",209,null],[11,"get_inner_size","","Returns the size in points of the client area of the window.",209,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_inner_size_points","","Returns the size in points of the client area of the window.",209,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_inner_size_pixels","","Returns the size in pixels of the client area of the window.",209,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_outer_size","","Returns the size in pixels of the window.",209,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_inner_size","","Modifies the inner size of the window.",209,null],[11,"platform_display","","DEPRECATED. Gets the native platform specific display for this window. This is typically only required when integrating with other libraries that need this information.",209,null],[11,"platform_window","","DEPRECATED. Gets the native platform specific window handle. This is typically only required when integrating with other libraries that need this information.",209,null],[11,"set_cursor","","Modifies the mouse cursor of the window. Has no effect on Android.",209,null],[11,"hidpi_factor","","Returns the ratio between the backing framebuffer resolution and the window size in screen pixels. This is typically one for a normal display and two for a retina display.",209,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",209,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"set_cursor_state","","Sets how winit handles the cursor. See the documentation of `CursorState` for details.",209,{"inputs":[{"name":"self"},{"name":"cursorstate"}],"output":{"generics":["string"],"name":"result"}}],[11,"id","","",209,{"inputs":[{"name":"self"}],"output":{"name":"windowid"}}],[11,"new","","Initializes a new `WindowBuilder` with default values.",16,{"inputs":[],"output":{"name":"windowbuilder"}}],[11,"with_dimensions","","Requests the window to be of specific dimensions.",16,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_min_dimensions","","Sets a minimum dimension size for the window",16,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_max_dimensions","","Sets a maximum dimension size for the window",16,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_title","","Requests a specific title for the window.",16,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"windowbuilder"}}],[11,"with_fullscreen","","Requests fullscreen mode.",16,{"inputs":[{"name":"self"},{"name":"monitorid"}],"output":{"name":"windowbuilder"}}],[11,"with_visibility","","Sets whether the window will be initially hidden or visible.",16,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_transparency","","Sets whether the background of the window should be transparent.",16,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_decorations","","Sets whether the window should have a border, a title bar, etc.",16,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_multitouch","","Enables multitouch",16,{"inputs":[{"name":"self"}],"output":{"name":"windowbuilder"}}],[11,"build","","Builds the window.",16,{"inputs":[{"name":"self"},{"name":"eventsloop"}],"output":{"generics":["window","creationerror"],"name":"result"}}],[11,"new","glutin::os::unix::x11","",189,{"inputs":[{"name":"option"}],"output":{"generics":["xconnection","xnotsupported"],"name":"result"}}],[11,"check_errors","","Checks whether an error has been triggered by the previous function calls.",189,{"inputs":[{"name":"self"}],"output":{"generics":["xerror"],"name":"result"}}],[11,"ignore_error","","Ignores any previous error.",189,null],[11,"open","glutin::os::unix::x11::ffi","",35,{"inputs":[],"output":{"generics":["xcursor","openerror"],"name":"result"}}],[11,"open","","",39,{"inputs":[],"output":{"generics":["xinput2","openerror"],"name":"result"}}],[11,"open","","",53,{"inputs":[],"output":{"generics":["xlib","openerror"],"name":"result"}}],[11,"open","","",63,{"inputs":[],"output":{"generics":["xlib_xcb","openerror"],"name":"result"}}],[11,"_type","","",89,null],[11,"add","","",89,null],[11,"remove","","",89,null],[11,"attach","","",89,null],[11,"detach","","",89,null],[11,"open","","",99,{"inputs":[],"output":{"generics":["xinput","openerror"],"name":"result"}}],[11,"detail","","",199,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"kind","","",199,{"inputs":[{"name":"self"}],"output":{"name":"openerrorkind"}}],[11,"new","","",199,{"inputs":[{"name":"openerrorkind"},{"name":"string"}],"output":{"name":"openerror"}}],[11,"get_type","","",157,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"open","","",172,{"inputs":[],"output":{"generics":["xf86vmode","openerror"],"name":"result"}}],[11,"as_bytes","","",197,null],[11,"as_bytes_mut","","",197,null],[11,"as_longs","","",197,null],[11,"as_longs_mut","","",197,null],[11,"as_shorts","","",197,null],[11,"as_shorts_mut","","",197,null],[11,"get_byte","","",197,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"i8"}}],[11,"get_long","","",197,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"i64"}}],[11,"get_short","","",197,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"i16"}}],[11,"new","","",197,{"inputs":[],"output":{"name":"clientmessagedata"}}],[11,"set_byte","","",197,null],[11,"set_long","","",197,null],[11,"set_short","","",197,null],[11,"new","glutin::os::unix::x11","",212,{"inputs":[{"generics":["xconnection"],"name":"arc"}],"output":{"name":"eventsloop"}}],[11,"create_proxy","","",212,{"inputs":[{"name":"self"}],"output":{"name":"eventsloopproxy"}}],[11,"poll_events","","",212,null],[11,"run_forever","","",212,null],[11,"device_name","","",212,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"string"}}],[11,"wakeup","","",213,{"inputs":[{"name":"self"}],"output":{"generics":["eventsloopclosed"],"name":"result"}}],[11,"new","","",186,{"inputs":[{"name":"eventsloop"},{"name":"windowattributes"},{"name":"platformspecificwindowbuilderattributes"}],"output":{"generics":["window2","creationerror"],"name":"result"}}],[11,"id","","",186,{"inputs":[{"name":"self"}],"output":{"name":"windowid"}}],[11,"send_xim_spot","","",186,null],[11,"wakeup_event_loop","","",206,null],[11,"get_name","","",188,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"option"}}],[11,"get_native_identifier","","",188,{"inputs":[{"name":"self"}],"output":{"name":"nativemonitorid"}}],[11,"get_dimensions","","",188,null]],"paths":[[4,"ControlFlow"],[4,"WindowCreationError"],[4,"CursorState"],[4,"DeviceEvent"],[4,"ElementState"],[4,"Event"],[3,"KeyboardInput"],[3,"ModifiersState"],[4,"MouseButton"],[4,"MouseCursor"],[4,"MouseScrollDelta"],[4,"NativeMonitorId"],[3,"Touch"],[4,"TouchPhase"],[4,"VirtualKeyCode"],[3,"WindowAttributes"],[3,"WindowBuilder"],[4,"WindowEvent"],[3,"HeadlessRendererBuilder"],[3,"ContextBuilder"],[3,"PixelFormat"],[3,"PixelFormatRequirements"],[3,"GlAttributes"],[4,"CreationError"],[4,"ContextError"],[4,"Api"],[4,"GlProfile"],[4,"GlRequest"],[4,"Robustness"],[4,"ReleaseBehavior"],[3,"HeadlessContext"],[3,"XIEventMask"],[3,"XKeymapEvent"],[3,"XF86VidModeNotifyEvent"],[3,"XDeviceState"],[3,"Xcursor"],[3,"XrmOptionDescRec"],[3,"_XkbKeyNameRec"],[3,"XDeviceTimeCoord"],[3,"XInput2"],[3,"_XkbMapNotifyEvent"],[3,"_XcursorAnimate"],[3,"XITouchOwnershipEvent"],[3,"XAnyEvent"],[3,"Screen"],[3,"XITouchClassInfo"],[3,"XChar2b"],[3,"_XcursorChunkHeader"],[3,"XIPropertyEvent"],[3,"XFocusChangeEvent"],[3,"XKeyEvent"],[3,"XInputClass"],[3,"XWMHints"],[3,"Xlib"],[3,"XInputClassInfo"],[3,"XIHierarchyInfo"],[3,"Depth"],[3,"XMapEvent"],[3,"XCharStruct"],[3,"XIDeviceChangedEvent"],[3,"XMappingEvent"],[3,"XIDeviceEvent"],[3,"XPixmapFormatValues"],[3,"Xlib_xcb"],[3,"XSetWindowAttributes"],[3,"XIRemoveMasterInfo"],[3,"XMapRequestEvent"],[3,"XkbAnyEvent"],[3,"XRectangle"],[3,"XStandardColormap"],[3,"XIAttachSlaveInfo"],[3,"XkbNewKeyboardNotifyEvent"],[3,"_XcursorComments"],[3,"XIDetachSlaveInfo"],[3,"XIValuatorClassInfo"],[3,"XArc"],[3,"XOMCharSetList"],[3,"XErrorEvent"],[3,"XFeedbackState"],[3,"XkbIndicatorNotifyEvent"],[3,"_XkbNamesNotifyEvent"],[3,"XComposeStatus"],[3,"_XcursorCursors"],[3,"XIDeviceInfo"],[3,"XMotionEvent"],[3,"XExtCodes"],[3,"XFontProp"],[3,"XrmValue"],[3,"XIAddMasterInfo"],[3,"XIAnyHierarchyChangeInfo"],[3,"XCirculateEvent"],[3,"XClientMessageEvent"],[3,"XSegment"],[3,"_XkbCompatMapRec"],[3,"XIBarrierEvent"],[3,"XIModifierState"],[3,"XNoExposeEvent"],[3,"_XcursorComment"],[3,"_XkbIndicatorRec"],[3,"XInput"],[3,"XPropertyEvent"],[3,"XkbStateNotifyEvent"],[3,"XTextProperty"],[3,"XGenericEventCookie"],[3,"_XkbControlsNotifyEvent"],[3,"_XcursorFileHeader"],[3,"XIButtonState"],[3,"XSizeHints"],[3,"XClassHint"],[3,"XFontSetExtents"],[3,"_XcursorFileToc"],[3,"XButtonEvent"],[3,"XkbBellNotifyEvent"],[3,"XSelectionEvent"],[3,"XkbActionMessageEvent"],[3,"XIHierarchyEvent"],[3,"XConfigureRequestEvent"],[3,"XFontStruct"],[3,"XConfigureEvent"],[3,"XColormapEvent"],[3,"XResizeRequestEvent"],[3,"XExtData"],[3,"XGCValues"],[3,"XTextItem"],[3,"XDeviceInfo"],[3,"XPoint"],[3,"XIValuatorState"],[3,"XSelectionClearEvent"],[3,"XTextItem16"],[3,"XIButtonClassInfo"],[3,"XkbCompatMapNotifyEvent"],[3,"_XcursorFile"],[3,"XDestroyWindowEvent"],[3,"XKeyboardControl"],[3,"XIKeyClassInfo"],[3,"XExposeEvent"],[3,"XSelectionRequestEvent"],[3,"XWindowAttributes"],[3,"XColor"],[3,"XUnmapEvent"],[3,"XWindowChanges"],[3,"_XcursorImages"],[3,"XCirculateRequestEvent"],[3,"XIAnyClassInfo"],[3,"XVisibilityEvent"],[3,"XHostAddress"],[3,"XF86VidModeGamma"],[3,"XIScrollClassInfo"],[3,"_XkbExtensionDeviceNotifyEvent"],[3,"XIconSize"],[3,"XF86VidModeModeLine"],[3,"XDevice"],[3,"XReparentEvent"],[3,"XImage"],[3,"XTimeCoord"],[3,"XDeviceControl"],[3,"_XkbNamesRec"],[19,"XEvent"],[3,"XwcTextItem"],[3,"ScreenFormat"],[3,"XIRawEvent"],[3,"XCrossingEvent"],[3,"_XcursorImage"],[3,"XGraphicsExposeEvent"],[3,"Visual"],[3,"XF86VidModeModeInfo"],[3,"XKeyboardState"],[3,"XExtensionVersion"],[3,"XGravityEvent"],[3,"_XkbDesc"],[3,"XmbTextItem"],[3,"AspectRatio"],[3,"Xf86vmode"],[3,"XFeedbackControl"],[3,"XIGrabModifiers"],[3,"XkbAccessXNotifyEvent"],[3,"_XkbKeyAliasRec"],[3,"XModifierKeymap"],[3,"ImageFns"],[3,"XIEnterEvent"],[3,"XF86VidModeMonitor"],[3,"XVisualInfo"],[3,"XIBarrierReleasePointerInfo"],[3,"XCreateWindowEvent"],[3,"XF86VidModeSyncRange"],[3,"XIEvent"],[3,"Window2"],[3,"XError"],[3,"MonitorId"],[3,"XConnection"],[3,"Window"],[4,"XNotSupported"],[8,"WindowBuilderExt"],[8,"WindowExt"],[8,"GlContext"],[3,"GlWindow"],[3,"Context"],[3,"ClientMessageData"],[3,"XkbEvent"],[3,"OpenError"],[3,"DeviceId"],[3,"DeviceId"],[3,"WindowId"],[3,"WindowId"],[3,"EventsLoopClosed"],[3,"MonitorId"],[3,"WindowProxy"],[3,"XWindow"],[3,"AvailableMonitorsIter"],[3,"Window"],[3,"EventsLoop"],[3,"EventsLoopProxy"],[3,"EventsLoop"],[3,"EventsLoopProxy"]]};
searchIndex["hetseq"] = {"doc":"","items":[[3,"List","hetseq","Heterogenous list Supports pushing, splitting to head and tail Mapping and folding",null,null],[12,"0","","",0,null],[3,"P","","Type level -1",null,null],[3,"S","","Type level +1",null,null],[3,"Queue","","Heterogenous queue Supports pushing, splitting to init and last Mapping and folding",null,null],[12,"0","","",1,null],[4,"Z","","Type level zero value",null,null],[11,"by_ref","","",0,null],[11,"by_ref","","",0,null],[11,"by_ref","","",1,null],[11,"by_ref","","",1,null],[11,"fold","","",0,{"inputs":[{"name":"self"},{"name":"i"},{"name":"f"}],"output":{"name":"i"}}],[11,"fold","","",1,{"inputs":[{"name":"self"},{"name":"i"},{"name":"f"}],"output":{"name":"i"}}],[11,"fold","","",0,{"inputs":[{"name":"self"},{"name":"i"},{"name":"f"}],"output":{"name":"i"}}],[11,"fold","","",1,{"inputs":[{"name":"self"},{"name":"i"},{"name":"f"}],"output":{"name":"i"}}],[11,"fmap","","",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"list"}}],[11,"fmap","","",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"queue"}}],[11,"fmap","","",0,null],[11,"fmap","","",1,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"list"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"list"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"list"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"list"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"list"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"list"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"list"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"list"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"list"}],"output":{"name":"ordering"}}],[11,"new","","",0,{"inputs":[],"output":{"name":"list"}}],[11,"push","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"list"}}],[11,"head","","",0,{"inputs":[{"name":"self"}],"output":{"name":"h"}}],[11,"tail","","",0,{"inputs":[{"name":"self"}],"output":{"name":"list"}}],[11,"into_list","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"value","","",2,{"inputs":[],"output":{"name":"usize"}}],[11,"value","","",3,{"inputs":[],"output":{"name":"usize"}}],[11,"value","","",4,{"inputs":[],"output":{"name":"usize"}}],[11,"try","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["list"],"name":"result"}}],[11,"try","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["list"],"name":"result"}}],[11,"try","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["queue"],"name":"result"}}],[11,"try","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["queue"],"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"queue"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"ordering"}}],[11,"new","","",1,{"inputs":[],"output":{"name":"queue"}}],[11,"push","","",1,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"queue"}}],[11,"init","","",1,{"inputs":[{"name":"self"}],"output":{"name":"queue"}}],[11,"last","","",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"zip","","",0,{"inputs":[{"name":"self"},{"name":"list"}],"output":{"name":"list"}}],[11,"zip","","",0,null],[11,"zip","","",1,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"queue"}}],[11,"zip","","",1,null],[0,"prelude","","",null,null],[8,"HetFnOnce","hetseq::prelude","Substitution for FnMut trait family in stable and beta channels In nightly consider to use \"nightly\" feature and FnMut trait family",null,null],[16,"Output","","Output of the function",5,null],[10,"call_once","","Call the function",5,null],[8,"HetFnMut","","Substitution for FnMut trait family in stable and beta channels In nightly consider to use \"nightly\" feature and FnMut trait family",null,null],[10,"call_mut","","Call the function",6,null],[8,"HetFn","","Substitution for Fn trait family in stable and beta channels In nightly consider to use \"nightly\" feature and Fn trait family",null,null],[10,"call","","Call the function",7,null],[8,"ByRef","hetseq","",null,null],[16,"Refs","","",8,null],[10,"by_ref","","",8,null],[8,"HetFnOnce","","Substitution for FnMut trait family in stable and beta channels In nightly consider to use \"nightly\" feature and FnMut trait family",null,null],[16,"Output","","Output of the function",5,null],[10,"call_once","","Call the function",5,null],[8,"HetFnMut","","Substitution for FnMut trait family in stable and beta channels In nightly consider to use \"nightly\" feature and FnMut trait family",null,null],[10,"call_mut","","Call the function",6,null],[8,"HetFn","","Substitution for Fn trait family in stable and beta channels In nightly consider to use \"nightly\" feature and Fn trait family",null,null],[10,"call","","Call the function",7,null],[8,"Foldable","","Foldable heterogenous list",null,null],[10,"fold","","fold sequence using `F`unction starting with `I`nit value",9,{"inputs":[{"name":"self"},{"name":"i"},{"name":"f"}],"output":{"name":"i"}}],[8,"Functor","","Functor over heterogenous list",null,null],[16,"Output","","Result of mapping",10,null],[10,"fmap","","Map sequence using `F`unction",10,null],[8,"Length","","",null,null],[16,"Length","","",11,null],[11,"len","","",11,{"inputs":[],"output":{"name":"usize"}}],[8,"IntoList","","",null,null],[16,"List","","",12,null],[10,"into_list","","",12,null],[8,"Num","","Type level number",null,null],[16,"S","","Next number",13,null],[16,"P","","Previous number",13,null],[10,"value","","Convert to value level",13,{"inputs":[],"output":{"name":"usize"}}],[8,"Try","","",null,null],[16,"Ok","","Sequence of `Ok` `Result`s",14,null],[10,"try","","",14,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"IntoQueue","","",null,null],[16,"Queue","","",15,null],[10,"into_queue","","",15,null],[8,"Zip","","",null,null],[16,"Zipped","","",16,null],[10,"zip","","",16,null],[14,"hlist","","Convenient way to define heterogenous `List`",null,null],[14,"hqueue","","Convenient way to define heterogenous `Queue`",null,null],[14,"HQueue","","Convenient way to define heterogenous `Queue`",null,null],[14,"lambda","","This macro can be used to define lambdas with syntax similar to rust's lambdas Arguments are bounded by traits Mainly to use with `Functor` and `Foldable`",null,null],[11,"len","","",11,{"inputs":[],"output":{"name":"usize"}}]],"paths":[[3,"List"],[3,"Queue"],[4,"Z"],[3,"S"],[3,"P"],[8,"HetFnOnce"],[8,"HetFnMut"],[8,"HetFn"],[8,"ByRef"],[8,"Foldable"],[8,"Functor"],[8,"Length"],[8,"IntoList"],[8,"Num"],[8,"Try"],[8,"IntoQueue"],[8,"Zip"]]};
searchIndex["hibitset"] = {"doc":"hibitset","items":[[3,"AtomicBitSet","hibitset","This is similar to a [`BitSet`] but allows setting of value without unique ownership of the structure",null,null],[3,"BitIter","","An `Iterator` over a [`BitSetLike`] structure.",null,null],[3,"BitParIter","","A `ParallelIterator` over a [`BitSetLike`] structure.",null,null],[3,"BitProducer","","Allows splitting and internally iterating through `BitSet`.",null,null],[12,"0","","",0,null],[3,"BitSetAnd","","`BitSetAnd` takes two [`BitSetLike`] items, and merges the masks returning a new virtual set, which represents an intersection of the two original sets.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[3,"BitSetNot","","`BitSetNot` takes a [`BitSetLike`] item, and produced an inverted virtual set. Note: the implementation is sub-optimal because layers 1-3 are not active.",null,null],[12,"0","","",2,null],[3,"BitSetOr","","`BitSetOr` takes two [`BitSetLike`] items, and merges the masks returning a new virtual set, which represents an merged of the two original sets.",null,null],[12,"0","","",3,null],[12,"1","","",3,null],[3,"BitSetXor","","`BitSetXor` takes two [`BitSetLike`] items, and merges the masks returning a new virtual set, which represents an merged of the two original sets.",null,null],[12,"0","","",4,null],[12,"1","","",4,null],[3,"BitSet","","A `BitSet` is a simple set designed to track entity indices for which a certain component exists. It does not track the `Generation` of the entities that it contains.",null,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an empty `AtomicBitSet`.",5,{"inputs":[],"output":{"name":"atomicbitset"}}],[11,"add_atomic","","Adds `id` to the `AtomicBitSet`. Returns `true` if the value was already in the set.",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"add","","Adds `id` to the `BitSet`. Returns `true` if the value was already in the set.",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"remove","","Removes `id` from the set, returns `true` if the value was removed, and `false` if the value was not set to begin with.",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` if `id` is in the set.",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"clear","","Clear all bits in the set",5,{"inputs":[{"name":"self"}],"output":null}],[11,"layer3","","",5,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"layer2","","",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"layer1","","",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"layer0","","",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BitParIter`. You usually don't call this function but just [`.par_iter()`] on a bit set.",6,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"drive_unindexed","","",6,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"split","","",0,null],[11,"fold_with","","",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"f"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BitIter`. You usually don't call this function but just [`.iter()`] on a bit set.",7,null],[11,"next","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"layer3","","",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"layer2","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"layer1","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"layer0","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"layer3","","",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"layer2","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"layer1","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"layer0","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"layer3","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"layer2","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"layer1","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"layer0","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"layer3","","",4,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"layer2","","",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"layer1","","",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"layer0","","",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"into_iter","","",8,null],[11,"not","","",8,null],[11,"bitand","","",8,null],[11,"bitor","","",8,null],[11,"bitxor","","",8,null],[11,"into_iter","","",2,null],[11,"not","","",2,null],[11,"bitand","","",2,null],[11,"bitor","","",2,null],[11,"bitxor","","",2,null],[11,"into_iter","","",1,null],[11,"not","","",1,null],[11,"bitand","","",1,null],[11,"bitor","","",1,null],[11,"bitxor","","",1,null],[11,"into_iter","","",3,null],[11,"not","","",3,null],[11,"bitand","","",3,null],[11,"bitor","","",3,null],[11,"bitxor","","",3,null],[11,"into_iter","","",4,null],[11,"not","","",4,null],[11,"bitand","","",4,null],[11,"bitor","","",4,null],[11,"bitxor","","",4,null],[8,"BitSetLike","","A generic interface for [`BitSetLike`]-like types.",null,null],[10,"layer3","","Return a usize where each bit represents if any word in layer2 has been set.",9,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"layer2","","Return the usize from the array of usizes that indicates if any bit has been set in layer1",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[10,"layer1","","Return the usize from the array of usizes that indicates if any bit has been set in layer0",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[10,"layer0","","Return a usize that maps to the direct 1:1 association with each index of the set",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"iter","","Create an iterator that will scan over the keyspace",9,{"inputs":[{"name":"self"}],"output":{"name":"bititer"}}],[11,"par_iter","","Create a parallel iterator that will scan over the keyspace",9,{"inputs":[{"name":"self"}],"output":{"name":"bitpariter"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"bitset"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"bitset"}}],[11,"new","","Creates an empty `BitSet`.",8,{"inputs":[],"output":{"name":"bitset"}}],[11,"with_capacity","","Creates an empty `BitSet`, preallocated for up to `max` indices.",8,{"inputs":[{"name":"u32"}],"output":{"name":"bitset"}}],[11,"add","","Adds `id` to the `BitSet`. Returns `true` if the value was already in the set.",8,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"remove","","Removes `id` from the set, returns `true` if the value was removed, and `false` if the value was not set to begin with.",8,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` if `id` is in the set.",8,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"clear","","Completely wipes out the bit set.",8,{"inputs":[{"name":"self"}],"output":null}],[11,"layer3","","",8,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"layer2","","",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"layer1","","",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"layer0","","",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}]],"paths":[[3,"BitProducer"],[3,"BitSetAnd"],[3,"BitSetNot"],[3,"BitSetOr"],[3,"BitSetXor"],[3,"AtomicBitSet"],[3,"BitParIter"],[3,"BitIter"],[3,"BitSet"],[8,"BitSetLike"]]};
searchIndex["hound"] = {"doc":"Hound, a wav encoding and decoding library.","items":[[3,"WavReader","hound","A reader that reads the WAVE format from the underlying reader.",null,null],[3,"WavIntoSamples","","An iterator that yields samples of type `S` read from a `WavReader`.",null,null],[3,"WavSamples","","An iterator that yields samples of type `S` read from a `WavReader`.",null,null],[3,"WavWriter","","A writer that accepts samples and writes the WAVE format.",null,null],[3,"WavSpec","","Specifies properties of the audio data.",null,null],[12,"channels","","The number of channels.",0,null],[12,"sample_rate","","The number of samples per second.",0,null],[12,"bits_per_sample","","The number of bits per sample.",0,null],[4,"Error","","The error type for operations on `WavReader` and `WavWriter`.",null,null],[13,"IoError","","An IO error occured in the underlying reader or writer.",1,null],[13,"FormatError","","Ill-formed WAVE data was encountered.",1,null],[13,"TooWide","","The sample has more bits than the destination type.",1,null],[13,"UnfinishedSample","","The number of samples written is not a multiple of the number of channels.",1,null],[13,"Unsupported","","The format is not supported.",1,null],[11,"new","","Attempts to create a reader that reads the WAVE format.",2,{"inputs":[{"name":"r"}],"output":{"generics":["wavreader"],"name":"result"}}],[11,"spec","","Returns information about the WAVE file.",2,{"inputs":[{"name":"self"}],"output":{"name":"wavspec"}}],[11,"samples","","Returns an iterator over all samples.",2,{"inputs":[{"name":"self"}],"output":{"name":"wavsamples"}}],[11,"into_samples","","Same as `samples`, but takes ownership of the `WavReader`.",2,{"inputs":[{"name":"self"}],"output":{"name":"wavintosamples"}}],[11,"duration","","Returns the duration of the file in samples.",2,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"len","","Returns the number of values that the sample iterator will yield.",2,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"into_inner","","Destroys the `WavReader` and returns the underlying reader.",2,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"open","","Attempts to create a reader that reads from the specified file.",2,{"inputs":[{"name":"p"}],"output":{"generics":["wavreader"],"name":"result"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"size_hint","","",3,null],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"size_hint","","",4,null],[11,"new","","Creates a writer that writes the WAVE format to the underlying writer.",5,{"inputs":[{"name":"w"},{"name":"wavspec"}],"output":{"name":"wavwriter"}}],[11,"write_sample","","Writes a single sample for one channel.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"finalize","","Writes the parts of the WAVE format that require knowing all samples.",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"drop","","",5,{"inputs":[{"name":"self"}],"output":null}],[11,"create","","Creates a writer that writes the WAVE format to a file.",5,{"inputs":[{"name":"p"},{"name":"wavspec"}],"output":{"generics":["wavwriter"],"name":"result"}}],[6,"Result","","A type for results generated by Hound where the error type is hard-wired.",null,null],[8,"Sample","","A type that can be used to represent audio samples.",null,null],[10,"write","","Writes the audio sample to the WAVE data chunk.",6,{"inputs":[{"name":"self"},{"name":"w"},{"name":"u16"}],"output":{"name":"result"}}],[10,"read","","Reads the audio sample from the WAVE data chunk.",6,{"inputs":[{"name":"r"},{"name":"u16"},{"name":"u16"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"wavspec"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"wavspec"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"wavspec"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"error"}}]],"paths":[[3,"WavSpec"],[4,"Error"],[3,"WavReader"],[3,"WavSamples"],[3,"WavIntoSamples"],[3,"WavWriter"],[8,"Sample"]]};
searchIndex["imagefmt"] = {"doc":"Example","items":[[3,"Image","imagefmt","Image struct returned from the read functions.",null,null],[12,"w","","",0,null],[12,"h","","",0,null],[12,"fmt","","",0,null],[12,"buf","","",0,null],[3,"Info","","Holds basic info about an image.",null,null],[12,"w","","",1,null],[12,"h","","",1,null],[12,"ct","","",1,null],[4,"ColFmt","","Color format – determines color type and channel order.",null,null],[13,"Auto","","",2,null],[13,"Y","","",2,null],[13,"YA","","",2,null],[13,"AY","","",2,null],[13,"RGB","","",2,null],[13,"RGBA","","",2,null],[13,"BGR","","",2,null],[13,"BGRA","","",2,null],[13,"ARGB","","",2,null],[13,"ABGR","","",2,null],[4,"ColType","","Color type – these are categories of color formats.",null,null],[13,"Auto","","",3,null],[13,"Gray","","",3,null],[13,"GrayAlpha","","",3,null],[13,"Color","","",3,null],[13,"ColorAlpha","","",3,null],[4,"Error","","Error.",null,null],[13,"InvalidData","","",4,null],[13,"InvalidArg","","",4,null],[13,"Unsupported","","",4,null],[13,"Internal","","",4,null],[13,"Io","","",4,null],[5,"read_info","","Returns width, height and color type of the image.",null,{"inputs":[{"name":"p"}],"output":{"generics":["info"],"name":"result"}}],[5,"read_info_from","","Like `read_info` but reads from a reader. If it fails, it seeks back to where started.",null,{"inputs":[{"name":"r"}],"output":{"generics":["info"],"name":"result"}}],[5,"read","","Reads an image and converts it to requested format.",null,{"inputs":[{"name":"p"},{"name":"colfmt"}],"output":{"generics":["image"],"name":"result"}}],[5,"read_from","","Like `read` but reads from a reader.",null,{"inputs":[{"name":"r"},{"name":"colfmt"}],"output":{"generics":["image"],"name":"result"}}],[5,"write","","Writes an image and converts it to requested color type.",null,null],[5,"write_region","","Writes a region of an image and converts it to requested color type.",null,null],[0,"png","","",null,null],[3,"ExtChunk","imagefmt::png","PNG extension chunk.",null,null],[12,"name","","",5,null],[12,"data","","",5,null],[5,"read_info","","Returns width, height and color type of the image.",null,{"inputs":[{"name":"r"}],"output":{"generics":["info"],"name":"result"}}],[5,"detect","","",null,{"inputs":[{"name":"r"}],"output":{"name":"bool"}}],[5,"read","","Reads an image and converts it to requested format.",null,{"inputs":[{"name":"r"},{"name":"colfmt"}],"output":{"generics":["image"],"name":"result"}}],[5,"read_chunks","","Like `png::read` but also returns the requested extension chunks.",null,null],[5,"write","","Writes an image and converts it to requested color type.",null,null],[5,"write_chunks","","Like `png::write` but also writes the given extension chunks.",null,null],[0,"tga","imagefmt","",null,null],[5,"read_info","imagefmt::tga","Returns width, height and color type of the image.",null,{"inputs":[{"name":"r"}],"output":{"generics":["info"],"name":"result"}}],[5,"detect","","",null,{"inputs":[{"name":"r"}],"output":{"name":"bool"}}],[5,"read","","Reads an image and converts it to requested format.",null,{"inputs":[{"name":"r"},{"name":"colfmt"}],"output":{"generics":["image"],"name":"result"}}],[5,"write","","Writes an image and converts it to requested color type.",null,null],[0,"bmp","imagefmt","",null,null],[5,"read_info","imagefmt::bmp","Returns width, height and color type of the image.",null,{"inputs":[{"name":"r"}],"output":{"generics":["info"],"name":"result"}}],[5,"detect","","",null,{"inputs":[{"name":"r"}],"output":{"name":"bool"}}],[5,"read","","Reads an image and converts it to requested format.",null,{"inputs":[{"name":"r"},{"name":"colfmt"}],"output":{"generics":["image"],"name":"result"}}],[5,"write","","Writes an image and converts it to requested color type (grayscale not supported).",null,null],[0,"jpeg","imagefmt","",null,null],[5,"read_info","imagefmt::jpeg","Returns width, height and color type of the image.",null,{"inputs":[{"name":"r"}],"output":{"generics":["info"],"name":"result"}}],[5,"detect","","",null,{"inputs":[{"name":"r"}],"output":{"name":"bool"}}],[5,"read","","Reads an image and converts it to requested format.",null,{"inputs":[{"name":"r"},{"name":"colfmt"}],"output":{"generics":["image"],"name":"result"}}],[6,"Result","imagefmt","The type returned from all the functions.",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"image"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"info"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"info"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"colfmt"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"colfmt"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"coltype"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"coltype"}],"output":{"name":"bool"}}],[11,"convert","","Converts the image into a new allocation.",0,{"inputs":[{"name":"self"},{"name":"colfmt"}],"output":{"generics":["image"],"name":"result"}}],[11,"color_type","","Returns the color type of the color format.",2,{"inputs":[{"name":"self"}],"output":{"name":"coltype"}}],[11,"has_alpha","","Returns whether `self` has an alpha channel.",2,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"option"}}],[11,"has_alpha","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",4,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",4,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}]],"paths":[[3,"Image"],[3,"Info"],[4,"ColFmt"],[4,"ColType"],[4,"Error"],[3,"ExtChunk"]]};
searchIndex["itertools"] = {"doc":"Itertools — extra iterator adaptors, functions and macros.","items":[[4,"Either","itertools","The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[4,"Diff","","A type returned by the `diff_with` function.",null,null],[13,"FirstMismatch","","The index of the first non-matching element along with both iterator's remaining elements starting with the first mis-match.",1,null],[13,"Shorter","","The total number of elements that were in `J` along with the remaining elements of `I`.",1,null],[13,"Longer","","The total number of elements that were in `I` along with the remaining elements of `J`.",1,null],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for more detail.",null,null],[13,"NoElements","","Empty iterator",2,null],[13,"OneElement","","Iterator with one element, so the minimum and maximum are the same",2,null],[13,"MinMax","","More than one element in the iterator, the first element is not larger than the second",2,null],[4,"Position","","A value yielded by `WithPosition`. Indicates the position of this element in the iterator results.",null,null],[13,"First","","This is the first element.",3,null],[13,"Middle","","This is neither the first nor the last element.",3,null],[13,"Last","","This is the last element.",3,null],[13,"Only","","This is the only element.",3,null],[4,"EitherOrBoth","","A value yielded by `ZipLongest`. Contains one or two values, depending on which of the input iterators are exhausted.",null,null],[13,"Both","","Neither input iterator is exhausted yet, yielding two values.",4,null],[13,"Left","","The parameter iterator of `.zip_longest()` is exhausted, only yielding a value from the `self` iterator.",4,null],[13,"Right","","The `self` iterator of `.zip_longest()` is exhausted, only yielding a value from the parameter iterator.",4,null],[4,"FoldWhile","","An enum used for controlling the execution of `.fold_while()`.",null,null],[13,"Continue","","Continue folding with this value",5,null],[13,"Done","","Fold is complete and will return this value",5,null],[5,"cons_tuples","","Create an iterator that maps for example iterators of `((A, B), C)` to `(A, B, C)`.",null,{"inputs":[{"name":"i"}],"output":{"name":"constuples"}}],[5,"diff_with","","Compares every element yielded by both `i` and `j` with the given function in lock-step and returns a `Diff` which describes how `j` differs from `i`.",null,{"inputs":[{"name":"i"},{"name":"j"},{"name":"f"}],"output":{"generics":["diff"],"name":"option"}}],[5,"kmerge_by","","Create an iterator that merges elements of the contained iterators.",null,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"kmergeby"}}],[5,"repeat_n","","Create an iterator that produces `n` repetitions of `element`.",null,{"inputs":[{"name":"a"},{"name":"usize"}],"output":{"name":"repeatn"}}],[5,"repeat_call","","An iterator source that produces elements indefinitely by calling a given closure.",null,{"inputs":[{"name":"f"}],"output":{"name":"repeatcall"}}],[5,"unfold","","Creates a new unfold source with the specified closure as the \"iterator function\" and an initial state to eventually pass to the closure",null,{"inputs":[{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[5,"iterate","","Creates a new iterator that infinitely applies function to value and yields results.",null,{"inputs":[{"name":"st"},{"name":"f"}],"output":{"name":"iterate"}}],[5,"multizip","","An iterator that generalizes .zip() and allows running multiple iterators in lockstep.",null,{"inputs":[{"name":"u"}],"output":{"name":"zip"}}],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"interleave"}}],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"merge"}}],[5,"put_back","","Create an iterator where you can put back a single item",null,{"inputs":[{"name":"i"}],"output":{"name":"putback"}}],[5,"put_back_n","","Create an iterator where you can put back multiple values to the front of the iteration.",null,{"inputs":[{"name":"i"}],"output":{"name":"putbackn"}}],[5,"multipeek","","An iterator adaptor that allows the user to peek at multiple `.next()` values without advancing the base iterator.",null,{"inputs":[{"name":"i"}],"output":{"name":"multipeek"}}],[5,"kmerge","","Create an iterator that merges elements of the contained iterators using the ordering function.",null,{"inputs":[{"name":"i"}],"output":{"name":"kmerge"}}],[5,"zip_eq","","Iterate `i` and `j` in lock step.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"zipeq"}}],[5,"rciter","","Return an iterator inside a `Rc<RefCell<_>>` wrapper.",null,{"inputs":[{"name":"i"}],"output":{"name":"rciter"}}],[5,"enumerate","","Iterate `iterable` with a running index.",null,{"inputs":[{"name":"i"}],"output":{"name":"enumerate"}}],[5,"rev","","Iterate `iterable` in reverse.",null,{"inputs":[{"name":"i"}],"output":{"name":"rev"}}],[5,"zip","","Iterate `i` and `j` in lock step.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"zip"}}],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"chain"}}],[5,"cloned","","Create an iterator that clones each element from &T to T",null,{"inputs":[{"name":"i"}],"output":{"name":"cloned"}}],[5,"fold","","Perform a fold operation over the iterable.",null,{"inputs":[{"name":"i"},{"name":"b"},{"name":"f"}],"output":{"name":"b"}}],[5,"all","","Test whether the predicate holds for all elements in the iterable.",null,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"bool"}}],[5,"any","","Test whether the predicate holds for any elements in the iterable.",null,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"bool"}}],[5,"max","","Return the maximum value of the iterable.",null,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[5,"min","","Return the minimum value of the iterable.",null,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[5,"join","","Combine all iterator elements into one String, seperated by `sep`.",null,{"inputs":[{"name":"i"},{"name":"str"}],"output":{"name":"string"}}],[5,"sorted","","Collect all the iterable's elements into a sorted vector in ascending order.",null,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[5,"equal","","Return `true` if both iterators produce equal sequences (elements pairwise equal and sequences of the same length), `false` otherwise.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"bool"}}],[5,"assert_equal","","Assert that two iterators produce equal sequences, with the same semantics as equal(a, b).",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":null}],[5,"partition","","Partition a sequence using predicate `pred` so that elements that map to `true` are placed before elements which map to `false`.",null,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"usize"}}],[0,"structs","","The concrete iterator types.",null,null],[3,"Dedup","itertools::structs","An iterator adaptor that removes repeated duplicates.",null,null],[3,"Interleave","","An iterator adaptor that alternates elements from two iterators until both run out.",null,null],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two iterators until one of them runs out.",null,null],[3,"Product","","An iterator adaptor that iterates over the cartesian product of the element sets of two iterators `I` and `J`.",null,null],[3,"PutBack","","An iterator adaptor that allows putting back a single item to the front of the iterator.",null,null],[3,"PutBackN","","An iterator adaptor that allows putting multiple items in front of the iterator.",null,null],[3,"Batching","","A “meta iterator adaptor”. Its closure recives a reference to the iterator and may pick off as many elements as it likes, to produce the next iterator element.",null,null],[3,"Step","","An iterator adaptor that steps a number elements in the base iterator for each iteration.",null,null],[3,"MapResults","","An iterator adapter to apply a transformation within a nested `Result`.",null,null],[3,"Merge","","An iterator adaptor that merges the two base iterators in ascending order. If both base iterators are sorted (ascending), the result is sorted.",null,null],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in ascending order. If both base iterators are sorted (ascending), the result is sorted.",null,null],[3,"MultiPeek","","See `multipeek()` for more information.",null,null],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able iterator to only pick off elements while the predicate returns `true`.",null,null],[3,"WhileSome","","An iterator adaptor that filters `Option<A>` iterator elements and produces `A`. Stops on the first `None` encountered.",null,null],[3,"Coalesce","","An iterator adaptor that may join together adjacent elements.",null,null],[3,"TupleCombinations","","An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples of a specific size.",null,null],[3,"Combinations","","An iterator to iterate through all the `n`-length combinations in an iterator.",null,null],[3,"Unique","","An iterator adapter to filter out duplicate elements.",null,null],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",null,null],[3,"Flatten","","An iterator adapter to simply flatten a structure.",null,null],[3,"ConsTuples","","An iterator that maps an iterator of tuples like `((A, B), C)` to an iterator of `(A, B, C)`.",null,null],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"FormatWith","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"IntoChunks","","`ChunkLazy` is the storage for a lazy chunking operation.",null,null],[3,"Chunk","","An iterator for the elements in a single chunk.",null,null],[3,"Chunks","","An iterator that yields the Chunk iterators.",null,null],[3,"GroupBy","","`GroupBy` is the storage for the lazy grouping operation.",null,null],[3,"Group","","An iterator for the elements in a single group.",null,null],[3,"Groups","","An iterator that yields the Group iterators.",null,null],[3,"Intersperse","","An iterator adaptor to insert a particular value between each element of the adapted iterator.",null,null],[3,"KMerge","","An iterator adaptor that merges an abitrary number of base iterators in ascending order. If all base iterators are sorted (ascending), the result is sorted.",null,null],[3,"KMergeBy","","An iterator adaptor that merges an abitrary number of base iterators according to an ordering function.",null,null],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum length by filling missing elements using a closure.",null,null],[3,"PeekingTakeWhile","","An iterator adaptor that takes items while a closure returns `true`.",null,null],[3,"RcIter","","A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.",null,null],[12,"rciter","","The boxed iterator.",6,null],[3,"RepeatN","","An iterator that produces n repetitions of an element.",null,null],[3,"RepeatCall","","See `repeat_call` for more information.",null,null],[3,"Unfold","","See `unfold` for more information.",null,null],[12,"state","","Internal state that will be passed to the closure on the next iteration",7,null],[3,"Iterate","","An iterator that infinitely applies function to value and yields results.",null,null],[3,"Tee","","One half of an iterator pair where both return the same elements.",null,null],[3,"TupleBuffer","","An iterator over a incomplete tuple.",null,null],[3,"TupleWindows","","An iterator over all contiguous windows that produces tuples of a specific size.",null,null],[3,"Tuples","","An iterator that groups the items in tuples of a specific size.",null,null],[3,"WithPosition","","An iterator adaptor that wraps each element in an `Position`.",null,null],[3,"ZipEq","","An iterator which iterates two other iterators simultaneously",null,null],[3,"ZipLongest","","An iterator which iterates two other iterators simultaneously",null,null],[3,"Zip","","See `multizip` for more information.",null,null],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"multipeek"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"reset_peek","","Reset the peeking “cursor”",8,{"inputs":[{"name":"self"}],"output":null}],[11,"peek","","Works exactly like `.next()` with the only difference that it doesn't advance itself. `.peek()` can be called multiple times, to peek further ahead.",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",8,null],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"interleave"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",9,null],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"interleaveshortest"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"putback"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"with_value","","put back value `value` (builder method)",11,null],[11,"into_parts","","Split the `PutBack` into its parts.",11,null],[11,"put_back","","Put back a single value to the front of the iterator.",11,null],[11,"next","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",11,null],[11,"all","","",11,{"inputs":[{"name":"self"},{"name":"g"}],"output":{"name":"bool"}}],[11,"fold","","",11,{"inputs":[{"name":"self"},{"name":"acc"},{"name":"g"}],"output":{"name":"acc"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"putbackn"}}],[11,"put_back","","Puts x in front of the iterator. The values are yielded in order of the most recently put back values first.",12,null],[11,"next","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",12,null],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"product"}}],[11,"next","","",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",13,null],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"batching"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",14,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",14,null],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"step"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",15,null],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",16,null],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"next","","",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",17,null],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",18,null],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",19,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",19,null],[11,"fold","","",19,{"inputs":[{"name":"self"},{"name":"acc"},{"name":"g"}],"output":{"name":"acc"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",20,null],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"whilesome"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",21,null],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"uniqueby"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",24,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",24,null],[11,"next","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",25,null],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"unique"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fold","","",26,{"inputs":[{"name":"self"},{"name":"acc"},{"name":"g"}],"output":{"name":"acc"}}],[11,"next_back","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",27,null],[11,"next","","",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next_back","","",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next_back","","",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next_back","","",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next_back","","",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next_back","","",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next_back","","",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"format"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",31,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"drop","","",32,{"inputs":[{"name":"self"}],"output":null}],[11,"next","","",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",33,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"drop","","",34,{"inputs":[{"name":"self"}],"output":null}],[11,"next","","",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"intersperse"}}],[11,"next","","",35,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",35,null],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"kmerge"}}],[11,"next","","",36,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",36,null],[11,"next","","",37,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",37,null],[11,"clone","itertools","",2,{"inputs":[{"name":"self"}],"output":{"name":"minmaxresult"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The returned `Option` has variant `None` if and only if the `MinMaxResult` has variant `NoElements`. Otherwise `Some((x, y))` is returned where `x <= y`. If the `MinMaxResult` has variant `OneElement(x)`, performing this operation will make one clone of `x`.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","itertools::structs","",38,{"inputs":[{"name":"self"}],"output":{"name":"padusing"}}],[11,"next","","",38,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[11,"next_back","","",38,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"peeking_next","","",11,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"peeking_next","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"next","","",39,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",39,null],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"rciter"}}],[11,"next","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",6,null],[11,"next_back","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","",40,{"inputs":[{"name":"a"},{"name":"usize"}],"output":{"name":"self"}}],[11,"next","","",40,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",40,null],[11,"next_back","","",40,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",41,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",41,null],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"unfold"}}],[11,"next","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",7,null],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"iterate"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",42,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",42,null],[11,"next","","",43,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",43,null],[11,"next","","",44,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",44,null],[11,"next","","",45,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_buffer","","Return a buffer with the produced items that was not enough to be grouped in a tuple.",45,{"inputs":[{"name":"self"}],"output":{"name":"tuplebuffer"}}],[11,"next","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","itertools","",3,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"into_inner","","Return the inner value.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"next","itertools::structs","",47,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",47,null],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"zipeq"}}],[11,"next","","",48,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"ziplongest"}}],[11,"next","","",49,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"next_back","","",49,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","itertools","",4,{"inputs":[{"name":"self"}],"output":{"name":"eitherorboth"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"eitherorboth"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"eitherorboth"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","itertools::structs","",50,{"inputs":[{"name":"self"}],"output":{"name":"zip"}}],[11,"new","","Deprecated: renamed to multizip",50,{"inputs":[{"name":"u"}],"output":{"name":"zip"}}],[11,"from","","",50,null],[11,"next","","",50,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"from","","",50,null],[11,"next","","",50,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"from","","",50,null],[11,"next","","",50,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"from","","",50,null],[11,"next","","",50,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"from","","",50,null],[11,"next","","",50,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"from","","",50,null],[11,"next","","",50,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"from","","",50,null],[11,"next","","",50,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"from","","",50,null],[11,"next","","",50,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[8,"PeekingNext","itertools","An iterator that allows peeking at an element before deciding to accept it.",null,null],[10,"peeking_next","","Pass a reference to the next iterator element to the closure `accept`; if `accept` returns true, return it as the next element, else None.",51,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[8,"Itertools","","The trait `Itertools`: extra iterator adaptors and methods for iterators.",null,null],[11,"interleave","","Alternate elements from two iterators until both run out.",52,{"inputs":[{"name":"self"},{"name":"j"}],"output":{"name":"interleave"}}],[11,"interleave_shortest","","Alternate elements from two iterators until one of them runs out.",52,{"inputs":[{"name":"self"},{"name":"j"}],"output":{"name":"interleaveshortest"}}],[11,"intersperse","","An iterator adaptor to insert a particular value between each element of the adapted iterator.",52,null],[11,"zip_longest","","Create an iterator which iterates over both this and the specified iterator simultaneously, yielding pairs of two optional elements.",52,{"inputs":[{"name":"self"},{"name":"j"}],"output":{"name":"ziplongest"}}],[11,"zip_eq","","Create an iterator which iterates over both this and the specified iterator simultaneously, yielding pairs of elements.",52,{"inputs":[{"name":"self"},{"name":"j"}],"output":{"name":"zipeq"}}],[11,"batching","","A “meta iterator adaptor”. Its closure recives a reference to the iterator and may pick off as many elements as it likes, to produce the next iterator element.",52,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"batching"}}],[11,"group_by","","Return an iterable that can group iterator elements. Consecutive elements that map to the same key (“runs”), are assigned to the same group.",52,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"groupby"}}],[11,"group_by_lazy","","",52,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"groupby"}}],[11,"chunks","","Return an iterable that can chunk the iterator.",52,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"intochunks"}}],[11,"chunks_lazy","","",52,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"intochunks"}}],[11,"tuple_windows","","Return an iterator over all contiguous windows producing tuples of a specific size (up to 4).",52,{"inputs":[{"name":"self"}],"output":{"name":"tuplewindows"}}],[11,"tuples","","Return an iterator that groups the items in tuples of a specific size (up to 4).",52,{"inputs":[{"name":"self"}],"output":{"name":"tuples"}}],[11,"tee","","Split into an iterator pair that both yield all elements from the original iterator.",52,null],[11,"step","","Return an iterator adaptor that steps `n` elements in the base iterator for each iteration.",52,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"step"}}],[11,"map_results","","Return an iterator adaptor that applies the provided closure to every `Result::Ok` value. `Result::Err` values are unchanged.",52,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"mapresults"}}],[11,"merge","","Return an iterator adaptor that merges the two base iterators in ascending order.  If both base iterators are sorted (ascending), the result is sorted.",52,{"inputs":[{"name":"self"},{"name":"j"}],"output":{"name":"merge"}}],[11,"merge_by","","Return an iterator adaptor that merges the two base iterators in order. This is much like `.merge()` but allows for a custom ordering.",52,{"inputs":[{"name":"self"},{"name":"j"},{"name":"f"}],"output":{"name":"mergeby"}}],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of iterators by merging them in ascending order.",52,{"inputs":[{"name":"self"}],"output":{"name":"kmerge"}}],[11,"kmerge_by","","Return an iterator adaptor that flattens an iterator of iterators by merging them according to the given closure.",52,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"kmergeby"}}],[11,"cartesian_product","","Return an iterator adaptor that iterates over the cartesian product of the element sets of two iterators `self` and `J`.",52,{"inputs":[{"name":"self"},{"name":"j"}],"output":{"name":"product"}}],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure to optionally merge together consecutive elements.",52,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"coalesce"}}],[11,"dedup","","Remove duplicates from sections of consecutive identical elements. If the iterator is sorted, all elements will be unique.",52,{"inputs":[{"name":"self"}],"output":{"name":"dedup"}}],[11,"unique","","Return an iterator adaptor that filters out elements that have already been produced once during the iteration. Duplicates are detected using hash and equality.",52,{"inputs":[{"name":"self"}],"output":{"name":"unique"}}],[11,"unique_by","","Return an iterator adaptor that filters out elements that have already been produced once during the iteration.",52,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"uniqueby"}}],[11,"peeking_take_while","","Return an iterator adaptor that borrows from this iterator and  takes items while the closure `accept` returns `true`.",52,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"peekingtakewhile"}}],[11,"take_while_ref","","Return an iterator adaptor that borrows from a `Clone`-able iterator to only pick off elements while the predicate `accept` returns `true`.",52,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"takewhileref"}}],[11,"while_some","","Return an iterator adaptor that filters `Option<A>` iterator elements and produces `A`. Stops on the first `None` encountered.",52,{"inputs":[{"name":"self"}],"output":{"name":"whilesome"}}],[11,"tuple_combinations","","Return an iterator adaptor that iterates over the combinations of the elements from an iterator.",52,{"inputs":[{"name":"self"}],"output":{"name":"tuplecombinations"}}],[11,"combinations","","Return an iterator adaptor that iterates over the `n`-length combinations of the elements from an iterator.",52,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"combinations"}}],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a minimum length of `min` by filling missing elements using a closure `f`.",52,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"padusing"}}],[11,"flatten","","Unravel a nested iterator.",52,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"with_position","","Return an iterator adaptor that wraps each element in a `Position` to ease special-case handling of the first or last elements.",52,{"inputs":[{"name":"self"}],"output":{"name":"withposition"}}],[11,"next_tuple","","Advances the iterator and returns the next items grouped in a tuple of a specific size (up to 4).",52,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"find_position","","Find the position and value of the first element satisfying a predicate.",52,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[11,"dropping","","Consume the first `n` elements from the iterator eagerly, and return the same iterator again.",52,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly, and return the same iterator again.",52,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",52,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of `.collect()`, for convenience.",52,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"set_from","","Assign to each reference in `self` from the `from` iterator, stopping at the shortest of the two iterators.",52,{"inputs":[{"name":"self"},{"name":"j"}],"output":{"name":"usize"}}],[11,"join","","Combine all iterator elements into one String, seperated by `sep`.",52,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"string"}}],[11,"format","","Format all iterator elements, separated by `sep`.",52,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"format"}}],[11,"format_default","","",52,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"format"}}],[11,"format_with","","Format all iterator elements, separated by `sep`.",52,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":{"name":"formatwith"}}],[11,"fold_results","","Fold `Result` values from an iterator.",52,{"inputs":[{"name":"self"},{"name":"b"},{"name":"f"}],"output":{"name":"result"}}],[11,"fold_options","","Fold `Option` values from an iterator.",52,{"inputs":[{"name":"self"},{"name":"b"},{"name":"f"}],"output":{"name":"option"}}],[11,"fold1","","Accumulator of the elements in the iterator.",52,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"fold_while","","An iterator method that applies a function, producing a single, final value.",52,{"inputs":[{"name":"self"},{"name":"b"},{"name":"f"}],"output":{"name":"b"}}],[11,"sorted","","Collect all iterator elements into a sorted vector in ascending order.",52,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"sorted_by","","Collect all iterator elements into a sorted vector.",52,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"vec"}}],[11,"partition_map","","Collect all iterator elements into one of two partitions. Unlike `Iterator::partition`, each partition may have a distinct type.",52,null],[11,"minmax","","Return the minimum and maximum elements in the iterator.",52,{"inputs":[{"name":"self"}],"output":{"name":"minmaxresult"}}],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as determined by the specified function.",52,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"minmaxresult"}}],[11,"minmax_by","","Return the minimum and maximum element of an iterator, as determined by the specified comparison function.",52,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"minmaxresult"}}],[14,"iproduct","","Create an iterator over the “cartesian product” of iterators.",null,null],[14,"izip","","Create an iterator running multiple iterators in lockstep.",null,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_right","","Return true if the value is the `Right` variant.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present rewrapping the result in `Left`.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present rewrapping the result in `Right`.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second function `g` is applied.",0,{"inputs":[{"name":"self"},{"name":"f"},{"name":"g"}],"output":{"name":"t"}}],[11,"either_with","","Like `either`, but provide some context to whichever of the functions ends up being called.",0,{"inputs":[{"name":"self"},{"name":"ctx"},{"name":"f"},{"name":"g"}],"output":{"name":"t"}}],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant if it is present.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant if it is present.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"into_iter","","Convert the inner value to an iterator.",0,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"into","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fill_buf","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"result"}}],[11,"consume","","",0,null],[11,"deref_mut","","",0,null],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",0,null],[11,"fold","","",0,{"inputs":[{"name":"self"},{"name":"acc"},{"name":"g"}],"output":{"name":"acc"}}],[11,"count","","",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"last","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"nth","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"collect","","",0,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"all","","",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"bool"}}],[11,"read","","",0,null],[11,"read_to_end","","",0,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["usize","error"],"name":"result"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"ordering"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"result"}],"output":{"name":"either"}}],[11,"hash","","",0,null],[11,"extend","","",0,null],[11,"as_ref","","",0,{"inputs":[{"name":"self"}],"output":{"name":"target"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"write","","",0,null],[11,"flush","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"result"}}],[11,"as_mut","","",0,{"inputs":[{"name":"self"}],"output":{"name":"target"}}],[11,"next_back","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"deref","","",0,null]],"paths":[[4,"Either"],[4,"Diff"],[4,"MinMaxResult"],[4,"Position"],[4,"EitherOrBoth"],[4,"FoldWhile"],[3,"RcIter"],[3,"Unfold"],[3,"MultiPeek"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"PutBack"],[3,"PutBackN"],[3,"Product"],[3,"Batching"],[3,"Step"],[3,"Merge"],[3,"MergeBy"],[3,"Coalesce"],[3,"Dedup"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"TupleCombinations"],[3,"Combinations"],[3,"UniqueBy"],[3,"Unique"],[3,"Flatten"],[3,"MapResults"],[3,"ConsTuples"],[3,"Format"],[3,"FormatWith"],[3,"Groups"],[3,"Group"],[3,"Chunks"],[3,"Chunk"],[3,"Intersperse"],[3,"KMerge"],[3,"KMergeBy"],[3,"PadUsing"],[3,"PeekingTakeWhile"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Iterate"],[3,"Tee"],[3,"TupleBuffer"],[3,"Tuples"],[3,"TupleWindows"],[3,"WithPosition"],[3,"ZipEq"],[3,"ZipLongest"],[3,"Zip"],[8,"PeekingNext"],[8,"Itertools"]]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[14,"lazy_static","lazy_static","",null,null]],"paths":[]};
searchIndex["lewton"] = {"doc":"A `vorbis` decoder, written in Rust.","items":[[4,"VorbisError","lewton","Errors that can occur during decoding",null,null],[13,"ReadError","","",0,null],[13,"BadAudio","","",0,null],[13,"BadHeader","","",0,null],[13,"OggError","","",0,null],[0,"header","","Header decoding",null,null],[3,"IdentHeader","lewton::header","",null,null],[12,"audio_channels","","",1,null],[12,"audio_sample_rate","","",1,null],[12,"bitrate_maximum","","",1,null],[12,"bitrate_nominal","","",1,null],[12,"bitrate_minimum","","",1,null],[12,"blocksize_0","","",1,null],[12,"blocksize_1","","",1,null],[12,"cached_bs_derived","","",1,null],[3,"CommentHeader","","",null,null],[12,"vendor","","",2,null],[12,"comment_list","","",2,null],[3,"Codebook","","",null,null],[12,"codebook_dimensions","","",3,null],[12,"codebook_entries","","",3,null],[12,"codebook_vq_lookup_vec","","",3,null],[12,"codebook_huffman_tree","","",3,null],[3,"Residue","","",null,null],[12,"residue_type","","",4,null],[12,"residue_begin","","",4,null],[12,"residue_end","","",4,null],[12,"residue_partition_size","","",4,null],[12,"residue_classifications","","",4,null],[12,"residue_classbook","","",4,null],[12,"residue_books","","",4,null],[3,"Mapping","","",null,null],[12,"mapping_submaps","","",5,null],[12,"mapping_magnitudes","","",5,null],[12,"mapping_angles","","",5,null],[12,"mapping_mux","","",5,null],[12,"mapping_submap_floors","","",5,null],[12,"mapping_submap_residues","","",5,null],[3,"ModeInfo","","",null,null],[12,"mode_blockflag","","",6,null],[12,"mode_windowtype","","",6,null],[12,"mode_transformtype","","",6,null],[12,"mode_mapping","","",6,null],[3,"FloorTypeZero","","",null,null],[12,"floor0_order","","",7,null],[12,"floor0_rate","","",7,null],[12,"floor0_bark_map_size","","",7,null],[12,"floor0_amplitude_bits","","",7,null],[12,"floor0_amplitude_offset","","",7,null],[12,"floor0_number_of_books","","",7,null],[12,"floor0_book_list","","",7,null],[12,"cached_bark_cos_omega","","",7,null],[3,"FloorTypeOne","","",null,null],[12,"floor1_multiplier","","",8,null],[12,"floor1_partition_class","","",8,null],[12,"floor1_class_dimensions","","",8,null],[12,"floor1_class_subclasses","","",8,null],[12,"floor1_subclass_books","","",8,null],[12,"floor1_class_masterbooks","","",8,null],[12,"floor1_x_list","","",8,null],[12,"floor1_x_list_sorted","","",8,null],[3,"ResidueBook","","",null,null],[3,"SetupHeader","","",null,null],[12,"codebooks","","",9,null],[12,"floors","","",9,null],[12,"residues","","",9,null],[12,"mappings","","",9,null],[12,"modes","","",9,null],[4,"HeaderReadError","","Errors that can occur during Header decoding",null,null],[13,"EndOfPacket","","",10,null],[13,"NotVorbisHeader","","If the passed data don't start with the \"vorbis\" capture pattern, this error is returned.",10,null],[13,"UnsupportedVorbisVersion","","",10,null],[13,"HeaderBadFormat","","If the header violates the vorbis spec",10,null],[13,"HeaderBadType","","The given packet indeed seems to be a vorbis header, but it looks like it is a different header type than the function it was passed to.",10,null],[13,"HeaderIsAudio","","The given packet does not seem to be a header as per vorbis spec, instead it seems to be an audio packet.",10,null],[13,"Utf8DecodeError","","",10,null],[13,"BufferNotAddressable","","If the needed memory isn't addressable by us",10,null],[4,"Floor","","",null,null],[13,"TypeZero","","",11,null],[13,"TypeOne","","",11,null],[4,"HuffmanVqReadErr","","Small Error type for `BitpackCursor::read_huffman_vq`.",null,null],[13,"EndOfPacket","","",12,null],[13,"NoVqLookupForCodebook","","",12,null],[5,"read_header_ident","","Reading the Identification header",null,null],[5,"read_header_comment","","Reading the Comment header",null,null],[5,"read_header_setup","","Reading the setup header.",null,null],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"headerreaderror"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"headerreaderror"}],"output":{"name":"bool"}}],[11,"from","","",10,null],[11,"from","","",10,{"inputs":[{"name":"huffmanerror"}],"output":{"name":"headerreaderror"}}],[11,"from","","",10,{"inputs":[{"name":"error"}],"output":{"name":"headerreaderror"}}],[11,"from","","",10,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"headerreaderror"}}],[11,"description","","",10,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"get_val","","",13,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"generics":["u8"],"name":"option"}}],[0,"audio","lewton","Audio packet decoding",null,null],[3,"PreviousWindowRight","lewton::audio","The right part of the previous window",null,null],[4,"AudioReadError","","",null,null],[13,"EndOfPacket","","",14,null],[13,"AudioBadFormat","","",14,null],[13,"AudioIsHeader","","",14,null],[13,"BufferNotAddressable","","If the needed memory isn't addressable by us",14,null],[5,"read_audio_packet","","Main audio packet decoding function",null,null],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"audioreaderror"}],"output":{"name":"bool"}}],[11,"from","","",14,null],[11,"description","","",14,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"new","","",15,{"inputs":[],"output":{"name":"self"}}],[0,"inside_ogg","lewton","Higher-level utilities for Ogg streams and files",null,null],[3,"OggStreamReader","lewton::inside_ogg","Reading ogg/vorbis files or streams",null,null],[12,"ident_hdr","","",16,null],[12,"comment_hdr","","",16,null],[12,"setup_hdr","","",16,null],[5,"read_headers","","Reads the three vorbis headers from an ogg stream",null,{"inputs":[{"name":"packetreader"}],"output":{"generics":["vorbiserror"],"name":"result"}}],[11,"new","","Constructs a new OggStreamReader from a given implementation of `Read + Seek`.",16,{"inputs":[{"name":"t"}],"output":{"generics":["oggstreamreader","vorbiserror"],"name":"result"}}],[11,"from_ogg_reader","","Constructs a new OggStreamReader from a given Ogg PacketReader.",16,{"inputs":[{"name":"packetreader"}],"output":{"generics":["oggstreamreader","vorbiserror"],"name":"result"}}],[11,"into_inner","","",16,{"inputs":[{"name":"self"}],"output":{"name":"packetreader"}}],[11,"read_dec_packet","","Reads and decompresses an audio packet from the stream.",16,{"inputs":[{"name":"self"}],"output":{"generics":["option","vorbiserror"],"name":"result"}}],[11,"read_dec_packet_itl","","Reads and decompresses an audio packet from the stream (interleaved).",16,{"inputs":[{"name":"self"}],"output":{"generics":["option","vorbiserror"],"name":"result"}}],[11,"fmt","lewton","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"vorbiserror"}}],[11,"from","","",0,{"inputs":[{"name":"audioreaderror"}],"output":{"name":"vorbiserror"}}],[11,"from","","",0,{"inputs":[{"name":"headerreaderror"}],"output":{"name":"vorbiserror"}}],[11,"from","","",0,{"inputs":[{"name":"oggreaderror"}],"output":{"name":"vorbiserror"}}]],"paths":[[4,"VorbisError"],[3,"IdentHeader"],[3,"CommentHeader"],[3,"Codebook"],[3,"Residue"],[3,"Mapping"],[3,"ModeInfo"],[3,"FloorTypeZero"],[3,"FloorTypeOne"],[3,"SetupHeader"],[4,"HeaderReadError"],[4,"Floor"],[4,"HuffmanVqReadErr"],[3,"ResidueBook"],[4,"AudioReadError"],[3,"PreviousWindowRight"],[3,"OggStreamReader"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"itimerval","","",null,null],[12,"it_interval","","",16,null],[12,"it_value","","",16,null],[3,"tms","","",null,null],[12,"tms_utime","","",17,null],[12,"tms_stime","","",17,null],[12,"tms_cutime","","",17,null],[12,"tms_cstime","","",17,null],[3,"servent","","",null,null],[12,"s_name","","",18,null],[12,"s_aliases","","",18,null],[12,"s_port","","",18,null],[12,"s_proto","","",18,null],[3,"protoent","","",null,null],[12,"p_name","","",19,null],[12,"p_aliases","","",19,null],[12,"p_proto","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",23,null],[12,"sun_path","","",23,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",24,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",25,null],[12,"ai_family","","",25,null],[12,"ai_socktype","","",25,null],[12,"ai_protocol","","",25,null],[12,"ai_addrlen","","",25,null],[12,"ai_addr","","",25,null],[12,"ai_canonname","","",25,null],[12,"ai_next","","",25,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",26,null],[12,"nl_pid","","",26,null],[12,"nl_groups","","",26,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",27,null],[12,"sll_protocol","","",27,null],[12,"sll_ifindex","","",27,null],[12,"sll_hatype","","",27,null],[12,"sll_pkttype","","",27,null],[12,"sll_halen","","",27,null],[12,"sll_addr","","",27,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",28,null],[12,"tm_min","","",28,null],[12,"tm_hour","","",28,null],[12,"tm_mday","","",28,null],[12,"tm_mon","","",28,null],[12,"tm_year","","",28,null],[12,"tm_wday","","",28,null],[12,"tm_yday","","",28,null],[12,"tm_isdst","","",28,null],[12,"tm_gmtoff","","",28,null],[12,"tm_zone","","",28,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",29,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",30,null],[12,"dli_fbase","","",30,null],[12,"dli_sname","","",30,null],[12,"dli_saddr","","",30,null],[3,"epoll_event","","",null,null],[12,"events","","",31,null],[12,"u64","","",31,null],[3,"utsname","","",null,null],[12,"sysname","","",32,null],[12,"nodename","","",32,null],[12,"release","","",32,null],[12,"version","","",32,null],[12,"machine","","",32,null],[12,"domainname","","",32,null],[3,"lconv","","",null,null],[12,"decimal_point","","",33,null],[12,"thousands_sep","","",33,null],[12,"grouping","","",33,null],[12,"int_curr_symbol","","",33,null],[12,"currency_symbol","","",33,null],[12,"mon_decimal_point","","",33,null],[12,"mon_thousands_sep","","",33,null],[12,"mon_grouping","","",33,null],[12,"positive_sign","","",33,null],[12,"negative_sign","","",33,null],[12,"int_frac_digits","","",33,null],[12,"frac_digits","","",33,null],[12,"p_cs_precedes","","",33,null],[12,"p_sep_by_space","","",33,null],[12,"n_cs_precedes","","",33,null],[12,"n_sep_by_space","","",33,null],[12,"p_sign_posn","","",33,null],[12,"n_sign_posn","","",33,null],[12,"int_p_cs_precedes","","",33,null],[12,"int_p_sep_by_space","","",33,null],[12,"int_n_cs_precedes","","",33,null],[12,"int_n_sep_by_space","","",33,null],[12,"int_p_sign_posn","","",33,null],[12,"int_n_sign_posn","","",33,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",34,null],[12,"sigev_signo","","",34,null],[12,"sigev_notify","","",34,null],[12,"sigev_notify_thread_id","","",34,null],[3,"dirent","","",null,null],[12,"d_ino","","",35,null],[12,"d_off","","",35,null],[12,"d_reclen","","",35,null],[12,"d_type","","",35,null],[12,"d_name","","",35,null],[3,"dirent64","","",null,null],[12,"d_ino","","",36,null],[12,"d_off","","",36,null],[12,"d_reclen","","",36,null],[12,"d_type","","",36,null],[12,"d_name","","",36,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",37,null],[12,"rlim_max","","",37,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",38,null],[12,"gl_pathv","","",38,null],[12,"gl_offs","","",38,null],[12,"gl_flags","","",38,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",39,null],[12,"ifa_name","","",39,null],[12,"ifa_flags","","",39,null],[12,"ifa_addr","","",39,null],[12,"ifa_netmask","","",39,null],[12,"ifa_ifu","","",39,null],[12,"ifa_data","","",39,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",40,null],[12,"pw_passwd","","",40,null],[12,"pw_uid","","",40,null],[12,"pw_gid","","",40,null],[12,"pw_gecos","","",40,null],[12,"pw_dir","","",40,null],[12,"pw_shell","","",40,null],[3,"spwd","","",null,null],[12,"sp_namp","","",41,null],[12,"sp_pwdp","","",41,null],[12,"sp_lstchg","","",41,null],[12,"sp_min","","",41,null],[12,"sp_max","","",41,null],[12,"sp_warn","","",41,null],[12,"sp_inact","","",41,null],[12,"sp_expire","","",41,null],[12,"sp_flag","","",41,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",42,null],[12,"f_frsize","","",42,null],[12,"f_blocks","","",42,null],[12,"f_bfree","","",42,null],[12,"f_bavail","","",42,null],[12,"f_files","","",42,null],[12,"f_ffree","","",42,null],[12,"f_favail","","",42,null],[12,"f_fsid","","",42,null],[12,"f_flag","","",42,null],[12,"f_namemax","","",42,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",43,null],[12,"dqb_bsoftlimit","","",43,null],[12,"dqb_curspace","","",43,null],[12,"dqb_ihardlimit","","",43,null],[12,"dqb_isoftlimit","","",43,null],[12,"dqb_curinodes","","",43,null],[12,"dqb_btime","","",43,null],[12,"dqb_itime","","",43,null],[12,"dqb_valid","","",43,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",44,null],[12,"ssi_errno","","",44,null],[12,"ssi_code","","",44,null],[12,"ssi_pid","","",44,null],[12,"ssi_uid","","",44,null],[12,"ssi_fd","","",44,null],[12,"ssi_tid","","",44,null],[12,"ssi_band","","",44,null],[12,"ssi_overrun","","",44,null],[12,"ssi_trapno","","",44,null],[12,"ssi_status","","",44,null],[12,"ssi_int","","",44,null],[12,"ssi_ptr","","",44,null],[12,"ssi_utime","","",44,null],[12,"ssi_stime","","",44,null],[12,"ssi_addr","","",44,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",45,null],[12,"it_value","","",45,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",46,null],[12,"mq_maxmsg","","",46,null],[12,"mq_msgsize","","",46,null],[12,"mq_curmsgs","","",46,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",47,null],[12,"if_name","","",47,null],[3,"msginfo","","",null,null],[12,"msgpool","","",48,null],[12,"msgmap","","",48,null],[12,"msgmax","","",48,null],[12,"msgmnb","","",48,null],[12,"msgmni","","",48,null],[12,"msgssz","","",48,null],[12,"msgtql","","",48,null],[12,"msgseg","","",48,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",49,null],[12,"msg_len","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",65,null],[12,"dlpi_name","","",65,null],[12,"dlpi_phdr","","",65,null],[12,"dlpi_phnum","","",65,null],[12,"dlpi_adds","","",65,null],[12,"dlpi_subs","","",65,null],[12,"dlpi_tls_modid","","",65,null],[12,"dlpi_tls_data","","",65,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",66,null],[12,"p_offset","","",66,null],[12,"p_vaddr","","",66,null],[12,"p_paddr","","",66,null],[12,"p_filesz","","",66,null],[12,"p_memsz","","",66,null],[12,"p_flags","","",66,null],[12,"p_align","","",66,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",67,null],[12,"p_flags","","",67,null],[12,"p_offset","","",67,null],[12,"p_vaddr","","",67,null],[12,"p_paddr","","",67,null],[12,"p_filesz","","",67,null],[12,"p_memsz","","",67,null],[12,"p_align","","",67,null],[3,"ucred","","",null,null],[12,"pid","","",68,null],[12,"uid","","",68,null],[12,"gid","","",68,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",69,null],[12,"mnt_dir","","",69,null],[12,"mnt_type","","",69,null],[12,"mnt_opts","","",69,null],[12,"mnt_freq","","",69,null],[12,"mnt_passno","","",69,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",70,null],[12,"aio_lio_opcode","","",70,null],[12,"aio_reqprio","","",70,null],[12,"aio_buf","","",70,null],[12,"aio_nbytes","","",70,null],[12,"aio_sigevent","","",70,null],[12,"aio_offset","","",70,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",71,null],[12,"e_exit","","",71,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",72,null],[12,"tv_usec","","",72,null],[3,"utmpx","","",null,null],[12,"ut_type","","",73,null],[12,"ut_pid","","",73,null],[12,"ut_line","","",73,null],[12,"ut_id","","",73,null],[12,"ut_user","","",73,null],[12,"ut_host","","",73,null],[12,"ut_exit","","",73,null],[12,"ut_session","","",73,null],[12,"ut_tv","","",73,null],[12,"ut_addr_v6","","",73,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",74,null],[12,"sa_mask","","",74,null],[12,"sa_flags","","",74,null],[12,"sa_restorer","","",74,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",75,null],[12,"ss_flags","","",75,null],[12,"ss_size","","",75,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",76,null],[12,"si_errno","","",76,null],[12,"si_code","","",76,null],[12,"_pad","","",76,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",77,null],[12,"gl_pathv","","",77,null],[12,"gl_offs","","",77,null],[12,"gl_flags","","",77,null],[3,"statfs","","",null,null],[12,"f_type","","",78,null],[12,"f_bsize","","",78,null],[12,"f_blocks","","",78,null],[12,"f_bfree","","",78,null],[12,"f_bavail","","",78,null],[12,"f_files","","",78,null],[12,"f_ffree","","",78,null],[12,"f_fsid","","",78,null],[12,"f_namelen","","",78,null],[12,"f_frsize","","",78,null],[3,"msghdr","","",null,null],[12,"msg_name","","",79,null],[12,"msg_namelen","","",79,null],[12,"msg_iov","","",79,null],[12,"msg_iovlen","","",79,null],[12,"msg_control","","",79,null],[12,"msg_controllen","","",79,null],[12,"msg_flags","","",79,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",80,null],[12,"cmsg_level","","",80,null],[12,"cmsg_type","","",80,null],[3,"termios","","",null,null],[12,"c_iflag","","",81,null],[12,"c_oflag","","",81,null],[12,"c_cflag","","",81,null],[12,"c_lflag","","",81,null],[12,"c_line","","",81,null],[12,"c_cc","","",81,null],[12,"c_ispeed","","",81,null],[12,"c_ospeed","","",81,null],[3,"flock","","",null,null],[12,"l_type","","",82,null],[12,"l_whence","","",82,null],[12,"l_start","","",82,null],[12,"l_len","","",82,null],[12,"l_pid","","",82,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",83,null],[12,"loads","","",83,null],[12,"totalram","","",83,null],[12,"freeram","","",83,null],[12,"sharedram","","",83,null],[12,"bufferram","","",83,null],[12,"totalswap","","",83,null],[12,"freeswap","","",83,null],[12,"procs","","",83,null],[12,"pad","","",83,null],[12,"totalhigh","","",83,null],[12,"freehigh","","",83,null],[12,"mem_unit","","",83,null],[12,"_f","","",83,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",84,null],[12,"msg_stime","","",84,null],[12,"msg_rtime","","",84,null],[12,"msg_ctime","","",84,null],[12,"msg_qnum","","",84,null],[12,"msg_qbytes","","",84,null],[12,"msg_lspid","","",84,null],[12,"msg_lrpid","","",84,null],[3,"stat","","",null,null],[12,"st_dev","","",85,null],[12,"st_ino","","",85,null],[12,"st_nlink","","",85,null],[12,"st_mode","","",85,null],[12,"st_uid","","",85,null],[12,"st_gid","","",85,null],[12,"st_rdev","","",85,null],[12,"st_size","","",85,null],[12,"st_blksize","","",85,null],[12,"st_blocks","","",85,null],[12,"st_atime","","",85,null],[12,"st_atime_nsec","","",85,null],[12,"st_mtime","","",85,null],[12,"st_mtime_nsec","","",85,null],[12,"st_ctime","","",85,null],[12,"st_ctime_nsec","","",85,null],[3,"stat64","","",null,null],[12,"st_dev","","",86,null],[12,"st_ino","","",86,null],[12,"st_nlink","","",86,null],[12,"st_mode","","",86,null],[12,"st_uid","","",86,null],[12,"st_gid","","",86,null],[12,"st_rdev","","",86,null],[12,"st_size","","",86,null],[12,"st_blksize","","",86,null],[12,"st_blocks","","",86,null],[12,"st_atime","","",86,null],[12,"st_atime_nsec","","",86,null],[12,"st_mtime","","",86,null],[12,"st_mtime_nsec","","",86,null],[12,"st_ctime","","",86,null],[12,"st_ctime_nsec","","",86,null],[3,"statfs64","","",null,null],[12,"f_type","","",87,null],[12,"f_bsize","","",87,null],[12,"f_blocks","","",87,null],[12,"f_bfree","","",87,null],[12,"f_bavail","","",87,null],[12,"f_files","","",87,null],[12,"f_ffree","","",87,null],[12,"f_fsid","","",87,null],[12,"f_namelen","","",87,null],[12,"f_frsize","","",87,null],[12,"f_flags","","",87,null],[12,"f_spare","","",87,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",88,null],[12,"f_frsize","","",88,null],[12,"f_blocks","","",88,null],[12,"f_bfree","","",88,null],[12,"f_bavail","","",88,null],[12,"f_files","","",88,null],[12,"f_ffree","","",88,null],[12,"f_favail","","",88,null],[12,"f_fsid","","",88,null],[12,"f_flag","","",88,null],[12,"f_namemax","","",88,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",89,null],[12,"exponent","","",89,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",90,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",91,null],[12,"swd","","",91,null],[12,"ftw","","",91,null],[12,"fop","","",91,null],[12,"rip","","",91,null],[12,"rdp","","",91,null],[12,"mxcsr","","",91,null],[12,"mxcr_mask","","",91,null],[12,"_st","","",91,null],[12,"_xmm","","",91,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",92,null],[12,"swd","","",92,null],[12,"ftw","","",92,null],[12,"fop","","",92,null],[12,"rip","","",92,null],[12,"rdp","","",92,null],[12,"mxcsr","","",92,null],[12,"mxcr_mask","","",92,null],[12,"st_space","","",92,null],[12,"xmm_space","","",92,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",93,null],[12,"r14","","",93,null],[12,"r13","","",93,null],[12,"r12","","",93,null],[12,"rbp","","",93,null],[12,"rbx","","",93,null],[12,"r11","","",93,null],[12,"r10","","",93,null],[12,"r9","","",93,null],[12,"r8","","",93,null],[12,"rax","","",93,null],[12,"rcx","","",93,null],[12,"rdx","","",93,null],[12,"rsi","","",93,null],[12,"rdi","","",93,null],[12,"orig_rax","","",93,null],[12,"rip","","",93,null],[12,"cs","","",93,null],[12,"eflags","","",93,null],[12,"rsp","","",93,null],[12,"ss","","",93,null],[12,"fs_base","","",93,null],[12,"gs_base","","",93,null],[12,"ds","","",93,null],[12,"es","","",93,null],[12,"fs","","",93,null],[12,"gs","","",93,null],[3,"user","","",null,null],[12,"regs","","",94,null],[12,"u_fpvalid","","",94,null],[12,"i387","","",94,null],[12,"u_tsize","","",94,null],[12,"u_dsize","","",94,null],[12,"u_ssize","","",94,null],[12,"start_code","","",94,null],[12,"start_stack","","",94,null],[12,"signal","","",94,null],[12,"u_ar0","","",94,null],[12,"u_fpstate","","",94,null],[12,"magic","","",94,null],[12,"u_comm","","",94,null],[12,"u_debugreg","","",94,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",95,null],[12,"fpregs","","",95,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",96,null],[12,"uc_link","","",96,null],[12,"uc_stack","","",96,null],[12,"uc_mcontext","","",96,null],[12,"uc_sigmask","","",96,null],[3,"ipc_perm","","",null,null],[12,"__key","","",97,null],[12,"uid","","",97,null],[12,"gid","","",97,null],[12,"cuid","","",97,null],[12,"cgid","","",97,null],[12,"mode","","",97,null],[12,"__seq","","",97,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",98,null],[12,"shm_segsz","","",98,null],[12,"shm_atime","","",98,null],[12,"shm_dtime","","",98,null],[12,"shm_ctime","","",98,null],[12,"shm_cpid","","",98,null],[12,"shm_lpid","","",98,null],[12,"shm_nattch","","",98,null],[3,"termios2","","",null,null],[12,"c_iflag","","",99,null],[12,"c_oflag","","",99,null],[12,"c_cflag","","",99,null],[12,"c_lflag","","",99,null],[12,"c_line","","",99,null],[12,"c_cc","","",99,null],[12,"c_ispeed","","",99,null],[12,"c_ospeed","","",99,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFCONTINUED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"QCMD","","",null,{"inputs":[{"name":"c_int"},{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"major","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"c_uint"}}],[5,"minor","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"c_uint"}}],[5,"makedev","","",null,{"inputs":[{"name":"c_uint"},{"name":"c_uint"}],"output":{"name":"dev_t"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"openat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"uname","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"getsid","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"cfsetspeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"fdopendir","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"stat"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"stat64"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"statfs64"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"statvfs64"}}],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"_libc_fpxreg"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"_libc_xmmreg"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"_libc_fpstate"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"user_fpregs_struct"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"user_regs_struct"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"user"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"mcontext_t"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"ucontext_t"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"termios2"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"sigset_t"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"sysinfo"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"msqid_ds"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"aiocb"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"__exit_status"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"__timeval"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"utmpx"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"sigaction"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"stack_t"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"glob64_t"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"statfs"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"msghdr"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"cmsghdr"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"termios"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"flock"}}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"sem_t"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"dirent"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"dirent64"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"rlimit64"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"glob_t"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",104,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlockattr_t"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"pthread_condattr_t"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"passwd"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"spwd"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"statvfs"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"dqblk"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"itimerspec"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"fsid_t"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"mq_attr"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"if_nameindex"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"msginfo"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"mmsghdr"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"sembuf"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"input_event"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"input_id"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"input_absinfo"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"input_keymap_entry"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"input_mask"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"ff_replay"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"ff_trigger"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"ff_envelope"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"ff_constant_effect"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"ff_ramp_effect"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"ff_condition_effect"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"ff_periodic_effect"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"ff_rumble_effect"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"ff_effect"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"dl_phdr_info"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"elf32_phdr"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"elf64_phdr"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"ucred"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"mntent"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"addrinfo"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"fd_set"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"sched_param"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"dl_info"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"epoll_event"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"utsname"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"lconv"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"sigevent"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"group"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"utimbuf"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rlimit"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"rusage"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"in_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"in6_addr"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"hostent"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"iovec"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"pollfd"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"winsize"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"linger"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"sigval"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"itimerval"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"tms"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"servent"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"protoent"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"__priority_which_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_ALG","","",null,null],[17,"SOL_NFC","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening port",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"ucred"],[3,"mntent"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["libloading"] = {"doc":"A memory-safer wrapper around system dynamic library loading primitives.","items":[[3,"Library","libloading","A loaded dynamic library.",null,null],[3,"Symbol","","Symbol from a library.",null,null],[0,"os","","Unsafe, platform specific bindings to dynamic library loading facilities.",null,null],[0,"unix","libloading::os","UNIX implementation of dynamic library loading.",null,null],[3,"Library","libloading::os::unix","A platform-specific equivalent of the cross-platform `Library`.",null,null],[3,"Symbol","","Symbol from a library.",null,null],[11,"new","","Find and load a shared library (module).",0,{"inputs":[{"name":"p"}],"output":{"generics":["library"],"name":"result"}}],[11,"this","","Load the dynamic libraries linked into main program.",0,{"inputs":[],"output":{"name":"library"}}],[11,"open","","Find and load a shared library (module).",0,{"inputs":[{"name":"option"},{"name":"c_int"}],"output":{"generics":["library"],"name":"result"}}],[11,"get","","Get a pointer to function or static variable by symbol name.",0,null],[11,"drop","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"symbol"}}],[11,"deref","","",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"windows","libloading::os","Windows implementation of dynamic library loading.",null,null],[0,"changelog","libloading","Project changelog",null,null],[0,"r0_3_4","libloading::changelog","Release 0.3.4 (2017-03-25)",null,null],[0,"r0_3_3","","Release 0.3.3 (2017-03-25)",null,null],[0,"r0_3_2","","Release 0.3.2 (2017-02-10)",null,null],[0,"r0_3_1","","Release 0.3.1 (2016-10-01)",null,null],[0,"r0_3_0","","Release 0.3.0 (2016-07-27)",null,null],[6,"Result","libloading","",null,null],[11,"new","","Find and load a dynamic library.",2,{"inputs":[{"name":"p"}],"output":{"generics":["library"],"name":"result"}}],[11,"get","","Get a pointer to function or static variable by symbol name.",2,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",2,{"inputs":[{"name":"library"}],"output":{"name":"library"}}],[11,"from","libloading::os::unix","",0,{"inputs":[{"name":"library"}],"output":{"name":"library"}}],[11,"into_raw","libloading","Extract the wrapped `os::platform::Symbol`.",3,{"inputs":[{"name":"self"}],"output":{"name":"symbol"}}],[11,"from_raw","","Wrap the `os::platform::Symbol` into this safe wrapper.",3,{"inputs":[{"name":"symbol"},{"name":"l"}],"output":{"name":"symbol"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"symbol"}}],[11,"deref","","",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Library"],[3,"Symbol"],[3,"Library"],[3,"Symbol"]]};
searchIndex["linked_hash_map"] = {"doc":"A `HashMap` wrapper that holds key-value pairs in insertion order.","items":[[3,"LinkedHashMap","linked_hash_map","A linked hash map.",null,null],[3,"Iter","","An insertion-order iterator over a `LinkedHashMap`'s entries, with immutable references to the values.",null,null],[3,"IterMut","","An insertion-order iterator over a `LinkedHashMap`'s entries, with mutable references to the values.",null,null],[3,"IntoIter","","A consuming insertion-order iterator over a `LinkedHashMap`'s entries.",null,null],[3,"Entries","","An insertion-order iterator over a `LinkedHashMap`'s entries represented as an `OccupiedEntry`.",null,null],[3,"Keys","","An insertion-order iterator over a `LinkedHashMap`'s keys.",null,null],[3,"Values","","An insertion-order iterator over a `LinkedHashMap`'s values.",null,null],[3,"OccupiedEntry","","A view into a single occupied location in a `LinkedHashMap`.",null,null],[3,"VacantEntry","","A view into a single empty location in a `LinkedHashMap`.",null,null],[4,"Entry","","A view into a single location in a map, which may be vacant or occupied.",null,null],[13,"Occupied","","An occupied Entry.",0,null],[13,"Vacant","","A vacant Entry.",0,null],[11,"new","","Creates a linked hash map.",1,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Creates an empty linked hash map with the given initial capacity.",1,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"with_hasher","","Creates an empty linked hash map with the given initial hash builder.",1,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"with_capacity_and_hasher","","Creates an empty linked hash map with the given initial capacity and hash builder.",1,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"self"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted into the map. The map may reserve more space to avoid frequent allocations.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop down as much as possible while maintaining the internal rules and possibly leaving some space in accordance with the resize policy.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",1,{"inputs":[{"name":"self"},{"name":"k"}],"output":{"name":"entry"}}],[11,"entries","","Returns an iterator visiting all entries in insertion order. Iterator element type is `OccupiedEntry<K, V, S>`. Allows for removal as well as replacing the entry.",1,{"inputs":[{"name":"self"}],"output":{"name":"entries"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already existed, the old value is returned.",1,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"contains_key","","Checks if the map contains the given key.",1,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get","","Returns the value corresponding to the key in the map.",1,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"option"}}],[11,"get_mut","","Returns the mutable reference corresponding to the key in the map.",1,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"option"}}],[11,"get_refresh","","Returns the value corresponding to the key in the map.",1,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"option"}}],[11,"remove","","Removes and returns the value corresponding to the key from the map.",1,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"option"}}],[11,"capacity","","Returns the maximum number of key-value pairs the map can hold without reallocating.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"pop_front","","Removes the first entry.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"front","","Gets the first entry.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"pop_back","","Removes the last entry.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"back","","Gets the last entry.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"len","","Returns the number of key-value pairs in the map.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns whether the map is currently empty.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"hasher","","Returns a reference to the map's hasher.",1,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"clear","","Clears the map of all key-value pairs.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"iter","","Returns a double-ended iterator visiting all key-value pairs in order of insertion. Iterator element type is `(&'a K, &'a V)`",1,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a double-ended iterator visiting all key-value pairs in order of insertion. Iterator element type is `(&'a K, &'a mut V)` # Examples ``` use linked_hash_map::LinkedHashMap;",1,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"keys","","Returns a double-ended iterator visiting all key in order of insertion.",1,{"inputs":[{"name":"self"}],"output":{"name":"keys"}}],[11,"values","","Returns a double-ended iterator visiting all values in order of insertion.",1,{"inputs":[{"name":"self"}],"output":{"name":"values"}}],[11,"index","","",1,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"v"}}],[11,"index_mut","","",1,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"extend","","",1,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"extend","","",1,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"from_iter","","",1,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"fmt","","Returns a string that lists the key-value pairs in insertion order.",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"hash","","",1,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"drop","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",4,null],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",3,null],[11,"next","","",5,{"inputs":[{"name":"self"}],"output":{"generics":["occupiedentry"],"name":"option"}}],[11,"size_hint","","",5,null],[11,"next_back","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next_back","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next_back","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"len","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"len","","",4,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"len","","",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"drop","","",3,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"next","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",6,null],[11,"next_back","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"len","","",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"next","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",7,null],[11,"next_back","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"len","","",7,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"into_iter","","",1,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"key","","Returns the entry key",0,{"inputs":[{"name":"self"}],"output":{"name":"k"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns a mutable reference to the value in the entry.",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty, and returns a mutable reference to the value in the entry.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"v"}}],[11,"key","","Gets a reference to the entry key",8,{"inputs":[{"name":"self"}],"output":{"name":"k"}}],[11,"get","","Gets a reference to the value in the entry.",8,{"inputs":[{"name":"self"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",8,{"inputs":[{"name":"self"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry with a lifetime bound to the map itself",8,{"inputs":[{"name":"self"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry's old value",8,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",8,{"inputs":[{"name":"self"}],"output":{"name":"v"}}],[11,"key","","Gets a reference to the entry key",9,{"inputs":[{"name":"self"}],"output":{"name":"k"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key, and returns a mutable reference to it",9,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"v"}}]],"paths":[[4,"Entry"],[3,"LinkedHashMap"],[3,"Iter"],[3,"IntoIter"],[3,"IterMut"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"OccupiedEntry"],[3,"VacantEntry"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The \"payload\" of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level filter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has already been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging framework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"generics":["setloggererror"],"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"generics":["setloggererror"],"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"generics":["box","shutdownloggererror"],"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"generics":["shutdownloggererror"],"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be logged.",2,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[10,"log","","Logs the `LogRecord`.",2,{"inputs":[{"name":"self"},{"name":"logrecord"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"loglevel"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"ordering"}}],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"generics":["loglevel"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"ordering"}}],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"generics":["loglevelfilter"],"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,{"inputs":[{"name":"self"}],"output":{"generics":["loglevel"],"name":"option"}}],[11,"args","","The message body.",3,{"inputs":[{"name":"self"}],"output":{"name":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"inputs":[{"name":"self"}],"output":{"name":"logmetadata"}}],[11,"location","","The location of the log directive.",3,{"inputs":[{"name":"self"}],"output":{"name":"loglocation"}}],[11,"level","","The verbosity level of the message.",3,{"inputs":[{"name":"self"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"level","","The verbosity level of the message.",4,{"inputs":[{"name":"self"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",4,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"loglocation"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"module_path","","The module path of the message.",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"file","","The source file containing the message.",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"line","","The line containing the message.",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Gets the current maximum log level filter.",6,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",6,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in that module will be logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["memchr"] = {"doc":"This crate defines two functions, `memchr` and `memrchr`, which expose a safe interface to the corresponding functions in `libc`.","items":[[5,"memchr","memchr","A safe interface to `memchr`.",null,null],[5,"memrchr","","A safe interface to `memrchr`.",null,null],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",null,null],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",null,null]],"paths":[]};
searchIndex["memmap"] = {"doc":"A cross-platform Rust API for memory maps.","items":[[3,"MmapOptions","memmap","",null,null],[12,"stack","","Indicates that the memory map should be suitable for a stack.",0,null],[3,"Mmap","","A memory-mapped buffer.",null,null],[3,"MmapView","","A view of a memory map.",null,null],[3,"MmapViewSync","","A thread-safe view of a memory map.",null,null],[4,"Protection","","Memory map protection.",null,null],[13,"Read","","A read-only memory map. Writes to the memory map will result in a panic.",1,null],[13,"ReadWrite","","A read-write memory map. Writes to the memory map will be reflected in the file after a call to `Mmap::flush` or after the `Mmap` is dropped.",1,null],[13,"ReadCopy","","A read, copy-on-write memory map. Writes to the memory map will not be carried through to the underlying file. It is unspecified whether changes made to the file after the memory map is created will be visible.",1,null],[13,"ReadExecute","","A readable and executable mapping.",1,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"protection"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"protection"}],"output":{"name":"bool"}}],[11,"write","","Returns `true` if the `Protection` is writable.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"mmapoptions"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"mmapoptions"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"mmapoptions"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"mmapoptions"}],"output":{"name":"bool"}}],[11,"open","","Opens a file-backed memory map.",2,{"inputs":[{"name":"file"},{"name":"protection"}],"output":{"generics":["mmap"],"name":"result"}}],[11,"open_path","","Opens a file-backed memory map.",2,{"inputs":[{"name":"p"},{"name":"protection"}],"output":{"generics":["mmap"],"name":"result"}}],[11,"open_with_offset","","Opens a file-backed memory map with the specified offset and length.",2,{"inputs":[{"name":"file"},{"name":"protection"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["mmap"],"name":"result"}}],[11,"anonymous","","Opens an anonymous memory map.",2,{"inputs":[{"name":"usize"},{"name":"protection"}],"output":{"generics":["mmap"],"name":"result"}}],[11,"anonymous_with_options","","Opens an anonymous memory map with the provided options.",2,{"inputs":[{"name":"usize"},{"name":"protection"},{"name":"mmapoptions"}],"output":{"generics":["mmap"],"name":"result"}}],[11,"flush","","Flushes outstanding memory map modifications to disk.",2,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"flush_async","","Asynchronously flushes outstanding memory map modifications to disk.",2,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"flush_range","","Flushes outstanding memory map modifications in the range to disk.",2,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"flush_async_range","","Asynchronously flushes outstanding memory map modifications in the range to disk.",2,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"set_protection","","Change the `Protection` this mapping was created with.",2,{"inputs":[{"name":"self"},{"name":"protection"}],"output":{"name":"result"}}],[11,"len","","Returns the length of the memory map.",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"ptr","","Returns a pointer to the mapped memory.",2,null],[11,"mut_ptr","","Returns a pointer to the mapped memory.",2,null],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",2,null],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",2,null],[11,"into_view","","Creates a splittable mmap view from the mmap.",2,{"inputs":[{"name":"self"}],"output":{"name":"mmapview"}}],[11,"into_view_sync","","Creates a thread-safe splittable mmap view from the mmap.",2,{"inputs":[{"name":"self"}],"output":{"name":"mmapviewsync"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"split_at","","Split the view into disjoint pieces at the specified offset.",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"restrict","","Restricts the range of the view to the provided offset and length.",3,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"flush","","Flushes outstanding view modifications to disk.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"flush_async","","Asynchronously flushes outstanding memory map view modifications to disk.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"len","","Returns the length of the memory map view.",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"ptr","","Returns a shared pointer to the mapped memory.",3,null],[11,"mut_ptr","","Returns a mutable pointer to the mapped memory.",3,null],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",3,null],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",3,null],[11,"clone","","Clones the view of the memory map.",3,{"inputs":[{"name":"self"}],"output":{"name":"mmapview"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"split_at","","Split the view into disjoint pieces at the specified offset.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"restrict","","Restricts the range of this view to the provided offset and length.",4,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"flush","","Flushes outstanding view modifications to disk.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"flush_async","","Asynchronously flushes outstanding memory map view modifications to disk.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"len","","Returns the length of the memory map view.",4,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"ptr","","Returns a shared pointer to the mapped memory.",4,null],[11,"mut_ptr","","Returns a mutable pointer to the mapped memory.",4,null],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",4,null],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",4,null],[11,"clone","","Clones the view of the memory map.",4,{"inputs":[{"name":"self"}],"output":{"name":"mmapviewsync"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"MmapOptions"],[4,"Protection"],[3,"Mmap"],[3,"MmapView"],[3,"MmapViewSync"]]};
searchIndex["miniz_sys"] = {"doc":"","items":[[3,"mz_stream","miniz_sys","",null,null],[12,"next_in","","",0,null],[12,"avail_in","","",0,null],[12,"total_in","","",0,null],[12,"next_out","","",0,null],[12,"avail_out","","",0,null],[12,"total_out","","",0,null],[12,"msg","","",0,null],[12,"state","","",0,null],[12,"zalloc","","",0,null],[12,"zfree","","",0,null],[12,"opaque","","",0,null],[12,"data_type","","",0,null],[12,"adler","","",0,null],[12,"reserved","","",0,null],[4,"mz_internal_state","","",null,null],[5,"mz_deflateInit2","","",null,null],[5,"mz_deflate","","",null,null],[5,"mz_deflateEnd","","",null,null],[5,"mz_deflateReset","","",null,null],[5,"mz_inflateInit2","","",null,null],[5,"mz_inflate","","",null,null],[5,"mz_inflateEnd","","",null,null],[5,"mz_crc32","","",null,null],[6,"mz_alloc_func","","",null,null],[6,"mz_free_func","","",null,null],[17,"MZ_NO_FLUSH","","",null,null],[17,"MZ_PARTIAL_FLUSH","","",null,null],[17,"MZ_SYNC_FLUSH","","",null,null],[17,"MZ_FULL_FLUSH","","",null,null],[17,"MZ_FINISH","","",null,null],[17,"MZ_BLOCK","","",null,null],[17,"MZ_OK","","",null,null],[17,"MZ_STREAM_END","","",null,null],[17,"MZ_NEED_DICT","","",null,null],[17,"MZ_ERRNO","","",null,null],[17,"MZ_STREAM_ERROR","","",null,null],[17,"MZ_DATA_ERROR","","",null,null],[17,"MZ_MEM_ERROR","","",null,null],[17,"MZ_BUF_ERROR","","",null,null],[17,"MZ_VERSION_ERROR","","",null,null],[17,"MZ_PARAM_ERROR","","",null,null],[17,"MZ_DEFLATED","","",null,null],[17,"MZ_DEFAULT_WINDOW_BITS","","",null,null],[17,"MZ_DEFAULT_STRATEGY","","",null,null]],"paths":[[3,"mz_stream"]]};
searchIndex["mint"] = {"doc":"Mint - Math interoperability standard types.","items":[[3,"ColumnMatrix2","mint","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"ColumnMatrix3","","",null,null],[12,"x","","",1,null],[12,"y","","",1,null],[12,"z","","",1,null],[3,"ColumnMatrix4","","",null,null],[12,"x","","",2,null],[12,"y","","",2,null],[12,"z","","",2,null],[12,"w","","",2,null],[3,"RowMatrix2","","",null,null],[12,"x","","",3,null],[12,"y","","",3,null],[3,"RowMatrix3","","",null,null],[12,"x","","",4,null],[12,"y","","",4,null],[12,"z","","",4,null],[3,"RowMatrix4","","",null,null],[12,"x","","",5,null],[12,"y","","",5,null],[12,"z","","",5,null],[12,"w","","",5,null],[4,"IntraXYZ","","Intrinsic rotation around X, then Y, then Z axis.",null,null],[4,"IntraZXZ","","Intrinsic rotation around Z, then X, then Z axis.",null,null],[4,"IntraZYX","","Intrinsic rotation around Z, then Y, then X axis.",null,null],[4,"ExtraXYZ","","Extrinsic rotation around X, then Y, then Z axis.",null,null],[4,"ExtraZXZ","","Extrinsic rotation around Z, then X, then Z axis.",null,null],[4,"ExtraZYX","","Extrinsic rotation around Z, then Y, then X axis.",null,null],[3,"EulerAngles","","Abstract set of Euler angles in 3D space. The basis of angles is defined by the generic parameter `B`.",null,null],[12,"a","","First angle of rotation in range [-pi, pi] (pitch).",6,null],[12,"b","","Second angle of rotation around in range [-pi/2, pi/2] (yaw).",6,null],[12,"c","","Third angle of rotation in range [-pi, pi] (roll).",6,null],[12,"marker","","Marker for the phantom basis.",6,null],[3,"Quaternion","","Standard quaternion represented by the scalar and vector parts. Useful for representing rotation in 3D space. Corresponds to a right-handed rotation matrix.",null,null],[12,"s","","Scalar part of a quaternion.",7,null],[12,"v","","Vector part of a quaternion.",7,null],[3,"Point2","","",null,null],[12,"x","","",8,null],[12,"y","","",8,null],[3,"Point3","","",null,null],[12,"x","","",9,null],[12,"y","","",9,null],[12,"z","","",9,null],[3,"Vector2","","",null,null],[12,"x","","",10,null],[12,"y","","",10,null],[3,"Vector3","","",null,null],[12,"x","","",11,null],[12,"y","","",11,null],[12,"z","","",11,null],[3,"Vector4","","",null,null],[12,"x","","",12,null],[12,"y","","",12,null],[12,"z","","",12,null],[12,"w","","",12,null],[3,"RowMatrix2x3","","",null,null],[12,"x","","",13,null],[12,"y","","",13,null],[12,"z","","",13,null],[3,"RowMatrix3x4","","",null,null],[12,"x","","",14,null],[12,"y","","",14,null],[12,"z","","",14,null],[12,"w","","",14,null],[3,"ColumnMatrix3x2","","",null,null],[12,"x","","",15,null],[12,"y","","",15,null],[3,"ColumnMatrix4x3","","",null,null],[12,"x","","",16,null],[12,"y","","",16,null],[12,"z","","",16,null],[3,"LeftQuaternion","","Standard quaternion corresponding to a left-handed rotation matrix. The exact association of the left-handed basis that is encoded by this quaternion and a right-handed one is presented by `B` (for \"basis\") generic parameter.",null,null],[12,"s","","Scalar part of a quaternion.",17,null],[12,"v","","Vector part of a quaternion.",17,null],[4,"MirrorX","","Basis handedness change by mirroring X axis: x',y',z' = -x,y,z",null,null],[4,"MirrorY","","Basis handedness change by mirroring Y axis: x',y',z' = x,-y,z",null,null],[4,"MirrorZ","","Basis handedness change by mirroring Z axis: x',y',z' = x,y,-z",null,null],[4,"SwapXY","","Basis handedness change by swapping X and Y axis: x',y',z' = y,x,z",null,null],[4,"SwapYZ","","Basis handedness change by swapping Y and Z axis: x',y',z' = x,z,y",null,null],[4,"SwapZX","","Basis handedness change by swapping Z and X axis: x',y',z' = z,y,x",null,null],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"rowmatrix2x3"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",13,null],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"rowmatrix2x3"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"rowmatrix2x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"self"},{"name":"rowmatrix2x3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"self"},{"name":"rowmatrix2x3"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"self"},{"name":"rowmatrix2x3"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"self"},{"name":"rowmatrix2x3"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"self"},{"name":"rowmatrix2x3"}],"output":{"name":"bool"}}],[11,"cmp","","",13,{"inputs":[{"name":"self"},{"name":"rowmatrix2x3"}],"output":{"name":"ordering"}}],[11,"from","","",13,null],[11,"into","","",13,null],[11,"from","","",13,{"inputs":[{"name":"columnmatrix3x2"}],"output":{"name":"self"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"rowmatrix3x4"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",14,null],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"rowmatrix3x4"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"rowmatrix3x4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"self"},{"name":"rowmatrix3x4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"self"},{"name":"rowmatrix3x4"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"self"},{"name":"rowmatrix3x4"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"self"},{"name":"rowmatrix3x4"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"self"},{"name":"rowmatrix3x4"}],"output":{"name":"bool"}}],[11,"cmp","","",14,{"inputs":[{"name":"self"},{"name":"rowmatrix3x4"}],"output":{"name":"ordering"}}],[11,"from","","",14,null],[11,"into","","",14,null],[11,"from","","",14,{"inputs":[{"name":"columnmatrix4x3"}],"output":{"name":"self"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"columnmatrix3x2"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",15,null],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"columnmatrix3x2"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"columnmatrix3x2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"self"},{"name":"columnmatrix3x2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"self"},{"name":"columnmatrix3x2"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"self"},{"name":"columnmatrix3x2"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"self"},{"name":"columnmatrix3x2"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"self"},{"name":"columnmatrix3x2"}],"output":{"name":"bool"}}],[11,"cmp","","",15,{"inputs":[{"name":"self"},{"name":"columnmatrix3x2"}],"output":{"name":"ordering"}}],[11,"from","","",15,null],[11,"into","","",15,null],[11,"from","","",15,{"inputs":[{"name":"rowmatrix2x3"}],"output":{"name":"self"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"columnmatrix4x3"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",16,null],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"columnmatrix4x3"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"columnmatrix4x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"self"},{"name":"columnmatrix4x3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"self"},{"name":"columnmatrix4x3"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"self"},{"name":"columnmatrix4x3"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"self"},{"name":"columnmatrix4x3"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"self"},{"name":"columnmatrix4x3"}],"output":{"name":"bool"}}],[11,"cmp","","",16,{"inputs":[{"name":"self"},{"name":"columnmatrix4x3"}],"output":{"name":"ordering"}}],[11,"from","","",16,null],[11,"into","","",16,null],[11,"from","","",16,{"inputs":[{"name":"rowmatrix3x4"}],"output":{"name":"self"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"leftquaternion"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",17,null],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"leftquaternion"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"leftquaternion"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"self"},{"name":"leftquaternion"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"self"},{"name":"leftquaternion"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"self"},{"name":"leftquaternion"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"self"},{"name":"leftquaternion"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"self"},{"name":"leftquaternion"}],"output":{"name":"bool"}}],[11,"cmp","","",17,{"inputs":[{"name":"self"},{"name":"leftquaternion"}],"output":{"name":"ordering"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"mirrorx"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",18,null],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"mirrorx"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"self"},{"name":"mirrorx"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",18,{"inputs":[{"name":"self"},{"name":"mirrorx"}],"output":{"name":"ordering"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"mirrory"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",19,null],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"mirrory"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"self"},{"name":"mirrory"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",19,{"inputs":[{"name":"self"},{"name":"mirrory"}],"output":{"name":"ordering"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"mirrorz"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",20,null],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"mirrorz"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"self"},{"name":"mirrorz"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",20,{"inputs":[{"name":"self"},{"name":"mirrorz"}],"output":{"name":"ordering"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"swapxy"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",21,null],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"swapxy"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"self"},{"name":"swapxy"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",21,{"inputs":[{"name":"self"},{"name":"swapxy"}],"output":{"name":"ordering"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"swapyz"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",22,null],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"swapyz"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",22,{"inputs":[{"name":"self"},{"name":"swapyz"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",22,{"inputs":[{"name":"self"},{"name":"swapyz"}],"output":{"name":"ordering"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"swapzx"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",23,null],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"swapzx"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",23,{"inputs":[{"name":"self"},{"name":"swapzx"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",23,{"inputs":[{"name":"self"},{"name":"swapzx"}],"output":{"name":"ordering"}}],[11,"from","","",17,null],[11,"into","","",17,null],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"into","","",3,null],[11,"into","","",4,null],[11,"into","","",3,null],[11,"into","","",0,null],[11,"into","","",5,null],[11,"into","","",8,null],[11,"into","","",6,null],[11,"into","","",10,null],[11,"into","","",0,null],[11,"into","","",1,null],[11,"into","","",5,null],[11,"into","","",1,null],[11,"into","","",2,null],[11,"into","","",9,null],[11,"into","","",4,null],[11,"into","","",7,null],[11,"into","","",2,null],[11,"into","","",12,null],[11,"into","","",11,null],[11,"partial_cmp","","",11,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"self"},{"name":"extraxyz"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"rowmatrix4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"self"},{"name":"rowmatrix4"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"self"},{"name":"rowmatrix4"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"self"},{"name":"rowmatrix4"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"self"},{"name":"rowmatrix4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"rowmatrix3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"rowmatrix3"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"rowmatrix3"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"rowmatrix3"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"rowmatrix3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"columnmatrix2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"columnmatrix2"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"columnmatrix2"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"columnmatrix2"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"columnmatrix2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",25,{"inputs":[{"name":"self"},{"name":"extrazyx"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"columnmatrix4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"self"},{"name":"columnmatrix4"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"self"},{"name":"columnmatrix4"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"self"},{"name":"columnmatrix4"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"self"},{"name":"columnmatrix4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",28,{"inputs":[{"name":"self"},{"name":"intrazyx"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",29,{"inputs":[{"name":"self"},{"name":"extrazxz"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"columnmatrix3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"columnmatrix3"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"columnmatrix3"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"columnmatrix3"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"columnmatrix3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"self"},{"name":"intrazxz"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"eulerangles"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"self"},{"name":"eulerangles"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"self"},{"name":"eulerangles"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"self"},{"name":"eulerangles"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"self"},{"name":"eulerangles"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"rowmatrix2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"self"},{"name":"rowmatrix2"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"self"},{"name":"rowmatrix2"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"self"},{"name":"rowmatrix2"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"self"},{"name":"rowmatrix2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",24,{"inputs":[{"name":"self"},{"name":"intraxyz"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"bool"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"rowmatrix4"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"rowmatrix4"}],"output":{"name":"bool"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"name":"bool"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"intraxyz"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"columnmatrix4"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"columnmatrix4"}],"output":{"name":"bool"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"extraxyz"}],"output":{"name":"bool"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"bool"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"intrazyx"}],"output":{"name":"bool"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"eulerangles"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"eulerangles"}],"output":{"name":"bool"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"extrazyx"}],"output":{"name":"bool"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"bool"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"extrazxz"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"columnmatrix3"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"columnmatrix3"}],"output":{"name":"bool"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"columnmatrix2"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"columnmatrix2"}],"output":{"name":"bool"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"rowmatrix3"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"rowmatrix3"}],"output":{"name":"bool"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"rowmatrix2"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"rowmatrix2"}],"output":{"name":"bool"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"intrazxz"}],"output":{"name":"bool"}}],[11,"cmp","","",26,{"inputs":[{"name":"self"},{"name":"extraxyz"}],"output":{"name":"ordering"}}],[11,"cmp","","",27,{"inputs":[{"name":"self"},{"name":"intrazxz"}],"output":{"name":"ordering"}}],[11,"cmp","","",12,{"inputs":[{"name":"self"},{"name":"vector4"}],"output":{"name":"ordering"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"columnmatrix3"}],"output":{"name":"ordering"}}],[11,"cmp","","",11,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"ordering"}}],[11,"cmp","","",28,{"inputs":[{"name":"self"},{"name":"intrazyx"}],"output":{"name":"ordering"}}],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"rowmatrix2"}],"output":{"name":"ordering"}}],[11,"cmp","","",7,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":{"name":"ordering"}}],[11,"cmp","","",9,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"ordering"}}],[11,"cmp","","",10,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"ordering"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"columnmatrix2"}],"output":{"name":"ordering"}}],[11,"cmp","","",25,{"inputs":[{"name":"self"},{"name":"extrazyx"}],"output":{"name":"ordering"}}],[11,"cmp","","",24,{"inputs":[{"name":"self"},{"name":"intraxyz"}],"output":{"name":"ordering"}}],[11,"cmp","","",2,{"inputs":[{"name":"self"},{"name":"columnmatrix4"}],"output":{"name":"ordering"}}],[11,"cmp","","",29,{"inputs":[{"name":"self"},{"name":"extrazxz"}],"output":{"name":"ordering"}}],[11,"cmp","","",6,{"inputs":[{"name":"self"},{"name":"eulerangles"}],"output":{"name":"ordering"}}],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"rowmatrix3"}],"output":{"name":"ordering"}}],[11,"cmp","","",8,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"ordering"}}],[11,"cmp","","",5,{"inputs":[{"name":"self"},{"name":"rowmatrix4"}],"output":{"name":"ordering"}}],[11,"from","","",4,null],[11,"from","","",12,null],[11,"from","","",2,null],[11,"from","","",3,null],[11,"from","","",11,null],[11,"from","","",2,{"inputs":[{"name":"rowmatrix4"}],"output":{"name":"columnmatrix4"}}],[11,"from","","",7,null],[11,"from","","",6,{"inputs":[{"generics":["extraxyz"],"name":"eulerangles"}],"output":{"generics":["intrazyx"],"name":"eulerangles"}}],[11,"from","","",10,{"inputs":[{"name":"point2"}],"output":{"name":"vector2"}}],[11,"from","","",6,{"inputs":[{"generics":["intrazyx"],"name":"eulerangles"}],"output":{"generics":["extraxyz"],"name":"eulerangles"}}],[11,"from","","",6,{"inputs":[{"generics":["intraxyz"],"name":"eulerangles"}],"output":{"generics":["extrazyx"],"name":"eulerangles"}}],[11,"from","","",8,{"inputs":[{"name":"vector2"}],"output":{"name":"point2"}}],[11,"from","","",2,null],[11,"from","","",3,{"inputs":[{"name":"columnmatrix2"}],"output":{"name":"rowmatrix2"}}],[11,"from","","",6,{"inputs":[{"generics":["extrazyx"],"name":"eulerangles"}],"output":{"generics":["intraxyz"],"name":"eulerangles"}}],[11,"from","","",0,null],[11,"from","","",9,{"inputs":[{"name":"vector3"}],"output":{"name":"point3"}}],[11,"from","","",6,{"inputs":[{"generics":["intrazxz"],"name":"eulerangles"}],"output":{"generics":["extrazxz"],"name":"eulerangles"}}],[11,"from","","",5,null],[11,"from","","",11,{"inputs":[{"name":"point3"}],"output":{"name":"vector3"}}],[11,"from","","",10,null],[11,"from","","",5,{"inputs":[{"name":"columnmatrix4"}],"output":{"name":"rowmatrix4"}}],[11,"from","","",4,{"inputs":[{"name":"columnmatrix3"}],"output":{"name":"rowmatrix3"}}],[11,"from","","",8,null],[11,"from","","",3,null],[11,"from","","",6,{"inputs":[{"generics":["extrazxz"],"name":"eulerangles"}],"output":{"generics":["intrazxz"],"name":"eulerangles"}}],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",5,null],[11,"from","","",6,null],[11,"from","","",0,null],[11,"from","","",4,null],[11,"from","","",1,{"inputs":[{"name":"rowmatrix3"}],"output":{"name":"columnmatrix3"}}],[11,"from","","",9,null],[11,"from","","",0,{"inputs":[{"name":"rowmatrix2"}],"output":{"name":"columnmatrix2"}}],[11,"hash","","",2,null],[11,"hash","","",11,null],[11,"hash","","",27,null],[11,"hash","","",10,null],[11,"hash","","",25,null],[11,"hash","","",6,null],[11,"hash","","",5,null],[11,"hash","","",0,null],[11,"hash","","",3,null],[11,"hash","","",9,null],[11,"hash","","",1,null],[11,"hash","","",4,null],[11,"hash","","",28,null],[11,"hash","","",29,null],[11,"hash","","",26,null],[11,"hash","","",24,null],[11,"hash","","",7,null],[11,"hash","","",8,null],[11,"hash","","",12,null],[11,"as_ref","","",5,null],[11,"as_ref","","",3,null],[11,"as_ref","","",4,null],[11,"as_ref","","",8,null],[11,"as_ref","","",0,null],[11,"as_ref","","",3,null],[11,"as_ref","","",12,null],[11,"as_ref","","",11,null],[11,"as_ref","","",7,null],[11,"as_ref","","",10,null],[11,"as_ref","","",2,null],[11,"as_ref","","",5,null],[11,"as_ref","","",1,null],[11,"as_ref","","",0,null],[11,"as_ref","","",9,null],[11,"as_ref","","",1,null],[11,"as_ref","","",4,null],[11,"as_ref","","",2,null],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"extrazyx"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"point2"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rowmatrix3"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"intraxyz"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"columnmatrix4"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"rowmatrix2"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"intrazyx"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"eulerangles"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"columnmatrix3"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"extraxyz"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"columnmatrix2"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"vector4"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"point3"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"intrazxz"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"extrazxz"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"rowmatrix4"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"vector2"}}],[11,"from_slice","","",8,null],[11,"from_slice","","",9,null],[11,"from_slice","","",10,null],[11,"from_slice","","",11,null],[11,"from_slice","","",12,null]],"paths":[[3,"ColumnMatrix2"],[3,"ColumnMatrix3"],[3,"ColumnMatrix4"],[3,"RowMatrix2"],[3,"RowMatrix3"],[3,"RowMatrix4"],[3,"EulerAngles"],[3,"Quaternion"],[3,"Point2"],[3,"Point3"],[3,"Vector2"],[3,"Vector3"],[3,"Vector4"],[3,"RowMatrix2x3"],[3,"RowMatrix3x4"],[3,"ColumnMatrix3x2"],[3,"ColumnMatrix4x3"],[3,"LeftQuaternion"],[4,"MirrorX"],[4,"MirrorY"],[4,"MirrorZ"],[4,"SwapXY"],[4,"SwapYZ"],[4,"SwapZX"],[4,"IntraXYZ"],[4,"ExtraZYX"],[4,"ExtraXYZ"],[4,"IntraZXZ"],[4,"IntraZYX"],[4,"ExtraZXZ"]]};
searchIndex["mopa"] = {"doc":"MOPA: My Own Personal Any. A macro to implement all the `Any` methods on your own trait.","items":[[8,"Any","mopa","A type to emulate dynamic typing.",null,null],[14,"mopafy","","The macro for implementing all the `Any` methods on your own trait.",null,null]],"paths":[]};
searchIndex["nodrop"] = {"doc":"","items":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",null,null],[11,"new","","Create a new NoDrop.",0,{"inputs":[{"name":"t"}],"output":{"name":"nodrop"}}],[11,"into_inner","","Extract the inner value.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}]],"paths":[[3,"NoDrop"]]};
searchIndex["num_cpus"] = {"doc":"A crate with utilities to determine the number of CPUs available on the current system.","items":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"get_physical","","Returns the number of physical cores of the current system.",null,{"inputs":[],"output":{"name":"usize"}}]],"paths":[]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[0,"identities","","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",5,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",5,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",6,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",7,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",9,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",null,null],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",10,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",null,null],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",13,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",15,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",15,{"inputs":[],"output":{"name":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",16,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",16,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",16,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",16,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",16,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",16,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",16,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",16,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",16,{"inputs":[{"name":"self"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and with newer versions of Rust `f64::NAN`.",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error. This produces a more accurate result with better performance than a separate multiplication operation followed by an add.",16,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",16,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",16,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",16,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_degrees","","Converts radians to degrees.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_radians","","Converts degrees to radians.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",16,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",16,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",16,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",16,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",16,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",16,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`. The floating point encoding is documented in the [Reference][floating-point].",16,null],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",17,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / π`.",17,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",17,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / π`.",17,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",17,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_2","","Return `π / 2.0`.",17,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_3","","Return `π / 3.0`.",17,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_4","","Return `π / 4.0`.",17,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_6","","Return `π / 6.0`.",17,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_8","","Return `π / 8.0`.",17,{"inputs":[],"output":{"name":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",17,{"inputs":[],"output":{"name":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",17,{"inputs":[],"output":{"name":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",17,{"inputs":[],"output":{"name":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",17,{"inputs":[],"output":{"name":"self"}}],[10,"PI","","Return Archimedes’ constant.",17,{"inputs":[],"output":{"name":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",17,{"inputs":[],"output":{"name":"self"}}],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have floating-point-specific characteristics such as NaN and infinity.",null,null],[10,"min_value","","Returns the smallest finite value that this type can represent.",18,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",18,{"inputs":[],"output":{"name":"self"}}],[10,"epsilon","","Returns epsilon, a small positive value.",18,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",18,{"inputs":[],"output":{"name":"self"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and with newer versions of Rust `f64::NAN`.",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error. This produces a more accurate result with better performance than a separate multiplication operation followed by an add.",18,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",18,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a real number power.",18,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",18,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_degrees","","Converts radians to degrees.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_radians","","Converts degrees to radians.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",18,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",18,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",18,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",18,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",18,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",18,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",19,{"inputs":[{"name":"self"}],"output":{"generics":["isize"],"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",19,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",19,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",19,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",19,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",19,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",19,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",19,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",19,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",19,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",19,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",19,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",21,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"AsPrimitive","","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",22,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",23,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",23,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",23,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",23,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",23,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",23,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",23,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",23,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",23,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",23,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",23,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",23,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",23,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",23,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",23,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",23,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",null,null],[16,"FromStrRadixErr","","",24,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",24,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric operations taking the second operand by reference.",null,null],[8,"RefNum","","The trait for references which implement numeric operations, taking the second operand either by value or by reference.",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment operators (like `+=`).",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment operators.",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement assignment operations taking the second operand by reference.",null,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"Real"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["odds"] = {"doc":"Odds and ends — collection miscellania.","items":[[3,"Fix","odds","Fixpoint combinator for rust closures, generalized over the return type.",null,null],[12,"0","","",0,null],[5,"fix","","Fixpoint combinator for rust closures, generalized over the return type.",null,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[5,"ref_eq","","Compare if a and b are equal as pointers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"ptr_eq","","Compare if a and b are equal pointers.",null,null],[5,"raw_byte_repr","","Safe to use with any wholly initialized memory `ptr`",null,null],[5,"get_unchecked","","Use `debug_assert!` to check indexing in debug mode. In release mode, no checks are done.",null,null],[5,"get_unchecked_mut","","Use `debug_assert!` to check indexing in debug mode. In release mode, no checks are done.",null,null],[5,"debug_assert_unreachable","","Act as `debug_assert!` in debug mode, asserting that this point is not reached.",null,null],[5,"slice_unchecked","","Check slicing bounds in debug mode, otherwise just act as an unchecked slice call.",null,null],[5,"slice_unchecked_mut","","Check slicing bounds in debug mode, otherwise just act as an unchecked slice call.",null,null],[5,"ref_slice","","Create a length 1 slice out of a reference",null,null],[5,"ref_slice_mut","","Create a length 1 mutable slice out of a reference",null,null],[11,"call","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"r"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[0,"char","","Extra functions for `char`",null,null],[3,"EncodeUtf8Error","odds::char","Placeholder",null,null],[5,"encode_utf8","","Encode a char into buf using UTF-8.",null,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"encodeutf8error"}}],[0,"string","odds","Extensions to `&str` and `String`",null,null],[3,"Prefixes","odds::string","Iterator of all non-empty prefixes",null,null],[3,"Suffixes","","Iterator of all non-empty suffixes",null,null],[3,"Substrings","","Iterator of all non-empty substrings",null,null],[3,"CharChunks","","An iterator that splits the string in substrings of each `n` `char` per substring. The last item will contain the remainder if `n` does not divide the char length of the string evenly.",null,null],[3,"CharWindows","","An iterator that produces substrings of each `n` `char` per substring in a sliding window that advances one char at a time.",null,null],[3,"CharStr","","A single-char string.",null,null],[8,"StrExt","","Extra methods for `str`",null,null],[10,"rep","","Repeat the string `n` times.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"string"}}],[10,"append","","Requires `feature=\"std\"`",2,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"string"}}],[10,"prefixes","","All non-empty prefixes",2,{"inputs":[{"name":"self"}],"output":{"name":"prefixes"}}],[10,"suffixes","","All non-empty suffixes",2,{"inputs":[{"name":"self"}],"output":{"name":"suffixes"}}],[10,"substrings","","Produce all non-empty substrings",2,{"inputs":[{"name":"self"}],"output":{"name":"substrings"}}],[10,"is_acceptable_index","","Return `true` if `index` is acceptable for slicing the string.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bool"}}],[8,"StrSlice","","Extension trait for `str` for string slicing without panicking",null,null],[10,"get_slice","","Return a slice of the string, if it is in bounds /and on character boundaries/, otherwise return `None`",3,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"generics":["str"],"name":"option"}}],[8,"StringExt","","Extra methods for `String`",null,null],[10,"insert_str","","Panics if `index` is out of bounds.",4,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"str"}],"output":null}],[8,"StrChunksWindows","","Extension traits for the `char_chunks` and `char_windows` methods",null,null],[10,"char_chunks","","Return an iterator that splits the string in substrings of each `n` `char` per substring. The last item will contain the remainder if `n` does not divide the char length of the string evenly.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"charchunks"}}],[10,"char_windows","","Return an iterator that produces substrings of each `n` `char` per substring in a sliding window that advances one char at a time.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"charwindows"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"prefixes"}}],[11,"next","","",6,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"suffixes"}}],[11,"next","","",7,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"substrings"}}],[11,"next","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"charchunks"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"charwindows"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"charstr"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new string from `c`.",11,{"inputs":[{"name":"char"}],"output":{"name":"charstr"}}],[11,"deref","","",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[0,"vec","odds","Extensions to `Vec`",null,null],[5,"vec","odds::vec","Create a new vec from the iterable",null,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[8,"VecExt","","Extra methods for `Vec<T>`",null,null],[10,"splice","","Remove elements in a range, and insert from an iterator in their place.",12,{"inputs":[{"name":"self"},{"name":"r"},{"name":"i"}],"output":null}],[10,"retain_mut","","Retains only the elements specified by the predicate.",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[8,"VecFindRemove","","",null,null],[16,"Item","","",13,null],[10,"find_remove","","Linear search for the first element equal to `elt` and remove it if found.",13,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"option"}}],[10,"rfind_remove","","Linear search for the last element equal to `elt` and remove it if found.",13,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"option"}}],[0,"slice","odds","Extra functions for slices",null,null],[3,"MendSlices","odds::slice","An iterator adaptor that glues together adjacent contiguous slices.",null,null],[3,"RevSlice","","A reversed view of a slice.",null,null],[5,"shared_prefix","","Return the end index of the longest shared (equal) prefix of `a` and `b`.",null,null],[5,"rotate_left","","Rotate `steps` towards lower indices.",null,null],[5,"split_aligned_for","","Split the input slice into three chunks, so that the middle chunk is a slice of a larger \"block size\" (for example T could be u64) that is correctly aligned for `T`.",null,null],[0,"unalign","","",null,null],[3,"UnalignedIter","odds::slice::unalign","An iterator of `T` (by value) where each value read using an unaligned load.",null,null],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"from_raw_parts","","Create an `UnalignedIter` from `ptr` and `end`, which must be spaced an whole number of `T` offsets apart.",14,null],[11,"from_slice","","Create an `UnalignedIter` out of the slice of data, which iterates first in blocks of `T` (unaligned loads), and then leaves a tail of the remaining bytes.",14,null],[11,"tail","","Return a byte iterator of the remaining tail of the iterator; this can be called at any time, but in particular when the iterator has returned None.",14,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"slicecopyiter"}}],[11,"has_tail","","Return `true` if the tail is not empty.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"peek_next","","Return the next iterator element, without stepping the iterator.",14,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",14,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[0,"iter","odds::slice","",null,null],[3,"SliceCopyIter","odds::slice::iter","Slice (contiguous data) iterator.",null,null],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"new","","",15,null],[11,"into_raw","","Return the start, end pointer of the iterator",15,null],[11,"next","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",15,null],[11,"count","","",15,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"last","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next_back","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from","","",15,null],[11,"default","","Create an empty `SliceCopyIter`.",15,{"inputs":[],"output":{"name":"self"}}],[8,"SliceFind","odds::slice","Element-finding methods for slices",null,null],[16,"Item","","",16,null],[10,"find","","Linear search for the first occurrence  `elt` in the slice.",16,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"generics":["usize"],"name":"option"}}],[10,"rfind","","Linear search for the last occurrence  `elt` in the slice.",16,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"generics":["usize"],"name":"option"}}],[8,"SliceFindSplit","","Element-finding methods for slices",null,null],[16,"Item","","",17,null],[10,"find_split","","Linear search for the first occurrence  `elt` in the slice.",17,null],[10,"rfind_split","","Linear search for the last occurrence  `elt` in the slice.",17,null],[10,"find_split_mut","","Linear search for the first occurrence  `elt` in the slice.",17,null],[10,"rfind_split_mut","","Linear search for the last occurrence  `elt` in the slice.",17,null],[8,"SliceIterExt","","Extra iterator adaptors for iterators of slice elements.",null,null],[11,"mend_slices","","Return an iterator adaptor that joins together adjacent slices if possible.",18,{"inputs":[{"name":"self"}],"output":{"name":"mendslices"}}],[8,"MendSlice","","A trait for items that can maybe be joined together.",null,null],[8,"Pod","","\"plain old data\": Types that we can stick arbitrary bit patterns into, and thus use them as blocks in `split_aligned_for` or in `UnalignedIter`.",null,null],[11,"find","","",19,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"generics":["usize"],"name":"option"}}],[11,"rfind","","",19,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"generics":["usize"],"name":"option"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"new","","Create a new `MendSlices`.",20,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"next","","",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",20,null],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"len","","Return the length of the slice.",19,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get","","Get element at index `i`.",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Get element at index `i`.",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"inner_ref","","",19,null],[11,"inner_mut","","",19,null],[11,"into_boxed_slice","","",19,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"iter","","Return a by-reference iterator",19,{"inputs":[{"name":"self"}],"output":{"generics":["iter"],"name":"rev"}}],[11,"iter_mut","","Return a by-mutable-reference iterator",19,{"inputs":[{"name":"self"}],"output":{"generics":["itermut"],"name":"rev"}}],[11,"split_at","","",19,null],[11,"split_at_mut","","",19,null],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"revslice"}],"output":{"name":"bool"}}],[11,"eq","","",19,null],[11,"hash","","",19,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"index","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",19,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"revslice"}}],[11,"index_mut","","",19,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"revslice"}}],[0,"stride","odds","Slice iterator with custom step size",null,null],[3,"Stride","odds::stride","(the stride) skipped per iteration.",null,null],[3,"StrideMut","","The mutable equivalent of Stride.",null,null],[11,"from_ptr_len","","Create a Stride iterator from a raw pointer.",21,null],[11,"from_ptr_len","","Create a StrideMut iterator from a raw pointer.",22,null],[11,"from_slice","","Create Stride iterator from a slice and the element step count.",21,null],[11,"from_stride","","Create Stride iterator from an existing Stride iterator",21,{"inputs":[{"name":"stride"},{"name":"isize"}],"output":{"name":"stride"}}],[11,"swap_ends","","Swap the begin and end and reverse the stride, in effect reversing the iterator.",21,{"inputs":[{"name":"self"}],"output":null}],[11,"len","","Return the number of elements in the iterator.",21,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get","","Return a reference to the element of a stride at the given index, or None if the index is out of bounds.",21,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",21,null],[11,"next_back","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"index","","Return a reference to the element at a given index.",21,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"a"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_slice","","Create Stride iterator from a slice and the element step count.",22,null],[11,"from_stride","","Create Stride iterator from an existing Stride iterator",22,{"inputs":[{"name":"stridemut"},{"name":"isize"}],"output":{"name":"stridemut"}}],[11,"swap_ends","","Swap the begin and end and reverse the stride, in effect reversing the iterator.",22,{"inputs":[{"name":"self"}],"output":null}],[11,"len","","Return the number of elements in the iterator.",22,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get","","Return a reference to the element of a stride at the given index, or None if the index is out of bounds.",22,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next","","",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",22,null],[11,"next_back","","",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"index","","Return a reference to the element at a given index.",22,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"a"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"stride"}}],[11,"get_mut","","Return a mutable reference to the element of a stride at the given index, or None if the index is out of bounds.",22,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"index_mut","","Return a mutable reference to the element at a given index.",22,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"a"}}],[0,"prelude","odds","prelude of often used traits and functions",null,null],[8,"IndexRange","","IndexRange is implemented by Rust's built-in range types, produced by range syntax like `..`, `a..`, `..b` or `c..d`.",null,null],[11,"start","","Start index (inclusive)",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"end","","End index (exclusive)",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"start","","Start index (inclusive)",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"end","","End index (exclusive)",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"Fix"],[3,"EncodeUtf8Error"],[8,"StrExt"],[8,"StrSlice"],[8,"StringExt"],[8,"StrChunksWindows"],[3,"Prefixes"],[3,"Suffixes"],[3,"Substrings"],[3,"CharChunks"],[3,"CharWindows"],[3,"CharStr"],[8,"VecExt"],[8,"VecFindRemove"],[3,"UnalignedIter"],[3,"SliceCopyIter"],[8,"SliceFind"],[8,"SliceFindSplit"],[8,"SliceIterExt"],[3,"RevSlice"],[3,"MendSlices"],[3,"Stride"],[3,"StrideMut"],[8,"IndexRange"]]};
searchIndex["ogg"] = {"doc":"Ogg container decoder and encoder","items":[[3,"Packet","ogg","Ogg packet representation.",null,null],[12,"data","","The data the `Packet` contains",0,null],[12,"first_packet","","`true` iff this packet is the first one in the logical bitstream.",0,null],[12,"last_packet","","`true` iff this packet is the last one in the logical bitstream",0,null],[12,"absgp_page","","Absolute granule position of the last page the packet was in. The meaning of the absolute granule position is defined by the codec.",0,null],[12,"stream_serial","","Serial number. Uniquely identifying the logical bitstream.",0,null],[3,"PacketReader","","Reader for packets from an Ogg stream.",null,null],[3,"PacketWriter","","Writer for packets into an Ogg stream.",null,null],[4,"OggReadError","","Error that can be raised when decoding an Ogg transport.",null,null],[13,"NoCapturePatternFound","","The capture pattern for a new page was not found where one was expected.",1,null],[13,"InvalidStreamStructVer","","Invalid stream structure version, with the given one attached.",1,null],[13,"HashMismatch","","Mismatch of the hash value with (expected, calculated) value.",1,null],[13,"ReadError","","I/O error occured.",1,null],[13,"InvalidData","","Some constraint required by the spec was not met.",1,null],[4,"PacketWriteEndInfo","","Specifies whether to end something with the write of the packet.",null,null],[13,"NormalPacket","","No ends here, just a normal packet",2,null],[13,"EndPage","","Force-end the current page",2,null],[13,"EndStream","","End the whole logical stream.",2,null],[6,"IoResult","","Ogg version of the `std::io::Result` type.",null,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"oggreaderror"}}],[11,"new","","Constructs a new `PacketReader` with a given `Read`.",3,{"inputs":[{"name":"t"}],"output":{"name":"packetreader"}}],[11,"into_inner","","",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"read_packet","","Reads a packet, and returns it on success.",3,{"inputs":[{"name":"self"}],"output":{"generics":["packet","oggreaderror"],"name":"result"}}],[11,"seek_bytes","","Seeks the underlying reader",3,{"inputs":[{"name":"self"},{"name":"seekfrom"}],"output":{"generics":["u64","error"],"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"packetwriteendinfo"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"packetwriteendinfo"}}],[11,"new","","",4,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"into_inner","","",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"write_packet","","Write a packet",4,{"inputs":[{"name":"self"},{"name":"rc"},{"name":"u32"},{"name":"packetwriteendinfo"},{"name":"u64"}],"output":{"name":"ioresult"}}]],"paths":[[3,"Packet"],[4,"OggReadError"],[4,"PacketWriteEndInfo"],[3,"PacketReader"],[3,"PacketWriter"]]};
searchIndex["ordered_float"] = {"doc":"Wrappers for total order on Floats.","items":[[3,"OrderedFloat","ordered_float","A wrapper around Floats providing an implementation of Ord and Hash.",null,null],[12,"0","","",0,null],[3,"NotNaN","","A wrapper around Floats providing an implementation of Ord and Hash.",null,null],[3,"FloatIsNaN","","An error indicating an attempt to construct NotNaN from a NaN",null,null],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"orderedfloat"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"orderedfloat"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"orderedfloat"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"orderedfloat"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"orderedfloat"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"orderedfloat"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"orderedfloat"}}],[11,"into_inner","","Get the value out.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"as_ref","","",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"as_mut","","",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"orderedfloat"}],"output":{"name":"ordering"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"orderedfloat"}],"output":{"name":"bool"}}],[11,"hash","","",0,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into","","",0,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"into","","",0,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"notnan"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"notnan"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"notnan"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"notnan"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"notnan"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"notnan"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"notnan"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"notnan"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"notnan"}}],[11,"new","","Create a NotNaN value.",1,{"inputs":[{"name":"t"}],"output":{"generics":["floatisnan"],"name":"result"}}],[11,"unchecked_new","","Create a NotNaN value from a value that is guaranteed to not be NaN",1,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"into_inner","","Get the value out.",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"as_ref","","",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"notnan"}],"output":{"name":"ordering"}}],[11,"hash","","",1,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into","","",1,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"into","","",1,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"from","","",1,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"deref","","",1,null],[11,"add","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"add","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"add_assign","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"add_assign","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"add_assign","","",1,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"add_assign","","",1,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"sub","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"sub","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"sub_assign","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"sub_assign","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"sub_assign","","",1,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"sub_assign","","",1,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"mul","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"mul","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"mul_assign","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"mul_assign","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"mul_assign","","",1,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"mul_assign","","",1,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"div","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"div","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"div_assign","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"div_assign","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"div_assign","","",1,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"div_assign","","",1,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"rem","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"rem","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"rem_assign","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"rem_assign","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"rem_assign","","",1,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"rem_assign","","",1,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"neg","","",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"floatisnan"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"floatisnan"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into","","",2,{"inputs":[{"name":"self"}],"output":{"name":"error"}}]],"paths":[[3,"OrderedFloat"],[3,"NotNaN"],[3,"FloatIsNaN"]]};
searchIndex["osmesa_sys"] = {"doc":"","items":[[3,"OsMesa","osmesa_sys","Symbols loaded from a shared library.",null,null],[12,"OSMesaColorClamp","","",0,null],[12,"OSMesaCreateContext","","",0,null],[12,"OSMesaCreateContextExt","","",0,null],[12,"OSMesaCreateContextAttribs","","",0,null],[12,"OSMesaDestroyContext","","",0,null],[12,"OSMesaGetColorBuffer","","",0,null],[12,"OSMesaGetCurrentContext","","",0,null],[12,"OSMesaGetDepthBuffer","","",0,null],[12,"OSMesaGetIntegerv","","",0,null],[12,"OSMesaGetProcAddress","","",0,null],[12,"OSMesaMakeCurrent","","",0,null],[12,"OSMesaPixelStore","","",0,null],[3,"osmesa_context","","",null,null],[5,"OSMesaColorClamp","","",null,null],[5,"OSMesaCreateContext","","",null,{"inputs":[{"name":"c_uint"},{"name":"osmesacontext"}],"output":{"name":"osmesacontext"}}],[5,"OSMesaCreateContextExt","","",null,{"inputs":[{"name":"c_uint"},{"name":"c_int"},{"name":"c_int"},{"name":"c_int"},{"name":"osmesacontext"}],"output":{"name":"osmesacontext"}}],[5,"OSMesaCreateContextAttribs","","",null,null],[5,"OSMesaDestroyContext","","",null,null],[5,"OSMesaGetColorBuffer","","",null,null],[5,"OSMesaGetCurrentContext","","",null,{"inputs":[],"output":{"name":"osmesacontext"}}],[5,"OSMesaGetDepthBuffer","","",null,null],[5,"OSMesaGetIntegerv","","",null,null],[5,"OSMesaGetProcAddress","","",null,null],[5,"OSMesaMakeCurrent","","",null,null],[5,"OSMesaPixelStore","","",null,null],[6,"OSMesaContext","","",null,null],[6,"OSMESAproc","","",null,null],[17,"OSMESA_BGRA","","",null,null],[17,"OSMESA_ARGB","","",null,null],[17,"OSMESA_BGR","","",null,null],[17,"OSMESA_RGB_565","","",null,null],[17,"OSMESA_COLOR_INDEX","","",null,null],[17,"OSMESA_RGB","","",null,null],[17,"OSMESA_RGBA","","",null,null],[17,"OSMESA_WIDTH","","",null,null],[17,"OSMESA_HEIGHT","","",null,null],[17,"OSMESA_FORMAT","","",null,null],[17,"OSMESA_TYPE","","",null,null],[17,"OSMESA_MAX_WIDTH","","",null,null],[17,"OSMESA_MAX_HEIGHT","","",null,null],[17,"OSMESA_ROW_LENGTH","","",null,null],[17,"OSMESA_Y_UP","","",null,null],[17,"OSMESA_DEPTH_BITS","","",null,null],[17,"OSMESA_STENCIL_BITS","","",null,null],[17,"OSMESA_ACCUM_BITS","","",null,null],[17,"OSMESA_PROFILE","","",null,null],[17,"OSMESA_CORE_PROFILE","","",null,null],[17,"OSMESA_COMPAT_PROFILE","","",null,null],[17,"OSMESA_CONTEXT_MAJOR_VERSION","","",null,null],[17,"OSMESA_CONTEXT_MINOR_VERSION","","",null,null],[11,"open","","Tries to open the dynamic library.",0,{"inputs":[{"name":"path"}],"output":{"generics":["osmesa","loadingerror"],"name":"result"}}],[11,"try_loading","","Try loading the static symbols linked to this library.",0,{"inputs":[],"output":{"generics":["osmesa","loadingerror"],"name":"result"}}]],"paths":[[3,"OsMesa"]]};
searchIndex["owning_ref"] = {"doc":"An owning reference.","items":[[8,"StableAddress","owning_ref","An unsafe marker trait for types that deref to a stable address, even when moved. For example, this is implemented by Box, Vec, Rc, Arc and String, among others. Even when a Box is moved, the underlying storage remains at a fixed location.",null,null],[8,"CloneStableAddress","","An unsafe marker trait for types where clones deref to the same address. This has all the requirements of StableDeref, and additionally requires that after calling clone(), both the old and new value deref to the same address. For example, Rc and Arc implement CloneStableDeref, but Box and Vec do not.",null,null],[3,"OwningRef","","An owning reference.",null,null],[3,"OwningRefMut","","An mutable owning reference.",null,null],[3,"OwningHandle","","`OwningHandle` is a complement to `OwningRef`. Where `OwningRef` allows consumers to pass around an owned object and a dependent reference, `OwningHandle` contains an owned object and a dependent object.",null,null],[6,"BoxRef","","Typedef of a owning reference that uses a `Box` as the owner.",null,null],[6,"VecRef","","Typedef of a owning reference that uses a `Vec` as the owner.",null,null],[6,"StringRef","","Typedef of a owning reference that uses a `String` as the owner.",null,null],[6,"RcRef","","Typedef of a owning reference that uses a `Rc` as the owner.",null,null],[6,"ArcRef","","Typedef of a owning reference that uses a `Arc` as the owner.",null,null],[6,"RefRef","","Typedef of a owning reference that uses a `Ref` as the owner.",null,null],[6,"RefMutRef","","Typedef of a owning reference that uses a `RefMut` as the owner.",null,null],[6,"MutexGuardRef","","Typedef of a owning reference that uses a `MutexGuard` as the owner.",null,null],[6,"RwLockReadGuardRef","","Typedef of a owning reference that uses a `RwLockReadGuard` as the owner.",null,null],[6,"RwLockWriteGuardRef","","Typedef of a owning reference that uses a `RwLockWriteGuard` as the owner.",null,null],[6,"BoxRefMut","","Typedef of a mutable owning reference that uses a `Box` as the owner.",null,null],[6,"VecRefMut","","Typedef of a mutable owning reference that uses a `Vec` as the owner.",null,null],[6,"StringRefMut","","Typedef of a mutable owning reference that uses a `String` as the owner.",null,null],[6,"RefMutRefMut","","Typedef of a mutable owning reference that uses a `RefMut` as the owner.",null,null],[6,"MutexGuardRefMut","","Typedef of a mutable owning reference that uses a `MutexGuard` as the owner.",null,null],[6,"RwLockWriteGuardRefMut","","Typedef of a mutable owning reference that uses a `RwLockWriteGuard` as the owner.",null,null],[6,"ErasedBoxRef","","Typedef of a owning reference that uses an erased `Box` as the owner.",null,null],[6,"ErasedRcRef","","Typedef of a owning reference that uses an erased `Rc` as the owner.",null,null],[6,"ErasedArcRef","","Typedef of a owning reference that uses an erased `Arc` as the owner.",null,null],[6,"ErasedBoxRefMut","","Typedef of a mutable owning reference that uses an erased `Box` as the owner.",null,null],[8,"Erased","","Helper trait for an erased concrete type an owner dereferences to. This is used in form of a trait object for keeping something around to (virtually) call the destructor.",null,null],[8,"IntoErased","","Helper trait for erasing the concrete type of what an owner derferences to, for example `Box<T> -> Box<Erased>`. This would be unneeded with higher kinded types support in the language.",null,null],[16,"Erased","","Owner with the dereference type substituted to `Erased`.",0,null],[10,"into_erased","","Perform the type erasure.",0,null],[8,"ToHandle","","Trait to implement the conversion of owner to handle for common types.",null,null],[16,"Handle","","The type of handle to be encapsulated by the OwningHandle.",1,null],[10,"to_handle","","Given an appropriately-long-lived pointer to ourselves, create a handle to be encapsulated by the `OwningHandle`.",1,null],[8,"ToHandleMut","","Trait to implement the conversion of owner to mutable handle for common types.",null,null],[16,"HandleMut","","The type of handle to be encapsulated by the OwningHandle.",2,null],[10,"to_handle_mut","","Given an appropriately-long-lived pointer to ourselves, create a mutable handle to be encapsulated by the `OwningHandle`.",2,null],[11,"new","","Creates a new owning reference from a owner initialized to the direct dereference of it.",3,{"inputs":[{"name":"o"}],"output":{"name":"self"}}],[11,"new_assert_stable_address","","Like `new`, but doesn’t require `O` to implement the `StableAddress` trait. Instead, the caller is responsible to make the same promises as implementing the trait.",3,{"inputs":[{"name":"o"}],"output":{"name":"self"}}],[11,"map","","Converts `self` into a new owning reference that points at something reachable from the previous one.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"owningref"}}],[11,"try_map","","Tries to convert `self` into a new owning reference that points at something reachable from the previous one.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["owningref"],"name":"result"}}],[11,"map_owner","","Converts `self` into a new owning reference with a different owner type.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"owningref"}}],[11,"map_owner_box","","Converts `self` into a new owning reference where the owner is wrapped in an additional `Box<O>`.",3,{"inputs":[{"name":"self"}],"output":{"generics":["box"],"name":"owningref"}}],[11,"erase_owner","","Erases the concrete base type of the owner with a trait object.",3,{"inputs":[{"name":"self"}],"output":{"name":"owningref"}}],[11,"owner","","A getter for the underlying owner.",3,{"inputs":[{"name":"self"}],"output":{"name":"o"}}],[11,"into_inner","","Discards the reference and retrieves the owner.",3,{"inputs":[{"name":"self"}],"output":{"name":"o"}}],[11,"new","","Creates a new owning reference from a owner initialized to the direct dereference of it.",4,{"inputs":[{"name":"o"}],"output":{"name":"self"}}],[11,"new_assert_stable_address","","Like `new`, but doesn’t require `O` to implement the `StableAddress` trait. Instead, the caller is responsible to make the same promises as implementing the trait.",4,{"inputs":[{"name":"o"}],"output":{"name":"self"}}],[11,"map","","Converts `self` into a new shared owning reference that points at something reachable from the previous one.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"owningref"}}],[11,"map_mut","","Converts `self` into a new mutable owning reference that points at something reachable from the previous one.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"owningrefmut"}}],[11,"try_map","","Tries to convert `self` into a new shared owning reference that points at something reachable from the previous one.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["owningref"],"name":"result"}}],[11,"try_map_mut","","Tries to convert `self` into a new mutable owning reference that points at something reachable from the previous one.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["owningrefmut"],"name":"result"}}],[11,"map_owner","","Converts `self` into a new owning reference with a different owner type.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"owningrefmut"}}],[11,"map_owner_box","","Converts `self` into a new owning reference where the owner is wrapped in an additional `Box<O>`.",4,{"inputs":[{"name":"self"}],"output":{"generics":["box"],"name":"owningrefmut"}}],[11,"erase_owner","","Erases the concrete base type of the owner with a trait object.",4,{"inputs":[{"name":"self"}],"output":{"name":"owningrefmut"}}],[11,"owner","","A getter for the underlying owner.",4,{"inputs":[{"name":"self"}],"output":{"name":"o"}}],[11,"into_inner","","Discards the reference and retrieves the owner.",4,{"inputs":[{"name":"self"}],"output":{"name":"o"}}],[11,"deref","","",5,null],[11,"deref_mut","","",5,null],[11,"new","","Create a new `OwningHandle` for a type that implements `ToHandle`. For types that don't implement `ToHandle`, callers may invoke `new_with_fn`, which accepts a callback to perform the conversion.",5,{"inputs":[{"name":"o"}],"output":{"name":"self"}}],[11,"new_mut","","Create a new mutable `OwningHandle` for a type that implements `ToHandleMut`.",5,{"inputs":[{"name":"o"}],"output":{"name":"self"}}],[11,"new_with_fn","","Create a new OwningHandle. The provided callback will be invoked with a pointer to the object owned by `o`, and the returned value is stored as the object to which this `OwningHandle` will forward `Deref` and `DerefMut`.",5,{"inputs":[{"name":"o"},{"name":"f"}],"output":{"name":"self"}}],[11,"try_new","","Create a new OwningHandle. The provided callback will be invoked with a pointer to the object owned by `o`, and the returned value is stored as the object to which this `OwningHandle` will forward `Deref` and `DerefMut`.",5,{"inputs":[{"name":"o"},{"name":"f"}],"output":{"name":"result"}}],[11,"deref","","",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref","","",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"as_ref","","",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"as_ref","","",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"as_mut","","",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"borrow","","",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"from","","",3,{"inputs":[{"name":"o"}],"output":{"name":"self"}}],[11,"from","","",4,{"inputs":[{"name":"o"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"owningrefmut"}],"output":{"name":"self"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"hash","","",3,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"hash","","",4,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}]],"paths":[[8,"IntoErased"],[8,"ToHandle"],[8,"ToHandleMut"],[3,"OwningRef"],[3,"OwningRefMut"],[3,"OwningHandle"],[8,"Erased"]]};
searchIndex["parking_lot"] = {"doc":"This library provides implementations of `Mutex`, `RwLock`, `Condvar` and `Once` that are smaller, faster and more flexible than those in the Rust standard library. It also provides a `ReentrantMutex` type.","items":[[3,"Once","parking_lot","A synchronization primitive which can be used to run a one-time initialization. Useful for one-time initialization for globals, FFI or related functionality.",null,null],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared data",null,null],[3,"MutexGuard","","An RAII implementation of a \"scoped lock\" of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked.",null,null],[3,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",null,null],[3,"ReentrantMutexGuard","","An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure is dropped (falls out of scope), the lock will be unlocked.",null,null],[3,"Condvar","","A Condition Variable",null,null],[3,"WaitTimeoutResult","","A type indicating whether a timed wait on a condition variable returned due to a time out or not.",null,null],[3,"RwLock","","A reader-writer lock",null,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a lock when dropped.",null,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access of a lock when dropped.",null,null],[4,"OnceState","","Current state of a `Once`.",null,null],[13,"New","","A closure has not been executed yet",0,null],[13,"Poisoned","","A closure was executed but panicked.",0,null],[13,"InProgress","","A thread is currently executing a closure.",0,null],[13,"Done","","A closure has completed sucessfully.",0,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"waittimeoutresult"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and notified.",2,{"inputs":[],"output":{"name":"condvar"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"notify_all","","Wakes up all blocked threads on this condvar.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"wait","","Blocks the current thread until this condition variable receives a notification.",2,{"inputs":[{"name":"self"},{"name":"mutexguard"}],"output":null}],[11,"wait_until","","Waits on this condition variable for a notification, timing out after the specified time instant.",2,{"inputs":[{"name":"self"},{"name":"mutexguard"},{"name":"instant"}],"output":{"name":"waittimeoutresult"}}],[11,"wait_for","","Waits on this condition variable for a notification, timing out after a specified duration.",2,{"inputs":[{"name":"self"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"waittimeoutresult"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"condvar"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",3,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",3,{"inputs":[{"name":"self"}],"output":{"name":"mutexguard"}}],[11,"try_lock","","Attempts to acquire this lock.",3,{"inputs":[{"name":"self"}],"output":{"generics":["mutexguard"],"name":"option"}}],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",3,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"generics":["mutexguard"],"name":"option"}}],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",3,{"inputs":[{"name":"self"},{"name":"instant"}],"output":{"generics":["mutexguard"],"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"raw_unlock","","Releases the mutex.",3,{"inputs":[{"name":"self"}],"output":null}],[11,"raw_unlock_fair","","Releases the mutex using a fair unlock protocol.",3,{"inputs":[{"name":"self"}],"output":null}],[11,"raw_lock","","Acquires a mutex, blocking the current thread until it is able to do so.",3,{"inputs":[{"name":"self"}],"output":null}],[11,"raw_try_lock","","Attempts to acquire this lock.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",4,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new reentrant mutex in an unlocked state ready for use.",5,{"inputs":[{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"into_inner","","Consumes this reentrant mutex, returning the underlying data.",5,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"lock","","Acquires a reentrant mutex, blocking the current thread until it is able to do so.",5,{"inputs":[{"name":"self"}],"output":{"name":"reentrantmutexguard"}}],[11,"try_lock","","Attempts to acquire this lock.",5,{"inputs":[{"name":"self"}],"output":{"generics":["reentrantmutexguard"],"name":"option"}}],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",5,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"generics":["reentrantmutexguard"],"name":"option"}}],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",5,{"inputs":[{"name":"self"},{"name":"instant"}],"output":{"generics":["reentrantmutexguard"],"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",5,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"raw_unlock","","Releases the mutex.",5,{"inputs":[{"name":"self"}],"output":null}],[11,"raw_unlock_fair","","Releases the mutex using a fair unlock protocol.",5,{"inputs":[{"name":"self"}],"output":null}],[11,"raw_lock","","Acquires a mutex, blocking the current thread until it is able to do so.",5,{"inputs":[{"name":"self"}],"output":null}],[11,"raw_try_lock","","Attempts to acquire this lock.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"reentrantmutex"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",6,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new instance of an `RwLock<T>` which is unlocked.",7,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",7,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread until it can be acquired.",7,{"inputs":[{"name":"self"}],"output":{"name":"rwlockreadguard"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",7,{"inputs":[{"name":"self"}],"output":{"generics":["rwlockreadguard"],"name":"option"}}],[11,"try_read_for","","Attempts to acquire this rwlock with shared read access until a timeout is reached.",7,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"generics":["rwlockreadguard"],"name":"option"}}],[11,"try_read_until","","Attempts to acquire this rwlock with shared read access until a timeout is reached.",7,{"inputs":[{"name":"self"},{"name":"instant"}],"output":{"generics":["rwlockreadguard"],"name":"option"}}],[11,"read_recursive","","Locks this rwlock with shared read access, blocking the current thread until it can be acquired.",7,{"inputs":[{"name":"self"}],"output":{"name":"rwlockreadguard"}}],[11,"try_read_recursive","","Attempts to acquire this rwlock with shared read access.",7,{"inputs":[{"name":"self"}],"output":{"generics":["rwlockreadguard"],"name":"option"}}],[11,"try_read_recursive_for","","Attempts to acquire this rwlock with shared read access until a timeout is reached.",7,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"generics":["rwlockreadguard"],"name":"option"}}],[11,"try_read_recursive_until","","Attempts to acquire this rwlock with shared read access until a timeout is reached.",7,{"inputs":[{"name":"self"},{"name":"instant"}],"output":{"generics":["rwlockreadguard"],"name":"option"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current thread until it can be acquired.",7,{"inputs":[{"name":"self"}],"output":{"name":"rwlockwriteguard"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",7,{"inputs":[{"name":"self"}],"output":{"generics":["rwlockwriteguard"],"name":"option"}}],[11,"try_write_for","","Attempts to acquire this rwlock with exclusive write access until a timeout is reached.",7,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"generics":["rwlockwriteguard"],"name":"option"}}],[11,"try_write_until","","Attempts to acquire this rwlock with exclusive write access until a timeout is reached.",7,{"inputs":[{"name":"self"},{"name":"instant"}],"output":{"generics":["rwlockwriteguard"],"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",7,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"raw_unlock_read","","Releases shared read access of the rwlock.",7,{"inputs":[{"name":"self"}],"output":null}],[11,"raw_unlock_write","","Releases exclusive write access of the rwlock.",7,{"inputs":[{"name":"self"}],"output":null}],[11,"raw_unlock_read_fair","","Releases shared read access of the rwlock using a fair unlock protocol.",7,{"inputs":[{"name":"self"}],"output":null}],[11,"raw_unlock_write_fair","","Releases exclusive write access of the rwlock using a fair unlock protocol.",7,{"inputs":[{"name":"self"}],"output":null}],[11,"raw_downgrade","","Atomically downgrades a write lock into a read lock without allowing any writers to take exclusive access of the lock in the meantime.",7,{"inputs":[{"name":"self"}],"output":null}],[11,"raw_read","","Locks this rwlock with shared read access, blocking the current thread until it can be acquired.",7,{"inputs":[{"name":"self"}],"output":null}],[11,"raw_try_read","","Attempts to acquire this rwlock with shared read access.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raw_read_recursive","","Locks this rwlock with shared read access, blocking the current thread until it can be acquired.",7,{"inputs":[{"name":"self"}],"output":null}],[11,"raw_try_read_recursive","","Attempts to acquire this rwlock with shared read access.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raw_write","","Locks this rwlock with exclusive write access, blocking the current thread until it can be acquired.",7,{"inputs":[{"name":"self"}],"output":null}],[11,"raw_try_write","","Attempts to lock this rwlock with exclusive write access.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"rwlock"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",8,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",8,{"inputs":[{"name":"self"}],"output":null}],[11,"downgrade","","Atomically downgrades a write lock into a read lock without allowing any writers to take exclusive access of the lock in the meantime.",9,{"inputs":[{"name":"self"}],"output":{"name":"rwlockreadguard"}}],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",9,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",9,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",9,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",9,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"oncestate"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"oncestate"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"done","","Returns whether the associated `Once` has successfullly executed a closure.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Once` value.",10,{"inputs":[],"output":{"name":"once"}}],[11,"state","","Returns the current state of this `Once`.",10,{"inputs":[{"name":"self"}],"output":{"name":"oncestate"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure will be executed if this is the first time `call_once` has been called, and otherwise the routine will not be invoked.",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"default","","",10,{"inputs":[],"output":{"name":"once"}}],[6,"MutexGuardRef","","Typedef of an owning reference that uses a `MutexGuard` as the owner.",null,null],[6,"ReentrantMutexGuardRef","","Typedef of an owning reference that uses a `ReentrantMutexGuard` as the owner.",null,null],[6,"RwLockReadGuardRef","","Typedef of an owning reference that uses a `RwLockReadGuard` as the owner.",null,null],[6,"RwLockWriteGuardRef","","Typedef of an owning reference that uses a `RwLockWriteGuard` as the owner.",null,null],[17,"ONCE_INIT","","Initialization value for static `Once` values.",null,null]],"paths":[[4,"OnceState"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"Mutex"],[3,"MutexGuard"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Once"]]};
searchIndex["parking_lot_core"] = {"doc":"This library exposes a low-level API for creating your own efficient synchronization primitives.","items":[[3,"ParkToken","parking_lot_core","A value associated with a parked thread which can be used by `unpark_filter`.",null,null],[12,"0","","",0,null],[3,"UnparkResult","","Result of an unpark operation.",null,null],[12,"unparked_threads","","The number of threads that were unparked.",1,null],[12,"have_more_threads","","Whether there are any threads remaining in the queue. This only returns true if a thread was unparked.",1,null],[12,"be_fair","","This is set to true on average once every 0.5ms for any given key. It should be used to switch to a fair unlocking mechanism for a particular unlock.",1,null],[3,"UnparkToken","","A value which is passed from an unparker to a parked thread.",null,null],[12,"0","","",2,null],[3,"SpinWait","","A counter used to perform exponential backoff in spin loops.",null,null],[4,"FilterOp","","Operation that `unpark_filter` should perform for each thread.",null,null],[13,"Unpark","","Unpark the thread and continue scanning the list of parked threads.",3,null],[13,"Skip","","Don't unpark the thread and continue scanning the list of parked threads.",3,null],[13,"Stop","","Don't unpark the thread and stop scanning the list of parked threads.",3,null],[4,"ParkResult","","Result of a park operation.",null,null],[13,"Unparked","","We were unparked by another thread with the given token.",4,null],[13,"Invalid","","The validation callback returned false.",4,null],[13,"TimedOut","","The timeout expired.",4,null],[4,"RequeueOp","","Operation that `unpark_requeue` should perform.",null,null],[13,"Abort","","Abort the operation without doing anything.",5,null],[13,"UnparkOneRequeueRest","","Unpark one thread and requeue the rest onto the target queue.",5,null],[13,"RequeueAll","","Requeue all threads onto the target queue.",5,null],[5,"park","","Parks the current thread in the queue associated with the given key.",null,{"inputs":[{"name":"usize"},{"name":"v"},{"name":"b"},{"name":"t"},{"name":"parktoken"},{"generics":["instant"],"name":"option"}],"output":{"name":"parkresult"}}],[5,"unpark_all","","Unparks all threads in the queue associated with the given key.",null,{"inputs":[{"name":"usize"},{"name":"unparktoken"}],"output":{"name":"usize"}}],[5,"unpark_filter","","Unparks a number of threads from the front of the queue associated with `key` depending on the results of a filter function which inspects the `ParkToken` associated with each thread.",null,{"inputs":[{"name":"usize"},{"name":"f"},{"name":"c"}],"output":{"name":"unparkresult"}}],[5,"unpark_one","","Unparks one thread from the queue associated with the given key.",null,{"inputs":[{"name":"usize"},{"name":"c"}],"output":{"name":"unparkresult"}}],[5,"unpark_requeue","","Removes all threads from the queue associated with `key_from`, optionally unparks the first one and requeues the rest onto the queue associated with `key_to`.",null,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"v"},{"name":"c"}],"output":{"name":"unparkresult"}}],[11,"new","","Creates a new `SpinWait`.",6,{"inputs":[],"output":{"name":"spinwait"}}],[11,"reset","","Resets a `SpinWait` to its initial state.",6,{"inputs":[{"name":"self"}],"output":null}],[11,"spin","","Spins until the sleep threshold has been reached.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"spin_no_yield","","Spins without yielding the thread to the OS.",6,{"inputs":[{"name":"self"}],"output":null}],[11,"default","","",6,{"inputs":[],"output":{"name":"spinwait"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"parkresult"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"parkresult"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"parkresult"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_unparked","","Returns true if we were unparked by another thread.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"unparkresult"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"unparkresult"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"unparkresult"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"requeueop"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"requeueop"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"filterop"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"filterop"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"unparktoken"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"unparktoken"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"unparktoken"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"parktoken"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"parktoken"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"parktoken"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"deadlock","","[Experimental] Deadlock detection",null,null],[5,"acquire_resource","parking_lot_core::deadlock","Acquire a resource identified by key in the deadlock detector Noop if deadlock_detection feature isn't enabled. Note: Call after the resource is acquired",null,{"inputs":[{"name":"usize"}],"output":null}],[5,"release_resource","","Release a resource identified by key in the deadlock detector. Noop if deadlock_detection feature isn't enabled. Note: Call before the resource is released # Panics Panics if the resource was already released or wasn't acquired in this thread.",null,{"inputs":[{"name":"usize"}],"output":null}],[17,"DEFAULT_PARK_TOKEN","parking_lot_core","A default park token to use.",null,null],[17,"DEFAULT_UNPARK_TOKEN","","A default unpark token to use.",null,null]],"paths":[[3,"ParkToken"],[3,"UnparkResult"],[3,"UnparkToken"],[4,"FilterOp"],[4,"ParkResult"],[4,"RequeueOp"],[3,"SpinWait"]]};
searchIndex["pulse"] = {"doc":"","items":[[3,"Select","pulse","A `Select` listens to 1 or more signals. It will wait until any signal becomes available before Pulsing. `Select` will then return the `Signal` that has been `Pulsed`. `Select` has no defined ordering of events for `Signal`s when there are more then one `Signals` pending.",null,null],[3,"SelectMap","","`SelectMap` is a wrapper around a `Select` rather then use a unique id to find out what signal has been asserts, `SelectMap` will return an supplied object.",null,null],[3,"Barrier","","A `Barrier` can listen for 1 or more `Signals`. It will only transition to a `Pulsed` state once all the `Signals` have `Pulsed`.",null,null],[3,"Pulse","","A `Pulse` is represents an unfired signal. It is the tx side of Signal A `Pulse` can only purpose it to be fired, and then it will be moved as to never allow it to fire again. `Dropping` a pulse will `pulse` The signal, but the signal will enter an error state.",null,null],[3,"Signal","","A `Signal` represents listens for a `pulse` to occur in the system. A `Signal` has one of three states. Pending, Pulsed, or Errored. Pending means the pulse has not fired, but still exists. Pulsed meaning the  pulse has fired, and no longer exists. Errored means the pulse was dropped without firing. This normally means a programming error of some sort.",null,null],[3,"ThreadScheduler","","This is the `default` system scheduler that is used if no user provided scheduler is installed. It is very basic and will block the OS thread using `thread::park`",null,null],[4,"SignalState","","Described the possible states of a Signal",null,null],[13,"Pending","","",0,null],[13,"Pulsed","","",0,null],[13,"Dropped","","",0,null],[4,"WaitError","","Represents the possible errors that can occur on a `Signal`",null,null],[13,"Dropped","","The `Pulse` was dropped before it could `Pulse`",1,null],[4,"TimeoutError","","Represents the possible errors from a wait timeout",null,null],[13,"Error","","A `WaitError` has occurred",2,null],[13,"Timeout","","The `Signal` timed-out before a `Pulse` was observed.",2,null],[5,"swap_scheduler","","Replace the current Scheduler with your own supplied scheduler. all `wait()` commands will be run through this scheduler now.",null,{"inputs":[{"generics":["scheduler"],"name":"box"}],"output":{"generics":["box"],"name":"option"}}],[5,"with_scheduler","","Call the suppled closure using the supplied schedulee",null,{"inputs":[{"name":"f"},{"generics":["scheduler"],"name":"box"}],"output":{"generics":["box"],"name":"option"}}],[11,"new","","Create a new empty `Select`",3,{"inputs":[],"output":{"name":"select"}}],[11,"add","","Add a signal to the `Select`, a unique id that is associated With the signal is returned. This can be used to remove the signal from the `Select` or to lookup the `Pulse` when it fires.",3,{"inputs":[{"name":"self"},{"name":"signal"}],"output":{"name":"usize"}}],[11,"remove","","Remove a `Signal1 from the`Select` using it's unique id.",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["signal"],"name":"option"}}],[11,"into_barrier","","Convert all the signals present in the `Select` into a `Barrier`",3,{"inputs":[{"name":"self"}],"output":{"name":"barrier"}}],[11,"try_next","","This is a non-blocking attempt to get a `Signal` from a `Select` this will return a `Some(Signal)` if there is a pending `Signal` in the select. Otherwise it will return `None`",3,{"inputs":[{"name":"self"}],"output":{"generics":["signal"],"name":"option"}}],[11,"len","","Get the number of Signals being watched",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["signal"],"name":"option"}}],[11,"signal","","",3,{"inputs":[{"name":"self"}],"output":{"name":"signal"}}],[11,"new","","Create a new empty `SelectMap`",4,{"inputs":[],"output":{"name":"selectmap"}}],[11,"add","","Add a `Signal` and an associated value into the `SelectMap`",4,{"inputs":[{"name":"self"},{"name":"signal"},{"name":"t"}],"output":null}],[11,"try_next","","This is a non-blocking attempt to get a `Signal` from a `SelectMap` this will return a `Some((Signal, T))` if there is a pending `Signal` in the select. Otherwise it will return `None`",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"len","","Get the number of items in the `SelectMap`",4,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"signal","","",4,{"inputs":[{"name":"self"}],"output":{"name":"signal"}}],[11,"new","","Create a new Barrier from an Vector of `Siganl`s",5,null],[11,"signal","","",5,{"inputs":[{"name":"self"}],"output":{"name":"signal"}}],[8,"Signals","","allows an object to assert a wait signal",null,null],[10,"signal","","Get a signal from a object",6,{"inputs":[{"name":"self"}],"output":{"name":"signal"}}],[11,"wait","","Block the current thread until the object assets a pulse.",6,{"inputs":[{"name":"self"}],"output":{"generics":["waiterror"],"name":"result"}}],[11,"wait_timeout_ms","","Block the current thread until the object assets a pulse. Or until the timeout has been asserted.",6,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["timeouterror"],"name":"result"}}],[8,"Scheduler","","This is the hook into the async wait methods provided by `pulse`. It is required for the user to override the current system scheduler.",null,null],[10,"wait","","Wait until the signal is made `ready` or `errored`",7,{"inputs":[{"name":"self"},{"name":"signal"}],"output":{"generics":["waiterror"],"name":"result"}}],[10,"wait_timeout_ms","","Wait until the signal is made `ready` or `errored` or the timeout has been reached.",7,{"inputs":[{"name":"self"},{"name":"signal"},{"name":"u32"}],"output":{"generics":["timeouterror"],"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"drop","","",8,{"inputs":[{"name":"self"}],"output":null}],[11,"cast_from_usize","","Create a Pulse from a usize. This is naturally unsafe.",8,{"inputs":[{"name":"usize"}],"output":{"name":"pulse"}}],[11,"cast_to_usize","","Convert a trigger to a `usize`, This is unsafe and it will kill your kittens if you are not careful",8,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"pulse","","Pulse the `pulse` which will transition the `Signal` out from pending to ready. This moves the pulse so that it can only be fired once.",8,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"signal"}}],[11,"drop","","",9,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Create a Signal and a Pulse that are associated.",9,null],[11,"pulsed","","Create a signal that is already pulsed",9,{"inputs":[],"output":{"name":"signal"}}],[11,"state","","Read out the state of the Signal",9,{"inputs":[{"name":"self"}],"output":{"name":"signalstate"}}],[11,"is_pending","","Check to see if the signal is pending. A signal ",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"id","","This is a unique id that can be used to identify the signal from others See `Select` for how this api is useful.",9,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"wait","","Block the current thread until a `pulse` is ready. This will block indefinably if the pulse never fires.",9,{"inputs":[{"name":"self"}],"output":{"generics":["waiterror"],"name":"result"}}],[11,"wait_timeout_ms","","Block until either the pulse is sent, or the timeout is reached",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["timeouterror"],"name":"result"}}],[11,"callback","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"signalstate"}],"output":{"name":"bool"}}],[11,"into_raw","","",8,null],[11,"from_raw","","",8,null],[11,"into_raw","","",9,null],[11,"from_raw","","",9,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"waiterror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"timeouterror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"timeouterror"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"wait","","",10,{"inputs":[{"name":"self"},{"name":"signal"}],"output":{"generics":["waiterror"],"name":"result"}}],[11,"wait_timeout_ms","","",10,{"inputs":[{"name":"self"},{"name":"signal"},{"name":"u32"}],"output":{"generics":["timeouterror"],"name":"result"}}]],"paths":[[4,"SignalState"],[4,"WaitError"],[4,"TimeoutError"],[3,"Select"],[3,"SelectMap"],[3,"Barrier"],[8,"Signals"],[8,"Scheduler"],[3,"Pulse"],[3,"Signal"],[3,"ThreadScheduler"]]};
searchIndex["quickcheck"] = {"doc":"This crate is a port of Haskell's QuickCheck.","items":[[8,"Rng","quickcheck","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","Return the next random u64.",0,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open interval `[0, 1)`.",0,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open interval `[0, 1)`.",0,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",0,null],[11,"gen","","Return a random value of a `Rand` type.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly generated items.",0,{"inputs":[{"name":"self"}],"output":{"name":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",0,{"inputs":[{"name":"self"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",0,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",0,{"inputs":[{"name":"self"}],"output":{"name":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",0,null],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",0,null],[11,"shuffle","","Shuffle a mutable slice in place.",0,null],[3,"StdGen","","StdGen is the default implementation of `Gen`.",null,null],[3,"QuickCheck","","The main QuickCheck type for setting configuration and running QuickCheck.",null,null],[3,"TestResult","","Describes the status of a single instance of a test.",null,null],[5,"empty_shrinker","","Creates a shrinker with zero elements.",null,{"inputs":[],"output":{"generics":["iterator"],"name":"box"}}],[5,"single_shrinker","","Creates a shrinker with a single element.",null,{"inputs":[{"name":"a"}],"output":{"generics":["iterator"],"name":"box"}}],[5,"quickcheck","","Convenience function for running QuickCheck.",null,{"inputs":[{"name":"a"}],"output":null}],[11,"new","","",1,{"inputs":[{"name":"r"},{"name":"usize"}],"output":{"name":"stdgen"}}],[11,"next_u32","","",1,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",1,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",1,null],[11,"size","","",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"new","","Creates a new QuickCheck value.",2,{"inputs":[],"output":{"generics":["stdgen"],"name":"quickcheck"}}],[11,"tests","","Set the number of tests to run.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"quickcheck"}}],[11,"max_tests","","Set the maximum number of tests to run.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"quickcheck"}}],[11,"gen","","Set the random number generator to be used by QuickCheck.",2,{"inputs":[{"name":"self"},{"name":"g"}],"output":{"name":"quickcheck"}}],[11,"quicktest","","Tests a property and returns the result.",2,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"generics":["usize","testresult"],"name":"result"}}],[11,"quickcheck","","Tests a property and calls `panic!` on failure.",2,{"inputs":[{"name":"self"},{"name":"a"}],"output":null}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"testresult"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"passed","","Produces a test result that indicates the current test has passed.",3,{"inputs":[],"output":{"name":"testresult"}}],[11,"failed","","Produces a test result that indicates the current test has failed.",3,{"inputs":[],"output":{"name":"testresult"}}],[11,"error","","Produces a test result that indicates failure from a runtime error.",3,{"inputs":[{"name":"s"}],"output":{"name":"testresult"}}],[11,"discard","","Produces a test result that instructs `quickcheck` to ignore it. This is useful for restricting the domain of your properties. When a test is discarded, `quickcheck` will replace it with a fresh one (up to a certain limit).",3,{"inputs":[],"output":{"name":"testresult"}}],[11,"from_bool","","Converts a `bool` to a `TestResult`. A `true` value indicates that the test has passed and a `false` value indicates that the test has failed.",3,{"inputs":[{"name":"bool"}],"output":{"name":"testresult"}}],[11,"must_fail","","Tests if a \"procedure\" fails when executed. The test passes only if `f` generates a task failure during its execution.",3,{"inputs":[{"name":"f"}],"output":{"name":"testresult"}}],[11,"is_failure","","Returns `true` if and only if this test result describes a failing test.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_error","","Returns `true` if and only if this test result describes a failing test as a result of a run time error.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"result","","",3,{"inputs":[{"name":"self"},{"name":"g"}],"output":{"name":"testresult"}}],[8,"Arbitrary","","`Arbitrary` describes types whose values can be randomly generated and shrunk.",null,null],[10,"arbitrary","","",4,{"inputs":[{"name":"g"}],"output":{"name":"self"}}],[11,"shrink","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["iterator"],"name":"box"}}],[8,"Gen","","`Gen` wraps a `rand::Rng` with parameters to control the distribution of random values.",null,null],[10,"size","","",5,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[8,"Testable","","`Testable` describes types (e.g., a function) whose values can be tested.",null,null],[10,"result","","",6,{"inputs":[{"name":"self"},{"name":"g"}],"output":{"name":"testresult"}}],[14,"quickcheck","","A macro for writing quickcheck tests.",null,null],[11,"shrink","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["iterator"],"name":"box"}}]],"paths":[[8,"Rng"],[3,"StdGen"],[3,"QuickCheck"],[3,"TestResult"],[8,"Arbitrary"],[8,"Gen"],[8,"Testable"]]};
searchIndex["quote"] = {"doc":"Quasi-quoting without a Syntex dependency, intended for use with Macros 1.1.","items":[[3,"Tokens","quote","Tokens produced by a `quote!(...)` invocation.",null,null],[3,"ByteStr","","Wrap a `&str` so it interpolates as a byte-string: `b\"abc\"`.",null,null],[12,"0","","",0,null],[3,"Hex","","Wrap an integer so it interpolates as a hexadecimal.",null,null],[12,"0","","",1,null],[3,"Ident","","An identifier that should be interpolated without quotes.",null,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"tokens"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":{"name":"bool"}}],[11,"new","","Empty tokens.",2,{"inputs":[],"output":{"name":"self"}}],[11,"append","","For use by `ToTokens` implementations.",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"append_all","","For use by `ToTokens` implementations.",2,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"append_separated","","For use by `ToTokens` implementations.",2,{"inputs":[{"name":"self"},{"name":"i"},{"name":"s"}],"output":null}],[11,"append_terminated","","For use by `ToTokens` implementations.",2,{"inputs":[{"name":"self"},{"name":"i"},{"name":"s"}],"output":null}],[11,"as_str","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_string","","",2,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"parse","","",2,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"as_ref","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_tokens","","",0,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",2,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"ident"}}],[11,"hash","","",3,null],[11,"new","","",3,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"generics":["str"],"name":"cow"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"as_ref","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"to_tokens","","",3,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[8,"ToTokens","","Types that can be interpolated inside a `quote!(...)` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `Tokens`.",4,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[14,"quote","","The whole point.",null,null]],"paths":[[3,"ByteStr"],[3,"Hex"],[3,"Tokens"],[3,"Ident"],[8,"ToTokens"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number generator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the open interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the closed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current platform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number generator, seeded by the system. Intended to be used in method chaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from a finite iterator. The order of elements in the sample is not random.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the `Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample uniformly between two values. This should not be used directly, and is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range` requires. This should not ever be called directly, only via `Range::new`, which will check that `low < high`, so this function doesn't have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as a source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"range"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `Range` instance that samples uniformly from `[low, high)`. Panics if `low >= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",4,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of freedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of freedom.",null,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"gamma"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)` distribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",5,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"chisquared"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom `k`. Panics if `k < 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"fisherf"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `FisherF` distribution, with the given parameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",7,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"studentt"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new Student t distribution with `n` degrees of freedom. Panics if `n <= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",8,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers (a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"standardnormal"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"normal"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and standard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",10,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"lognormal"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean and standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",11,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"exp1"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"exp"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `Exp` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",13,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the source of randomness.",14,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"support"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"sample","","",16,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",16,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"sup"}}],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"weighted"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",17,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"t"}}],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit variant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default fixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"isaacrng"}}],[11,"next_u32","","",18,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can be any length, although the maximum number of elements used is 256 and any more will be silently ignored. A generator constructed with a given seed will generate the same sequence of values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the default fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"isaac64rng"}}],[11,"next_u32","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can be any length, although the maximum number of elements used is 256 and any more will be silently ignored. A generator constructed with a given seed will generate the same sequence of values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"chacharng"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default fixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to a user-provided value. This permits jumping arbitrarily ahead (or backwards) in the pseudorandom stream.",20,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"u64"}],"output":null}],[11,"next_u32","","",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed, obtained from a variable-length u32 array. Only up to 8 words are used; if less than 8 words are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it generates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it has generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by replacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been generated exceed the threshold.",21,{"inputs":[{"name":"self"}],"output":null}],[11,"next_u32","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and seed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"reseedwithdefault"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"reseed","","",23,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"generics":["f64"],"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"generics":["f64"],"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"generics":["f32"],"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"generics":["f32"],"name":"closed01"}}],[0,"os","","Interfaces to the operating system provided random number generators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from the operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",24,{"inputs":[],"output":{"generics":["osrng"],"name":"result"}}],[11,"next_u32","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",24,null],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will work best with an infinite reader, but this is not required.",null,null],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `ReadRng` from a `Read`.",25,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",25,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of randomness.",26,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","Return the next random u64.",27,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open interval `[0, 1)`.",27,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open interval `[0, 1)`.",27,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",27,null],[11,"gen","","Return a random value of a `Rand` type.",27,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly generated items.",27,{"inputs":[{"name":"self"}],"output":{"name":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",27,{"inputs":[{"name":"self"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",27,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",27,{"inputs":[{"name":"self"}],"output":{"name":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",27,null],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",27,null],[11,"shuffle","","Shuffle a mutable slice in place.",27,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce the same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",28,{"inputs":[{"name":"self"},{"name":"seed"}],"output":null}],[10,"from_seed","","Create a new RNG with the given seed.",28,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",30,{"inputs":[{"name":"self"}],"output":{"generics":["char"],"name":"option"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"xorshiftrng"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",31,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"rand","","",31,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"stdrng"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",32,{"inputs":[],"output":{"generics":["stdrng"],"name":"result"}}],[11,"next_u32","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"reseed","","",32,null],[11,"from_seed","","",32,null],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"threadrng"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next_u32","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",33,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["rayon"] = {"doc":"","items":[[5,"current_num_threads","rayon","Returns the number of threads in the current registry. If this code is executing within a Rayon thread-pool, then this will be the number of threads for the thread-pool of the current thread. Otherwise, it will be the number of threads for the global thread-pool.",null,{"inputs":[],"output":{"name":"usize"}}],[3,"Configuration","","Contains the rayon thread pool configuration.",null,null],[5,"initialize","","Initializes the global thread pool. This initialization is optional.  If you do not call this function, the thread pool will be automatically initialized with the default configuration. In fact, calling `initialize` is not recommended, except for in two scenarios:",null,{"inputs":[{"name":"configuration"}],"output":{"generics":["box"],"name":"result"}}],[3,"ThreadPool","","ThreadPool",null,null],[5,"join","","The `join` function takes two closures and potentially runs them in parallel. It returns a pair of the results from those closures.",null,null],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure with a reference to `s`. This closure can then spawn asynchronous tasks into `s`. Those tasks may run asynchronously with respect to the closure; they may themselves spawn additional tasks into `s`. When the closure returns, it will block until all tasks that have been spawned into `s` complete.",null,{"inputs":[{"name":"op"}],"output":{"name":"r"}}],[3,"Scope","","Represents a fork-join scope which can be used to spawn any number of tasks. See [`scope()`] for more information.",null,null],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\" or \"global\" scope.  Just like a standard thread, this task is not tied to the current stack frame, and hence it cannot hold any references other than those with `'static` lifetime. If you want to spawn a task that references stack data, use [the `scope()` function][scope] to create a scope.",null,null],[5,"split","","The `split` function takes arbitrary data and a closure that knows how to split it, and turns this into a `ParallelIterator`.",null,{"inputs":[{"name":"d"},{"name":"s"}],"output":{"name":"split"}}],[0,"collections","","This module contains the parallel iterator types for standard collections. You will rarely need to interact with it directly unless you have need to name one of the iterator types.",null,null],[0,"binary_heap","rayon::collections","This module contains the parallel iterator types for heaps (`BinaryHeap<T>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",null,null],[3,"IntoIter","rayon::collections::binary_heap","Parallel iterator over a binary heap",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a binary heap",null,null],[11,"drive_unindexed","","",0,null],[11,"opt_len","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",0,null],[11,"len","","",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",0,null],[11,"drive_unindexed","","",1,null],[11,"opt_len","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",1,null],[11,"len","","",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",1,null],[0,"btree_map","rayon::collections","This module contains the parallel iterator types for B-Tree maps (`BTreeMap<K, V>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",null,null],[3,"IntoIter","rayon::collections::btree_map","Parallel iterator over a B-Tree map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree map",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a B-Tree map",null,null],[11,"drive_unindexed","","",2,null],[11,"opt_len","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive_unindexed","","",3,null],[11,"opt_len","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive_unindexed","","",4,null],[11,"opt_len","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[0,"btree_set","rayon::collections","This module contains the parallel iterator types for B-Tree sets (`BTreeSet<T>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",null,null],[3,"IntoIter","rayon::collections::btree_set","Parallel iterator over a B-Tree set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree set",null,null],[11,"drive_unindexed","","",5,null],[11,"opt_len","","",5,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive_unindexed","","",6,null],[11,"opt_len","","",6,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[0,"hash_map","rayon::collections","This module contains the parallel iterator types for hash maps (`HashMap<K, V>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",null,null],[3,"IntoIter","rayon::collections::hash_map","Parallel iterator over a hash map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash map",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a hash map",null,null],[11,"drive_unindexed","","",7,null],[11,"opt_len","","",7,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive_unindexed","","",8,null],[11,"opt_len","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive_unindexed","","",9,null],[11,"opt_len","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[0,"hash_set","rayon::collections","This module contains the parallel iterator types for hash sets (`HashSet<T>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",null,null],[3,"IntoIter","rayon::collections::hash_set","Parallel iterator over a hash set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash set",null,null],[11,"drive_unindexed","","",10,null],[11,"opt_len","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive_unindexed","","",11,null],[11,"opt_len","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[0,"linked_list","rayon::collections","This module contains the parallel iterator types for linked lists (`LinkedList<T>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",null,null],[3,"IntoIter","rayon::collections::linked_list","Parallel iterator over a linked list",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a linked list",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a linked list",null,null],[11,"drive_unindexed","","",12,null],[11,"opt_len","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive_unindexed","","",13,null],[11,"opt_len","","",13,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive_unindexed","","",14,null],[11,"opt_len","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[0,"vec_deque","rayon::collections","This module contains the parallel iterator types for double-ended queues (`VecDeque<T>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",null,null],[3,"IntoIter","rayon::collections::vec_deque","Parallel iterator over a double-ended queue",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a double-ended queue",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a double-ended queue",null,null],[11,"drive_unindexed","","",15,null],[11,"opt_len","","",15,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",15,null],[11,"len","","",15,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",15,null],[11,"drive_unindexed","","",16,null],[11,"opt_len","","",16,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",16,null],[11,"len","","",16,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",16,null],[11,"drive_unindexed","","",17,null],[11,"opt_len","","",17,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",17,null],[11,"len","","",17,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",17,null],[0,"iter","rayon","The `ParallelIterator` module makes it easy to write parallel programs using an iterator-style interface. To get access to all the methods you want, the easiest is to write `use rayon::prelude::*;` at the top of your module, which will import the various traits and methods you need.",null,null],[3,"Chain","rayon::iter","`Chain` is an iterator that joins `b` after `a` in one continuous iterator. This struct is created by the [`chain()`] method on [`ParallelIterator`]",null,null],[3,"Enumerate","","`Enumerate` is an iterator that returns the current count along with the element. This struct is created by the [`enumerate()`] method on [`ParallelIterator`]",null,null],[3,"Filter","","`Filter` takes a predicate `filter_op` and filters out elements that match. This struct is created by the [`filter()`] method on [`ParallelIterator`]",null,null],[3,"FilterMap","","`FilterMap` creates an iterator that uses `filter_op` to both filter and map elements. This struct is created by the [`filter_map()`] method on [`ParallelIterator`].",null,null],[3,"FlatMap","","`FlatMap` maps each element to an iterator, then flattens these iterators together. This struct is created by the [`flat_map()`] method on [`ParallelIterator`]",null,null],[3,"Fold","","`Fold` is an iterator that applies a function over an iterator producing a single value. This struct is created by the [`fold()`] method on [`ParallelIterator`]",null,null],[3,"FoldWith","","`FoldWith` is an iterator that applies a function over an iterator producing a single value. This struct is created by the [`fold_with()`] method on [`ParallelIterator`]",null,null],[3,"Skip","","`Skip` is an iterator that skips over the first `n` elements. This struct is created by the [`skip()`] method on [`ParallelIterator`]",null,null],[3,"Split","","`Split` is a parallel iterator using arbitrary data and a splitting function. This struct is created by the [`split()`] function.",null,null],[3,"Take","","`Take` is an iterator that iterates over the first `n` elements. This struct is created by the [`take()`] method on [`ParallelIterator`]",null,null],[3,"Map","","`Map` is an iterator that transforms the elements of an underlying iterator.",null,null],[3,"MapWith","","`MapWith` is an iterator that transforms the elements of an underlying iterator.",null,null],[3,"Zip","","",null,null],[3,"Rev","","",null,null],[3,"MinLen","","`MinLen` is an iterator that imposes a minimum length on iterator splits. This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]",null,null],[3,"MaxLen","","`MaxLen` is an iterator that imposes a maximum length on iterator splits. This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]",null,null],[3,"Cloned","","`Cloned` is an iterator that clones the elements of an underlying iterator.",null,null],[3,"Inspect","","`Inspect` is an iterator that calls a function with a reference to each element before yielding it.",null,null],[3,"WhileSome","","`WhileSome` is an iterator that yields the `Some` elements of an iterator, halting as soon as any `None` is produced.",null,null],[4,"Either","","Represents a value of one of two possible types.",null,null],[13,"Left","","",18,null],[13,"Right","","",18,null],[5,"split","","The `split` function takes arbitrary data and a closure that knows how to split it, and turns this into a `ParallelIterator`.",null,{"inputs":[{"name":"d"},{"name":"s"}],"output":{"name":"split"}}],[11,"drive_unindexed","","",19,null],[11,"opt_len","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",19,null],[11,"len","","",19,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",19,null],[11,"drive_unindexed","","",20,null],[11,"opt_len","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",20,null],[11,"len","","",20,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",20,null],[11,"drive_unindexed","","",21,null],[11,"drive_unindexed","","",22,null],[11,"drive_unindexed","","",23,null],[0,"internal","","Internal traits and functions used to implement parallel iteration. These should be considered highly unstable: users of parallel iterators should not need to interact with them directly. See `README.md` for a high-level overview.",null,null],[5,"bridge","rayon::iter::internal","",null,null],[5,"bridge_producer_consumer","","",null,null],[5,"bridge_unindexed","","",null,null],[8,"ProducerCallback","","",null,null],[16,"Output","","",24,null],[10,"callback","","",24,null],[8,"Producer","","A producer which will produce a fixed number of items N. This is not queryable through the API; the consumer is expected to track it.",null,null],[16,"Item","","",25,null],[16,"IntoIter","","",25,null],[10,"into_iter","","",25,null],[11,"min_len","","",25,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"max_len","","",25,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"split_at","","Split into two producers; one produces items `0..index`, the other `index..N`. Index must be less than or equal to `N`.",25,null],[11,"fold_with","","Iterate the producer, feeding each element to `folder`, and stop when the folder is full (or all elements have been consumed).",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"f"}}],[8,"Consumer","","A consumer which consumes items that are fed to it.",null,null],[16,"Folder","","",26,null],[16,"Reducer","","",26,null],[16,"Result","","",26,null],[10,"split_at","","Divide the consumer into two consumers, one processing items `0..index` and one processing items from `index..`. Also produces a reducer that can be used to reduce the results at the end.",26,null],[10,"into_folder","","Convert the consumer into a folder that can consume items sequentially, eventually producing a final result.",26,null],[10,"full","","Hint whether this `Consumer` would like to stop processing further items, e.g. if a search has been completed.",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Folder","","",null,null],[16,"Result","","",27,null],[10,"consume","","Consume next item and return new sequential state.",27,{"inputs":[{"name":"self"},{"name":"item"}],"output":{"name":"self"}}],[11,"consume_iter","","Consume items from the iterator until full, and return new sequential state.",27,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"self"}}],[10,"complete","","Finish consuming items, produce final result.",27,null],[10,"full","","Hint whether this `Folder` would like to stop processing further items, e.g. if a search has been completed.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Reducer","","",null,null],[10,"reduce","","Reduce two final results into one; this is executed after a split.",28,{"inputs":[{"name":"self"},{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[8,"UnindexedConsumer","","A stateless consumer can be freely copied.",null,null],[10,"split_off_left","","",29,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_reducer","","",29,null],[8,"UnindexedProducer","","An unindexed producer that doesn't know its exact length. (or can't represent its known length in a `usize`)",null,null],[16,"Item","","",30,null],[10,"split","","Split midway into a new producer if possible, otherwise return `None`.",30,null],[10,"fold_with","","Iterate the producer, feeding each element to `folder`, and stop when the folder is full (or all elements have been consumed).",30,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"f"}}],[11,"drive_unindexed","rayon::iter","",31,null],[11,"drive_unindexed","","",32,null],[11,"drive_unindexed","","",33,null],[11,"opt_len","","",33,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"len","","",33,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"drive","","",33,null],[11,"with_producer","","",33,null],[11,"drive_unindexed","","",34,null],[11,"drive_unindexed","","",35,null],[11,"opt_len","","",35,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"len","","",35,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"drive","","",35,null],[11,"with_producer","","",35,null],[11,"drive_unindexed","","",36,null],[11,"opt_len","","",36,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",36,null],[11,"len","","",36,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",36,null],[11,"drive_unindexed","","",37,null],[11,"opt_len","","",37,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",37,null],[11,"len","","",37,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",37,null],[11,"drive_unindexed","","",38,null],[11,"opt_len","","",38,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",38,null],[11,"len","","",38,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",38,null],[11,"drive_unindexed","","",39,null],[11,"opt_len","","",39,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",39,null],[11,"len","","",39,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",39,null],[11,"drive_unindexed","","",40,null],[11,"opt_len","","",40,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",40,null],[11,"len","","",40,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",40,null],[11,"drive_unindexed","","",41,null],[11,"opt_len","","",41,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",41,null],[11,"len","","",41,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",41,null],[11,"drive_unindexed","","",42,null],[11,"opt_len","","",42,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",42,null],[11,"len","","",42,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",42,null],[11,"drive_unindexed","","",43,null],[11,"opt_len","","",43,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",43,null],[11,"len","","",43,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",43,null],[11,"drive_unindexed","","",44,null],[8,"IntoParallelIterator","","",null,null],[16,"Iter","","",45,null],[16,"Item","","",45,null],[10,"into_par_iter","","",45,null],[8,"IntoParallelRefIterator","","",null,null],[16,"Iter","","",46,null],[16,"Item","","",46,null],[10,"par_iter","","",46,null],[8,"IntoParallelRefMutIterator","","",null,null],[16,"Iter","","",47,null],[16,"Item","","",47,null],[10,"par_iter_mut","","",47,null],[8,"ParallelIterator","","The `ParallelIterator` interface.",null,null],[16,"Item","","",48,null],[11,"for_each","","Executes `OP` on each item produced by the iterator, in parallel.",48,{"inputs":[{"name":"self"},{"name":"op"}],"output":null}],[11,"for_each_with","","Executes `OP` on the given `init` value with each item produced by the iterator, in parallel.",48,{"inputs":[{"name":"self"},{"name":"t"},{"name":"op"}],"output":null}],[11,"count","","Counts the number of items in this parallel iterator.",48,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"map","","Applies `map_op` to each item of this iterator, producing a new iterator with the results.",48,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_with","","Applies `map_op` to the given `init` value with each item of this iterator, producing a new iterator with the results.",48,{"inputs":[{"name":"self"},{"name":"t"},{"name":"f"}],"output":{"name":"mapwith"}}],[11,"cloned","","Creates an iterator which clones all of its elements.  This may be useful when you have an iterator over `&T`, but you need `T`.",48,{"inputs":[{"name":"self"}],"output":{"name":"cloned"}}],[11,"inspect","","Applies `inspect_op` to a reference to each item of this iterator, producing a new iterator passing through the original items.  This is often useful for debugging to see what's happening in iterator stages.",48,{"inputs":[{"name":"self"},{"name":"op"}],"output":{"name":"inspect"}}],[11,"filter","","Applies `filter_op` to each item of this iterator, producing a new iterator with only the items that gave `true` results.",48,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"filter"}}],[11,"filter_map","","Applies `filter_op` to each item of this iterator to get an `Option`, producing a new iterator with only the items from `Some` results.",48,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"filtermap"}}],[11,"flat_map","","Applies `map_op` to each item of this iterator to get nested iterators, producing a new iterator that flattens these back into one.",48,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"flatmap"}}],[11,"reduce","","Reduces the items in the iterator into one item using `op`. The argument `identity` should be a closure that can produce \"identity\" value which may be inserted into the sequence as needed to create opportunities for parallel execution. So, for example, if you are doing a summation, then `identity()` ought to produce something that represents the zero for your type (but consider just calling `sum()` in that case).",48,null],[11,"reduce_with","","Reduces the items in the iterator into one item using `op`. If the iterator is empty, `None` is returned; otherwise, `Some` is returned.",48,{"inputs":[{"name":"self"},{"name":"op"}],"output":{"name":"option"}}],[11,"fold","","Parallel fold is similar to sequential fold except that the sequence of items may be subdivided before it is folded. Consider a list of numbers like `22 3 77 89 46`. If you used sequential fold to add them (`fold(0, |a,b| a+b)`, you would wind up first adding 0 + 22, then 22 + 3, then 25 + 77, and so forth. The parallel fold works similarly except that it first breaks up your list into sublists, and hence instead of yielding up a single sum at the end, it yields up multiple sums. The number of results is nondeterministic, as is the point where the breaks occur.",48,{"inputs":[{"name":"self"},{"name":"id"},{"name":"f"}],"output":{"name":"fold"}}],[11,"fold_with","","Applies `fold_op` to the given `init` value with each item of this iterator, finally producing the value for further use.",48,{"inputs":[{"name":"self"},{"name":"t"},{"name":"f"}],"output":{"name":"foldwith"}}],[11,"sum","","Sums up the items in the iterator.",48,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"product","","Multiplies all the items in the iterator.",48,{"inputs":[{"name":"self"}],"output":{"name":"p"}}],[11,"min","","Computes the minimum of all the items in the iterator. If the iterator is empty, `None` is returned; otherwise, `Some(min)` is returned.",48,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"min_by","","Computes the minimum of all the items in the iterator with respect to the given comparison function. If the iterator is empty, `None` is returned; otherwise, `Some(min)` is returned.",48,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"min_by_key","","Computes the item that yields the minimum value for the given function. If the iterator is empty, `None` is returned; otherwise, `Some(item)` is returned.",48,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"max","","Computes the maximum of all the items in the iterator. If the iterator is empty, `None` is returned; otherwise, `Some(max)` is returned.",48,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_by","","Computes the maximum of all the items in the iterator with respect to the given comparison function. If the iterator is empty, `None` is returned; otherwise, `Some(min)` is returned.",48,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"max_by_key","","Computes the item that yields the maximum value for the given function. If the iterator is empty, `None` is returned; otherwise, `Some(item)` is returned.",48,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"chain","","Takes two iterators and creates a new iterator over both.",48,{"inputs":[{"name":"self"},{"name":"c"}],"output":{"name":"chain"}}],[11,"find_any","","Searches for some item in the parallel iterator that matches the given predicate and returns it. This operation is similar to [`find` on sequential iterators][find] but the item returned may not be the first one in the parallel sequence which matches, since we search the entire sequence in parallel.",48,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[11,"find_first","","Searches for the sequentially first item in the parallel iterator that matches the given predicate and returns it.",48,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[11,"find_last","","Searches for the sequentially last item in the parallel iterator that matches the given predicate and returns it.",48,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[11,"any","","Searches for some item in the parallel iterator that matches the given predicate, and if so returns true.  Once a match is found, we'll attempt to stop process the rest of the items.  Proving that there's no match, returning false, does require visiting every item.",48,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[11,"all","","Tests that every item in the parallel iterator matches the given predicate, and if so returns true.  If a counter-example is found, we'll attempt to stop processing more items, then return false.",48,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[11,"while_some","","Creates an iterator over the `Some` items of this iterator, halting as soon as any `None` is found.",48,{"inputs":[{"name":"self"}],"output":{"name":"whilesome"}}],[11,"collect","","Create a fresh collection containing all the element produced by this parallel iterator.",48,{"inputs":[{"name":"self"}],"output":{"name":"c"}}],[11,"unzip","","Unzips the items of a parallel iterator into a pair of arbitrary `ParallelExtend` containers.",48,null],[11,"partition","","Partitions the items of a parallel iterator into a pair of arbitrary `ParallelExtend` containers.  Items for which the `predicate` returns true go into the first container, and the rest go into the second.",48,null],[11,"partition_map","","Partitions and maps the items of a parallel iterator into a pair of arbitrary `ParallelExtend` containers.  `Either::Left` items go into the first container, and `Either::Right` items go into the second.",48,null],[10,"drive_unindexed","","Internal method used to define the behavior of this parallel iterator. You should not need to call this directly.",48,null],[11,"opt_len","","Internal method used to define the behavior of this parallel iterator. You should not need to call this directly.",48,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[8,"IndexedParallelIterator","","An iterator that supports \"random access\" to its data, meaning that you can split it at arbitrary indices and draw data from those points.",null,null],[11,"collect_into","","Collects the results of the iterator into the specified vector. The vector is always truncated before execution begins. If possible, reusing the vector across calls can lead to better performance since it reuses the same backing buffer.",49,{"inputs":[{"name":"self"},{"name":"vec"}],"output":null}],[11,"unzip_into","","Unzips the results of the iterator into the specified vectors. The vectors are always truncated before execution begins. If possible, reusing the vectors across calls can lead to better performance since they reuse the same backing buffer.",49,{"inputs":[{"name":"self"},{"name":"vec"},{"name":"vec"}],"output":null}],[11,"zip","","Iterate over tuples `(A, B)`, where the items `A` are from this iterator and `B` are from the iterator given as argument. Like the `zip` method on ordinary iterators, if the two iterators are of unequal length, you only get the items they have in common.",49,{"inputs":[{"name":"self"},{"name":"z"}],"output":{"name":"zip"}}],[11,"cmp","","Lexicographically compares the elements of this `ParallelIterator` with those of another.",49,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","Lexicographically compares the elements of this `ParallelIterator` with those of another.",49,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","Determines if the elements of this `ParallelIterator` are equal to those of another",49,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"bool"}}],[11,"ne","","Determines if the elements of this `ParallelIterator` are unequal to those of another",49,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"bool"}}],[11,"lt","","Determines if the elements of this `ParallelIterator` are lexicographically less than those of another.",49,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"bool"}}],[11,"le","","Determines if the elements of this `ParallelIterator` are less or equal to those of another.",49,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"bool"}}],[11,"gt","","Determines if the elements of this `ParallelIterator` are lexicographically greater than those of another.",49,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"bool"}}],[11,"ge","","Determines if the elements of this `ParallelIterator` are less or equal to those of another.",49,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"bool"}}],[11,"enumerate","","Yields an index along with each item.",49,{"inputs":[{"name":"self"}],"output":{"name":"enumerate"}}],[11,"skip","","Creates an iterator that skips the first `n` elements.",49,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"skip"}}],[11,"take","","Creates an iterator that yields the first `n` elements.",49,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"take"}}],[11,"position_any","","Searches for some item in the parallel iterator that matches the given predicate, and returns its index.  Like `ParallelIterator::find_any`, the parallel search will not necessarily find the first match, and once a match is found we'll attempt to stop processing any more.",49,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"generics":["usize"],"name":"option"}}],[11,"position_first","","Searches for the sequentially first item in the parallel iterator that matches the given predicate, and returns its index.",49,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"generics":["usize"],"name":"option"}}],[11,"position_last","","Searches for the sequentially last item in the parallel iterator that matches the given predicate, and returns its index.",49,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"generics":["usize"],"name":"option"}}],[11,"rev","","Produces a new iterator with the elements of this iterator in reverse order.",49,{"inputs":[{"name":"self"}],"output":{"name":"rev"}}],[11,"with_min_len","","Sets the minimum length of iterators desired to process in each thread.  Rayon will not split any smaller than this length, but of course an iterator could already be smaller to begin with.",49,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"minlen"}}],[11,"with_max_len","","Sets the maximum length of iterators desired to process in each thread.  Rayon will try to split at least below this length, unless that would put it below the length from `with_min_len()`. For example, given min=10 and max=15, a length of 16 will not be split any further.",49,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"maxlen"}}],[10,"len","","Produces an exact count of how many items this iterator will produce, presuming no panic occurs.",49,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"drive","","Internal method used to define the behavior of this parallel iterator. You should not need to call this directly.",49,null],[10,"with_producer","","Internal method used to define the behavior of this parallel iterator. You should not need to call this directly.",49,null],[8,"FromParallelIterator","","`FromParallelIterator` implements the conversion from a [`ParallelIterator`]. By implementing `FromParallelIterator` for a type, you define how it will be created from an iterator.",null,null],[10,"from_par_iter","","",50,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[8,"ParallelExtend","","`ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].",null,null],[10,"par_extend","","",51,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[0,"option","rayon","This module contains the parallel iterator types for options (`Option<T>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",null,null],[3,"IntoIter","rayon::option","Parallel iterator over an option",null,null],[3,"Iter","","Parallel iterator over an immutable reference to an option",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to an option",null,null],[11,"drive_unindexed","","",52,null],[11,"opt_len","","",52,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",52,null],[11,"len","","",52,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",52,null],[11,"drive_unindexed","","",53,null],[11,"opt_len","","",53,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",53,null],[11,"len","","",53,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",53,null],[11,"drive_unindexed","","",54,null],[11,"opt_len","","",54,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",54,null],[11,"len","","",54,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",54,null],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator` traits. The intention is that one can include `use rayon::prelude::*` and have easy access to the various traits and methods you will need.",null,null],[0,"range","","This module contains the parallel iterator types for ranges (`Range<T>`); this is the type for values created by a `a..b` expression. You will rarely need to interact with it directly unless you have need to name one of the iterator types.",null,null],[3,"Iter","rayon::range","Parallel iterator over a range",null,null],[11,"drive_unindexed","","",55,null],[11,"opt_len","","",55,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",55,null],[11,"len","","",55,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",55,null],[11,"drive_unindexed","","",55,null],[11,"opt_len","","",55,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",55,null],[11,"len","","",55,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",55,null],[11,"drive_unindexed","","",55,null],[11,"opt_len","","",55,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",55,null],[11,"len","","",55,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",55,null],[11,"drive_unindexed","","",55,null],[11,"opt_len","","",55,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",55,null],[11,"len","","",55,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",55,null],[11,"drive_unindexed","","",55,null],[11,"opt_len","","",55,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",55,null],[11,"len","","",55,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",55,null],[11,"drive_unindexed","","",55,null],[11,"opt_len","","",55,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",55,null],[11,"len","","",55,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",55,null],[11,"drive_unindexed","","",55,null],[11,"opt_len","","",55,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",55,null],[11,"len","","",55,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",55,null],[11,"drive_unindexed","","",55,null],[11,"opt_len","","",55,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",55,null],[11,"len","","",55,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",55,null],[11,"drive_unindexed","","",55,null],[11,"drive_unindexed","","",55,null],[0,"result","rayon","This module contains the parallel iterator types for results (`Result<T, E>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",null,null],[3,"IntoIter","rayon::result","Parallel iterator over a result",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a result",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a result",null,null],[11,"drive_unindexed","","",56,null],[11,"opt_len","","",56,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",56,null],[11,"len","","",56,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",56,null],[11,"drive_unindexed","","",57,null],[11,"opt_len","","",57,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",57,null],[11,"len","","",57,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",57,null],[11,"drive_unindexed","","",58,null],[11,"opt_len","","",58,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",58,null],[11,"len","","",58,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",58,null],[0,"slice","rayon","This module contains the parallel iterator types for slices (`[T]`). You will rarely need to interact with it directly unless you have need to name one of those types.",null,null],[3,"Iter","rayon::slice","Parallel iterator over immutable items in a slice",null,null],[3,"Chunks","","Parallel iterator over immutable non-overlapping chunks of a slice",null,null],[3,"Windows","","Parallel iterator over immutable overlapping windows of a slice",null,null],[3,"IterMut","","Parallel iterator over mutable items in a slice",null,null],[3,"ChunksMut","","Parallel iterator over mutable non-overlapping chunks of a slice",null,null],[3,"Split","","Parallel iterator over slices separated by a predicate",null,null],[3,"SplitMut","","Parallel iterator over mutable slices separated by a predicate",null,null],[8,"ParallelSlice","","Parallel extensions for slices.",null,null],[10,"as_parallel_slice","","Returns a plain slice, which is used to implement the rest of the parallel methods.",59,null],[11,"par_split","","Returns a parallel iterator over subslices separated by elements that match the separator.",59,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"split"}}],[11,"par_windows","","Returns a parallel iterator over all contiguous windows of length `size`. The windows overlap.",59,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"windows"}}],[11,"par_chunks","","Returns a parallel iterator over at most `size` elements of `self` at a time. The chunks do not overlap.",59,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"chunks"}}],[8,"ParallelSliceMut","","Parallel extensions for mutable slices.",null,null],[10,"as_parallel_slice_mut","","Returns a plain mutable slice, which is used to implement the rest of the parallel methods.",60,null],[11,"par_split_mut","","Returns a parallel iterator over mutable subslices separated by elements that match the separator.",60,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"splitmut"}}],[11,"par_chunks_mut","","Returns a parallel iterator over at most `size` elements of `self` at a time. The chunks are mutable and do not overlap.",60,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"chunksmut"}}],[11,"par_sort","","Sorts the slice in parallel.",60,{"inputs":[{"name":"self"}],"output":null}],[11,"par_sort_by","","Sorts the slice in parallel with a comparator function.",60,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"par_sort_by_key","","Sorts the slice in parallel with a key extraction function.",60,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"par_sort_unstable","","Sorts the slice in parallel, but may not preserve the order of equal elements.",60,{"inputs":[{"name":"self"}],"output":null}],[11,"par_sort_unstable_by","","Sorts the slice in parallel with a comparator function, but may not preserve the order of equal elements.",60,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"par_sort_unstable_by_key","","Sorts the slice in parallel with a key extraction function, but may not preserve the order of equal elements.",60,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"drive_unindexed","","",61,null],[11,"opt_len","","",61,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",61,null],[11,"len","","",61,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",61,null],[11,"drive_unindexed","","",62,null],[11,"opt_len","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",62,null],[11,"len","","",62,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",62,null],[11,"drive_unindexed","","",63,null],[11,"opt_len","","",63,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",63,null],[11,"len","","",63,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",63,null],[11,"drive_unindexed","","",64,null],[11,"opt_len","","",64,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",64,null],[11,"len","","",64,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",64,null],[11,"drive_unindexed","","",65,null],[11,"opt_len","","",65,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",65,null],[11,"len","","",65,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",65,null],[11,"drive_unindexed","","",66,null],[11,"drive_unindexed","","",67,null],[0,"str","rayon","This module contains extension methods for `String` that expose parallel iterators, such as `par_split_whitespace()`. You will rarely need to interact with it directly, since if you add `use rayon::prelude::*` to your file, that will include the helper traits defined in this module.",null,null],[3,"Chars","rayon::str","Parallel iterator over the characters of a string",null,null],[3,"Split","","Parallel iterator over substrings separated by a pattern",null,null],[3,"SplitTerminator","","Parallel iterator over substrings separated by a terminator pattern",null,null],[3,"Lines","","Parallel iterator over lines in a string",null,null],[3,"SplitWhitespace","","Parallel iterator over substrings separated by whitespace",null,null],[8,"ParallelString","","Parallel extensions for strings.",null,null],[10,"as_parallel_string","","Returns a plain string slice, which is used to implement the rest of the parallel methods.",68,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"par_chars","","Returns a parallel iterator over the characters of a string.",68,{"inputs":[{"name":"self"}],"output":{"name":"chars"}}],[11,"par_split","","Returns a parallel iterator over substrings separated by a given character or predicate, similar to `str::split`.",68,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"split"}}],[11,"par_split_terminator","","Returns a parallel iterator over substrings terminated by a given character or predicate, similar to `str::split_terminator`. It's equivalent to `par_split`, except it doesn't produce an empty substring after a trailing terminator.",68,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"splitterminator"}}],[11,"par_lines","","Returns a parallel iterator over the lines of a string, ending with an optional carriage return and with a newline (`\\r\\n` or just `\\n`). The final line ending is optional, and line endings are not included in the output strings.",68,{"inputs":[{"name":"self"}],"output":{"name":"lines"}}],[11,"par_split_whitespace","","Returns a parallel iterator over the sub-slices of a string that are separated by any amount of whitespace.",68,{"inputs":[{"name":"self"}],"output":{"name":"splitwhitespace"}}],[11,"drive_unindexed","","",69,null],[11,"drive_unindexed","","",70,null],[11,"drive_unindexed","","",71,null],[11,"drive_unindexed","","",72,null],[11,"drive_unindexed","","",73,null],[0,"vec","rayon","This module contains the parallel iterator types for vectors (`Vec<T>`). You will rarely need to interact with it directly unless you have need to name one of those types.",null,null],[3,"IntoIter","rayon::vec","Parallel iterator that moves out of a vector.",null,null],[11,"drive_unindexed","","",74,null],[11,"opt_len","","",74,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"drive","","",74,null],[11,"len","","",74,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"with_producer","","",74,null],[11,"new","rayon","Creates and return a valid rayon thread pool configuration, but does not initialize it.",75,{"inputs":[],"output":{"name":"configuration"}}],[11,"build","","Create a new `ThreadPool` initialized using this configuration.",75,{"inputs":[{"name":"self"}],"output":{"generics":["threadpool","box"],"name":"result"}}],[11,"thread_name","","Set a closure which takes a thread index and returns the thread's name.",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"configuration"}}],[11,"num_threads","","Set the number of threads to be used in the rayon threadpool.",75,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"configuration"}}],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to propagate it to someplace sensible, to try and reflect the semantics of sequential execution. But in some cases, particularly with the `spawn()` APIs, there is no obvious place where we should propagate the panic to. In that case, this panic handler is invoked.",75,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"name":"configuration"}}],[11,"stack_size","","Set the stack size of the worker threads",75,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"configuration"}}],[11,"breadth_first","","Suggest to worker threads that they execute spawned jobs in a \"breadth-first\" fashion. Typically, when a worker thread is idle or blocked, it will attempt to execute the job from the top of its local deque of work (i.e., the job most recently spawned). If this flag is set to true, however, workers will prefer to execute in a breadth-first fashion -- that is, they will search for jobs at the bottom of their local deque. (At present, workers always steal from the bottom of other worker's deques, regardless of the setting of this flag.)",75,{"inputs":[{"name":"self"}],"output":{"name":"configuration"}}],[11,"start_handler","","Set a callback to be invoked on thread start.",75,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"name":"configuration"}}],[11,"exit_handler","","Set a callback to be invoked on thread exit.",75,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"name":"configuration"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"default","","",75,{"inputs":[],"output":{"name":"configuration"}}],[11,"drop","","",77,null],[11,"new","","Constructs a new thread pool with the given configuration. If the configuration is not valid, returns a suitable `Err` result.  See `InitError` for more details.",77,{"inputs":[{"name":"configuration"}],"output":{"generics":["threadpool","box"],"name":"result"}}],[11,"install","","Executes `op` within the threadpool. Any attempts to use `join`, `scope`, or parallel iterators will then operate within that threadpool.",77,{"inputs":[{"name":"self"},{"name":"op"}],"output":{"name":"r"}}],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",77,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool, returns the index of that thread; if not called from a Rayon thread, or called from a Rayon thread that belongs to a different thread-pool, returns `None`.",77,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has \"local tasks\" pending. This can be useful as part of a heuristic for deciding whether to spawn a new task or execute code on the current thread, particularly in breadth-first schedulers. However, keep in mind that this is an inherently racy check, as other worker threads may be actively \"stealing\" tasks from our local deque.",77,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"option"}}],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and return the results. Equivalent to `self.install(|| join(oper_a, oper_b))`.",77,null],[11,"scope","","Creates a scope that executes within this thread-pool. Equivalent to `self.install(|| scope(...))`.",77,{"inputs":[{"name":"self"},{"name":"op"}],"output":{"name":"r"}}],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task will run in the implicit, global scope, which means that it may outlast the current stack frame -- therefore, it cannot capture any references onto the stack (you will likely need a `move` closure).",77,null],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job will execute sometime before the fork-join scope completes.  The job is specified as a closure, and this closure receives its own reference to `self` as argument. This can be used to inject new jobs into `self`.",76,null]],"paths":[[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[4,"Either"],[3,"Chain"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[8,"ProducerCallback"],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[8,"UnindexedProducer"],[3,"Fold"],[3,"FoldWith"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapWith"],[3,"Zip"],[3,"Rev"],[3,"MinLen"],[3,"MaxLen"],[3,"Cloned"],[3,"Inspect"],[3,"WhileSome"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelExtend"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[8,"ParallelString"],[3,"Chars"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"IntoIter"],[3,"Configuration"],[3,"Scope"],[3,"ThreadPool"]]};
searchIndex["rayon_core"] = {"doc":"","items":[[3,"ThreadPool","rayon_core","ThreadPool",null,null],[3,"Scope","","Represents a fork-join scope which can be used to spawn any number of tasks. See [`scope()`] for more information.",null,null],[3,"Configuration","","Contains the rayon thread pool configuration.",null,null],[3,"FnContext","","Provides the calling context to a closure called by `join_context`.",null,null],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of that thread within its current pool; if not called from a Rayon thread, returns `None`.",null,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[5,"current_thread_has_pending_tasks","","If called from a Rayon worker thread, indicates whether that thread's local deque still has pending tasks. Otherwise, returns `None`. For more information, see [the `ThreadPool::current_thread_has_pending_tasks()` method][m].",null,{"inputs":[],"output":{"generics":["bool"],"name":"option"}}],[5,"join","","The `join` function takes two closures and potentially runs them in parallel. It returns a pair of the results from those closures.",null,null],[5,"join_context","","The `join_context` function is identical to `join`, except the closures have a parameter that provides context for the way the closure has been called, especially indicating whether they're executing on a different thread than where `join_context` was called.  This will occur if the second job is stolen by a different thread, or if `join_context` was called from outside the thread pool to begin with.",null,null],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure with a reference to `s`. This closure can then spawn asynchronous tasks into `s`. Those tasks may run asynchronously with respect to the closure; they may themselves spawn additional tasks into `s`. When the closure returns, it will block until all tasks that have been spawned into `s` complete.",null,{"inputs":[{"name":"op"}],"output":{"name":"r"}}],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\" or \"global\" scope.  Just like a standard thread, this task is not tied to the current stack frame, and hence it cannot hold any references other than those with `'static` lifetime. If you want to spawn a task that references stack data, use [the `scope()` function][scope] to create a scope.",null,{"inputs":[{"name":"f"}],"output":null}],[5,"current_num_threads","","Returns the number of threads in the current registry. If this code is executing within a Rayon thread-pool, then this will be the number of threads for the thread-pool of the current thread. Otherwise, it will be the number of threads for the global thread-pool.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"initialize","","Initializes the global thread pool. This initialization is optional.  If you do not call this function, the thread pool will be automatically initialized with the default configuration. In fact, calling `initialize` is not recommended, except for in two scenarios:",null,{"inputs":[{"name":"configuration"}],"output":{"generics":["box"],"name":"result"}}],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job will execute sometime before the fork-join scope completes.  The job is specified as a closure, and this closure receives its own reference to `self` as argument. This can be used to inject new jobs into `self`.",0,{"inputs":[{"name":"self"},{"name":"body"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new thread pool with the given configuration. If the configuration is not valid, returns a suitable `Err` result.  See `InitError` for more details.",1,{"inputs":[{"name":"configuration"}],"output":{"generics":["threadpool","box"],"name":"result"}}],[11,"install","","Executes `op` within the threadpool. Any attempts to use `join`, `scope`, or parallel iterators will then operate within that threadpool.",1,{"inputs":[{"name":"self"},{"name":"op"}],"output":{"name":"r"}}],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool, returns the index of that thread; if not called from a Rayon thread, or called from a Rayon thread that belongs to a different thread-pool, returns `None`.",1,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has \"local tasks\" pending. This can be useful as part of a heuristic for deciding whether to spawn a new task or execute code on the current thread, particularly in breadth-first schedulers. However, keep in mind that this is an inherently racy check, as other worker threads may be actively \"stealing\" tasks from our local deque.",1,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"option"}}],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and return the results. Equivalent to `self.install(|| join(oper_a, oper_b))`.",1,null],[11,"scope","","Creates a scope that executes within this thread-pool. Equivalent to `self.install(|| scope(...))`.",1,{"inputs":[{"name":"self"},{"name":"op"}],"output":{"name":"r"}}],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task will run in the implicit, global scope, which means that it may outlast the current stack frame -- therefore, it cannot capture any references onto the stack (you will likely need a `move` closure).",1,{"inputs":[{"name":"self"},{"name":"op"}],"output":null}],[11,"drop","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"configuration"}}],[11,"new","","Creates and return a valid rayon thread pool configuration, but does not initialize it.",2,{"inputs":[],"output":{"name":"configuration"}}],[11,"build","","Create a new `ThreadPool` initialized using this configuration.",2,{"inputs":[{"name":"self"}],"output":{"generics":["threadpool","box"],"name":"result"}}],[11,"thread_name","","Set a closure which takes a thread index and returns the thread's name.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"num_threads","","Set the number of threads to be used in the rayon threadpool.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"configuration"}}],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to propagate it to someplace sensible, to try and reflect the semantics of sequential execution. But in some cases, particularly with the `spawn()` APIs, there is no obvious place where we should propagate the panic to. In that case, this panic handler is invoked.",2,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"name":"configuration"}}],[11,"stack_size","","Set the stack size of the worker threads",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"breadth_first","","Suggest to worker threads that they execute spawned jobs in a \"breadth-first\" fashion. Typically, when a worker thread is idle or blocked, it will attempt to execute the job from the top of its local deque of work (i.e., the job most recently spawned). If this flag is set to true, however, workers will prefer to execute in a breadth-first fashion -- that is, they will search for jobs at the bottom of their local deque. (At present, workers always steal from the bottom of other worker's deques, regardless of the setting of this flag.)",2,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"start_handler","","Set a callback to be invoked on thread start.",2,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"name":"configuration"}}],[11,"exit_handler","","Set a callback to be invoked on thread exit.",2,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"name":"configuration"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"migrated","","Returns `true` if the closure was called from a different thread than it was provided from.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}]],"paths":[[3,"Scope"],[3,"ThreadPool"],[3,"Configuration"],[3,"FnContext"]]};
searchIndex["regex"] = {"doc":"This crate provides a native implementation of regular expressions that is heavily based on RE2 both in syntax and in implementation. Notably, backreferences and arbitrary lookahead/lookbehind assertions are not provided. In return, regular expression searching provided by this package has excellent worst-case performance. The specific syntax supported is documented further down.","items":[[3,"RegexBuilder","regex","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"Captures","","Captures represents a group of captured strings for a single match.",null,null],[3,"SubCaptures","","An iterator over capture groups for a particular match of a regular expression.",null,null],[3,"SubCapturesPos","","An iterator over capture group positions for a particular match of a regular expression.",null,null],[3,"SubCapturesNamed","","An Iterator over named capture groups as a tuple with the group name and the value.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"FindCaptures","","An iterator that yields all non-overlapping capture groups matching a particular regular expression.",null,null],[3,"FindMatches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"NoExpand","","NoExpand indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"RegexSplits","","Yields all substrings delimited by a regular expression match.",null,null],[3,"RegexSplitsN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[4,"Error","","An error that occurred during parsing or compiling a regular expression.",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The argument is the size limit imposed.",1,null],[13,"InvalidSet","","DEPRECATED: Will be removed on next major version bump.",1,null],[5,"quote","","Escapes all regular expression meta characters in `text`.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"is_match","","Tests if the given regular expression matches somewhere in the text given.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"generics":["bool","error"],"name":"result"}}],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"FindMatches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"FindCaptures","","An iterator that yields all non-overlapping capture groups matching a particular regular expression.",null,null],[3,"Splits","","Yields all substrings delimited by a regular expression match.",null,null],[3,"SplitsN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a single match.",null,null],[3,"SubCaptures","","An iterator over capture groups for a particular match of a regular expression.",null,null],[3,"SubCapturesPos","","An iterator over capture group positions for a particular match of a regular expression.",null,null],[3,"SubCapturesNamed","","An Iterator over named capture groups as a tuple with the group name and the value.",null,null],[3,"NoExpand","","NoExpand indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[8,"Replacer","","Replacer describes types that can be used to replace matches in a byte string.",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,{"inputs":[{"name":"self"},{"name":"captures"},{"name":"vec"}],"output":null}],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,{"inputs":[{"name":"self"}],"output":{"generics":["cow"],"name":"option"}}],[11,"fmt","regex","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"new","regex::bytes","Create a new regular expression builder with the given pattern.",4,{"inputs":[{"name":"str"}],"output":{"name":"regexbuilder"}}],[11,"compile","","Consume the builder and compile the regular expression.",4,{"inputs":[{"name":"self"}],"output":{"generics":["regex","error"],"name":"result"}}],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexbuilder"}}],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexbuilder"}}],[11,"new","regex","Create a new regular expression builder with the given pattern.",5,{"inputs":[{"name":"str"}],"output":{"name":"regexbuilder"}}],[11,"compile","","Consume the builder and compile the regular expression.",5,{"inputs":[{"name":"self"}],"output":{"generics":["regex","error"],"name":"result"}}],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexbuilder"}}],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexbuilder"}}],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,{"inputs":[{"name":"self"}],"output":{"generics":["cow"],"name":"option"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"regex"}}],[11,"fmt","","Shows the original regular expression.",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Shows the original regular expression.",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Attempts to parse a string into a regular expression",6,{"inputs":[{"name":"str"}],"output":{"generics":["regex","error"],"name":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly to search, split or replace text in a string.",6,{"inputs":[{"name":"str"}],"output":{"generics":["regex","error"],"name":"result"}}],[11,"with_size_limit","","Compiles a regular expression with the given size limit.",6,{"inputs":[{"name":"usize"},{"name":"str"}],"output":{"generics":["regex","error"],"name":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",6,null],[11,"find","","Returns the start and end byte range of the leftmost-first match in `text`. If no match exists, then `None` is returned.",6,null],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in `text`, returning the start and end byte indices with respect to `text`.",6,null],[11,"captures","","Returns the capture groups corresponding to the leftmost-first match in `text`. Capture group `0` always corresponds to the entire match. If no match is found, then `None` is returned.",6,null],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched in `text`. This is operationally the same as `find_iter`, except it yields information about submatches.",6,null],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the regular expression. Namely, each element of the iterator corresponds to text that isn't matched by the regular expression.",6,null],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited by a match of the regular expression. (A `limit` of `0` will return no substrings.) Namely, each element of the iterator corresponds to text that isn't matched by the regular expression. The remainder of the string that is not split will be the last element in the iterator.",6,null],[11,"replace","","Replaces the leftmost-first match with the replacement provided. The replacement can be a regular byte string (where `$N` and `$name` are expanded to match capture groups) or a function that takes the matches' `Captures` and returns the replaced byte string.",6,null],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement provided. This is the same as calling `replacen` with `limit` set to `0`.",6,null],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the replacement provided. If `limit` is 0, then all non-overlapping matches are replaced.",6,null],[11,"shortest_match","","Returns the end location of a match in the text given.",6,null],[11,"as_str","","Returns the original string of this regex.",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"capture_names","","Returns an iterator over the capture names.",6,{"inputs":[{"name":"self"}],"output":{"name":"capturenames"}}],[11,"captures_len","","Returns the number of captures.",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"next","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["captures"],"name":"option"}}],[11,"next","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"option"}}],[11,"size_hint","","",11,null],[11,"pos","","Returns the start and end positions of the Nth capture group. Returns `None` if `i` is not a valid capture group or if the capture group did not match anything. The positions returned are always byte indices with respect to the original byte string matched.",12,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"at","","Returns the matched string for the capture group `i`.  If `i` isn't a valid capture group or didn't match anything, then `None` is returned.",12,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"name","","Returns the matched string for the capture group named `name`.  If `name` isn't a valid capture group or didn't match anything, then `None` is returned.",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"iter","","Creates an iterator of all the capture groups in order of appearance in the regular expression.",12,{"inputs":[{"name":"self"}],"output":{"name":"subcaptures"}}],[11,"iter_pos","","Creates an iterator of all the capture group positions in order of appearance in the regular expression. Positions are byte indices in terms of the original string matched.",12,{"inputs":[{"name":"self"}],"output":{"name":"subcapturespos"}}],[11,"iter_named","","Creates an iterator of all named groups as an tuple with the group name and the value. The iterator returns these values in arbitrary order.",12,{"inputs":[{"name":"self"}],"output":{"name":"subcapturesnamed"}}],[11,"expand","","Expands all instances of `$name` in `text` to the corresponding capture group `name`, and writes them to the `dst` buffer given.",12,null],[11,"len","","Returns the number of captured groups.",12,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if and only if there are no captured groups.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",12,null],[11,"index","","",12,null],[11,"next","","",13,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"option"}}],[11,"next","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"option"}}],[11,"next","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"replace_append","","",2,{"inputs":[{"name":"self"},{"name":"captures"},{"name":"vec"}],"output":null}],[11,"no_expansion","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["cow"],"name":"option"}}],[11,"clone","regex","",16,{"inputs":[{"name":"self"}],"output":{"name":"regexset"}}],[11,"new","","Create a new regex set with the given regular expressions.",16,{"inputs":[{"name":"i"}],"output":{"generics":["regexset","error"],"name":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches the text given.",16,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"matches","","Returns the set of regular expressions that match in the given text.",16,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"setmatches"}}],[11,"len","","Returns the total number of regular expressions in this set.",16,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"setmatches"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"matched_any","","Whether this set contains any matches.",17,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"matched","","Whether the regex at the given index matched.",17,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"len","","The total number of regexes in the set that created these matches.",17,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"iter","","Returns an iterator over indexes in the regex that matched.",17,{"inputs":[{"name":"self"}],"output":{"name":"setmatchesiter"}}],[11,"into_iter","","",17,null],[11,"next","","",18,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"next_back","","",18,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"setmatchesiter"}}],[11,"next","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"next_back","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","regex::bytes","",20,{"inputs":[{"name":"self"}],"output":{"name":"regexset"}}],[11,"new","","Create a new regex set with the given regular expressions.",20,{"inputs":[{"name":"i"}],"output":{"generics":["regexset","error"],"name":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches the text given.",20,null],[11,"matches","","Returns the set of regular expressions that match in the given text.",20,null],[11,"len","","Returns the total number of regular expressions in this set.",20,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"setmatches"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"matched_any","","Whether this set contains any matches.",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"matched","","Whether the regex at the given index matched.",21,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"len","","The total number of regexes in the set that created these matches.",21,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"iter","","Returns an iterator over indexes in the regex that matched.",21,{"inputs":[{"name":"self"}],"output":{"name":"setmatchesiter"}}],[11,"into_iter","","",21,null],[11,"next","","",22,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"next_back","","",22,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"setmatchesiter"}}],[11,"next","","",23,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"next_back","","",23,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","regex","",24,{"inputs":[{"name":"self"}],"output":{"name":"regex"}}],[11,"fmt","","Shows the original regular expression.",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Shows the original regular expression.",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"regex"}],"output":{"name":"bool"}}],[11,"from_str","","Attempts to parse a string into a regular expression",24,{"inputs":[{"name":"str"}],"output":{"generics":["regex","error"],"name":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly to search, split or replace text in a string.",24,{"inputs":[{"name":"str"}],"output":{"generics":["regex","error"],"name":"result"}}],[11,"with_size_limit","","Compiles a regular expression with the given size limit.",24,{"inputs":[{"name":"usize"},{"name":"str"}],"output":{"generics":["regex","error"],"name":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",24,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"find","","Returns the start and end byte range of the leftmost-first match in `text`. If no match exists, then `None` is returned.",24,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in `text`, returning the start and end byte indices with respect to `text`.",24,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"findmatches"}}],[11,"captures","","Returns the capture groups corresponding to the leftmost-first match in `text`. Capture group `0` always corresponds to the entire match. If no match is found, then `None` is returned.",24,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["captures"],"name":"option"}}],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched in `text`. This is operationally the same as `find_iter`, except it yields information about submatches.",24,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"findcaptures"}}],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the regular expression. Namely, each element of the iterator corresponds to text that isn't matched by the regular expression.",24,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"regexsplits"}}],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited by a match of the regular expression. (A `limit` of `0` will return no substrings.) Namely, each element of the iterator corresponds to text that isn't matched by the regular expression. The remainder of the string that is not split will be the last element in the iterator.",24,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"name":"regexsplitsn"}}],[11,"replace","","Replaces the leftmost-first match with the replacement provided. The replacement can be a regular string (where `$N` and `$name` are expanded to match capture groups) or a function that takes the matches' `Captures` and returns the replaced string.",24,{"inputs":[{"name":"self"},{"name":"str"},{"name":"r"}],"output":{"name":"string"}}],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement provided. This is the same as calling `replacen` with `limit` set to `0`.",24,{"inputs":[{"name":"self"},{"name":"str"},{"name":"r"}],"output":{"name":"string"}}],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the replacement provided. If `limit` is 0, then all non-overlapping matches are replaced.",24,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"r"}],"output":{"name":"string"}}],[11,"shortest_match","","Returns the end location of a match in the text given.",24,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["usize"],"name":"option"}}],[11,"as_str","","Returns the original string of this regex.",24,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"capture_names","","Returns an iterator over the capture names.",24,{"inputs":[{"name":"self"}],"output":{"name":"capturenames"}}],[11,"captures_len","","Returns the number of captures.",24,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"next","","",25,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"option"}}],[11,"size_hint","","",25,null],[11,"reg_replace","","",0,{"inputs":[{"name":"self"},{"name":"captures"}],"output":{"generics":["str"],"name":"cow"}}],[11,"no_expand","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["cow"],"name":"option"}}],[11,"next","","",26,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"next","","",27,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"pos","","Returns the start and end positions of the Nth capture group. Returns `None` if `i` is not a valid capture group or if the capture group did not match anything. The positions returned are always byte indices with respect to the original string matched.",28,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"at","","Returns the matched string for the capture group `i`.  If `i` isn't a valid capture group or didn't match anything, then `None` is returned.",28,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["str"],"name":"option"}}],[11,"name","","Returns the matched string for the capture group named `name`.  If `name` isn't a valid capture group or didn't match anything, then `None` is returned.",28,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["str"],"name":"option"}}],[11,"iter","","Creates an iterator of all the capture groups in order of appearance in the regular expression.",28,{"inputs":[{"name":"self"}],"output":{"name":"subcaptures"}}],[11,"iter_pos","","Creates an iterator of all the capture group positions in order of appearance in the regular expression. Positions are byte indices in terms of the original string matched.",28,{"inputs":[{"name":"self"}],"output":{"name":"subcapturespos"}}],[11,"iter_named","","Creates an iterator of all named groups as an tuple with the group name and the value. The iterator returns these values in arbitrary order.",28,{"inputs":[{"name":"self"}],"output":{"name":"subcapturesnamed"}}],[11,"expand","","Expands all instances of `$name` in `text` to the corresponding capture group `name`.",28,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"string"}}],[11,"len","","Returns the number of captured groups.",28,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if and only if there are no captured groups.",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",28,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"str"}}],[11,"index","","",28,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"str"}}],[11,"next","","",29,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"option"}}],[11,"next","","",30,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"option"}}],[11,"next","","",31,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",32,{"inputs":[{"name":"self"}],"output":{"generics":["captures"],"name":"option"}}],[11,"next","","",33,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"Replacer","","Replacer describes types that can be used to replace matches in a string.",null,null],[10,"reg_replace","","Returns a possibly owned string that is used to replace the match corresponding to the `caps` capture group.",34,{"inputs":[{"name":"self"},{"name":"captures"}],"output":{"generics":["str"],"name":"cow"}}],[11,"no_expand","","Returns a possibly owned string that never needs expansion.",34,{"inputs":[{"name":"self"}],"output":{"generics":["cow"],"name":"option"}}],[11,"no_expand","","Returns a possibly owned string that never needs expansion.",34,{"inputs":[{"name":"self"}],"output":{"generics":["cow"],"name":"option"}}]],"paths":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"Regex"],[3,"FindMatches"],[3,"FindCaptures"],[3,"Splits"],[3,"SplitsN"],[3,"CaptureNames"],[3,"Captures"],[3,"SubCaptures"],[3,"SubCapturesPos"],[3,"SubCapturesNamed"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"Regex"],[3,"CaptureNames"],[3,"RegexSplits"],[3,"RegexSplitsN"],[3,"Captures"],[3,"SubCaptures"],[3,"SubCapturesPos"],[3,"SubCapturesNamed"],[3,"FindCaptures"],[3,"FindMatches"],[8,"Replacer"]]};
searchIndex["regex_syntax"] = {"doc":"This crate provides a regular expression parser and an abstract syntax for regular expressions. The abstract syntax is defined by the `Expr` type. The concrete syntax is enumerated in the `regex` crate documentation.","items":[[3,"Literals","regex_syntax","A set of literal byte strings extracted from a regular expression.",null,null],[3,"Lit","","A single member of a set of literals extracted from a regular expression.",null,null],[3,"CharClass","","A character class.",null,null],[3,"ClassRange","","A single inclusive range in a character class.",null,null],[12,"start","","The start character of the range.",0,null],[12,"end","","The end character of the range.",0,null],[3,"ByteClass","","A byte class for byte ranges only.",null,null],[3,"ByteRange","","A single inclusive range in a byte class.",null,null],[12,"start","","The start byte of the range.",1,null],[12,"end","","The end byte of the range.",1,null],[3,"ExprBuilder","","A builder for configuring regular expression parsing.",null,null],[3,"Error","","A parse error.",null,null],[4,"Expr","","A regular expression abstract syntax tree.",null,null],[13,"Empty","","An empty regex (which never matches any text).",2,null],[13,"Literal","","A sequence of one or more literal characters to be matched.",2,null],[12,"chars","regex_syntax::Expr","The characters.",2,null],[12,"casei","","Whether to match case insensitively.",2,null],[13,"LiteralBytes","regex_syntax","A sequence of one or more literal bytes to be matched.",2,null],[12,"bytes","regex_syntax::Expr","The bytes.",2,null],[12,"casei","","Whether to match case insensitively.",2,null],[13,"AnyChar","regex_syntax","Match any character.",2,null],[13,"AnyCharNoNL","","Match any character, excluding new line (`0xA`).",2,null],[13,"AnyByte","","Match any byte.",2,null],[13,"AnyByteNoNL","","Match any byte, excluding new line (`0xA`).",2,null],[13,"Class","","A character class.",2,null],[13,"ClassBytes","","A character class with byte ranges only.",2,null],[13,"StartLine","","Match the start of a line or beginning of input.",2,null],[13,"EndLine","","Match the end of a line or end of input.",2,null],[13,"StartText","","Match the beginning of input.",2,null],[13,"EndText","","Match the end of input.",2,null],[13,"WordBoundary","","Match a word boundary (word character on one side and a non-word character on the other).",2,null],[13,"NotWordBoundary","","Match a position that is not a word boundary (word or non-word characters on both sides).",2,null],[13,"WordBoundaryAscii","","Match an ASCII word boundary.",2,null],[13,"NotWordBoundaryAscii","","Match a position that is not an ASCII word boundary.",2,null],[13,"Group","","A group, possibly non-capturing.",2,null],[12,"e","regex_syntax::Expr","The expression inside the group.",2,null],[12,"i","","The capture index (starting at `1`) only for capturing groups.",2,null],[12,"name","","The capture name, only for capturing named groups.",2,null],[13,"Repeat","regex_syntax","A repeat operator (`?`, `*`, `+` or `{m,n}`).",2,null],[12,"e","regex_syntax::Expr","The expression to be repeated. Limited to literals, `.`, classes or grouped expressions.",2,null],[12,"r","","The type of repeat operator used.",2,null],[12,"greedy","","Whether the repeat is greedy (match the most) or not (match the least).",2,null],[13,"Concat","regex_syntax","A concatenation of expressions. Must be matched one after the other.",2,null],[13,"Alternate","","An alternation of expressions. Only one must match.",2,null],[4,"Repeater","","The type of a repeat operator expression.",null,null],[13,"ZeroOrOne","","Match zero or one (`?`).",3,null],[13,"ZeroOrMore","","Match zero or more (`*`).",3,null],[13,"OneOrMore","","Match one or more (`+`).",3,null],[13,"Range","","Match for at least `min` and at most `max` (`{m,n}`).",3,null],[12,"min","regex_syntax::Repeater","Lower bound on the number of matches.",3,null],[12,"max","","Optional upper bound on the number of matches.",3,null],[4,"ErrorKind","regex_syntax","The specific type of parse error that can occur.",null,null],[13,"DoubleFlagNegation","","A negation symbol is used twice in flag settings. e.g., `(?-i-s)`.",4,null],[13,"DuplicateCaptureName","","The same capture name was used more than once. e.g., `(?P<a>.)(?P<a>.)`.",4,null],[13,"EmptyAlternate","","An alternate is empty. e.g., `(|a)`.",4,null],[13,"EmptyCaptureName","","A capture group name is empty. e.g., `(?P<>a)`.",4,null],[13,"EmptyFlagNegation","","A negation symbol was not proceded by any flags. e.g., `(?i-)`.",4,null],[13,"EmptyGroup","","A group is empty. e.g., `()`.",4,null],[13,"InvalidBase10","","An invalid number was used in a counted repetition. e.g., `a{b}`.",4,null],[13,"InvalidBase16","","An invalid hexadecimal number was used in an escape sequence. e.g., `\\xAG`.",4,null],[13,"InvalidCaptureName","","An invalid capture name was used. e.g., `(?P<0a>b)`.",4,null],[13,"InvalidClassRange","","An invalid class range was givien. Specifically, when the start of the range is greater than the end. e.g., `[z-a]`.",4,null],[12,"start","regex_syntax::ErrorKind","The first character specified in the range.",4,null],[12,"end","","The second character specified in the range.",4,null],[13,"InvalidClassEscape","regex_syntax","An escape sequence was used in a character class where it is not allowed. e.g., `[a-\\pN]` or `[\\A]`.",4,null],[13,"InvalidRepeatRange","","An invalid counted repetition min/max was given. e.g., `a{2,1}`.",4,null],[12,"min","regex_syntax::ErrorKind","The first number specified in the repetition.",4,null],[12,"max","","The second number specified in the repetition.",4,null],[13,"InvalidScalarValue","regex_syntax","An invalid Unicode scalar value was used in a long hexadecimal sequence. e.g., `\\x{D800}`.",4,null],[13,"MissingBase10","","An empty counted repetition operator. e.g., `a{}`.",4,null],[13,"RepeaterExpectsExpr","","A repetition operator was not applied to an expression. e.g., `*`.",4,null],[13,"RepeaterUnexpectedExpr","","A repetition operator was applied to an expression that cannot be repeated. e.g., `a+*` or `a|*`.",4,null],[13,"UnclosedCaptureName","","A capture group name that is never closed. e.g., `(?P<a`.",4,null],[13,"UnclosedHex","","An unclosed hexadecimal literal. e.g., `\\x{a`.",4,null],[13,"UnclosedParen","","An unclosed parenthesis. e.g., `(a`.",4,null],[13,"UnclosedRepeat","","An unclosed counted repetition operator. e.g., `a{2`.",4,null],[13,"UnclosedUnicodeName","","An unclosed named Unicode class. e.g., `\\p{Yi`.",4,null],[13,"UnexpectedClassEof","","Saw end of regex before class was closed. e.g., `[a`.",4,null],[13,"UnexpectedEscapeEof","","Saw end of regex before escape sequence was closed. e.g., `\\`.",4,null],[13,"UnexpectedFlagEof","","Saw end of regex before flags were closed. e.g., `(?i`.",4,null],[13,"UnexpectedTwoDigitHexEof","","Saw end of regex before two hexadecimal digits were seen. e.g., `\\xA`.",4,null],[13,"UnopenedParen","","Unopened parenthesis. e.g., `)`.",4,null],[13,"UnrecognizedEscape","","Unrecognized escape sequence. e.g., `\\q`.",4,null],[13,"UnrecognizedFlag","","Unrecognized flag. e.g., `(?a)`.",4,null],[13,"UnrecognizedUnicodeClass","","Unrecognized named Unicode class. e.g., `\\p{Foo}`.",4,null],[13,"StackExhausted","","Indicates that the regex uses too much nesting.",4,null],[13,"FlagNotAllowed","","A disallowed flag was found (e.g., `u`).",4,null],[13,"UnicodeNotAllowed","","A Unicode class was used when the Unicode (`u`) flag was disabled.",4,null],[13,"InvalidUtf8","","InvalidUtf8 indicates that the expression may match non-UTF-8 bytes. This never returned if the parser is permitted to allow expressions that match arbitrary bytes.",4,null],[13,"EmptyClass","","A character class was constructed such that it is empty. e.g., `[^\\d\\D]`.",4,null],[5,"quote","","Escapes all regular expression meta characters in `text`.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"literals"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"literals"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"lit"}}],[11,"cmp","","",6,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"ordering"}}],[11,"empty","","Returns a new empty set of literals using default limits.",5,{"inputs":[],"output":{"name":"literals"}}],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",5,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"literals"}}],[11,"limit_class","","Get the character class size limit for this set.",5,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"literals"}}],[11,"literals","","Returns the set of literals as a slice. Its order is unspecified.",5,null],[11,"min_len","","Returns the length of the smallest literal.",5,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"all_complete","","Returns true if all members in this set are complete.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"any_complete","","Returns true if any member in this set is complete.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"contains_empty","","Returns true if this set contains an empty literal.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_empty","","Returns true if this set is empty or if all of its members is empty.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"to_empty","","Returns a new empty set of literals using this set's limits.",5,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this set.",5,null],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this set.",5,null],[11,"trim_suffix","","Returns a new set of literals with the given number of bytes trimmed from the suffix of each literal.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["literals"],"name":"option"}}],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that are guaranteed to be unambiguous.",5,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that are guaranteed to be unambiguous.",5,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",5,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",5,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"union","","Unions this set with another set.",5,{"inputs":[{"name":"self"},{"name":"literals"}],"output":{"name":"bool"}}],[11,"cross_product","","Extends this set with another set.",5,{"inputs":[{"name":"self"},{"name":"literals"}],"output":{"name":"bool"}}],[11,"cross_add","","Extends each literal in this set with the bytes given.",5,null],[11,"add","","Adds the given literal to this set.",5,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"add_char_class","","Extends each literal in this set with the character class given.",5,{"inputs":[{"name":"self"},{"name":"charclass"}],"output":{"name":"bool"}}],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",5,{"inputs":[{"name":"self"},{"name":"byteclass"}],"output":{"name":"bool"}}],[11,"cut","","Cuts every member of this set. When a member is cut, it can never be extended.",5,{"inputs":[{"name":"self"}],"output":null}],[11,"reverse","","Reverses all members in place.",5,{"inputs":[{"name":"self"}],"output":null}],[11,"clear","","Clears this set of all members.",5,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new complete literal with the bytes given.",6,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"name":"lit"}}],[11,"empty","","Returns a new complete empty literal.",6,{"inputs":[],"output":{"name":"lit"}}],[11,"is_cut","","Returns true if this literal was \"cut.\"",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"cut","","Cuts this literal.",6,{"inputs":[{"name":"self"}],"output":null}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",6,null],[11,"deref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",6,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[6,"Result","","An alias for computations that can return a `Error`.",null,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"expr"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"repeater"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"repeater"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"repeater"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"charclass"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"charclass"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"charclass"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"classrange"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"ordering"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"byteclass"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"byteclass"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"byteclass"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"byterange"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"ordering"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"exprbuilder"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new builder for configuring expression parsing.",9,{"inputs":[],"output":{"name":"exprbuilder"}}],[11,"case_insensitive","","Set the default value for the case insensitive (`i`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"multi_line","","Set the default value for the multi-line matching (`m`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"dot_matches_new_line","","Set the default value for the any character (`s`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"swap_greed","","Set the default value for the greedy swap (`U`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"ignore_whitespace","","Set the default value for the ignore whitespace (`x`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"unicode","","Set the default value for the Unicode (`u`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"allow_bytes","","Whether the parser allows matching arbitrary bytes or not.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"nest_limit","","Set the nesting limit for regular expression parsing.",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"exprbuilder"}}],[11,"parse","","Parse a string as a regular expression using the current configuraiton.",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["expr"],"name":"result"}}],[11,"parse","","Parses a string in a regular expression syntax tree.",2,{"inputs":[{"name":"str"}],"output":{"generics":["expr"],"name":"result"}}],[11,"prefixes","","Returns a set of literal prefixes extracted from this expression.",2,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"suffixes","","Returns a set of literal suffixes extracted from this expression.",2,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"is_anchored_start","","Returns true if and only if the expression is required to match from the beginning of text.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_anchored_start","","Returns true if and only if the expression has at least one matchable sub-expression that must match the beginning of text.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_anchored_end","","Returns true if and only if the expression is required to match at the end of the text.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_anchored_end","","Returns true if and only if the expression has at least one matchable sub-expression that must match the beginning of text.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_bytes","","Returns true if and only if the expression contains sub-expressions that can match arbitrary bytes.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"deref","","",7,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"into_iter","","",7,{"inputs":[{"name":"self"}],"output":{"generics":["classrange"],"name":"intoiter"}}],[11,"new","","Create a new class from an existing set of ranges.",7,{"inputs":[{"generics":["classrange"],"name":"vec"}],"output":{"name":"charclass"}}],[11,"matches","","Returns true if `c` is matched by this character class.",7,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"remove","","Removes the given character from the class if it exists.",7,{"inputs":[{"name":"self"},{"name":"char"}],"output":null}],[11,"negate","","Negates the character class.",7,{"inputs":[{"name":"self"}],"output":{"name":"charclass"}}],[11,"case_fold","","Apply case folding to this character class.",7,{"inputs":[{"name":"self"}],"output":{"name":"charclass"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"new","","Create a new class from an existing set of ranges.",8,{"inputs":[{"generics":["byterange"],"name":"vec"}],"output":{"name":"byteclass"}}],[11,"matches","","Returns true if `b` is matched by this byte class.",8,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"remove","","Removes the given byte from the class if it exists.",8,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"negate","","Negates the byte class.",8,{"inputs":[{"name":"self"}],"output":{"name":"byteclass"}}],[11,"case_fold","","Apply case folding to this byte class.",8,{"inputs":[{"name":"self"}],"output":{"name":"byteclass"}}],[11,"deref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"into_iter","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["byterange"],"name":"intoiter"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"position","","Returns an approximate character offset at which the error occurred.",10,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"kind","","Returns the type of the regex parse error.",10,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"description","","",10,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"ClassRange"],[3,"ByteRange"],[4,"Expr"],[4,"Repeater"],[4,"ErrorKind"],[3,"Literals"],[3,"Lit"],[3,"CharClass"],[3,"ByteClass"],[3,"ExprBuilder"],[3,"Error"]]};
searchIndex["rodio"] = {"doc":"Audio playback library.","items":[[3,"Endpoint","rodio","An opaque type that identifies an end point.",null,null],[5,"get_default_endpoint","","Deprecated. Use `default_endpoint()` instead.",null,{"inputs":[],"output":{"generics":["endpoint"],"name":"option"}}],[5,"get_endpoints_list","","Deprecated. Use `endpoints()` instead.",null,{"inputs":[],"output":{"name":"endpointsiterator"}}],[3,"Sink","","Handle to an endpoint that outputs sounds.",null,null],[3,"SpatialSink","","",null,null],[5,"play_raw","","Plays a source to an end point until it ends.",null,{"inputs":[{"name":"endpoint"},{"name":"s"}],"output":null}],[5,"play_once","","Plays a sound once. Returns a `Sink` that can be used to control the sound.",null,{"inputs":[{"name":"endpoint"},{"name":"r"}],"output":{"generics":["sink","decodererror"],"name":"result"}}],[11,"new","","Builds a new `Sink`.",0,{"inputs":[{"name":"endpoint"}],"output":{"name":"sink"}}],[11,"append","","Appends a sound to the queue of sounds to play.",0,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"volume","","",0,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"set_volume","","Changes the volume of the sound.",0,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"play","","Resumes playback of a paused sound.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"pause","","Pauses playback of this sink.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"is_paused","","Gets if a sound is paused",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"stop","","Stops the sink by emptying the queue.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"detach","","Destroys the sink without stopping the sounds that are still playing.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"sleep_until_end","","Sleeps the current thread until the sound ends.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"empty","","Returns true if this sink has no more sounds to play.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"drop","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Builds a new `SpatialSink`.",1,null],[11,"set_emitter_position","","Sets the position of the sound emitter in 3 dimensional space.",1,null],[11,"set_left_ear_position","","Sets the position of the left ear in 3 dimensional space.",1,null],[11,"set_right_ear_position","","Sets the position of the right ear in 3 dimensional space.",1,null],[11,"append","","Appends a sound to the queue of sounds to play.",1,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"volume","","",1,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"set_volume","","Changes the volume of the sound.",1,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"play","","Resumes playback of a paused sound.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"pause","","Pauses playback of this sink.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"is_paused","","Gets if a sound is paused",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"detach","","Destroys the sink without stopping the sounds that are still playing.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"sleep_until_end","","Sleeps the current thread until the sound ends.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"empty","","Returns true if this sink has no more sounds to play.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[0,"buffer","","A simple source of samples coming from a buffer.",null,null],[3,"SamplesBuffer","rodio::buffer","A buffer of samples treated as a source.",null,null],[11,"new","","Builds a new `SamplesBuffer`.",2,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"d"}],"output":{"name":"samplesbuffer"}}],[11,"current_frame_len","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",2,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",2,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[0,"decoder","rodio","Decodes samples from an audio file.",null,null],[3,"Decoder","rodio::decoder","Source of audio samples from decoding a file.",null,null],[4,"DecoderError","","Error that can happen when creating a decoder.",null,null],[13,"UnrecognizedFormat","","The format of the data has not been recognized.",3,null],[11,"new","","Builds a new decoder.",4,{"inputs":[{"name":"r"}],"output":{"generics":["decoder","decodererror"],"name":"result"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"option"}}],[11,"size_hint","","",4,null],[11,"current_frame_len","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",4,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"decodererror"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[0,"dynamic_mixer","rodio","Queue that plays sounds one after the other.",null,null],[3,"DynamicMixerController","rodio::dynamic_mixer","The input of the mixer.",null,null],[3,"DynamicMixer","","The output of the mixer. Implements `Source`.",null,null],[5,"mixer","","Builds a new mixer.",null,null],[11,"add","","Adds a new source to mix to the existing ones.",5,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"current_frame_len","","",6,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",6,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"next","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",6,null],[0,"queue","rodio","Queue that plays sounds one after the other.",null,null],[3,"SourcesQueueInput","rodio::queue","The input of the queue.",null,null],[3,"SourcesQueueOutput","","The output of the queue. Implements `Source`.",null,null],[5,"queue","","Builds a new queue. It consists of an input and an output.",null,null],[11,"append","","Adds a new source to the end of the queue.",7,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"append_with_signal","","Adds a new source to the end of the queue.",7,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"receiver"}}],[11,"set_keep_alive_if_empty","","Sets whether the queue stays alive if there's no more sound to play.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"current_frame_len","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",8,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"next","","",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",8,null],[0,"source","rodio","Sources of sound and various filters.",null,null],[3,"Amplify","rodio::source","Filter that modifies each sample by a given value.",null,null],[3,"BltFilter","","",null,null],[3,"Buffered","","Iterator that at the same time extracts data from the iterator and stores it in a buffer.",null,null],[3,"ChannelVolume","","Combines channels in input into a single mono source, then plays that mono sound to each channel at the volume given for that channel.",null,null],[3,"Delay","","A source that delays the given source by a certain amount.",null,null],[3,"Done","","WHen the inner source is empty this decrements an AtomicUsize",null,null],[3,"Empty","","An empty source.",null,null],[3,"FadeIn","","Filter that modifies each sample by a given value.",null,null],[3,"FromFactoryIter","","Internal type used by `from_factory`.",null,null],[3,"FromIter","","A source that chains sources provided by an iterator.",null,null],[3,"Mix","","Filter that modifies each sample by a given value.",null,null],[3,"Pausable","","",null,null],[3,"PeriodicAccess","","Calls a function on a source every time a period elapsed.",null,null],[3,"Repeat","","A source that repeats the given source.",null,null],[3,"SamplesConverter","","An iterator that reads from a `Source` and converts the samples to a specific rate and channels count.",null,null],[3,"SineWave","","An infinite source that produces a sine.",null,null],[3,"Spatial","","Combines channels in input into a single mono source, then plays that mono sound to each channel at the volume given for that channel.",null,null],[3,"Speed","","Filter that modifies each sample by a given value.",null,null],[3,"Stoppable","","",null,null],[3,"TakeDuration","","A source that repeats the given source.",null,null],[3,"UniformSourceIterator","","An iterator that reads from a `Source` and converts the samples to a specific rate and channels count.",null,null],[3,"Zero","","An infinite source that produces zero.",null,null],[5,"from_factory","","Builds a source that chains sources built from a factory.",null,{"inputs":[{"name":"f"}],"output":{"generics":["fromfactoryiter"],"name":"fromiter"}}],[5,"from_iter","","Builds a source that chains sources provided by an iterator.",null,{"inputs":[{"name":"i"}],"output":{"name":"fromiter"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"amplify"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set_factor","","Modifies the amplification factor.",9,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"inner","","Returns a reference to the inner source.",9,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"inner_mut","","Returns a mutable reference to the inner source.",9,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"into_inner","","Returns the inner source.",9,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"next","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",9,null],[11,"current_frame_len","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"bltfilter"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_low_pass","","Modifies this filter so that it becomes a low-pass filter.",10,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"inner","","Returns a reference to the inner source.",10,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"inner_mut","","Returns a mutable reference to the inner source.",10,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"into_inner","","Returns the inner source.",10,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"next","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"option"}}],[11,"size_hint","","",10,null],[11,"current_frame_len","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",10,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"next","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",11,null],[11,"current_frame_len","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"buffered"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"delay"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",12,null],[11,"current_frame_len","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"done"}}],[11,"new","","",13,{"inputs":[{"name":"i"},{"generics":["atomicusize"],"name":"arc"}],"output":{"name":"done"}}],[11,"next","","",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"current_frame_len","","",13,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",13,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",13,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",13,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"empty"}}],[11,"new","","",14,{"inputs":[],"output":{"name":"empty"}}],[11,"next","","",14,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"current_frame_len","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"fadein"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",15,null],[11,"current_frame_len","","",15,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",15,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",15,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"next","","",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",16,null],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"fromiter"}}],[11,"next","","",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",17,null],[11,"current_frame_len","","",17,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",17,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",17,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",17,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"mix"}}],[11,"next","","",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",18,null],[11,"current_frame_len","","",18,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",18,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",18,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",18,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"pausable"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set_paused","","Sets whether the filter applies.",19,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"inner","","Returns a reference to the inner source.",19,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"inner_mut","","Returns a mutable reference to the inner source.",19,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"into_inner","","Returns the inner source.",19,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"next","","",19,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",19,null],[11,"current_frame_len","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"periodicaccess"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",20,null],[11,"current_frame_len","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",20,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"repeat"}}],[11,"next","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",21,null],[11,"current_frame_len","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"samplesconverter"}}],[11,"new","","",22,{"inputs":[{"name":"i"}],"output":{"name":"samplesconverter"}}],[11,"next","","",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",22,null],[11,"current_frame_len","","",22,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",22,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",22,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",22,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"sinewave"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","The frequency of the sine.",23,{"inputs":[{"name":"u32"}],"output":{"name":"sinewave"}}],[11,"next","","",23,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"option"}}],[11,"current_frame_len","","",23,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",23,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",23,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",23,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"channelvolume"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",24,{"inputs":[{"name":"i"},{"generics":["f32"],"name":"vec"}],"output":{"name":"channelvolume"}}],[11,"set_volume","","Sets the volume for a given channel number.  Will panic if channel number was invalid.",24,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f32"}],"output":null}],[11,"next","","",24,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",24,null],[11,"current_frame_len","","",24,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",24,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"spatial"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",25,null],[11,"set_positions","","Sets the position of the emitter and ears in the 3D world.",25,null],[11,"next","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",25,null],[11,"current_frame_len","","",25,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",25,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"speed"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",26,null],[11,"current_frame_len","","",26,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",26,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"stoppable"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"stop","","Stops the sound.",27,{"inputs":[{"name":"self"}],"output":null}],[11,"inner","","Returns a reference to the inner source.",27,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"inner_mut","","Returns a mutable reference to the inner source.",27,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"into_inner","","Returns the inner source.",27,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"next","","",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",27,null],[11,"current_frame_len","","",27,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",27,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"takeduration"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"current_frame_len","","",28,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",28,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",28,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",28,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"uniformsourceiterator"}}],[11,"new","","",29,{"inputs":[{"name":"i"},{"name":"u16"},{"name":"u32"}],"output":{"name":"uniformsourceiterator"}}],[11,"next","","",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",29,null],[11,"current_frame_len","","",29,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",29,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"zero"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",30,{"inputs":[{"name":"u16"},{"name":"u32"}],"output":{"name":"zero"}}],[11,"next","","",30,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"current_frame_len","","",30,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"channels","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"samples_rate","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"total_duration","","",30,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[8,"Source","","A source of samples.",null,null],[10,"current_frame_len","","Returns the number of samples before the current frame ends. `None` means \"infinite\" or \"until the sound ends\". Should never return 0 unless there's no more data.",31,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[10,"channels","","Returns the number of channels. Channels are always interleaved.",31,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[10,"samples_rate","","Returns the rate at which the source should be played. In number of samples per second.",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"total_duration","","Returns the total duration of this source, if known.",31,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"buffered","","Stores the source in a buffer in addition to returning it. This iterator can be cloned.",31,{"inputs":[{"name":"self"}],"output":{"name":"buffered"}}],[11,"mix","","Mixes this source with another one.",31,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"mix"}}],[11,"repeat_infinite","","Repeats this source forever.",31,{"inputs":[{"name":"self"}],"output":{"name":"repeat"}}],[11,"take_duration","","Takes a certain duration of this source and then stops.",31,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"takeduration"}}],[11,"delay","","Delays the sound by a certain duration.",31,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"delay"}}],[11,"amplify","","Amplifies the sound by the given value.",31,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"amplify"}}],[11,"fade_in","","Fades in the sound.",31,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"fadein"}}],[11,"periodic_access","","Calls the `access` closure on `Self` every time `period` elapsed.",31,{"inputs":[{"name":"self"},{"name":"duration"},{"name":"f"}],"output":{"name":"periodicaccess"}}],[11,"speed","","Changes the play speed of the sound. Does not adjust the samples, only the play speed.",31,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"speed"}}],[11,"reverb","","Adds a basic reverb effect.",31,{"inputs":[{"name":"self"},{"name":"duration"},{"name":"f32"}],"output":{"generics":["delay"],"name":"mix"}}],[11,"convert_samples","","Converts the samples of this source to another type.",31,{"inputs":[{"name":"self"}],"output":{"name":"samplesconverter"}}],[11,"pausable","","Makes the sound pausable.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"pausable"}}],[11,"stoppable","","Makes the sound stoppable.",31,{"inputs":[{"name":"self"}],"output":{"name":"stoppable"}}],[11,"low_pass","","Applies a low-pass filter to the source. Warning: Probably buggy.",31,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bltfilter"}}],[8,"Sample","rodio","Represents a value of a single sample.",null,null],[10,"lerp","","Linear interpolation between two samples.",32,{"inputs":[{"name":"self"},{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"self"}}],[10,"amplify","","Multiplies the value of this sample by the given amount.",32,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"self"}}],[10,"saturating_add","","Calls `saturating_add` on the sample.",32,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"zero_value","","Returns the value corresponding to the absence of sound.",32,{"inputs":[],"output":{"name":"self"}}],[10,"to_i16","","Converts this sample into a standard i16 sample.",32,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[10,"to_u16","","Converts this sample into a standard u16 sample.",32,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[10,"to_f32","","Converts this sample into a standard f32 sample.",32,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"from","","Converts any sample type to this one by calling `to_i16`, `to_u16` or `to_f32`.",32,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"supported_formats","","Returns an iterator that produces the list of formats that are supported by the backend.",33,{"inputs":[{"name":"self"}],"output":{"generics":["supportedformatsiterator","formatsenumerationerror"],"name":"result"}}],[11,"get_supported_formats_list","","Deprecated. Use `supported_formats` instead.",33,{"inputs":[{"name":"self"}],"output":{"generics":["supportedformatsiterator","formatsenumerationerror"],"name":"result"}}],[11,"name","","Returns the name of the endpoint.",33,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","Deprecated. Use `name()` instead.",33,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"endpoint"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"endpoint"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"endpoint"}}]],"paths":[[3,"Sink"],[3,"SpatialSink"],[3,"SamplesBuffer"],[4,"DecoderError"],[3,"Decoder"],[3,"DynamicMixerController"],[3,"DynamicMixer"],[3,"SourcesQueueInput"],[3,"SourcesQueueOutput"],[3,"Amplify"],[3,"BltFilter"],[3,"Buffered"],[3,"Delay"],[3,"Done"],[3,"Empty"],[3,"FadeIn"],[3,"FromFactoryIter"],[3,"FromIter"],[3,"Mix"],[3,"Pausable"],[3,"PeriodicAccess"],[3,"Repeat"],[3,"SamplesConverter"],[3,"SineWave"],[3,"ChannelVolume"],[3,"Spatial"],[3,"Speed"],[3,"Stoppable"],[3,"TakeDuration"],[3,"UniformSourceIterator"],[3,"Zero"],[8,"Source"],[8,"Sample"],[3,"Endpoint"]]};
searchIndex["ron"] = {"doc":"RON is a simple config format which looks similar to Rust syntax.","items":[[0,"de","ron","",null,null],[3,"Deserializer","ron::de","The RON deserializer.",null,null],[4,"Error","","",null,null],[13,"IoError","","",0,null],[13,"Message","","",0,null],[13,"Parser","","",0,null],[4,"ParseError","","",null,null],[13,"Eof","","",1,null],[13,"ExpectedArray","","",1,null],[13,"ExpectedArrayEnd","","",1,null],[13,"ExpectedBoolean","","",1,null],[13,"ExpectedComma","","",1,null],[13,"ExpectedEnum","","",1,null],[13,"ExpectedChar","","",1,null],[13,"ExpectedFloat","","",1,null],[13,"ExpectedInteger","","",1,null],[13,"ExpectedOption","","",1,null],[13,"ExpectedOptionEnd","","",1,null],[13,"ExpectedMap","","",1,null],[13,"ExpectedMapColon","","",1,null],[13,"ExpectedMapEnd","","",1,null],[13,"ExpectedStruct","","",1,null],[13,"ExpectedStructEnd","","",1,null],[13,"ExpectedUnit","","",1,null],[13,"ExpectedStructName","","",1,null],[13,"ExpectedString","","",1,null],[13,"ExpectedStringEnd","","",1,null],[13,"ExpectedIdentifier","","",1,null],[13,"InvalidEscape","","",1,null],[13,"UnexpectedByte","","",1,null],[13,"Utf8Error","","",1,null],[13,"TrailingCharacters","","",1,null],[5,"from_reader","","A convenience function for reading data from a reader and feeding into a deserializer",null,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[5,"from_str","","A convenience function for building a deserializer and deserializing a value of type `T`.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"parseerror"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"custom","","",0,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"utf8error"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"utf8error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[6,"Result","","Deserialization result.",null,null],[11,"from_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from_bytes","","",2,null],[11,"remainder","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"cow"}}],[11,"end","","Check if the remaining bytes are whitespace only, otherwise return an error.",2,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[0,"ser","ron","",null,null],[3,"PrettyConfig","ron::ser","Pretty serializer configuration",null,null],[12,"new_line","","New line string",3,null],[12,"indentor","","Indentation string",3,null],[12,"separate_tuple_members","","Separate tuple members with indentation",3,null],[12,"enumerate_arrays","","Enumerate array items in comments",3,null],[3,"Serializer","","The RON serializer.",null,null],[4,"Error","","Serialization error.",null,null],[13,"Message","","A custom error emitted by a serialized value.",4,null],[5,"to_string","","Serializes `value` and returns it as string.",null,{"inputs":[{"name":"t"}],"output":{"generics":["string"],"name":"result"}}],[5,"to_string_pretty","","Serializes `value` in the recommended RON layout in a pretty way.",null,{"inputs":[{"name":"t"},{"name":"prettyconfig"}],"output":{"generics":["string"],"name":"result"}}],[0,"pretty","","Provides default pretty serialization with `to_string`.",null,null],[5,"to_string","ron::ser::pretty","Serializes `value` in the recommended RON layout with default pretty configuration.",null,{"inputs":[{"name":"t"}],"output":{"generics":["string"],"name":"result"}}],[6,"Result","ron::ser","Serialization result.",null,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"custom","","",4,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"description","","",4,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"prettyconfig"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new `Serializer`.",5,{"inputs":[{"generics":["prettyconfig"],"name":"option"},{"name":"bool"}],"output":{"name":"self"}}],[11,"into_output_string","","Consumes `self` and returns the built `String`.",5,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[0,"value","ron","Value module.",null,null],[3,"Number","ron::value","A wrapper for `f64` which guarantees that the inner value is finite and thus implements `Eq`, `Hash` and `Ord`.",null,null],[4,"Value","","",null,null],[13,"Bool","","",6,null],[13,"Char","","",6,null],[13,"Map","","",6,null],[13,"Number","","",6,null],[13,"Option","","",6,null],[13,"String","","",6,null],[13,"Seq","","",6,null],[13,"Unit","","",6,null],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"number"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"self"},{"name":"number"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"self"},{"name":"number"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"self"},{"name":"number"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"self"},{"name":"number"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"self"},{"name":"number"}],"output":{"name":"bool"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"number"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"number"}],"output":{"name":"bool"}}],[11,"new","","Panics if `v` is not a real number (infinity, NaN, ..).",7,{"inputs":[{"name":"f64"}],"output":{"name":"self"}}],[11,"get","","Returns the wrapped float.",7,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"hash","","",7,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",7,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"value"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",6,null],[11,"cmp","","",6,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"ordering"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"bool"}}],[11,"deserialize_any","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",6,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",6,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",6,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",6,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",6,null],[11,"deserialize_enum","","",6,null],[11,"deserialize_identifier","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",6,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"from_str","","Creates a value from a string reference.",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",6,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"serialize","","",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}]],"paths":[[4,"Error"],[4,"ParseError"],[3,"Deserializer"],[3,"PrettyConfig"],[4,"Error"],[3,"Serializer"],[4,"Value"],[3,"Number"]]};
searchIndex["rustc_demangle"] = {"doc":"Demangle Rust compiler symbol names.","items":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",null,null],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when demangling fails.",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,{"inputs":[{"name":"str"}],"output":{"name":"demangle"}}],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the string does not appear to be a Rust symbol, rather than \"demangling\" the given string as a no-op.",null,{"inputs":[{"name":"str"}],"output":{"generics":["demangle","trydemangleerror"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"trydemangleerror"}}],[11,"as_str","","Returns the underlying string that's being demangled.",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"TryDemangleError"],[3,"Demangle"]]};
searchIndex["rustc_version"] = {"doc":"Simple library for getting the version information of a `rustc` compiler.","items":[[3,"VersionMeta","rustc_version","Rustc version plus metada like git short hash and build date.",null,null],[12,"semver","","Version of the compiler",0,null],[12,"commit_hash","","Git short hash of the build of the compiler",0,null],[12,"commit_date","","Commit date of the compiler",0,null],[12,"build_date","","Build date of the compiler; this was removed between Rust 1.0.0 and 1.1.0.",0,null],[12,"channel","","Release channel of the compiler",0,null],[12,"host","","Host target triple of the compiler",0,null],[12,"short_version_string","","Short version string of the compiler",0,null],[4,"Channel","","Release channel of the compiler.",null,null],[13,"Dev","","Development release channel",1,null],[13,"Nightly","","Nightly release channel",1,null],[13,"Beta","","Beta release channel",1,null],[13,"Stable","","Stable release channel",1,null],[5,"version","","Returns the `rustc` SemVer version.",null,{"inputs":[],"output":{"name":"version"}}],[5,"version_meta","","Returns the `rustc` SemVer version and additional metadata like the git short hash and build date.",null,{"inputs":[],"output":{"name":"versionmeta"}}],[5,"version_meta_for","","Parses a \"rustc -vV\" output string and returns the SemVer version and additional metadata like the git short hash and build date.",null,{"inputs":[{"name":"str"}],"output":{"name":"versionmeta"}}],[5,"version_matches","","Check wether the `rustc` version matches the given SemVer version requirement.",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"channel"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"channel"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"channel"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"channel"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"versionmeta"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"versionmeta"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"versionmeta"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"versionmeta"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"versionmeta"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"versionmeta"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"versionmeta"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"versionmeta"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"versionmeta"}],"output":{"name":"bool"}}],[11,"hash","","",0,null]],"paths":[[3,"VersionMeta"],[4,"Channel"]]};
searchIndex["rustc_version_runtime"] = {"doc":"Simple library for getting the version information of a `rustc` compiler in runtime.","items":[[5,"version_meta","rustc_version_runtime","Returns the `rustc` SemVer version and additional metadata like the git short hash and build date.",null,{"inputs":[],"output":{"name":"versionmeta"}}],[5,"version","","Returns the `rustc` SemVer version.",null,{"inputs":[],"output":{"name":"version"}}],[5,"version_matches","","Check wether the `rustc` version matches the given SemVer version requirement.",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}]],"paths":[]};
searchIndex["rusttype"] = {"doc":"RustType is a pure Rust alternative to libraries like FreeType.","items":[[3,"Rect","rusttype","A rectangle, with top-left corner at `min`, and bottom-right corner at `max`.",null,null],[12,"min","","",0,null],[12,"max","","",0,null],[3,"Point","","A point in 2-dimensional space, with each dimension of type `N`.",null,null],[12,"x","","",1,null],[12,"y","","",1,null],[3,"Vector","","A vector in 2-dimensional space, with each dimension of type `N`.",null,null],[12,"x","","",2,null],[12,"y","","",2,null],[3,"Line","","A straight line between two points, `p[0]` and `p[1]`",null,null],[12,"p","","",3,null],[3,"Curve","","A quadratic Bezier curve, starting at `p[0]`, ending at `p[2]`, with control point `p[1]`.",null,null],[12,"p","","",4,null],[3,"FontCollection","","A collection of fonts read straight from a font file's data. The data in the collection is not validated. This structure may or may not own the font data.",null,null],[3,"Font","","A single font. This may or may not own the font data.",null,null],[3,"Codepoint","","Represents a Unicode code point.",null,null],[12,"0","","",5,null],[3,"GlyphId","","Represents a glyph identifier for a particular font. This identifier will not necessarily correspond to the correct glyph in a font other than the one that it was obtained from.",null,null],[12,"0","","",6,null],[3,"Glyph","","A single glyph of a font. this may either be a thin wrapper referring to the font and the glyph id, or it may be a standalone glyph that owns the data needed by it.",null,null],[3,"HMetrics","","The \"horizontal metrics\" of a glyph. This is useful for calculating the horizontal offset of a glyph from the previous one in a string when laying a string out horizontally.",null,null],[12,"advance_width","","The horizontal offset that the origin of the next glyph should be from the origin of this glyph.",7,null],[12,"left_side_bearing","","The horizontal offset between the origin of this glyph and the leftmost edge/point of the glyph.",7,null],[3,"VMetrics","","The \"vertical metrics\" of a font at a particular scale. This is useful for calculating the amount of vertical space to give a line of text, and for computing the vertical offset between successive lines.",null,null],[12,"ascent","","The highest point that any glyph in the font extends to above the baseline. Typically positive.",8,null],[12,"descent","","The lowest point that any glyph in the font extends to below the baseline. Typically negative.",8,null],[12,"line_gap","","The gap to leave between the descent of one line and the ascent of the next. This is of course only a guideline given by the font's designers.",8,null],[3,"ScaledGlyph","","A glyph augmented with scaling information. You can query such a glyph for information that depends on the scale of the glyph.",null,null],[3,"PositionedGlyph","","A glyph augmented with positioning and scaling information. You can query such a glyph for information that depends on the scale and position of the glyph.",null,null],[3,"Scale","","Defines the size of a rendered face of a font, in pixels, horizontally and vertically. A vertical scale of `y` pixels means that the distance betwen the ascent and descent lines (see `VMetrics`) of the face will be `y` pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling by a factor f in the horizontal direction is achieved by setting `x` equal to f times `y`.",null,null],[12,"x","","Horizontal scale, in pixels.",9,null],[12,"y","","Vertical scale, in pixels.",9,null],[3,"IntoFontsIter","","",null,null],[3,"GlyphIter","","",null,null],[3,"LayoutIter","","",null,null],[3,"Contour","","A closed loop consisting of a sequence of `Segment`s.",null,null],[12,"segments","","",10,null],[4,"SharedBytes","","`SharedBytes` handles the lifetime of font data used in RustType. The data is either a shared reference to externally owned data, or managed by reference counting. `SharedBytes` can be conveniently used with `From` and `Into`, and dereferences to the contained bytes.",null,null],[13,"ByRef","","",11,null],[13,"ByArc","","",11,null],[4,"CodepointOrGlyphId","","Represents either a Unicode code point, or a glyph identifier for a font.",null,null],[13,"Codepoint","","",12,null],[13,"GlyphId","","",12,null],[4,"Segment","","Part of a `Contour`, either a `Line` or a `Curve`.",null,null],[13,"Line","","",13,null],[13,"Curve","","",13,null],[5,"point","","A convenience function for generating `Point`s.",null,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"point"}}],[5,"vector","","A convenience function for generating `Vector`s.",null,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"vector"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"ordering"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"vector"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"ordering"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"sub","","",1,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"vector"}}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"vector"}}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"vector"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"generics":["f32"],"name":"vector"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"generics":["f64"],"name":"vector"}}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"generics":["f32"],"name":"vector"}}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"generics":["f64"],"name":"vector"}}],[11,"add","","",1,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"point"}}],[11,"sub","","",1,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"point"}}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"point"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"line"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"line"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"line"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"line"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"self"},{"name":"line"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"self"},{"name":"line"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"self"},{"name":"line"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"self"},{"name":"line"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"curve"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"curve"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"curve"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"curve"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"curve"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"curve"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"curve"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"curve"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"rect"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"ordering"}}],[11,"width","","",0,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"height","","",0,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[0,"gpu_cache","","This module provides capabilities for managing a cache of rendered glyphs in GPU memory, with the goal of minimisng the size and frequency of glyph uploads to GPU memory from the CPU.",null,null],[3,"Cache","rusttype::gpu_cache","An implementation of a dynamic GPU glyph cache. See the module documentation for more information.",null,null],[4,"CacheReadErr","","Returned from `Cache::rect_for`.",null,null],[13,"GlyphNotCached","","Indicates that the requested glyph is not present in the cache",14,null],[4,"CacheWriteErr","","Returned from `Cache::cache_queued`.",null,null],[13,"GlyphTooLarge","","At least one of the queued glyphs is too big to fit into the cache, even if all other glyphs are removed.",15,null],[13,"NoRoomForWholeQueue","","Not all of the requested glyphs can fit into the cache, even if the cache is completely cleared before the attempt.",15,null],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"cachereaderr"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"cachereaderr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"self"},{"name":"cachereaderr"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",14,{"inputs":[{"name":"self"},{"name":"cachereaderr"}],"output":{"name":"ordering"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"cachewriteerr"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"cachewriteerr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"self"},{"name":"cachewriteerr"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",15,{"inputs":[{"name":"self"},{"name":"cachewriteerr"}],"output":{"name":"ordering"}}],[11,"new","","Constructs a new cache. Note that this is just the CPU side of the cache. The GPU texture is managed by the user.",16,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"cache"}}],[11,"set_scale_tolerance","","Sets the scale tolerance for the cache. See the documentation for `Cache::new` for more information.",16,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"scale_tolerance","","Returns the current scale tolerance for the cache.",16,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"set_position_tolerance","","Sets the subpixel position tolerance for the cache. See the documentation for `Cache::new` for more information.",16,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"position_tolerance","","Returns the current subpixel position tolerance for the cache.",16,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"dimensions","","Returns the cache texture dimensions assumed by the cache. For proper operation this should match the dimensions of the used GPU texture.",16,null],[11,"queue_glyph","","Queue a glyph for caching by the next call to `cache_queued`. `font_id` is used to disambiguate glyphs from different fonts. The user should ensure that `font_id` is unique to the font the glyph is from.",16,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"positionedglyph"}],"output":null}],[11,"clear","","Clears the cache. Does not affect the glyph queue.",16,{"inputs":[{"name":"self"}],"output":null}],[11,"clear_queue","","Clears the glyph queue.",16,{"inputs":[{"name":"self"}],"output":null}],[11,"cache_queued","","Caches the queued glyphs. If this is unsuccessful, the queue is untouched. Any glyphs cached by previous calls to this function may be removed from the cache to make room for the newly queued glyphs. Thus if you want to ensure that a glyph is in the cache, the most recently cached queue must have contained that glyph.",16,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["cachewriteerr"],"name":"result"}}],[11,"rect_for","","Retrieves the (floating point) texture coordinates of the quad for a glyph in the cache, as well as the pixel-space (integer) coordinates that this region should be drawn at. In the majority of cases these pixel-space coordinates should be identical to the bounding box of the input glyph. They only differ if the cache has returned a substitute glyph that is deemed close enough to the requested glyph as specified by the cache tolerance parameters.",16,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"positionedglyph"}],"output":{"generics":["option","cachereaderr"],"name":"result"}}],[11,"clone","rusttype","",17,{"inputs":[{"name":"self"}],"output":{"name":"fontcollection"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"font"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"sharedbytes"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",11,null],[11,"from","","",11,null],[11,"from","","",11,{"inputs":[{"generics":["box"],"name":"arc"}],"output":{"name":"sharedbytes"}}],[11,"from","","",11,{"inputs":[{"name":"box"}],"output":{"name":"sharedbytes"}}],[11,"from","","",11,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"name":"sharedbytes"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"codepoint"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"codepoint"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"self"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"self"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"self"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"self"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",5,{"inputs":[{"name":"self"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"codepointorglyphid"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"codepointorglyphid"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"codepointorglyphid"}],"output":{"name":"bool"}}],[11,"hash","","",12,null],[11,"partial_cmp","","",12,{"inputs":[{"name":"self"},{"name":"codepointorglyphid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"self"},{"name":"codepointorglyphid"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"self"},{"name":"codepointorglyphid"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"self"},{"name":"codepointorglyphid"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"self"},{"name":"codepointorglyphid"}],"output":{"name":"bool"}}],[11,"cmp","","",12,{"inputs":[{"name":"self"},{"name":"codepointorglyphid"}],"output":{"name":"ordering"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"glyphid"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"glyphid"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"glyphid"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"glyphid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"self"},{"name":"glyphid"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"self"},{"name":"glyphid"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"self"},{"name":"glyphid"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"self"},{"name":"glyphid"}],"output":{"name":"bool"}}],[11,"cmp","","",6,{"inputs":[{"name":"self"},{"name":"glyphid"}],"output":{"name":"ordering"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"glyph"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"hmetrics"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"hmetrics"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"hmetrics"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"self"},{"name":"hmetrics"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"self"},{"name":"hmetrics"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"self"},{"name":"hmetrics"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"self"},{"name":"hmetrics"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"self"},{"name":"hmetrics"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"vmetrics"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"vmetrics"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"vmetrics"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"self"},{"name":"vmetrics"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"self"},{"name":"vmetrics"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"self"},{"name":"vmetrics"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"self"},{"name":"vmetrics"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"self"},{"name":"vmetrics"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"scaledglyph"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"positionedglyph"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"scale"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"scale"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"scale"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"scale"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"self"},{"name":"scale"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"self"},{"name":"scale"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"self"},{"name":"scale"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"self"},{"name":"scale"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"uniform","","Uniform scaling, equivalent to `Scale { x: s, y: s }`.",9,{"inputs":[{"name":"f32"}],"output":{"name":"scale"}}],[11,"from","","",5,{"inputs":[{"name":"char"}],"output":{"name":"codepoint"}}],[11,"from","","",12,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepointorglyphid"}}],[11,"from","","",12,{"inputs":[{"name":"glyphid"}],"output":{"name":"codepointorglyphid"}}],[11,"from","","",12,{"inputs":[{"name":"char"}],"output":{"name":"codepointorglyphid"}}],[11,"from_bytes","","Constructs a font collection from an array of bytes, typically loaded from a font file. This array may be owned (e.g. `Vec<u8>`), or borrowed (`&[u8]`). As long as `From<T>` is implemented for `Bytes` for some type `T`, `T` can be used as input.",17,{"inputs":[{"name":"b"}],"output":{"name":"fontcollection"}}],[11,"into_font","","In the common case that a font collection consists of only one font, this function consumes this font collection and turns it into a font. If this is not the case, or the font is not valid (read: not supported by this library), `None` is returned.",17,{"inputs":[{"name":"self"}],"output":{"generics":["font"],"name":"option"}}],[11,"font_at","","Gets the font at index `i` in the font collection, if it exists and is valid. The produced font borrows the font data that is either borrowed or owned by this font collection.",17,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["font"],"name":"option"}}],[11,"into_fonts","","Converts `self` into an `Iterator` yielding each `Font` that exists within the collection.",17,{"inputs":[{"name":"self"}],"output":{"name":"intofontsiter"}}],[11,"next","","",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"v_metrics","","The \"vertical metrics\" for this font at a given scale. These metrics are shared by all of the glyphs in the font. See `VMetrics` for more detail.",18,{"inputs":[{"name":"self"},{"name":"scale"}],"output":{"name":"vmetrics"}}],[11,"glyph_count","","The number of glyphs present in this font. Glyph identifiers for this font will always be in the range `0..self.glyph_count()`",18,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"glyph","","Returns the corresponding glyph for a Unicode code point or a glyph id for this font. If id corresponds to a glyph identifier, the identifier must be valid (smaller than `self.glyph_count()`), otherwise `None` is returned.",18,{"inputs":[{"name":"self"},{"name":"c"}],"output":{"generics":["glyph"],"name":"option"}}],[11,"glyphs_for","","A convenience function.",18,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"glyphiter"}}],[11,"layout","","A convenience function for laying out glyphs for a string horizontally. It does not take control characters like line breaks into account, as treatment of these is likely to depend on the application.",18,{"inputs":[{"name":"self"},{"name":"str"},{"name":"scale"},{"generics":["f32"],"name":"point"}],"output":{"name":"layoutiter"}}],[11,"pair_kerning","","Returns additional kerning to apply as well as that given by HMetrics for a particular pair of glyphs.",18,{"inputs":[{"name":"self"},{"name":"scale"},{"name":"a"},{"name":"b"}],"output":{"name":"f32"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"glyphiter"}}],[11,"next","","",23,{"inputs":[{"name":"self"}],"output":{"generics":["glyph"],"name":"option"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"layoutiter"}}],[11,"next","","",24,{"inputs":[{"name":"self"}],"output":{"generics":["positionedglyph"],"name":"option"}}],[11,"font","","The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources, it no longer has a reference to the font which it was created from (using `standalone()`). In which case, `None` is returned.",19,{"inputs":[{"name":"self"}],"output":{"generics":["font"],"name":"option"}}],[11,"id","","The glyph identifier for this glyph.",19,{"inputs":[{"name":"self"}],"output":{"name":"glyphid"}}],[11,"scaled","","Augments this glyph with scaling information, making methods that depend on the scale of the glyph available.",19,{"inputs":[{"name":"self"},{"name":"scale"}],"output":{"name":"scaledglyph"}}],[11,"standalone","","Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces a glyph that owns its resources, extracted from the font. This glyph can outlive the font that it comes from.",19,{"inputs":[{"name":"self"}],"output":{"name":"glyph"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"segment"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"contour"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"id","","The glyph identifier for this glyph.",20,{"inputs":[{"name":"self"}],"output":{"name":"glyphid"}}],[11,"font","","The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources, it no longer has a reference to the font which it was created from (using `standalone()`). In which case, `None` is returned.",20,{"inputs":[{"name":"self"}],"output":{"generics":["font"],"name":"option"}}],[11,"into_unscaled","","A reference to this glyph without the scaling",20,{"inputs":[{"name":"self"}],"output":{"name":"glyph"}}],[11,"unscaled","","Removes the scaling from this glyph",20,{"inputs":[{"name":"self"}],"output":{"name":"glyph"}}],[11,"positioned","","Augments this glyph with positioning information, making methods that depend on the position of the glyph available.",20,{"inputs":[{"name":"self"},{"generics":["f32"],"name":"point"}],"output":{"name":"positionedglyph"}}],[11,"scale","","",20,{"inputs":[{"name":"self"}],"output":{"name":"scale"}}],[11,"h_metrics","","Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for more detail.",20,{"inputs":[{"name":"self"}],"output":{"name":"hmetrics"}}],[11,"shape","","Produces a list of the contours that make up the shape of this glyph. Each contour consists of a sequence of segments. Each segment is either a straight `Line` or a `Curve`.",20,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"option"}}],[11,"exact_bounding_box","","The bounding box of the shape of this glyph, not to be confused with `pixel_bounding_box`, the conservative pixel-boundary bounding box. The coordinates are relative to the glyph's origin.",20,{"inputs":[{"name":"self"}],"output":{"generics":["rect"],"name":"option"}}],[11,"standalone","","Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See that function for more details.",20,{"inputs":[{"name":"self"}],"output":{"name":"scaledglyph"}}],[11,"id","","The glyph identifier for this glyph.",21,{"inputs":[{"name":"self"}],"output":{"name":"glyphid"}}],[11,"font","","The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources, it no longer has a reference to the font which it was created from (using `standalone()`). In which case, `None` is returned.",21,{"inputs":[{"name":"self"}],"output":{"generics":["font"],"name":"option"}}],[11,"unpositioned","","A reference to this glyph without positioning",21,{"inputs":[{"name":"self"}],"output":{"name":"scaledglyph"}}],[11,"into_unpositioned","","Removes the positioning from this glyph",21,{"inputs":[{"name":"self"}],"output":{"name":"scaledglyph"}}],[11,"pixel_bounding_box","","The conservative pixel-boundary bounding box for this glyph. This is the smallest rectangle aligned to pixel boundaries that encloses the shape of this glyph at this position.",21,{"inputs":[{"name":"self"}],"output":{"generics":["rect"],"name":"option"}}],[11,"shape","","Similar to `ScaledGlyph::shape()`, but with the position of the glyph taken into account.",21,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"option"}}],[11,"scale","","",21,{"inputs":[{"name":"self"}],"output":{"name":"scale"}}],[11,"position","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"point"}}],[11,"draw","","Rasterises this glyph. For each pixel in the rect given by `pixel_bounding_box()`, `o` is called:",21,{"inputs":[{"name":"self"},{"name":"o"}],"output":null}],[11,"standalone","","Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See that function for more details.",21,{"inputs":[{"name":"self"}],"output":{"name":"positionedglyph"}}]],"paths":[[3,"Rect"],[3,"Point"],[3,"Vector"],[3,"Line"],[3,"Curve"],[3,"Codepoint"],[3,"GlyphId"],[3,"HMetrics"],[3,"VMetrics"],[3,"Scale"],[3,"Contour"],[4,"SharedBytes"],[4,"CodepointOrGlyphId"],[4,"Segment"],[4,"CacheReadErr"],[4,"CacheWriteErr"],[3,"Cache"],[3,"FontCollection"],[3,"Font"],[3,"Glyph"],[3,"ScaledGlyph"],[3,"PositionedGlyph"],[3,"IntoFontsIter"],[3,"GlyphIter"],[3,"LayoutIter"]]};
searchIndex["scopeguard"] = {"doc":"A scope guard will run a given closure when it goes out of scope, even if the code between panics. (as long as panic doesn't abort)","items":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected value.",null,null],[4,"Always","","Always run on scope exit.",null,null],[4,"OnUnwind","","Run on scope exit through unwinding.",null,null],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred closure `dropfn`.",null,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"generics":["always"],"name":"scopeguard"}}],[5,"guard_on_unwind","","Create a new `ScopeGuard` owning `v` and with deferred closure `dropfn`.",null,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"generics":["onunwind"],"name":"scopeguard"}}],[8,"Strategy","","",null,null],[10,"should_run","","Return `true` if the guard’s associated code should run (in the context where this method is called).",0,{"inputs":[],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"should_run","","",1,{"inputs":[],"output":{"name":"bool"}}],[11,"should_run","","",2,{"inputs":[],"output":{"name":"bool"}}],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through deref) and calls `dropfn` when its destructor runs.",3,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"name":"scopeguard"}}],[11,"deref","","",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",3,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"defer","","Macro to create a `ScopeGuard` (always run).",null,null],[14,"defer_on_unwind","","Macro to create a `ScopeGuard` (run on unwinding from panic).",null,null]],"paths":[[8,"Strategy"],[4,"Always"],[4,"OnUnwind"],[3,"ScopeGuard"]]};
searchIndex["semver"] = {"doc":"Semantic version parsing and comparison.","items":[[3,"Version","semver","Represents a version number conforming to the semantic versioning scheme.",null,null],[12,"major","","The major version, to be incremented on incompatible changes.",0,null],[12,"minor","","The minor version, to be incremented when functionality is added in a backwards-compatible manner.",0,null],[12,"patch","","The patch version, to be incremented when backwards-compatible bug fixes are made.",0,null],[12,"pre","","The pre-release version identifier, if one exists.",0,null],[12,"build","","The build metadata, ignored when determining version precedence.",0,null],[3,"VersionReq","","A `VersionReq` is a struct containing a list of predicates that can apply to ranges of version numbers. Matching operations can then be done with the `VersionReq` against a particular version to see if it satisfies some or all of the constraints.",null,null],[4,"Identifier","","An identifier in the pre-release or build metadata.",null,null],[13,"Numeric","","An identifier that's solely numbers.",1,null],[13,"AlphaNumeric","","An identifier with letters and numbers.",1,null],[4,"ParseError","","A `ParseError` is returned as the `Err` side of a `Result` when a version is attempted to be parsed.",null,null],[13,"NonAsciiIdentifier","","All identifiers must be ASCII.",2,null],[13,"IncorrectParse","","The version was mis-parsed.",2,null],[13,"GenericFailure","","Any other failure.",2,null],[4,"ReqParseError","","A `ReqParseError` is returned from methods which parse a string into a `VersionReq`. Each enumeration is one of the possible errors that can occur.",null,null],[13,"InvalidVersionRequirement","","The given version requirement is invalid.",3,null],[13,"OpAlreadySet","","You have already provided an operation, such as `=`, `~`, or `^`. Only use one.",3,null],[13,"InvalidSigil","","The sigil you have written is not correct.",3,null],[13,"VersionComponentsMustBeNumeric","","All components of a version must be numeric.",3,null],[13,"MajorVersionRequired","","At least a major version is required.",3,null],[13,"UnimplementedVersionRequirement","","An unimplemented version requirement.",3,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"identifier"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"ordering"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"parseerror"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"parse","","Parse a string into a semver object.",0,{"inputs":[{"name":"str"}],"output":{"generics":["version","parseerror"],"name":"result"}}],[11,"increment_patch","","Increments the patch number for this Version (Must be mutable)",0,{"inputs":[{"name":"self"}],"output":null}],[11,"increment_minor","","Increments the minor version number for this Version (Must be mutable)",0,{"inputs":[{"name":"self"}],"output":null}],[11,"increment_major","","Increments the major version number for this Version (Must be mutable)",0,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"ordering"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"versionreq"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"versionreq"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"versionreq"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"reqparseerror"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"reqparseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"any","","`any()` is a factory method which creates a `VersionReq` with no constraints. In other words, any version will match against it.",4,{"inputs":[],"output":{"name":"versionreq"}}],[11,"parse","","`parse()` is the main constructor of a `VersionReq`. It turns a string like `\"^1.2.3\"` and turns it into a `VersionReq` that matches that particular constraint.",4,{"inputs":[{"name":"str"}],"output":{"generics":["versionreq","reqparseerror"],"name":"result"}}],[11,"exact","","`exact()` is a factory method which creates a `VersionReq` with one exact constraint.",4,{"inputs":[{"name":"version"}],"output":{"name":"versionreq"}}],[11,"matches","","`matches()` matches a given `Version` against this `VersionReq`.",4,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Version"],[4,"Identifier"],[4,"ParseError"],[4,"ReqParseError"],[3,"VersionReq"]]};
searchIndex["serde"] = {"doc":"Serde","items":[[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not support serializing one of the compound types.",null,null],[11,"serialize_element","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_element","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_field","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_field","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_key","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"serialize_value","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_field","","",0,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_field","","",0,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"Error","","Trait used by `Serialize` implementations to generically construct errors belonging to the `Serializer` against which they are currently running.",null,null],[10,"custom","","Used when a [`Serialize`] implementation encounters any error while serializing a type.",1,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"Serialize","","A data structure that can be serialized into any data format supported by Serde.",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",2,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[8,"Serializer","","A data format that can serialize any data structure supported by Serde.",null,null],[16,"Ok","","The output type produced by this `Serializer` during successful serialization. Most serializers that produce text or binary output should set `Ok = ()` and serialize into an [`io::Write`] or buffer contained within the `Serializer` instance. Serializers that build in-memory data structures may be simplified by using `Ok` to propagate the data structure around.",3,null],[16,"Error","","The error type when some error occurs during serialization.",3,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the content of the sequence.",3,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the content of the tuple.",3,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for serializing the content of the tuple struct.",3,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for serializing the content of the tuple variant.",3,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the content of the map.",3,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing the content of the struct.",3,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for serializing the content of the struct variant.",3,null],[10,"serialize_bool","","Serialize a `bool` value.",3,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"serialize_i8","","Serialize an `i8` value.",3,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[10,"serialize_i16","","Serialize an `i16` value.",3,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[10,"serialize_i32","","Serialize an `i32` value.",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[10,"serialize_i64","","Serialize an `i64` value.",3,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[10,"serialize_u8","","Serialize a `u8` value.",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[10,"serialize_u16","","Serialize a `u16` value.",3,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[10,"serialize_u32","","Serialize a `u32` value.",3,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"serialize_u64","","Serialize a `u64` value.",3,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[10,"serialize_f32","","Serialize an `f32` value.",3,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[10,"serialize_f64","","Serialize an `f64` value.",3,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[10,"serialize_char","","Serialize a character.",3,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"result"}}],[10,"serialize_str","","Serialize a `&str`.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",3,null],[10,"serialize_none","","Serialize a [`None`] value.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"serialize_some","","Serialize a [`Some(T)`] value.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_unit","","Serialize a `()` value.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or `PhantomData<T>`.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"generics":["usize"],"name":"option"}],"output":{"name":"result"}}],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose length will be known at deserialization time without looking at the serialized data. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8) }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_map","","Begin to serialize a map. This call must be followed by zero or more calls to `serialize_key` and `serialize_value`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"generics":["usize"],"name":"option"}],"output":{"name":"result"}}],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[11,"collect_seq","","Collect an iterator as a sequence.",3,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"result"}}],[11,"collect_map","","Collect an iterator as a map.",3,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"result"}}],[11,"collect_str","","Serialize a string produced by an implementation of `Display`.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"is_human_readable","","Determine whether `Serialize` implementations should serialize in human-readable form.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",4,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",4,null],[10,"serialize_element","","Serialize a sequence element.",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a sequence.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",5,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",5,null],[10,"serialize_element","","Serialize a tuple element.",5,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a tuple.",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",6,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",6,null],[10,"serialize_field","","Serialize a tuple struct field.",6,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a tuple struct.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",7,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",7,null],[10,"serialize_field","","Serialize a tuple variant field.",7,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a tuple variant.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",8,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",8,null],[10,"serialize_key","","Serialize a map key.",8,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_value","","Serialize a map value.",8,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",8,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a map.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",9,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",9,null],[10,"serialize_field","","Serialize a struct field.",9,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[11,"skip_field","","Indicate that a struct field has been skipped.",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a struct.",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",10,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",10,null],[10,"serialize_field","","Serialize a struct variant field.",10,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[11,"skip_field","","Indicate that a struct variant field has been skipped.",10,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a struct variant.",10,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any one of the `Visitor` trait methods.",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",11,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32` or `u64` that was not expected.",11,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or `i64` that was not expected.",11,null],[13,"Float","","The input contained a floating point `f32` or `f64` that was not expected.",11,null],[13,"Char","","The input contained a `char` that was not expected.",11,null],[13,"Str","","The input contained a `&str` or `String` that was not expected.",11,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not expected.",11,null],[13,"Unit","","The input contained a unit `()` that was not expected.",11,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",11,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",11,null],[13,"Seq","","The input contained a sequence that was not expected.",11,null],[13,"Map","","The input contained a map that was not expected.",11,null],[13,"Enum","","The input contained an enum that was not expected.",11,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",11,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",11,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",11,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",11,null],[13,"Other","","A message stating what uncategorized thing the input contained that was not expected.",11,null],[0,"value","","Building blocks for deserializing basic values using the `IntoDeserializer` trait.",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can occur using the `IntoDeserializer` trait.",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to another deserializer.",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to another deserializer.",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"custom","","",12,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"custom","","",12,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"description","","",12,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"unitdeserializer"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",13,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",13,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",13,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",13,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",13,null],[11,"deserialize_enum","","",13,null],[11,"deserialize_identifier","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"booldeserializer"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",14,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",14,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",14,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",14,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",14,null],[11,"deserialize_enum","","",14,null],[11,"deserialize_identifier","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"i8deserializer"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",15,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",15,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",15,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",15,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",15,null],[11,"deserialize_enum","","",15,null],[11,"deserialize_identifier","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"i16deserializer"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",16,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",16,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",16,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",16,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",16,null],[11,"deserialize_enum","","",16,null],[11,"deserialize_identifier","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"i32deserializer"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",17,null],[11,"deserialize_enum","","",17,null],[11,"deserialize_identifier","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"i64deserializer"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",18,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",18,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",18,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",18,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",18,null],[11,"deserialize_enum","","",18,null],[11,"deserialize_identifier","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"isizedeserializer"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",19,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",19,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",19,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",19,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",19,null],[11,"deserialize_enum","","",19,null],[11,"deserialize_identifier","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"u8deserializer"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",20,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",20,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",20,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",20,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",20,null],[11,"deserialize_enum","","",20,null],[11,"deserialize_identifier","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u16deserializer"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",21,null],[11,"deserialize_enum","","",21,null],[11,"deserialize_identifier","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"u64deserializer"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",22,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",22,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",22,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",22,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",22,null],[11,"deserialize_enum","","",22,null],[11,"deserialize_identifier","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"usizedeserializer"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",23,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",23,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",23,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",23,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",23,null],[11,"deserialize_enum","","",23,null],[11,"deserialize_identifier","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"f32deserializer"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",24,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",24,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",24,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",24,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",24,null],[11,"deserialize_enum","","",24,null],[11,"deserialize_identifier","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"f64deserializer"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",25,null],[11,"deserialize_enum","","",25,null],[11,"deserialize_identifier","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"chardeserializer"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",26,null],[11,"deserialize_enum","","",26,null],[11,"deserialize_identifier","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32deserializer"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",27,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",27,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",27,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",27,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",27,null],[11,"deserialize_identifier","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",27,null],[11,"variant_seed","","",27,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"strdeserializer"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_any","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",28,null],[11,"deserialize_bool","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",28,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",28,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",28,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",28,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",28,null],[11,"deserialize_identifier","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"variant_seed","","",28,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"borrowedstrdeserializer"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new borrowed deserializer from the given string.",29,{"inputs":[{"name":"str"}],"output":{"name":"borrowedstrdeserializer"}}],[11,"deserialize_any","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",29,null],[11,"deserialize_bool","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",29,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",29,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",29,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",29,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",29,null],[11,"deserialize_identifier","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"variant_seed","","",29,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"stringdeserializer"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_any","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",30,null],[11,"deserialize_bool","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",30,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",30,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",30,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",30,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",30,null],[11,"deserialize_identifier","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"variant_seed","","",30,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"cowstrdeserializer"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_any","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",31,null],[11,"deserialize_bool","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",31,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",31,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",31,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",31,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",31,null],[11,"deserialize_identifier","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"variant_seed","","",31,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"borrowedbytesdeserializer"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new borrowed deserializer from the given byte slice.",32,null],[11,"deserialize_any","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",32,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",32,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",32,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",32,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",32,null],[11,"deserialize_identifier","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",32,null],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"seqdeserializer"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",33,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"end","","Check for remaining elements after passing a `SeqDeserializer` to `Visitor::visit_seq`.",33,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"deserialize_any","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",33,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",33,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",33,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",33,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",33,null],[11,"deserialize_enum","","",33,null],[11,"deserialize_identifier","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"next_element_seed","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"generics":["option"],"name":"result"}}],[11,"size_hint","","",33,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"seqaccessdeserializer"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",34,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"deserialize_any","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",34,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",34,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",34,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",34,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",34,null],[11,"deserialize_enum","","",34,null],[11,"deserialize_identifier","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Construct a new `MapDeserializer<I, E>`.",35,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"end","","Check for remaining elements after passing a `MapDeserializer` to `Visitor::visit_map`.",35,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"deserialize_any","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",35,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",35,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",35,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",35,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",35,null],[11,"deserialize_enum","","",35,null],[11,"deserialize_identifier","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"next_key_seed","","",35,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["option"],"name":"result"}}],[11,"next_value_seed","","",35,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"next_entry_seed","","",35,{"inputs":[{"name":"self"},{"name":"tk"},{"name":"tv"}],"output":{"generics":["option"],"name":"result"}}],[11,"size_hint","","",35,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"next_element_seed","","",35,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["option"],"name":"result"}}],[11,"size_hint","","",35,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"mapaccessdeserializer"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",36,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"deserialize_any","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",36,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",36,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",36,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",36,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",36,null],[11,"deserialize_enum","","",36,null],[11,"deserialize_identifier","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","serde::de","",37,{"inputs":[{"name":"self"}],"output":{"name":"ignoredany"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",37,{"inputs":[],"output":{"name":"ignoredany"}}],[11,"expecting","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"visit_bool","","",37,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"visit_i64","","",37,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[11,"visit_u64","","",37,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"visit_f64","","",37,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[11,"visit_str","","",37,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_none","","",37,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"visit_some","","",37,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[11,"visit_newtype_struct","","",37,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[11,"visit_unit","","",37,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"visit_seq","","",37,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[11,"visit_map","","",37,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[11,"visit_bytes","","",37,null],[11,"deserialize","","",37,{"inputs":[{"name":"d"}],"output":{"generics":["ignoredany"],"name":"result"}}],[8,"Error","","The `Error` trait allows `Deserialize` implementations to create descriptive error messages belonging to the `Deserializer` against which they are currently running.",null,null],[10,"custom","","Raised when there is general error when deserializing a type.",38,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from what it was expecting.",38,{"inputs":[{"name":"unexpected"},{"name":"expected"}],"output":{"name":"self"}}],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right type but that is wrong for some other reason.",38,{"inputs":[{"name":"unexpected"},{"name":"expected"}],"output":{"name":"self"}}],[11,"invalid_length","","Raised when deserializing a sequence or map and the input data contains too many or too few elements.",38,{"inputs":[{"name":"usize"},{"name":"expected"}],"output":{"name":"self"}}],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant with an unrecognized name.",38,null],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field with an unrecognized name.",38,null],[11,"missing_field","","Raised when a `Deserialize` struct type expected to receive a required field with a particular name but that field was not present in the input.",38,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than one of the same field.",38,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[8,"Expected","","`Expected` represents an explanation of what data a `Visitor` was expecting to receive.",null,null],[10,"fmt","","Format an explanation of what data was being expected. Same signature as the `Display` and `Debug` traits.",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Deserialize","","A data structure that can be deserialized from any data format supported by Serde.",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",40,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"DeserializeOwned","","A data structure that can be deserialized without borrowing any data from the deserializer.",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the `Deserialize` trait. If you ever find yourself looking for a way to pass data into a `Deserialize` impl, this trait is the way to do it.",null,null],[16,"Value","","The type produced by using this seed.",41,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize` method, except with some initial piece of data (the seed) passed in.",41,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[8,"Deserializer","","A data format that can deserialize any data structure supported by Serde.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",42,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the visitor based on what data type is in the input.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string value and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string value and would benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array and would benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit struct with a particular name.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype struct with a particular name.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence of values.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence of values and knows how many values there are without looking at the serialized data.",42,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple struct with a particular name and number of fields.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of key-value pairs.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct with a particular name and fields.",42,null],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum value with a particular name and possible variants.",42,null],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of a struct field or the discriminant of an enum variant.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a value whose type doesn't matter because it is ignored.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"is_human_readable","","Determine whether `Deserialize` implementations should expect to deserialize their human-readable form.",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Visitor","","This trait represents a visitor that walks through a deserializer.",null,null],[16,"Value","","The value produced by this visitor.",43,null],[10,"expecting","","Format a message stating what data this Visitor expects to receive.",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"visit_bool","","The input contains a boolean.",43,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"visit_i8","","The input contains an `i8`.",43,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[11,"visit_i16","","The input contains an `i16`.",43,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[11,"visit_i32","","The input contains an `i32`.",43,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"visit_i64","","The input contains an `i64`.",43,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[11,"visit_u8","","The input contains a `u8`.",43,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"visit_u16","","The input contains a `u16`.",43,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[11,"visit_u32","","The input contains a `u32`.",43,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"visit_u64","","The input contains a `u64`.",43,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"visit_f32","","The input contains an `f32`.",43,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[11,"visit_f64","","The input contains an `f64`.",43,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[11,"visit_char","","The input contains a `char`.",43,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"result"}}],[11,"visit_str","","The input contains a string. The lifetime of the string is ephemeral and it may be destroyed after this method returns.",43,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as the `Deserializer`.",43,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_string","","The input contains a string and ownership of the string is being given to the `Visitor`.",43,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"result"}}],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte array is ephemeral and it may be destroyed after this method returns.",43,null],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as long as the `Deserializer`.",43,null],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte array is being given to the `Visitor`.",43,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"}],"output":{"name":"result"}}],[11,"visit_none","","The input contains an optional that is absent.",43,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"visit_some","","The input contains an optional that is present.",43,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[11,"visit_unit","","The input contains a unit `()`.",43,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"visit_newtype_struct","","The input contains a newtype struct.",43,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[11,"visit_seq","","The input contains a sequence of elements.",43,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[11,"visit_map","","The input contains a key-value map.",43,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[11,"visit_enum","","The input contains an enum.",43,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence in the input.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",44,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there are no more remaining items.",44,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["option"],"name":"result"}}],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there are no more remaining items.",44,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"size_hint","","Returns the number of elements remaining in the sequence, if known.",44,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the input.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",45,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no more remaining entries.",45,{"inputs":[{"name":"self"},{"name":"k"}],"output":{"generics":["option"],"name":"result"}}],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",45,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next (key-value) pair in the map, or `Ok(None)` if there are no more remaining items.",45,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":{"generics":["option"],"name":"result"}}],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no more remaining entries.",45,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",45,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next (key-value) pair in the map, or `Ok(None)` if there are no more remaining items.",45,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"size_hint","","Returns the number of entries remaining in the map, if known.",45,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the input.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",46,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content of the enum variant.",46,null],[10,"variant_seed","","`variant` is called to identify which variant to deserialize.",46,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"variant","","`variant` is called to identify which variant to deserialize.",46,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the `Deserializer` and passed to the `Deserialize` to deserialize the content of a particular enum variant.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization. Must match the error type of our `EnumAccess`.",47,null],[10,"unit_variant","","Called when deserializing a variant with no values.",47,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",47,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"newtype_variant","","Called when deserializing a variant with a single value.",47,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",47,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[10,"struct_variant","","Called when deserializing a struct-like variant.",47,null],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from which other values can be deserialized.",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",48,null],[10,"into_deserializer","","Convert this value into a deserializer.",48,null],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"unexpected"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"unexpected"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"unexpected"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Serialize","serde","A data structure that can be serialized into any data format supported by Serde.",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",2,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[8,"Serializer","","A data format that can serialize any data structure supported by Serde.",null,null],[16,"Ok","","The output type produced by this `Serializer` during successful serialization. Most serializers that produce text or binary output should set `Ok = ()` and serialize into an [`io::Write`] or buffer contained within the `Serializer` instance. Serializers that build in-memory data structures may be simplified by using `Ok` to propagate the data structure around.",3,null],[16,"Error","","The error type when some error occurs during serialization.",3,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the content of the sequence.",3,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the content of the tuple.",3,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for serializing the content of the tuple struct.",3,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for serializing the content of the tuple variant.",3,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the content of the map.",3,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing the content of the struct.",3,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for serializing the content of the struct variant.",3,null],[10,"serialize_bool","","Serialize a `bool` value.",3,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"serialize_i8","","Serialize an `i8` value.",3,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[10,"serialize_i16","","Serialize an `i16` value.",3,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[10,"serialize_i32","","Serialize an `i32` value.",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[10,"serialize_i64","","Serialize an `i64` value.",3,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[10,"serialize_u8","","Serialize a `u8` value.",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[10,"serialize_u16","","Serialize a `u16` value.",3,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[10,"serialize_u32","","Serialize a `u32` value.",3,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"serialize_u64","","Serialize a `u64` value.",3,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[10,"serialize_f32","","Serialize an `f32` value.",3,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[10,"serialize_f64","","Serialize an `f64` value.",3,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[10,"serialize_char","","Serialize a character.",3,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"result"}}],[10,"serialize_str","","Serialize a `&str`.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",3,null],[10,"serialize_none","","Serialize a [`None`] value.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"serialize_some","","Serialize a [`Some(T)`] value.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_unit","","Serialize a `()` value.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or `PhantomData<T>`.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"generics":["usize"],"name":"option"}],"output":{"name":"result"}}],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose length will be known at deserialization time without looking at the serialized data. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8) }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_map","","Begin to serialize a map. This call must be followed by zero or more calls to `serialize_key` and `serialize_value`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"generics":["usize"],"name":"option"}],"output":{"name":"result"}}],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[11,"collect_seq","","Collect an iterator as a sequence.",3,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"result"}}],[11,"collect_map","","Collect an iterator as a map.",3,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"result"}}],[11,"collect_str","","Serialize a string produced by an implementation of `Display`.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"is_human_readable","","Determine whether `Serialize` implementations should serialize in human-readable form.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Deserialize","","A data structure that can be deserialized from any data format supported by Serde.",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",40,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Deserializer","","A data format that can deserialize any data structure supported by Serde.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",42,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the visitor based on what data type is in the input.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string value and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string value and would benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array and would benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit struct with a particular name.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype struct with a particular name.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence of values.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence of values and knows how many values there are without looking at the serialized data.",42,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple struct with a particular name and number of fields.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of key-value pairs.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct with a particular name and fields.",42,null],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum value with a particular name and possible variants.",42,null],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of a struct field or the discriminant of an enum variant.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a value whose type doesn't matter because it is ignored.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"is_human_readable","","Determine whether `Deserialize` implementations should expect to deserialize their human-readable form.",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of a new data format for Serde.",null,null]],"paths":[[3,"Impossible"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[4,"Unexpected"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"BorrowedStrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[3,"IgnoredAny"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"]]};
searchIndex["serde_derive"] = {"doc":"This crate provides Serde's two derive macros.","items":[[5,"derive_serialize","serde_derive","",null,{"inputs":[{"name":"tokenstream"}],"output":{"name":"tokenstream"}}],[5,"derive_deserialize","","",null,{"inputs":[{"name":"tokenstream"}],"output":{"name":"tokenstream"}}]],"paths":[]};
searchIndex["serde_derive_internals"] = {"doc":"","items":[[3,"Ctxt","serde_derive_internals","",null,null],[0,"ast","","",null,null],[3,"Container","serde_derive_internals::ast","",null,null],[12,"ident","","",0,null],[12,"attrs","","",0,null],[12,"body","","",0,null],[12,"generics","","",0,null],[3,"Variant","","",null,null],[12,"ident","","",1,null],[12,"attrs","","",1,null],[12,"style","","",1,null],[12,"fields","","",1,null],[3,"Field","","",null,null],[12,"ident","","",2,null],[12,"attrs","","",2,null],[12,"ty","","",2,null],[4,"Body","","",null,null],[13,"Enum","","",3,null],[13,"Struct","","",3,null],[4,"Style","","",null,null],[13,"Struct","","",4,null],[13,"Tuple","","",4,null],[13,"Newtype","","",4,null],[13,"Unit","","",4,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"from_ast","","",0,{"inputs":[{"name":"ctxt"},{"name":"deriveinput"}],"output":{"name":"container"}}],[11,"all_fields","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["iterator"],"name":"box"}}],[11,"has_getter","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[0,"attr","serde_derive_internals","",null,null],[3,"Name","serde_derive_internals::attr","",null,null],[3,"Container","","Represents container (e.g. struct) attribute information",null,null],[3,"Variant","","Represents variant attribute information",null,null],[3,"Field","","Represents field attribute information",null,null],[4,"RenameRule","","",null,null],[13,"None","","Don't apply a default rename rule.",5,null],[13,"LowerCase","","Rename direct children to \"lowercase\" style.",5,null],[13,"UPPERCASE","","Rename direct children to \"UPPERCASE\" style.",5,null],[13,"PascalCase","","Rename direct children to \"PascalCase\" style, as typically used for enum variants.",5,null],[13,"CamelCase","","Rename direct children to \"camelCase\" style.",5,null],[13,"SnakeCase","","Rename direct children to \"snake_case\" style, as commonly used for fields.",5,null],[13,"ScreamingSnakeCase","","Rename direct children to \"SCREAMING_SNAKE_CASE\" style, as commonly used for constants.",5,null],[13,"KebabCase","","Rename direct children to \"kebab-case\" style.",5,null],[13,"ScreamingKebabCase","","Rename direct children to \"SCREAMING-KEBAB-CASE\" style.",5,null],[4,"EnumTag","","Styles of representing an enum.",null,null],[13,"External","","The default.",6,null],[13,"Internal","","`#[serde(tag = \"type\")]`",6,null],[12,"tag","serde_derive_internals::attr::EnumTag","",6,null],[13,"Adjacent","serde_derive_internals::attr","`#[serde(tag = \"t\", content = \"c\")]`",6,null],[12,"tag","serde_derive_internals::attr::EnumTag","",6,null],[12,"content","","",6,null],[13,"None","serde_derive_internals::attr","`#[serde(untagged)]`",6,null],[4,"Identifier","","Whether this enum represents the fields of a struct or the variants of an enum.",null,null],[13,"No","","It does not.",7,null],[13,"Field","","This enum represents the fields of a struct. All of the variants must be unit variants, except possibly one which is annotated with `#[serde(other)]` and is a newtype variant.",7,null],[13,"Variant","","This enum represents the variants of an enum. All of the variants must be unit variants.",7,null],[4,"Default","","Represents the default to use for a field when deserializing.",null,null],[13,"None","","Field must always be specified because it does not have a default.",8,null],[13,"Default","","The default is given by `std::default::Default::default()`.",8,null],[13,"Path","","The default is given by this function.",8,null],[5,"get_serde_meta_items","","",null,{"inputs":[{"name":"attribute"}],"output":{"generics":["vec"],"name":"option"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize_name","","Return the container name for the container when serializing.",9,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"deserialize_name","","Return the container name for the container when deserializing.",9,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"identifier"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_some","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from_ast","","Extract out the `#[serde(...)]` attributes from an item.",10,{"inputs":[{"name":"ctxt"},{"name":"deriveinput"}],"output":{"name":"self"}}],[11,"name","","",10,{"inputs":[{"name":"self"}],"output":{"name":"name"}}],[11,"rename_all","","",10,{"inputs":[{"name":"self"}],"output":{"name":"renamerule"}}],[11,"deny_unknown_fields","","",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"default","","",10,{"inputs":[{"name":"self"}],"output":{"name":"default"}}],[11,"ser_bound","","",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"de_bound","","",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"tag","","",10,{"inputs":[{"name":"self"}],"output":{"name":"enumtag"}}],[11,"from_type","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["ty"],"name":"option"}}],[11,"into_type","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["ty"],"name":"option"}}],[11,"remote","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["path"],"name":"option"}}],[11,"identifier","","",10,{"inputs":[{"name":"self"}],"output":{"name":"identifier"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_ast","","",11,{"inputs":[{"name":"ctxt"},{"name":"variant"}],"output":{"name":"self"}}],[11,"name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"name"}}],[11,"rename_by_rule","","",11,{"inputs":[{"name":"self"},{"name":"renamerule"}],"output":null}],[11,"rename_all","","",11,{"inputs":[{"name":"self"}],"output":{"name":"renamerule"}}],[11,"skip_deserializing","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"skip_serializing","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"other","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"serialize_with","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["path"],"name":"option"}}],[11,"deserialize_with","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["path"],"name":"option"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"default"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"default"}],"output":{"name":"bool"}}],[11,"from_ast","","Extract out the `#[serde(...)]` attributes from a struct field.",12,{"inputs":[{"name":"ctxt"},{"name":"usize"},{"name":"field"},{"generics":["variant"],"name":"option"},{"name":"default"}],"output":{"name":"self"}}],[11,"name","","",12,{"inputs":[{"name":"self"}],"output":{"name":"name"}}],[11,"rename_by_rule","","",12,{"inputs":[{"name":"self"},{"name":"renamerule"}],"output":null}],[11,"skip_serializing","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"skip_deserializing","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"skip_serializing_if","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["path"],"name":"option"}}],[11,"default","","",12,{"inputs":[{"name":"self"}],"output":{"name":"default"}}],[11,"serialize_with","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["path"],"name":"option"}}],[11,"deserialize_with","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["path"],"name":"option"}}],[11,"ser_bound","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"de_bound","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"borrowed_lifetimes","","",12,{"inputs":[{"name":"self"}],"output":{"name":"btreeset"}}],[11,"getter","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["path"],"name":"option"}}],[11,"default","serde_derive_internals","",13,{"inputs":[],"output":{"name":"ctxt"}}],[11,"new","","",13,{"inputs":[],"output":{"name":"self"}}],[11,"error","","",13,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"check","","",13,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"result"}}],[11,"drop","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","serde_derive_internals::attr","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"renamerule"}],"output":{"name":"bool"}}],[11,"apply_to_variant","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"string"}}],[11,"apply_to_field","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"string"}}],[11,"from_str","","",5,{"inputs":[{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"Container"],[3,"Variant"],[3,"Field"],[4,"Body"],[4,"Style"],[4,"RenameRule"],[4,"EnumTag"],[4,"Identifier"],[4,"Default"],[3,"Name"],[3,"Container"],[3,"Variant"],[3,"Field"],[3,"Ctxt"]]};
searchIndex["shared_library"] = {"doc":"","items":[[4,"LoadingError","shared_library","Error that can happen while loading the shared library.",null,null],[13,"LibraryNotFound","","",0,null],[12,"descr","shared_library::LoadingError","",0,null],[13,"SymbolNotFound","shared_library","One of the symbols could not be found in the library.",0,null],[12,"symbol","shared_library::LoadingError","The symbol.",0,null],[0,"dynamic_library","shared_library","Dynamic library facilities.",null,null],[3,"DynamicLibrary","shared_library::dynamic_library","",null,null],[11,"drop","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"open","","Lazily open a dynamic library. When passed None it gives a handle to the calling process",1,{"inputs":[{"generics":["path"],"name":"option"}],"output":{"generics":["dynamiclibrary","string"],"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",1,{"inputs":[{"name":"path"}],"output":null}],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an environment variable for this platforms dylib search path.",1,null],[11,"envvar","","Returns the environment variable for this process's dynamic library search path",1,{"inputs":[],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this process",1,{"inputs":[],"output":{"generics":["pathbuf"],"name":"vec"}}],[11,"symbol","","Access the value at the symbol of the dynamic library",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["string"],"name":"result"}}],[11,"fmt","shared_library","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"loadingerror"}}],[14,"shared_library","","",null,null]],"paths":[[4,"LoadingError"],[3,"DynamicLibrary"]]};
searchIndex["shred"] = {"doc":"Shared resource dispatcher","items":[[3,"Dispatcher","shred","The dispatcher struct, allowing systems to be executed in parallel.",null,null],[3,"DispatcherBuilder","","Builder for the [`Dispatcher`].",null,null],[3,"Par","","Runs two tasks in parallel. These two tasks are called `head` and `tail` in the following documentation.",null,null],[3,"ParSeq","","A dispatcher intended to be used with `Par` and `Seq`  structures.",null,null],[3,"Seq","","Runs two tasks sequentially. These two tasks are called `head` and `tail` in the following documentation.",null,null],[3,"AsyncDispatcher","","Like, `Dispatcher` but works asynchronously.",null,null],[3,"Fetch","","Return value of [`Resources::fetch`].",null,null],[3,"FetchId","","Return value of [`Resources::fetch_id`].",null,null],[3,"FetchIdMut","","Return value of [`Resources::fetch_id_mut`].",null,null],[3,"FetchMut","","Return value of [`Resources::fetch_mut`].",null,null],[3,"ResourceId","","The id of a [`Resource`], which is a tuple struct with a type id and an additional resource id (represented with a `usize`).",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[3,"Resources","","A resource container, which provides methods to access to the contained resources.",null,null],[4,"RunningTime","","",null,null],[13,"VeryShort","","",1,null],[13,"Short","","",1,null],[13,"Average","","",1,null],[13,"Long","","",1,null],[13,"VeryLong","","",1,null],[11,"dispatch","","Dispatches the systems asynchronously. Does not execute thread local systems.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"wait","","Waits for all the asynchronously dispatched systems to finish and executes thread local systems (if there are any).",2,{"inputs":[{"name":"self"}],"output":null}],[11,"wait_without_tl","","Waits for all the asynchronously dispatched systems to finish without executing thread local systems.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"is_running","","Checks if any of the asynchronously dispatched systems are running.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"dispatch_thread_local","","Dispatch only thread local systems sequentially.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"mut_res","","Returns the resources.",2,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"dispatcherbuilder"}}],[11,"new","","Creates a new `DispatcherBuilder` by using the `Default` implementation.",3,{"inputs":[],"output":{"name":"self"}}],[11,"add","","Adds a new system with a given name and a list of dependencies. Please note that the dependency should be added before you add the depending system.",3,null],[11,"add_thread_local","","Adds a new thread local system.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"add_barrier","","Inserts a barrier which assures that all systems added before the barrier are executed before the ones after this barrier.",3,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"with_pool","","Attach a rayon thread pool to the builder and use that instead of creating one.",3,{"inputs":[{"name":"self"},{"generics":["threadpool"],"name":"arc"}],"output":{"name":"self"}}],[11,"build","","Builds the `Dispatcher`.",3,{"inputs":[{"name":"self"}],"output":{"name":"dispatcher"}}],[11,"build_async","","Builds an async dispatcher.",3,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"asyncdispatcher"}}],[11,"dispatch","","Dispatch all the systems with given resources and context and then run thread local systems.",4,{"inputs":[{"name":"self"},{"name":"resources"}],"output":null}],[11,"dispatch_par","","Dispatches the systems (except thread local systems) in parallel given the resources to operate on.",4,{"inputs":[{"name":"self"},{"name":"resources"}],"output":null}],[11,"dispatch_seq","","Dispatches the systems (except thread local systems) sequentially.",4,{"inputs":[{"name":"self"},{"name":"resources"}],"output":null}],[11,"dispatch_thread_local","","Dispatch only thread local systems sequentially.",4,{"inputs":[{"name":"self"},{"name":"resources"}],"output":null}],[11,"new","","Creates a new `Par` struct, with the tail being a no-op.",5,{"inputs":[{"name":"h"}],"output":{"name":"self"}}],[11,"with","","Adds `sys` as the second job and returns a new `Par` struct with the previous struct as head and a no-op tail.",5,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["par","nil"],"name":"par"}}],[11,"new","","Creates a new `ParSeq` dispatcher. `run` is usually created by using the `par!` / `seq!` macros.",6,{"inputs":[{"name":"t"},{"name":"p"}],"output":{"name":"self"}}],[11,"dispatch","","Dispatches the systems using `res`. This doesn't call any virtual functions.",6,{"inputs":[{"name":"self"},{"name":"resources"}],"output":null}],[11,"new","","Creates a new `Seq` struct, with the tail being a no-op.",7,{"inputs":[{"name":"h"}],"output":{"name":"self"}}],[11,"with","","Adds `sys` as the second job and returns a new `Seq` struct with the previous struct as head and a no-op tail.",7,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["seq","nil"],"name":"seq"}}],[11,"deref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fetch","","",8,{"inputs":[{"name":"resources"},{"name":"usize"}],"output":{"name":"self"}}],[11,"reads","","",8,{"inputs":[{"name":"usize"}],"output":{"generics":["resourceid"],"name":"vec"}}],[11,"writes","","",8,{"inputs":[{"name":"usize"}],"output":{"generics":["resourceid"],"name":"vec"}}],[11,"deref","","",9,{"inputs":[{"name":"self"}],"output":{"name":"resource"}}],[11,"deref","","",10,{"inputs":[{"name":"self"}],"output":{"name":"resource"}}],[11,"deref_mut","","",10,{"inputs":[{"name":"self"}],"output":{"name":"resource"}}],[11,"deref","","",11,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",11,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fetch","","",11,{"inputs":[{"name":"resources"},{"name":"usize"}],"output":{"name":"self"}}],[11,"reads","","",11,{"inputs":[{"name":"usize"}],"output":{"generics":["resourceid"],"name":"vec"}}],[11,"writes","","",11,{"inputs":[{"name":"usize"}],"output":{"generics":["resourceid"],"name":"vec"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"resourceid"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"resourceid"}],"output":{"name":"ordering"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"resourceid"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"resourceid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"resourceid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"resourceid"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"resourceid"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"resourceid"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"resourceid"}],"output":{"name":"bool"}}],[11,"new","","Creates a new resource id from a given type with the default extra id.",0,{"inputs":[],"output":{"name":"self"}}],[11,"new_with_id","","Creates a new resource id from a given type and an additional id.",0,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"default","","",12,{"inputs":[],"output":{"name":"resources"}}],[11,"new","","Creates a new, empty resource container.",12,{"inputs":[],"output":{"name":"self"}}],[11,"add","","Adds a new resource to this container.",12,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"add_with_id","","Like `add()`, but allows specifying and id while `add()` assumes `0`.",12,{"inputs":[{"name":"self"},{"name":"r"},{"name":"usize"}],"output":null}],[11,"has_value","","Returns true if the specified type / id combination is registered.",12,{"inputs":[{"name":"self"},{"name":"resourceid"}],"output":{"name":"bool"}}],[11,"entry","","Returns an entry for the resource with type `R` and id 0.",12,{"inputs":[{"name":"self"}],"output":{"name":"entry"}}],[11,"fetch","","Fetches the resource with the specified type `T`. The id is useful if you don't define your resources in Rust or you want a more dynamic resource handling. By default, the `#[derive(SystemData)]` passes `()` as id.",12,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"fetch"}}],[11,"try_fetch","","Like `fetch`, but returns an `Option` instead of panicking in the case of the resource being accessed mutably.",12,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["fetch"],"name":"option"}}],[11,"fetch_mut","","Fetches the resource with the specified type `T` mutably.",12,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"fetchmut"}}],[11,"try_fetch_mut","","Like `fetch_mut`, but returns an `Option` instead of panicking in the case of the resource being accessed mutably.",12,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["fetchmut"],"name":"option"}}],[11,"fetch_id","","Fetches the resource with the specified type id.",12,{"inputs":[{"name":"self"},{"name":"typeid"},{"name":"usize"}],"output":{"name":"fetchid"}}],[11,"try_fetch_id","","Like `fetch_id`, but returns an `Option` rather than panicking.",12,{"inputs":[{"name":"self"},{"name":"typeid"},{"name":"usize"}],"output":{"generics":["fetchid"],"name":"option"}}],[11,"fetch_id_mut","","Fetches the resource with the specified type id mutably.",12,{"inputs":[{"name":"self"},{"name":"typeid"},{"name":"usize"}],"output":{"name":"fetchidmut"}}],[11,"try_fetch_id_mut","","Like `fetch_id_mut`, but returns an `Option` rather than panicking.",12,{"inputs":[{"name":"self"},{"name":"typeid"},{"name":"usize"}],"output":{"generics":["fetchidmut"],"name":"option"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"runningtime"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Resource","","A resource defines a set of data which can only be accessed according to Rust's typical borrowing model (one writer xor multiple readers).",null,null],[8,"RunNow","","Trait for fetching data and running systems. Automatically implemented for systems.",null,null],[10,"run_now","","Runs the system now.",13,{"inputs":[{"name":"self"},{"name":"resources"}],"output":null}],[8,"System","","A `System`, executed with a set of required [`Resource`]s.",null,null],[16,"SystemData","","The resource bundle required to execute this system.",14,null],[10,"run","","Executes the system with the required system data.",14,null],[11,"running_time","","Returns a hint how long the system needs for running. This is used to optimize the way they're executed (might allow more parallelization).",14,{"inputs":[{"name":"self"}],"output":{"name":"runningtime"}}],[8,"SystemData","","A struct implementing system data indicates that it bundles some resources which are required for the execution.",null,null],[10,"fetch","","Creates a new resource bundle by fetching the required resources from the [`Resources`] struct.",15,{"inputs":[{"name":"resources"},{"name":"usize"}],"output":{"name":"self"}}],[10,"reads","","A list of [`ResourceId`]s the bundle needs read access to in order to build the target resource bundle.",15,{"inputs":[{"name":"usize"}],"output":{"generics":["resourceid"],"name":"vec"}}],[10,"writes","","A list of [`ResourceId`]s the bundle needs write access to in order to build the target resource bundle.",15,{"inputs":[{"name":"usize"}],"output":{"generics":["resourceid"],"name":"vec"}}],[14,"par","","The `par!` macro may be used to easily create a structure which runs things in parallel.",null,null],[14,"seq","","The `seq!` macro may be used to easily create a structure which runs things sequentially.",null,null],[11,"is","","Returns true if the boxed type is the same as `T`",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or `None` if it isn't.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"downcast_ref_unchecked","","Returns a reference to the boxed value, blindly assuming it to be of type `T`. If you are not absolutely certain of `T`, you must not call this.",16,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or `None` if it isn't.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"downcast_mut_unchecked","","Returns a mutable reference to the boxed value, blindly assuming it to be of type `T`. If you are not absolutely certain of `T`, you must not call this.",16,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"downcast","","Returns the boxed value if it is of type `T`, or `Err(Self)` if it isn't.",16,{"inputs":[{"name":"box"}],"output":{"generics":["box","box"],"name":"result"}}],[11,"downcast_unchecked","","Returns the boxed value, blindly assuming it to be of type `T`. If you are not absolutely certain of `T`, you must not call this.",16,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"running_time","","Returns a hint how long the system needs for running. This is used to optimize the way they're executed (might allow more parallelization).",14,{"inputs":[{"name":"self"}],"output":{"name":"runningtime"}}]],"paths":[[3,"ResourceId"],[4,"RunningTime"],[3,"AsyncDispatcher"],[3,"DispatcherBuilder"],[3,"Dispatcher"],[3,"Par"],[3,"ParSeq"],[3,"Seq"],[3,"Fetch"],[3,"FetchId"],[3,"FetchIdMut"],[3,"FetchMut"],[3,"Resources"],[8,"RunNow"],[8,"System"],[8,"SystemData"],[8,"Resource"]]};
searchIndex["shred_derive"] = {"doc":"","items":[[5,"system_data","shred_derive","Used to `#[derive]` the trait `SystemData`.",null,{"inputs":[{"name":"tokenstream"}],"output":{"name":"tokenstream"}}]],"paths":[]};
searchIndex["shrev"] = {"doc":"Event channel, pull based, that use a ringbuffer for internal storage, to make it possible to do immutable reads.","items":[[3,"ReaderId","shrev","The reader id is used by readers to tell the storage where the last read ended.",null,null],[3,"EventIterator","","Iterator over a slice of data in `RingBufferStorage`.",null,null],[3,"EventChannel","","Event channel",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new reader id",0,{"inputs":[{"name":"usize"},{"name":"usize"},{"generics":["atomicbool"],"name":"arc"}],"output":{"name":"readerid"}}],[11,"drop","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"Event","","Marker trait for data to use with the EventChannel.",null,null],[11,"new","","Create a new EventChannel with a default size of 200",2,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Create a new EventChannel with the given starting capacity.",2,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"register_reader","","Register a reader.",2,{"inputs":[{"name":"self"}],"output":{"name":"readerid"}}],[11,"slice_write","","Write a slice of events into storage",2,null],[11,"iter_write","","Write an iterator of events into storage",2,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"drain_vec_write","","Drain a vector of events into storage.",2,{"inputs":[{"name":"self"},{"name":"vec"}],"output":null}],[11,"single_write","","Write a single event into storage.",2,{"inputs":[{"name":"self"},{"name":"e"}],"output":null}],[11,"read","","Read any events that have been written to storage since the readers last read.",2,{"inputs":[{"name":"self"},{"name":"readerid"}],"output":{"name":"eventiterator"}}]],"paths":[[3,"ReaderId"],[3,"EventIterator"],[3,"EventChannel"]]};
searchIndex["smallvec"] = {"doc":"Small vectors in various sizes. These store a certain number of elements inline, and fall back to the heap for larger allocations.  This can be a useful optimization for improving cache locality and reducing allocator traffic for workloads that fit within the inline buffer.","items":[[3,"Drain","smallvec","",null,null],[3,"SmallVec","","A `Vec`-like container that can store a small number of elements inline.",null,null],[3,"IntoIter","","",null,null],[6,"SmallVec1","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec2","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec4","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec8","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec16","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec24","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec32","","Deprecated alias to ease transition from an earlier version.",null,null],[8,"VecLike","","Common operations implemented by both `Vec` and `SmallVec`.",null,null],[10,"push","","Append an element to the vector.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[8,"ExtendFromSlice","","Trait to be implemented by a collection that can be extended from a slice",null,null],[10,"extend_from_slice","","Extends a collection from a slice of its element type",1,null],[8,"Array","","Types that can be used as the backing store for a SmallVec",null,null],[16,"Item","","",2,null],[10,"size","","",2,{"inputs":[],"output":{"name":"usize"}}],[10,"ptr","","",2,null],[10,"ptr_mut","","",2,null],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",3,null],[11,"next_back","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"drop","","",3,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Construct an empty vector",4,{"inputs":[],"output":{"name":"smallvec"}}],[11,"with_capacity","","Construct an empty vector with enough capacity pre-allocated to store at least `n` elements.",4,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from_vec","","Construct a new `SmallVec` from a `Vec<A::Item>` without copying elements.",4,{"inputs":[{"name":"vec"}],"output":{"name":"smallvec"}}],[11,"from_buf","","Constructs a new `SmallVec` on the stack from an `A` without copying elements.",4,{"inputs":[{"name":"a"}],"output":{"name":"smallvec"}}],[11,"set_len","","Sets the length of a vector.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"inline_size","","The maximum number of elements this vector can hold inline",4,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"len","","The number of elements stored in the vector",4,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector is empty",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"capacity","","The number of items the vector can hold without reallocating",4,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"spilled","","Returns `true` if the data has spilled into a separate heap-allocated buffer.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"drain","","Empty the vector and return an iterator over its former contents.",4,{"inputs":[{"name":"self"}],"output":{"name":"drain"}}],[11,"push","","Append an item to the vector.",4,null],[11,"push_all_move","","Append elements from an iterator.",4,{"inputs":[{"name":"self"},{"name":"v"}],"output":null}],[11,"pop","","Remove an item from the end of the vector and return it, or None if empty.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"grow","","Re-allocate to set the capacity to `new_cap`.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"reserve","","Reserve capacity for `additional` more elements to be inserted.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"reserve_exact","","Reserve the minumum capacity for `additional` more elements to be inserted.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",4,{"inputs":[{"name":"self"}],"output":null}],[11,"truncate","","Shorten the vector, keeping the first `len` elements and dropping the rest.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"as_slice","","Extracts a slice containing the entire vector.",4,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",4,null],[11,"swap_remove","","Remove the element at position `index`, replacing it with the last element.",4,null],[11,"clear","","Remove all elements from the vector.",4,{"inputs":[{"name":"self"}],"output":null}],[11,"remove","","Remove and return the element at position `index`, shifting all elements after it to the left.",4,null],[11,"insert","","Insert an element at position `index`, shifting all elements after it to the right.",4,null],[11,"insert_many","","",4,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"i"}],"output":null}],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the SmallVec has already spilled onto the heap.",4,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"retain","","Retains only the elements specified by the predicate.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"from_slice","","",4,null],[11,"insert_from_slice","","",4,null],[11,"extend_from_slice","","",4,null],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[11,"as_ref","","",4,null],[11,"as_mut","","",4,null],[11,"borrow","","",4,null],[11,"borrow_mut","","",4,null],[11,"write","","",4,null],[11,"write_all","","",4,null],[11,"flush","","",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize","","",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",4,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"from","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"extend_from_slice","","",4,null],[11,"push","","",4,null],[11,"from_iter","","",4,{"inputs":[{"name":"i"}],"output":{"name":"smallvec"}}],[11,"extend","","",4,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"smallvec"}}],[11,"drop","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"smallvec"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"smallvec"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"smallvec"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"smallvec"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"smallvec"}],"output":{"name":"ordering"}}],[11,"hash","","",4,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"drop","","",5,{"inputs":[{"name":"self"}],"output":null}],[11,"next","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",5,null],[11,"next_back","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_iter","","",4,null]],"paths":[[8,"VecLike"],[8,"ExtendFromSlice"],[8,"Array"],[3,"Drain"],[3,"SmallVec"],[3,"IntoIter"]]};
searchIndex["specs"] = {"doc":"SPECS Parallel ECS","items":[[3,"Dispatcher","specs","The dispatcher struct, allowing systems to be executed in parallel.",null,null],[3,"DispatcherBuilder","","Builder for the [`Dispatcher`].",null,null],[3,"Fetch","","Return value of [`Resources::fetch`].",null,null],[3,"FetchId","","Return value of [`Resources::fetch_id`].",null,null],[3,"FetchIdMut","","Return value of [`Resources::fetch_id_mut`].",null,null],[3,"FetchMut","","Return value of [`Resources::fetch_mut`].",null,null],[8,"RunNow","","Trait for fetching data and running systems. Automatically implemented for systems.",null,null],[10,"run_now","","Runs the system now.",0,null],[4,"RunningTime","","",null,null],[13,"VeryShort","","",1,null],[13,"Short","","",1,null],[13,"Average","","",1,null],[13,"Long","","",1,null],[13,"VeryLong","","",1,null],[8,"System","","A `System`, executed with a set of required [`Resource`]s.",null,null],[16,"SystemData","","The resource bundle required to execute this system.",2,null],[10,"run","","Executes the system with the required system data.",2,null],[11,"running_time","","Returns a hint how long the system needs for running. This is used to optimize the way they're executed (might allow more parallelization).",2,{"inputs":[{"name":"self"}],"output":{"name":"runningtime"}}],[8,"SystemData","","A struct implementing system data indicates that it bundles some resources which are required for the execution.",null,null],[10,"fetch","","Creates a new resource bundle by fetching the required resources from the [`Resources`] struct.",3,{"inputs":[{"name":"resources"},{"name":"usize"}],"output":{"name":"self"}}],[10,"reads","","A list of [`ResourceId`]s the bundle needs read access to in order to build the target resource bundle.",3,{"inputs":[{"name":"usize"}],"output":{"generics":["resourceid"],"name":"vec"}}],[10,"writes","","A list of [`ResourceId`]s the bundle needs write access to in order to build the target resource bundle.",3,{"inputs":[{"name":"usize"}],"output":{"generics":["resourceid"],"name":"vec"}}],[3,"AsyncDispatcher","","Like, `Dispatcher` but works asynchronously.",null,null],[3,"JoinIter","","`JoinIter` is an `Iterator` over a group of `Storages`.",null,null],[3,"JoinParIter","","`JoinParIter` is a `ParallelIterator` over a group of `Storages`.",null,null],[3,"BTreeStorage","","BTreeMap-based storage.",null,null],[3,"DenseVecStorage","","Dense vector storage. Has a redirection 2-way table between entities and components, allowing to leave no gaps within the data.",null,null],[3,"Entry","","An entry to a storage.",null,null],[3,"FlaggedStorage","","Wrapper storage that stores modifications to components in a bitset.",null,null],[3,"HashMapStorage","","HashMap-based storage. Best suited for rare components.",null,null],[3,"MaskedStorage","","The `UnprotectedStorage` together with the `BitSet` that knows about which elements are stored, and which are not.",null,null],[3,"NullStorage","","A null storage type, used for cases where the component doesn't contain any data and instead works as a simple flag.",null,null],[3,"RestrictedStorage","","Similar to a `MaskedStorage` and a `Storage` combined, but restricts usage to only getting and modifying the components. That means nothing that would modify the inner bitset so the iteration cannot be invalidated. For example, no insertion or removal is allowed.",null,null],[3,"Storage","","A wrapper around the masked storage and the generations vector. Can be used for safe lookup of components, insertions and removes. This is what `World::read/write` fetches for the user.",null,null],[3,"VecStorage","","Vector storage. Uses a simple `Vec`. Supposed to have maximum performance for the components mostly present in entities.",null,null],[3,"CreateIter","","An iterator for entity creation. Please note that you have to consume it because iterators are lazy.",null,null],[3,"CreateIterAtomic","","An iterator for entity creation. Please note that you have to consume it because iterators are lazy.",null,null],[3,"EntitiesRes","","The entities of this ECS. This is a resource, stored in the `World`. If you just want to access it in your system, you can also use the `Entities` type def.",null,null],[3,"Entity","","`Entity` type, as seen by the user.",null,null],[3,"EntityBuilder","","The entity builder, allowing to build an entity together with its components.",null,null],[3,"Generation","","Index generation. When a new entity is placed at an old index, it bumps the `Generation` by 1. This allows to avoid using components from the entities that were deleted.",null,null],[3,"LazyUpdate","","Lazy updates can be used for world updates that need to borrow a lot of resources and as such should better be done at the end. They work lazily in the sense that they are dispatched when calling `world.maintain()`. Please note that the provided methods take `&self` so there's no need to fetch `LazyUpdate` mutably. This resource is added to the world by default.",null,null],[3,"World","","The `World` struct contains the component storages and other resources.",null,null],[12,"res","","The resources used for this world.",4,null],[4,"InsertResult","","The status of an `insert()`ion into a storage.",null,null],[13,"Inserted","","The value was inserted and there was no value before",5,null],[13,"Updated","","The value was updated an already inserted value the value returned is the old value",5,null],[13,"EntityIsDead","","The value failed to insert because the entity was invalid",5,null],[4,"NormalRestriction","","Specifies that the `RestrictedStorage` cannot run in parallel.",null,null],[4,"ParallelRestriction","","Specifies that the `RestrictedStorage` can run in parallel.",null,null],[0,"common","","Common functionality you might need when using Specs.",null,null],[3,"DrainErrors","specs::common","A draining iterator for `Errors`. This is the return value of `Errors::drain`.",null,null],[3,"Errors","","A resource you can use to store errors that occurred outside of the ECS but were catched inside, therefore should be handled by the user.",null,null],[3,"Merge","","A system which merges `Ready` futures into the persistent storage. Please note that your `World` has to contain a component storage for `F` and `F::Item`.",null,null],[6,"BoxedFuture","","A boxed, thread-safe future with `T` as item and `BoxedErr` as error type.",null,null],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new instance of `Errors`.",7,{"inputs":[],"output":{"name":"self"}}],[11,"add","","Add an error to the error collection.",7,{"inputs":[{"name":"self"},{"name":"boxederr"}],"output":null}],[11,"execute","","A convenience method which allows nicer error handling.",7,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"has_error","","Checks if the queue contains at least one error.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"pop_err","","Removes the first error from the queue.",7,{"inputs":[{"name":"self"}],"output":{"generics":["boxederr"],"name":"option"}}],[11,"drain","","Returns a draining iterator, removing elements on each call to `Iterator::next`.",7,{"inputs":[{"name":"self"}],"output":{"name":"drainerrors"}}],[11,"collect","","Collect all errors into a `Vec`.",7,{"inputs":[{"name":"self"}],"output":{"generics":["boxederr"],"name":"vec"}}],[11,"print_and_exit","","Prints all errors and exits in case there's been an error. Useful for debugging.",7,{"inputs":[{"name":"self"}],"output":null}],[11,"default","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new merge system.",8,{"inputs":[],"output":{"name":"self"}}],[11,"run","","",8,null],[11,"running_time","","",8,{"inputs":[{"name":"self"}],"output":{"name":"runningtime"}}],[0,"error","specs","Specs error module.",null,null],[3,"BoxedErr","specs::error","A boxed error implementing `Debug`, `Display` and `Error`.",null,null],[12,"0","","",9,null],[3,"WrongGeneration","","Wrong generation error.",null,null],[12,"action","","The action that failed because of the wrong generation.",10,null],[12,"actual_gen","","The actual generation of this id.",10,null],[12,"entity","","The entity that has been passed, containing the id and the invalid generation.",10,null],[4,"Error","","The Specs error type. This is an enum which is able to represent all error types of this library.",null,null],[13,"Custom","","A custom, boxed error.",11,null],[13,"WrongGeneration","","Wrong generation error.",11,null],[11,"new","","Creates a new boxed error.",9,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"as_ref","","",9,{"inputs":[{"name":"self"}],"output":{"name":"stderror"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"description","","",9,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"from","","",11,{"inputs":[{"name":"wronggeneration"}],"output":{"name":"self"}}],[11,"description","","",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["stderror"],"name":"option"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"description","","",10,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"new","specs","Create a new join iterator.",12,{"inputs":[{"name":"j"}],"output":{"name":"self"}}],[11,"next","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"drive_unindexed","","",13,null],[11,"get","","Attempts to get the component related to the entity.",14,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"option"}}],[11,"get_unchecked","","Gets the component related to the current entry without checking whether the storage has it or not.",14,{"inputs":[{"name":"self"},{"name":"entry"}],"output":{"name":"t"}}],[11,"get_mut_unchecked","","Gets the component related to the current entry without checking whether the storage has it or not.",14,{"inputs":[{"name":"self"},{"name":"entry"}],"output":{"name":"t"}}],[11,"get_mut","","Attempts to get the component related to the entity mutably.",14,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"option"}}],[11,"restrict","","Builds a mutable `RestrictedStorage` out of a `Storage`. Allows restricted access to the inner components without allowing invalidating the bitset for iteration in `Join`.",15,{"inputs":[{"name":"self"}],"output":{"generics":["bitset","normalrestriction"],"name":"restrictedstorage"}}],[11,"par_restrict","","Builds a mutable, parallel `RestrictedStorage`, does not allow mutably getting other components aside from the current iteration.",15,{"inputs":[{"name":"self"}],"output":{"generics":["bitset","parallelrestriction"],"name":"restrictedstorage"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",17,{"inputs":[],"output":{"name":"self"}}],[11,"clean","","",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"get","","",17,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"c"}}],[11,"get_mut","","",17,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"c"}}],[11,"insert","","",17,{"inputs":[{"name":"self"},{"name":"index"},{"name":"c"}],"output":null}],[11,"remove","","",17,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"c"}}],[11,"flagged","","Whether the component that belongs to the given entity was flagged or not.",17,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"bool"}}],[11,"clear_flags","","All components will be cleared of being flagged.",17,{"inputs":[{"name":"self"}],"output":null}],[11,"unflag","","Removes the flag for the component of the given entity.",17,{"inputs":[{"name":"self"},{"name":"e"}],"output":null}],[11,"flag","","Flags a single component.",17,{"inputs":[{"name":"self"},{"name":"e"}],"output":null}],[11,"default","","",18,{"inputs":[],"output":{"name":"self"}}],[11,"clean","","",18,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"get","","",18,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[11,"get_mut","","",18,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[11,"insert","","",18,{"inputs":[{"name":"self"},{"name":"index"},{"name":"t"}],"output":null}],[11,"remove","","",18,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[11,"default","","",19,{"inputs":[],"output":{"name":"self"}}],[11,"clean","","",19,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"get","","",19,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[11,"get_mut","","",19,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[11,"insert","","",19,{"inputs":[{"name":"self"},{"name":"index"},{"name":"t"}],"output":null}],[11,"remove","","",19,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[11,"default","","",20,{"inputs":[],"output":{"name":"self"}}],[11,"clean","","",20,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"get","","",20,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[11,"get_mut","","",20,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[11,"insert","","",20,{"inputs":[{"name":"self"},{"name":"index"},{"name":"t"}],"output":null}],[11,"remove","","",20,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[11,"clean","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"get","","",21,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[11,"get_mut","","",21,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[11,"insert","","",21,{"inputs":[{"name":"self"},{"name":"index"},{"name":"t"}],"output":null}],[11,"remove","","",21,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[11,"default","","",21,{"inputs":[],"output":{"name":"self"}}],[11,"default","","",22,{"inputs":[],"output":{"name":"self"}}],[11,"clean","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"get","","",22,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[11,"get_mut","","",22,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[11,"insert","","",22,{"inputs":[{"name":"self"},{"name":"index"},{"name":"t"}],"output":null}],[11,"remove","","",22,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"insertresult"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"insertresult"}],"output":{"name":"bool"}}],[11,"default","","",23,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new `MaskedStorage`. This is called when you register a new component type within the world.",23,{"inputs":[],"output":{"name":"maskedstorage"}}],[11,"clear","","Clear the contents of this storage.",23,{"inputs":[{"name":"self"}],"output":null}],[11,"remove","","Remove an element by a given index.",23,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"option"}}],[11,"drop","","",23,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Create a new `Storage`",15,{"inputs":[{"generics":["entitiesres"],"name":"fetch"},{"name":"d"}],"output":{"name":"storage"}}],[11,"get","","Tries to read the data associated with an `Entity`.",15,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"option"}}],[11,"check","","Returns a copy of the `BitSet` of the storage. This allows you to do some methods on the actual storage without worrying about borrowing semantics.",15,{"inputs":[{"name":"self"}],"output":{"name":"bitset"}}],[11,"get_mut","","Tries to mutate the data associated with an `Entity`.",15,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"option"}}],[11,"insert","","Inserts new data for a given `Entity`. Returns the result of the operation as a `InsertResult<T>`",15,{"inputs":[{"name":"self"},{"name":"entity"},{"name":"t"}],"output":{"name":"insertresult"}}],[11,"remove","","Removes the data associated with an `Entity`.",15,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"option"}}],[11,"clear","","Clears the contents of the storage.",15,{"inputs":[{"name":"self"}],"output":null}],[11,"drain","","Creates a draining storage wrapper which can be `.join`ed to get a draining iterator.",15,{"inputs":[{"name":"self"}],"output":{"name":"drain"}}],[11,"next","","",24,{"inputs":[{"name":"self"}],"output":{"generics":["entity"],"name":"option"}}],[11,"next","","",25,{"inputs":[{"name":"self"}],"output":{"generics":["entity"],"name":"option"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"entity"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",26,null],[11,"cmp","","",26,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"ordering"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",26,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"bool"}}],[11,"le","","",26,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"bool"}}],[11,"gt","","",26,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"bool"}}],[11,"ge","","",26,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"bool"}}],[11,"id","","Returns the index of the `Entity`.",26,{"inputs":[{"name":"self"}],"output":{"name":"index"}}],[11,"gen","","Returns the `Generation` of the `Entity`.",26,{"inputs":[{"name":"self"}],"output":{"name":"generation"}}],[11,"with","","Appends a component with the default component id.",27,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"with_id","","Appends a component with a component id.",27,{"inputs":[{"name":"self"},{"name":"t"},{"name":"usize"}],"output":{"name":"self"}}],[11,"build","","Finishes the building and returns the entity.",27,{"inputs":[{"name":"self"}],"output":{"name":"entity"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",28,{"inputs":[],"output":{"name":"entitiesres"}}],[11,"create","","Creates a new entity atomically. This will be persistent as soon as you call `World::maintain`.",28,{"inputs":[{"name":"self"}],"output":{"name":"entity"}}],[11,"create_iter","","Returns an iterator which creates new entities atomically. They will be persistent as soon as you call `World::maintain`.",28,{"inputs":[{"name":"self"}],"output":{"name":"createiteratomic"}}],[11,"delete","","Deletes an entity atomically. The associated components will be deleted as soon as you call `World::maintain`.",28,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"generics":["wronggeneration"],"name":"result"}}],[11,"is_alive","","Returns `true` if the specified entity is alive.",28,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"generation"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",29,null],[11,"cmp","","",29,{"inputs":[{"name":"self"},{"name":"generation"}],"output":{"name":"ordering"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"generation"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"generation"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",29,{"inputs":[{"name":"self"},{"name":"generation"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",29,{"inputs":[{"name":"self"},{"name":"generation"}],"output":{"name":"bool"}}],[11,"le","","",29,{"inputs":[{"name":"self"},{"name":"generation"}],"output":{"name":"bool"}}],[11,"gt","","",29,{"inputs":[{"name":"self"},{"name":"generation"}],"output":{"name":"bool"}}],[11,"ge","","",29,{"inputs":[{"name":"self"},{"name":"generation"}],"output":{"name":"bool"}}],[11,"id","","Returns the id of the generation.",29,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_alive","","Returns `true` if entities of this `Generation` are alive.",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"default","","",30,{"inputs":[],"output":{"name":"lazyupdate"}}],[11,"insert","","Lazily inserts a component for an entity.",30,{"inputs":[{"name":"self"},{"name":"entity"},{"name":"c"}],"output":null}],[11,"insert_all","","Lazily inserts components for entities.",30,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"remove","","Lazily removes a component.",30,{"inputs":[{"name":"self"},{"name":"entity"}],"output":null}],[11,"execute","","Lazily executes a closure with world access.",30,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"drop","","",30,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new empty `World`.",4,{"inputs":[],"output":{"name":"world"}}],[11,"register","","Registers a new component.",4,{"inputs":[{"name":"self"}],"output":null}],[11,"register_with_id","","Registers a new component with a given id.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"add_resource","","Adds a resource with the default ID (`0`).",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"add_resource_with_id","","Adds a resource with a given ID.",4,{"inputs":[{"name":"self"},{"name":"t"},{"name":"usize"}],"output":null}],[11,"read","","Fetches a component's storage with the default id for reading.",4,{"inputs":[{"name":"self"}],"output":{"name":"readstorage"}}],[11,"write","","Fetches a component's storage with the default id for writing.",4,{"inputs":[{"name":"self"}],"output":{"name":"writestorage"}}],[11,"read_with_id","","Fetches a component's storage with a specified id for reading.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"readstorage"}}],[11,"write_with_id","","Fetches a component's storage with a specified id for writing.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"writestorage"}}],[11,"read_resource_with_id","","Fetches a resource with a specified id for reading.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"fetch"}}],[11,"write_resource_with_id","","Fetches a resource with a specified id for writing.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"fetchmut"}}],[11,"read_resource","","Fetches a resource with the default id for reading.",4,{"inputs":[{"name":"self"}],"output":{"name":"fetch"}}],[11,"write_resource","","Fetches a resource with the default id for writing.",4,{"inputs":[{"name":"self"}],"output":{"name":"fetchmut"}}],[11,"entities","","Convenience method for fetching entities.",4,{"inputs":[{"name":"self"}],"output":{"generics":["entitiesres"],"name":"fetch"}}],[11,"create_entity","","Allows building an entity with its components.",4,{"inputs":[{"name":"self"}],"output":{"name":"entitybuilder"}}],[11,"create_iter","","Returns an iterator for entity creation. This makes it easy to create a whole collection of them.",4,{"inputs":[{"name":"self"}],"output":{"name":"createiter"}}],[11,"delete_entity","","Deletes an entity and its components.",4,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"generics":["wronggeneration"],"name":"result"}}],[11,"delete_entities","","Deletes the specified entities and their components.",4,null],[11,"delete_all","","Deletes all entities and their components.",4,{"inputs":[{"name":"self"}],"output":null}],[11,"is_alive","","Checks if an entity is alive. Please note that atomically created or deleted entities (the ones created / deleted with the `Entities` struct) are not handled by this method. Therefore, you should have called `maintain()` before using this method.",4,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"bool"}}],[11,"maintain","","Merges in the appendix, recording all the dynamically created and deleted entities into the persistent generations vector. Also removes all the abandoned components.",4,{"inputs":[{"name":"self"}],"output":null}],[11,"borrow","","",4,{"inputs":[{"name":"self"}],"output":{"name":"resources"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"self"}}],[6,"ReadStorage","","A storage with read access.",null,null],[6,"WriteStorage","","A storage with read and write access.",null,null],[6,"Entities","","A wrapper for a fetched `Entities` resource. Note that this is just `Fetch<Entities>`, so you can easily use it in your system:",null,null],[6,"Index","","An index is basically the id of an `Entity`.",null,null],[8,"Join","","The purpose of the `Join` trait is to provide a way to access multiple storages at the same time with the merged bit set.",null,null],[16,"Type","","Type of joined components.",31,null],[16,"Value","","Type of joined storages.",31,null],[16,"Mask","","Type of joined bit mask.",31,null],[11,"join","","Create a joined iterator over the contents.",31,{"inputs":[{"name":"self"}],"output":{"name":"joiniter"}}],[10,"open","","Open this join by returning the mask and the storages.",31,null],[10,"get","","Get a joined component value by a given index.",31,null],[8,"ParJoin","","The purpose of the `ParJoin` trait is to provide a way to access multiple storages in parallel at the same time with the merged bit set.",null,null],[11,"par_join","","Create a joined parallel iterator over the contents.",32,{"inputs":[{"name":"self"}],"output":{"name":"joinpariter"}}],[8,"DistinctStorage","","This is a marker trait which requires you to uphold the following guarantee:",null,null],[8,"UnprotectedStorage","","Used by the framework to quickly join components.",null,null],[10,"clean","","Clean the storage given a check to figure out if an index is valid or not. Allows us to safely drop the storage.",33,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[10,"get","","Tries reading the data associated with an `Index`. This is unsafe because the external set used to protect this storage is absent.",33,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[10,"get_mut","","Tries mutating the data associated with an `Index`. This is unsafe because the external set used to protect this storage is absent.",33,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[10,"insert","","Inserts new data for a given `Index`.",33,{"inputs":[{"name":"self"},{"name":"index"},{"name":"t"}],"output":null}],[10,"remove","","Removes the data associated with an `Index`.",33,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"t"}}],[8,"Component","","Abstract component type. Doesn't have to be Copy or even Clone.",null,null],[16,"Storage","","Associated storage type for this component.",34,null],[11,"dispatch","","Dispatch all the systems with given resources and context and then run thread local systems.",35,null],[11,"dispatch_par","","Dispatches the systems (except thread local systems) in parallel given the resources to operate on.",35,null],[11,"dispatch_seq","","Dispatches the systems (except thread local systems) sequentially.",35,null],[11,"dispatch_thread_local","","Dispatch only thread local systems sequentially.",35,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"default","","",36,{"inputs":[],"output":{"name":"dispatcherbuilder"}}],[11,"deref_mut","","",37,{"inputs":[{"name":"self"}],"output":{"name":"resource"}}],[11,"deref_mut","","",38,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fetch","","",38,{"inputs":[{"name":"resources"},{"name":"usize"}],"output":{"name":"fetchmut"}}],[11,"reads","","",38,{"inputs":[{"name":"usize"}],"output":{"generics":["resourceid"],"name":"vec"}}],[11,"writes","","",38,{"inputs":[{"name":"usize"}],"output":{"generics":["resourceid"],"name":"vec"}}],[11,"fetch","","",39,{"inputs":[{"name":"resources"},{"name":"usize"}],"output":{"name":"fetch"}}],[11,"reads","","",39,{"inputs":[{"name":"usize"}],"output":{"generics":["resourceid"],"name":"vec"}}],[11,"writes","","",39,{"inputs":[{"name":"usize"}],"output":{"generics":["resourceid"],"name":"vec"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"runningtime"}}],[11,"deref","","",38,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref","","",37,{"inputs":[{"name":"self"}],"output":{"name":"resource"}}],[11,"deref","","",40,{"inputs":[{"name":"self"}],"output":{"name":"resource"}}],[11,"deref","","",39,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"new","","Creates a new `DispatcherBuilder` by using the `Default` implementation.",36,{"inputs":[],"output":{"name":"dispatcherbuilder"}}],[11,"add","","Adds a new system with a given name and a list of dependencies. Please note that the dependency should be added before you add the depending system.",36,null],[11,"add_thread_local","","Adds a new thread local system.",36,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"dispatcherbuilder"}}],[11,"add_barrier","","Inserts a barrier which assures that all systems added before the barrier are executed before the ones after this barrier.",36,{"inputs":[{"name":"self"}],"output":{"name":"dispatcherbuilder"}}],[11,"with_pool","","Attach a rayon thread pool to the builder and use that instead of creating one.",36,{"inputs":[{"name":"self"},{"generics":["threadpool"],"name":"arc"}],"output":{"name":"dispatcherbuilder"}}],[11,"build","","Builds the `Dispatcher`.",36,{"inputs":[{"name":"self"}],"output":{"name":"dispatcher"}}],[11,"build_async","","Builds an async dispatcher.",36,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"asyncdispatcher"}}],[11,"dispatch","","Dispatches the systems asynchronously. Does not execute thread local systems.",41,null],[11,"wait","","Waits for all the asynchronously dispatched systems to finish and executes thread local systems (if there are any).",41,null],[11,"wait_without_tl","","Waits for all the asynchronously dispatched systems to finish without executing thread local systems.",41,null],[11,"is_running","","Checks if any of the asynchronously dispatched systems are running.",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"dispatch_thread_local","","Dispatch only thread local systems sequentially.",41,null],[11,"mut_res","","Returns the resources.",41,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"join","","Create a joined iterator over the contents.",31,{"inputs":[{"name":"self"}],"output":{"name":"joiniter"}}],[11,"par_join","","Create a joined parallel iterator over the contents.",32,{"inputs":[{"name":"self"}],"output":{"name":"joinpariter"}}],[11,"fetch","","",42,{"inputs":[{"name":"resources"},{"name":"usize"}],"output":{"name":"self"}}],[11,"reads","","",42,{"inputs":[{"name":"usize"}],"output":{"generics":["resourceid"],"name":"vec"}}],[11,"writes","","",42,{"inputs":[{"name":"usize"}],"output":{"generics":["resourceid"],"name":"vec"}}],[11,"fetch","","",43,{"inputs":[{"name":"resources"},{"name":"usize"}],"output":{"name":"self"}}],[11,"reads","","",43,{"inputs":[{"name":"usize"}],"output":{"generics":["resourceid"],"name":"vec"}}],[11,"writes","","",43,{"inputs":[{"name":"usize"}],"output":{"generics":["resourceid"],"name":"vec"}}]],"paths":[[8,"RunNow"],[4,"RunningTime"],[8,"System"],[8,"SystemData"],[3,"World"],[4,"InsertResult"],[3,"DrainErrors"],[3,"Errors"],[3,"Merge"],[3,"BoxedErr"],[3,"WrongGeneration"],[4,"Error"],[3,"JoinIter"],[3,"JoinParIter"],[3,"RestrictedStorage"],[3,"Storage"],[3,"Entry"],[3,"FlaggedStorage"],[3,"BTreeStorage"],[3,"HashMapStorage"],[3,"DenseVecStorage"],[3,"NullStorage"],[3,"VecStorage"],[3,"MaskedStorage"],[3,"CreateIter"],[3,"CreateIterAtomic"],[3,"Entity"],[3,"EntityBuilder"],[3,"EntitiesRes"],[3,"Generation"],[3,"LazyUpdate"],[8,"Join"],[8,"ParJoin"],[8,"UnprotectedStorage"],[8,"Component"],[3,"Dispatcher"],[3,"DispatcherBuilder"],[3,"FetchIdMut"],[3,"FetchMut"],[3,"Fetch"],[3,"FetchId"],[3,"AsyncDispatcher"],[6,"ReadStorage"],[6,"WriteStorage"]]};
searchIndex["stable_deref_trait"] = {"doc":"This module defines an unsafe marker trait, StableDeref, for container types that deref to a fixed address which is valid even when the containing type is moved. For example, Box, Vec, Rc, Arc and String implement this trait. Additionally, it defines CloneStableDeref for types like Rc where clones deref to the same address.","items":[[8,"StableDeref","stable_deref_trait","An unsafe marker trait for types that deref to a stable address, even when moved. For example, this is implemented by Box, Vec, Rc, Arc and String, among others. Even when a Box is moved, the underlying storage remains at a fixed location.",null,null],[8,"CloneStableDeref","","An unsafe marker trait for types where clones deref to the same address. This has all the requirements of StableDeref, and additionally requires that after calling clone(), both the old and new value deref to the same address. For example, Rc and Arc implement CloneStableDeref, but Box and Vec do not.",null,null]],"paths":[]};
searchIndex["stb_truetype"] = {"doc":"","items":[[3,"FontInfo","stb_truetype","",null,null],[3,"Vertex","","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[12,"cx","","",0,null],[12,"cy","","",0,null],[3,"Rect","","",null,null],[12,"x0","","",1,null],[12,"y0","","",1,null],[12,"x1","","",1,null],[12,"y1","","",1,null],[3,"HMetrics","","",null,null],[12,"advance_width","","",2,null],[12,"left_side_bearing","","",2,null],[3,"VMetrics","","",null,null],[12,"ascent","","",3,null],[12,"descent","","",3,null],[12,"line_gap","","",3,null],[4,"VertexType","","",null,null],[13,"MoveTo","","",4,null],[13,"LineTo","","",4,null],[13,"CurveTo","","",4,null],[5,"is_font","","",null,null],[5,"get_font_offset_for_index","","Each .ttf/.ttc file may have more than one font. Each font has a sequential index number starting from 0. Call this function to get the font offset for a given index; it returns None if the index is out of range. A regular .ttf file will only define one font and it always be at offset 0, so it will return Some(0) for index 0, and None for all other indices. You can just skip this step if you know it's that kind of font.",null,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"fontinfo"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"vertex"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"vertex_type","","",0,{"inputs":[{"name":"self"}],"output":{"name":"vertextype"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"vertextype"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"rect"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"hmetrics"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"vmetrics"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Given an offset into the file that defines a font, this function builds the necessary cached info for the rest of the system.",5,{"inputs":[{"name":"data"},{"name":"usize"}],"output":{"generics":["fontinfo"],"name":"option"}}],[11,"get_num_glyphs","","",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"find_glyph_index","","If you're going to perform multiple operations on the same character and you want a speed-up, call this function with the character you're going to process, then use glyph-based functions instead of the codepoint-based functions.",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"u32"}}],[11,"get_codepoint_shape","","Returns the series of vertices encoding the shape of the glyph for this codepoint.",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["vec"],"name":"option"}}],[11,"get_glyph_box","","Like `get_codepoint_box`, but takes a glyph index. Use this if you have cached the glyph index for a codepoint.",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["rect"],"name":"option"}}],[11,"get_codepoint_box","","Gets the bounding box of the visible part of the glyph, in unscaled coordinates",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["rect"],"name":"option"}}],[11,"is_glyph_empty","","returns true if nothing is drawn for this glyph",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"get_glyph_shape","","Like `get_codepoint_shape`, but takes a glyph index instead. Use this if you have cached the glyph index for a codepoint.",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["vec"],"name":"option"}}],[11,"get_glyph_h_metrics","","like `get_codepoint_h_metrics`, but takes a glyph index instead. Use this if you have cached the glyph index for a codepoint.",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"hmetrics"}}],[11,"get_glyph_kern_advance","","like `get_codepoint_kern_advance`, but takes glyph indices instead. Use this if you have cached the glyph indices for the codepoints.",5,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"i32"}}],[11,"get_codepoint_kern_advance","","an additional amount to add to the 'advance' value between cp1 and cp2",5,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"i32"}}],[11,"get_codepoint_h_metrics","","`left_side_bearing` is the offset from the current horizontal position to the left edge of the character `advance_width` is the offset from the current horizontal position to the next horizontal position these are expressed in unscaled coordinates",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"hmetrics"}}],[11,"get_v_metrics","","`ascent` is the coordinate above the baseline the font extends; descent is the coordinate below the baseline the font extends (i.e. it is typically negative) `line_gap` is the spacing between one row's descent and the next row's ascent... so you should advance the vertical position by `ascent - descent + line_gap` these are expressed in unscaled coordinates, so you must multiply by the scale factor for a given size",5,{"inputs":[{"name":"self"}],"output":{"name":"vmetrics"}}],[11,"get_bounding_box","","the bounding box around all possible characters",5,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"rect"}}],[11,"scale_for_pixel_height","","computes a scale factor to produce a font whose \"height\" is 'pixels' tall. Height is measured as the distance from the highest ascender to the lowest descender; in other words, it's equivalent to calling GetFontVMetrics and computing:       scale = pixels / (ascent - descent) so if you prefer to measure height by the ascent only, use a similar calculation.",5,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"f32"}}],[11,"scale_for_mapping_em_to_pixels","","computes a scale factor to produce a font whose EM size is mapped to `pixels` tall. This is probably what traditional APIs compute, but I'm not positive.",5,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"f32"}}],[11,"get_glyph_bitmap_box_subpixel","","like `get_codepoint_bitmap_box_subpixel`, but takes a glyph index instead of a codepoint.",5,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"generics":["rect"],"name":"option"}}],[11,"get_glyph_bitmap_box","","like `get_codepoint_bitmap_box`, but takes a glyph index instead of a codepoint.",5,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"f32"},{"name":"f32"}],"output":{"generics":["rect"],"name":"option"}}],[11,"get_codepoint_bitmap_box_subpixel","","same as get_codepoint_bitmap_box, but you can specify a subpixel shift for the character",5,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"generics":["rect"],"name":"option"}}],[11,"get_codepoint_bitmap_box","","get the bounding box of the bitmap centered around the glyph origin; so the bitmap width is x1-x0, height is y1-y0, and location to place the bitmap top left is (left_side_bearing*scale, y0). (Note that the bitmap uses y-increases-down, but the shape uses y-increases-up, so CodepointBitmapBox and CodepointBox are inverted.)",5,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"f32"},{"name":"f32"}],"output":{"generics":["rect"],"name":"option"}}]],"paths":[[3,"Vertex"],[3,"Rect"],[3,"HMetrics"],[3,"VMetrics"],[4,"VertexType"],[3,"FontInfo"]]};
searchIndex["syn"] = {"doc":"","items":[[3,"Attribute","syn","Doc-comments are promoted to attributes that have `is_sugared_doc` = true",null,null],[12,"style","","",0,null],[12,"value","","",0,null],[12,"is_sugared_doc","","",0,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"ident","","Name of the field, if any.",1,null],[12,"vis","","Visibility of the field.",1,null],[12,"attrs","","Attributes tagged on the field.",1,null],[12,"ty","","Type of the field.",1,null],[3,"Variant","","An enum variant.",null,null],[12,"ident","","Name of the variant.",2,null],[12,"attrs","","Attributes tagged on the variant.",2,null],[12,"data","","Type of variant.",2,null],[12,"discriminant","","Explicit discriminant, e.g. `Foo = 1`",2,null],[3,"Generics","","Represents lifetimes and type parameters attached to a declaration of a function, enum, trait, etc.",null,null],[12,"lifetimes","","",3,null],[12,"ty_params","","",3,null],[12,"where_clause","","",3,null],[3,"Lifetime","","",null,null],[12,"ident","","",4,null],[3,"LifetimeDef","","A lifetime definition, e.g. `'a: 'b+'c+'d`",null,null],[12,"attrs","","",5,null],[12,"lifetime","","",5,null],[12,"bounds","","",5,null],[3,"TyParam","","A generic type parameter, e.g. `T: Into<String>`.",null,null],[12,"attrs","","",6,null],[12,"ident","","",6,null],[12,"bounds","","",6,null],[12,"default","","",6,null],[3,"WhereBoundPredicate","","A type bound.",null,null],[12,"bound_lifetimes","","Any lifetimes from a `for` binding",7,null],[12,"bounded_ty","","The type being bounded",7,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",7,null],[3,"WhereClause","","A `where` clause in a definition",null,null],[12,"predicates","","",8,null],[3,"WhereEqPredicate","","An equality predicate (unsupported).",null,null],[12,"lhs_ty","","",9,null],[12,"rhs_ty","","",9,null],[3,"WhereRegionPredicate","","A lifetime predicate.",null,null],[12,"lifetime","","",10,null],[12,"bounds","","",10,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TyGenerics::as_turbofish`.",null,null],[3,"TyGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Ident","","",null,null],[3,"ByteStrLit","","",null,null],[12,"value","","",11,null],[12,"style","","",11,null],[3,"FloatLit","","",null,null],[12,"value","","",12,null],[12,"suffix","","",12,null],[3,"IntLit","","",null,null],[12,"value","","",13,null],[12,"suffix","","",13,null],[3,"StrLit","","",null,null],[12,"value","","",14,null],[12,"style","","",14,null],[3,"Delimited","","",null,null],[12,"delim","","The type of delimiter",15,null],[12,"tts","","The delimited sequence of token trees",15,null],[3,"Mac","","Represents a macro invocation. The Path indicates which macro is being invoked, and the vector of token-trees contains the source of the macro invocation.",null,null],[12,"path","","",16,null],[12,"tts","","",16,null],[3,"DeriveInput","","Struct or enum sent to a `proc_macro_derive` macro.",null,null],[12,"ident","","Name of the struct or enum.",17,null],[12,"vis","","Visibility of the struct or enum.",17,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",17,null],[12,"generics","","Generics required to complete the definition.",17,null],[12,"body","","Data within the struct or enum.",17,null],[3,"AngleBracketedParameterData","","A path like `Foo<'a, T>`",null,null],[12,"lifetimes","","The lifetime parameters for this path segment.",18,null],[12,"types","","The type parameters for this path segment, if present.",18,null],[12,"bindings","","Bindings (equality constraints) on associated types, if present.",18,null],[3,"BareFnArg","","An argument in a function type.",null,null],[12,"name","","",19,null],[12,"ty","","",19,null],[3,"BareFnTy","","",null,null],[12,"unsafety","","",20,null],[12,"abi","","",20,null],[12,"lifetimes","","",20,null],[12,"inputs","","",20,null],[12,"output","","",20,null],[12,"variadic","","",20,null],[3,"MutTy","","",null,null],[12,"ty","","",21,null],[12,"mutability","","",21,null],[3,"ParenthesizedParameterData","","A path like `Foo(A,B) -> C`",null,null],[12,"inputs","","`(A, B)`",22,null],[12,"output","","`C`",22,null],[3,"Path","","A \"Path\" is essentially Rust's notion of a name.",null,null],[12,"global","","A `::foo` path, is relative to the crate root rather than current module (like paths in an import).",23,null],[12,"segments","","The segments in the path: the things separated by `::`.",23,null],[3,"PathSegment","","A segment of a path: an identifier, an optional lifetime, and a set of types.",null,null],[12,"ident","","The identifier portion of this path segment.",24,null],[12,"parameters","","Type/lifetime parameters attached to this path. They come in two flavors: `Path<A,B,C>` and `Path(A,B) -> C`. Note that this is more than just simple syntactic sugar; the use of parens affects the region binding rules, so we preserve the distinction.",24,null],[3,"PolyTraitRef","","",null,null],[12,"bound_lifetimes","","The `'a` in `<'a> Foo<&'a T>`",25,null],[12,"trait_ref","","The `Foo<&'a T>` in `<'a> Foo<&'a T>`",25,null],[3,"QSelf","","The explicit Self type in a \"qualified path\". The actual path, including the trait and the associated item, is stored separately. `position` represents the index of the associated item qualified with this Self type.",null,null],[12,"ty","","",26,null],[12,"position","","",26,null],[3,"TypeBinding","","Bind a type to an associated type: `A=Foo`.",null,null],[12,"ident","","",27,null],[12,"ty","","",27,null],[4,"AttrStyle","","Distinguishes between Attributes that decorate items and Attributes that are contained as statements within items. These two cases need to be distinguished for pretty-printing.",null,null],[13,"Outer","","Attribute of the form `#![...]`.",28,null],[13,"Inner","","Attribute of the form `#[...]`.",28,null],[4,"MetaItem","","A compile-time attribute item.",null,null],[13,"Word","","Word meta item.",29,null],[13,"List","","List meta item.",29,null],[13,"NameValue","","Name-value meta item.",29,null],[4,"NestedMetaItem","","Possible values inside of compile-time attribute lists.",null,null],[13,"MetaItem","","A full `MetaItem`.",30,null],[13,"Literal","","A Rust literal.",30,null],[4,"ConstExpr","","",null,null],[13,"Call","","A function call",31,null],[13,"Binary","","A binary operation (For example: `a + b`, `a * b`)",31,null],[13,"Unary","","A unary operation (For example: `!x`, `*x`)",31,null],[13,"Lit","","A literal (For example: `1`, `\"foo\"`)",31,null],[13,"Cast","","A cast (`foo as f64`)",31,null],[13,"Path","","Variable reference, possibly containing `::` and/or type parameters, e.g. foo::bar::.",31,null],[13,"Index","","An indexing operation (`foo[2]`)",31,null],[13,"Paren","","No-op: used solely so we can pretty-print faithfully",31,null],[13,"Other","","If compiling with full support for expression syntax, any expression is allowed",31,null],[4,"VariantData","","Data stored within an enum variant or struct.",null,null],[13,"Struct","","Struct variant, e.g. `Point { x: f64, y: f64 }`.",32,null],[13,"Tuple","","Tuple variant, e.g. `Some(T)`.",32,null],[13,"Unit","","Unit variant, e.g. `None`.",32,null],[4,"Visibility","","Visibility level of an item.",null,null],[13,"Public","","Public, i.e. `pub`.",33,null],[13,"Crate","","Crate-visible, i.e. `pub(crate)`.",33,null],[13,"Restricted","","Restricted, e.g. `pub(some::module)`.",33,null],[13,"Inherited","","Inherited, i.e. private.",33,null],[4,"TraitBoundModifier","","A modifier on a bound, currently this is only used for `?Sized`, where the modifier is `Maybe`. Negative bounds should also be handled here.",null,null],[13,"None","","",34,null],[13,"Maybe","","",34,null],[4,"TyParamBound","","The AST represents all type param bounds as types. `typeck::collect::compute_bounds` matches these against the \"special\" built-in traits (see `middle::lang_items`) and detects Copy, Send and Sync.",null,null],[13,"Trait","","",35,null],[13,"Region","","",35,null],[4,"WherePredicate","","A single predicate in a `where` clause",null,null],[13,"BoundPredicate","","A type binding, e.g. `for<'c> Foo: Send+Clone+'c`",36,null],[13,"RegionPredicate","","A lifetime predicate, e.g. `'a: 'b+'c`",36,null],[13,"EqPredicate","","An equality predicate (unsupported)",36,null],[4,"FloatTy","","",null,null],[13,"F32","","",37,null],[13,"F64","","",37,null],[13,"Unsuffixed","","",37,null],[4,"IntTy","","",null,null],[13,"Isize","","",38,null],[13,"I8","","",38,null],[13,"I16","","",38,null],[13,"I32","","",38,null],[13,"I64","","",38,null],[13,"Usize","","",38,null],[13,"U8","","",38,null],[13,"U16","","",38,null],[13,"U32","","",38,null],[13,"U64","","",38,null],[13,"Unsuffixed","","",38,null],[4,"Lit","","Literal kind.",null,null],[13,"Str","","A string literal (`\"foo\"`)",39,null],[13,"ByteStr","","A byte string (`b\"foo\"`)",39,null],[13,"Byte","","A byte char (`b'f'`)",39,null],[13,"Char","","A character literal (`'a'`)",39,null],[13,"Int","","An integer literal (`1`)",39,null],[13,"Float","","A float literal (`1f64` or `1E10f64` or `1.0E10`)",39,null],[13,"Bool","","A boolean literal",39,null],[4,"StrStyle","","",null,null],[13,"Cooked","","A regular string, like `\"foo\"`",40,null],[13,"Raw","","A raw string, like `r##\"foo\"##`",40,null],[4,"BinOpToken","","",null,null],[13,"Plus","","",41,null],[13,"Minus","","",41,null],[13,"Star","","",41,null],[13,"Slash","","",41,null],[13,"Percent","","",41,null],[13,"Caret","","",41,null],[13,"And","","",41,null],[13,"Or","","",41,null],[13,"Shl","","",41,null],[13,"Shr","","",41,null],[4,"DelimToken","","A delimiter token",null,null],[13,"Paren","","A round parenthesis: `(` or `)`",42,null],[13,"Bracket","","A square bracket: `[` or `]`",42,null],[13,"Brace","","A curly brace: `{` or `}`",42,null],[4,"Token","","",null,null],[13,"Eq","","",43,null],[13,"Lt","","",43,null],[13,"Le","","",43,null],[13,"EqEq","","",43,null],[13,"Ne","","",43,null],[13,"Ge","","",43,null],[13,"Gt","","",43,null],[13,"AndAnd","","",43,null],[13,"OrOr","","",43,null],[13,"Not","","",43,null],[13,"Tilde","","",43,null],[13,"BinOp","","",43,null],[13,"BinOpEq","","",43,null],[13,"At","","",43,null],[13,"Dot","","",43,null],[13,"DotDot","","",43,null],[13,"DotDotDot","","",43,null],[13,"Comma","","",43,null],[13,"Semi","","",43,null],[13,"Colon","","",43,null],[13,"ModSep","","",43,null],[13,"RArrow","","",43,null],[13,"LArrow","","",43,null],[13,"FatArrow","","",43,null],[13,"Pound","","",43,null],[13,"Dollar","","",43,null],[13,"Question","","",43,null],[13,"Literal","","",43,null],[13,"Ident","","",43,null],[13,"Underscore","","",43,null],[13,"Lifetime","","",43,null],[13,"DocComment","","",43,null],[4,"TokenTree","","When the main rust parser encounters a syntax-extension invocation, it parses the arguments to the invocation as a token-tree. This is a very loose structure, such that all sorts of different AST-fragments can be passed to syntax extensions using a uniform type.",null,null],[13,"Token","","A single token",44,null],[13,"Delimited","","A delimited sequence of token trees",44,null],[4,"Body","","Body of a derived struct or enum.",null,null],[13,"Enum","","It's an enum.",45,null],[13,"Struct","","It's a struct.",45,null],[4,"BinOp","","",null,null],[13,"Add","","The `+` operator (addition)",46,null],[13,"Sub","","The `-` operator (subtraction)",46,null],[13,"Mul","","The `*` operator (multiplication)",46,null],[13,"Div","","The `/` operator (division)",46,null],[13,"Rem","","The `%` operator (modulus)",46,null],[13,"And","","The `&&` operator (logical and)",46,null],[13,"Or","","The `||` operator (logical or)",46,null],[13,"BitXor","","The `^` operator (bitwise xor)",46,null],[13,"BitAnd","","The `&` operator (bitwise and)",46,null],[13,"BitOr","","The `|` operator (bitwise or)",46,null],[13,"Shl","","The `<<` operator (shift left)",46,null],[13,"Shr","","The `>>` operator (shift right)",46,null],[13,"Eq","","The `==` operator (equality)",46,null],[13,"Lt","","The `<` operator (less than)",46,null],[13,"Le","","The `<=` operator (less than or equal to)",46,null],[13,"Ne","","The `!=` operator (not equal to)",46,null],[13,"Ge","","The `>=` operator (greater than or equal to)",46,null],[13,"Gt","","The `>` operator (greater than)",46,null],[4,"UnOp","","",null,null],[13,"Deref","","The `*` operator for dereferencing",47,null],[13,"Not","","The `!` operator for logical inversion",47,null],[13,"Neg","","The `-` operator for negation",47,null],[4,"Abi","","",null,null],[13,"Named","","",48,null],[13,"Rust","","",48,null],[4,"FunctionRetTy","","",null,null],[13,"Default","","Return type is not specified.",49,null],[13,"Ty","","Everything else",49,null],[4,"Mutability","","",null,null],[13,"Mutable","","",50,null],[13,"Immutable","","",50,null],[4,"PathParameters","","Parameters of a path segment.",null,null],[13,"AngleBracketed","","The `<'a, A, B, C>` in `foo::bar::baz::<'a, A, B, C>`",51,null],[13,"Parenthesized","","The `(A, B)` and `C` in `Foo(A, B) -> C`",51,null],[4,"Ty","","The different kinds of types recognized by the compiler",null,null],[13,"Slice","","A variable-length array (`[T]`)",52,null],[13,"Array","","A fixed length array (`[T; n]`)",52,null],[13,"Ptr","","A raw pointer (`*const T` or `*mut T`)",52,null],[13,"Rptr","","A reference (`&'a T` or `&'a mut T`)",52,null],[13,"BareFn","","A bare function (e.g. `fn(usize) -> bool`)",52,null],[13,"Never","","The never type (`!`)",52,null],[13,"Tup","","A tuple (`(A, B, C, D, ...)`)",52,null],[13,"Path","","A path (`module::module::...::Type`), optionally \"qualified\", e.g. `<Vec<T> as SomeTrait>::SomeType`.",52,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",52,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",52,null],[13,"Paren","","No-op; kept solely so that we can pretty-print faithfully",52,null],[13,"Infer","","TyKind::Infer means the type should be inferred instead of it having been specified. This can appear anywhere in a type.",52,null],[13,"Mac","","A macro in the type position.",52,null],[4,"Unsafety","","",null,null],[13,"Unsafe","","",53,null],[13,"Normal","","",53,null],[5,"parse_derive_input","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["deriveinput","string"],"name":"result"}}],[5,"parse_type","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["ty","string"],"name":"result"}}],[5,"parse_path","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["path","string"],"name":"result"}}],[5,"parse_where_clause","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["whereclause","string"],"name":"result"}}],[5,"parse_token_trees","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["vec","string"],"name":"result"}}],[5,"parse_ident","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["ident","string"],"name":"result"}}],[5,"parse_ty_param_bound","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["typarambound","string"],"name":"result"}}],[5,"parse_outer_attr","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["attribute","string"],"name":"result"}}],[11,"to_tokens","","",0,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",29,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",30,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"attribute"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"name","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"attrstyle"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"attrstyle"}],"output":{"name":"bool"}}],[11,"hash","","",28,null],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"metaitem"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"metaitem"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"metaitem"}],"output":{"name":"bool"}}],[11,"hash","","",29,null],[11,"name","","Name of the item.",29,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"nestedmetaitem"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"nestedmetaitem"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"nestedmetaitem"}],"output":{"name":"bool"}}],[11,"hash","","",30,null],[11,"to_tokens","","",31,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"constexpr"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"constexpr"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"constexpr"}],"output":{"name":"bool"}}],[11,"hash","","",31,null],[11,"to_tokens","","",2,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",32,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",33,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"variant"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"variant"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"variant"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"variantdata"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"variantdata"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"variantdata"}],"output":{"name":"bool"}}],[11,"hash","","",32,null],[11,"fields","","Slice containing the fields stored in the variant.",32,null],[11,"fields_mut","","Mutable slice containing the fields stored in the variant.",32,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"field"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"field"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"field"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"visibility"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"visibility"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"visibility"}],"output":{"name":"bool"}}],[11,"hash","","",33,null],[11,"to_tokens","","",3,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",54,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",55,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",56,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",4,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",5,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",6,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",35,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",8,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",36,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",7,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",10,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",9,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"generics"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"generics"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"generics"}],"output":{"name":"bool"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"generics"}}],[11,"hash","","",3,null],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"split_for_impl","","Split a type's generics into the pieces required for impl'ing a trait for that type.",3,null],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.",55,{"inputs":[{"name":"self"}],"output":{"name":"turbofish"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"lifetime"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"new","","",4,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"lifetimedef"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"lifetimedef"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"lifetimedef"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"new","","",5,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"typaram"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"typaram"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"typaram"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"from","","",6,{"inputs":[{"name":"ident"}],"output":{"name":"self"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"typarambound"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"typarambound"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"self"},{"name":"typarambound"}],"output":{"name":"bool"}}],[11,"hash","","",35,null],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"traitboundmodifier"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"traitboundmodifier"}],"output":{"name":"bool"}}],[11,"hash","","",34,null],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"whereclause"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"whereclause"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"whereclause"}],"output":{"name":"bool"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"whereclause"}}],[11,"hash","","",8,null],[11,"none","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"wherepredicate"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"wherepredicate"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"wherepredicate"}],"output":{"name":"bool"}}],[11,"hash","","",36,null],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"whereboundpredicate"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"whereboundpredicate"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"whereboundpredicate"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"whereregionpredicate"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"whereregionpredicate"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"whereregionpredicate"}],"output":{"name":"bool"}}],[11,"hash","","",10,null],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"whereeqpredicate"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"whereeqpredicate"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"whereeqpredicate"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"to_tokens","","",57,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"ident"}}],[11,"hash","","",57,null],[11,"cmp","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"le","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"gt","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"ge","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"new","","",57,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from","","",57,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",57,{"inputs":[{"generics":["str"],"name":"cow"}],"output":{"name":"self"}}],[11,"from","","",57,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",57,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"as_ref","","",57,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"to_tokens","","",39,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"lit"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"hash","","",39,null],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"strstyle"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"strstyle"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"strstyle"}],"output":{"name":"bool"}}],[11,"hash","","",40,null],[11,"from","","",39,{"inputs":[{"name":"string"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"str"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"name":"lit"}}],[11,"from","","",39,null],[11,"from","","",39,{"inputs":[{"name":"char"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"bool"}],"output":{"name":"lit"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"intty"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"intty"}],"output":{"name":"bool"}}],[11,"hash","","",38,null],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"floatty"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"floatty"}],"output":{"name":"bool"}}],[11,"hash","","",37,null],[11,"from","","",39,{"inputs":[{"name":"isize"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"i8"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"i16"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"i32"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"i64"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"usize"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"u8"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"u16"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"u32"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"u64"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"f32"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"f64"}],"output":{"name":"lit"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"strlit"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bytestrlit"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"intlit"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"floatlit"}}],[11,"to_tokens","","",16,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",44,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",15,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",43,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",41,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"mac"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"mac"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"mac"}],"output":{"name":"bool"}}],[11,"hash","","",16,null],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"tokentree"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"tokentree"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"tokentree"}],"output":{"name":"bool"}}],[11,"hash","","",44,null],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"delimited"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"delimited"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"delimited"}],"output":{"name":"bool"}}],[11,"hash","","",15,null],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"token"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"hash","","",43,null],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"binoptoken"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"binoptoken"}],"output":{"name":"bool"}}],[11,"hash","","",41,null],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"delimtoken"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"delimtoken"}],"output":{"name":"bool"}}],[11,"hash","","",42,null],[11,"to_tokens","","",17,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"deriveinput"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"deriveinput"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"deriveinput"}],"output":{"name":"bool"}}],[11,"hash","","",17,null],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"body"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"body"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"self"},{"name":"body"}],"output":{"name":"bool"}}],[11,"hash","","",45,null],[11,"op","","",46,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"assign_op","","",46,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"to_tokens","","",46,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"op","","",47,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"to_tokens","","",47,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"binop"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"binop"}],"output":{"name":"bool"}}],[11,"hash","","",46,null],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"unop"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"unop"}],"output":{"name":"bool"}}],[11,"hash","","",47,null],[11,"to_tokens","","",52,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",50,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",23,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",24,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",51,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",18,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",27,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",22,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",25,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",20,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",19,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",53,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",48,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"ty"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"ty"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"self"},{"name":"ty"}],"output":{"name":"bool"}}],[11,"hash","","",52,null],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"mutty"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"mutty"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"mutty"}],"output":{"name":"bool"}}],[11,"hash","","",21,null],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"mutability"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"mutability"}],"output":{"name":"bool"}}],[11,"hash","","",50,null],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"bool"}}],[11,"hash","","",23,null],[11,"from","","",23,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"pathsegment"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":{"name":"bool"}}],[11,"hash","","",24,null],[11,"from","","",24,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"pathparameters"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"pathparameters"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"self"},{"name":"pathparameters"}],"output":{"name":"bool"}}],[11,"hash","","",51,null],[11,"none","","",51,{"inputs":[],"output":{"name":"self"}}],[11,"is_empty","","",51,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"anglebracketedparameterdata"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"anglebracketedparameterdata"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"anglebracketedparameterdata"}],"output":{"name":"bool"}}],[11,"default","","",18,{"inputs":[],"output":{"name":"anglebracketedparameterdata"}}],[11,"hash","","",18,null],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"typebinding"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"typebinding"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"typebinding"}],"output":{"name":"bool"}}],[11,"hash","","",27,null],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"parenthesizedparameterdata"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"parenthesizedparameterdata"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"parenthesizedparameterdata"}],"output":{"name":"bool"}}],[11,"hash","","",22,null],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"polytraitref"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"polytraitref"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"polytraitref"}],"output":{"name":"bool"}}],[11,"hash","","",25,null],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"qself"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"qself"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"qself"}],"output":{"name":"bool"}}],[11,"hash","","",26,null],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"barefnty"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"barefnty"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"barefnty"}],"output":{"name":"bool"}}],[11,"hash","","",20,null],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"unsafety"}}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"unsafety"}],"output":{"name":"bool"}}],[11,"hash","","",53,null],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"abi"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"abi"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"self"},{"name":"abi"}],"output":{"name":"bool"}}],[11,"hash","","",48,null],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"barefnarg"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"barefnarg"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"self"},{"name":"barefnarg"}],"output":{"name":"bool"}}],[11,"hash","","",19,null],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"functionretty"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"functionretty"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"self"},{"name":"functionretty"}],"output":{"name":"bool"}}],[11,"hash","","",49,null],[0,"visit","","AST walker. Each overridden visit method has full control over what happens with its node, it can do its own traversal of the node's children, call `visit::walk_*` to apply the default traversal algorithm, or prevent deeper traversal by doing nothing.",null,null],[5,"walk_opt_ident","syn::visit","",null,{"inputs":[{"name":"v"},{"name":"option"}],"output":null}],[5,"walk_lifetime_def","","",null,{"inputs":[{"name":"v"},{"name":"lifetimedef"}],"output":null}],[5,"walk_poly_trait_ref","","",null,{"inputs":[{"name":"v"},{"name":"polytraitref"},{"name":"traitboundmodifier"}],"output":null}],[5,"walk_derive_input","","",null,{"inputs":[{"name":"v"},{"name":"deriveinput"}],"output":null}],[5,"walk_variant","","",null,{"inputs":[{"name":"v"},{"name":"variant"},{"name":"generics"}],"output":null}],[5,"walk_ty","","",null,{"inputs":[{"name":"v"},{"name":"ty"}],"output":null}],[5,"walk_path","","",null,{"inputs":[{"name":"v"},{"name":"path"}],"output":null}],[5,"walk_path_segment","","",null,{"inputs":[{"name":"v"},{"name":"pathsegment"}],"output":null}],[5,"walk_path_parameters","","",null,{"inputs":[{"name":"v"},{"name":"pathparameters"}],"output":null}],[5,"walk_assoc_type_binding","","",null,{"inputs":[{"name":"v"},{"name":"typebinding"}],"output":null}],[5,"walk_ty_param_bound","","",null,{"inputs":[{"name":"v"},{"name":"typarambound"}],"output":null}],[5,"walk_generics","","",null,{"inputs":[{"name":"v"},{"name":"generics"}],"output":null}],[5,"walk_fn_ret_ty","","",null,{"inputs":[{"name":"v"},{"name":"functionretty"}],"output":null}],[5,"walk_variant_data","","",null,{"inputs":[{"name":"v"},{"name":"variantdata"}],"output":null}],[5,"walk_field","","",null,{"inputs":[{"name":"v"},{"name":"field"}],"output":null}],[5,"walk_const_expr","","",null,{"inputs":[{"name":"v"},{"name":"constexpr"}],"output":null}],[5,"walk_mac","","",null,{"inputs":[{"name":"v"},{"name":"mac"}],"output":null}],[8,"Visitor","","Each method of the Visitor trait is a hook to be potentially overridden.  Each method's default implementation recursively visits the substructure of the input via the corresponding `walk` method; e.g. the `visit_mod` method by default calls `visit::walk_mod`.",null,null],[11,"visit_ident","","",58,{"inputs":[{"name":"self"},{"name":"ident"}],"output":null}],[11,"visit_derive_input","","",58,{"inputs":[{"name":"self"},{"name":"deriveinput"}],"output":null}],[11,"visit_ty","","",58,{"inputs":[{"name":"self"},{"name":"ty"}],"output":null}],[11,"visit_generics","","",58,{"inputs":[{"name":"self"},{"name":"generics"}],"output":null}],[11,"visit_ty_param_bound","","",58,{"inputs":[{"name":"self"},{"name":"typarambound"}],"output":null}],[11,"visit_poly_trait_ref","","",58,{"inputs":[{"name":"self"},{"name":"polytraitref"},{"name":"traitboundmodifier"}],"output":null}],[11,"visit_variant_data","","",58,{"inputs":[{"name":"self"},{"name":"variantdata"},{"name":"ident"},{"name":"generics"}],"output":null}],[11,"visit_field","","",58,{"inputs":[{"name":"self"},{"name":"field"}],"output":null}],[11,"visit_variant","","",58,{"inputs":[{"name":"self"},{"name":"variant"},{"name":"generics"}],"output":null}],[11,"visit_lifetime","","",58,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":null}],[11,"visit_lifetime_def","","",58,{"inputs":[{"name":"self"},{"name":"lifetimedef"}],"output":null}],[11,"visit_path","","",58,{"inputs":[{"name":"self"},{"name":"path"}],"output":null}],[11,"visit_path_segment","","",58,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":null}],[11,"visit_path_parameters","","",58,{"inputs":[{"name":"self"},{"name":"pathparameters"}],"output":null}],[11,"visit_assoc_type_binding","","",58,{"inputs":[{"name":"self"},{"name":"typebinding"}],"output":null}],[11,"visit_attribute","","",58,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":null}],[11,"visit_fn_ret_ty","","",58,{"inputs":[{"name":"self"},{"name":"functionretty"}],"output":null}],[11,"visit_const_expr","","",58,{"inputs":[{"name":"self"},{"name":"constexpr"}],"output":null}],[11,"visit_lit","","",58,{"inputs":[{"name":"self"},{"name":"lit"}],"output":null}],[11,"visit_mac","","",58,{"inputs":[{"name":"self"},{"name":"mac"}],"output":null}],[0,"parse","syn","This module contains a set of exported nom parsers which can be used to parse custom grammars when used alongside the `synom` crate.",null,null],[4,"IResult","syn::parse","The result of a parser.",null,null],[13,"Done","","Parsing succeeded. The first field contains the rest of the unparsed data and the second field contains the parse result.",59,null],[13,"Error","","Parsing failed.",59,null],[5,"lit","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","lit"],"name":"iresult"}}],[5,"string","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","strlit"],"name":"iresult"}}],[5,"byte_string","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","bytestrlit"],"name":"iresult"}}],[5,"byte","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","u8"],"name":"iresult"}}],[5,"character","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","char"],"name":"iresult"}}],[5,"float","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","floatlit"],"name":"iresult"}}],[5,"int","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","intlit"],"name":"iresult"}}],[5,"boolean","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","bool"],"name":"iresult"}}],[5,"ty","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","ty"],"name":"iresult"}}],[5,"path","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","path"],"name":"iresult"}}],[5,"tt","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","tokentree"],"name":"iresult"}}],[5,"ident","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","ident"],"name":"iresult"}}],[5,"lifetime","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","lifetime"],"name":"iresult"}}],[11,"expect","","Unwraps the result, asserting the the parse is complete. Panics with a message based on the given string if the parse failed or is incomplete.",59,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"o"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"iresult"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"self"},{"name":"iresult"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"iresult"}}]],"paths":[[3,"Attribute"],[3,"Field"],[3,"Variant"],[3,"Generics"],[3,"Lifetime"],[3,"LifetimeDef"],[3,"TyParam"],[3,"WhereBoundPredicate"],[3,"WhereClause"],[3,"WhereEqPredicate"],[3,"WhereRegionPredicate"],[3,"ByteStrLit"],[3,"FloatLit"],[3,"IntLit"],[3,"StrLit"],[3,"Delimited"],[3,"Mac"],[3,"DeriveInput"],[3,"AngleBracketedParameterData"],[3,"BareFnArg"],[3,"BareFnTy"],[3,"MutTy"],[3,"ParenthesizedParameterData"],[3,"Path"],[3,"PathSegment"],[3,"PolyTraitRef"],[3,"QSelf"],[3,"TypeBinding"],[4,"AttrStyle"],[4,"MetaItem"],[4,"NestedMetaItem"],[4,"ConstExpr"],[4,"VariantData"],[4,"Visibility"],[4,"TraitBoundModifier"],[4,"TyParamBound"],[4,"WherePredicate"],[4,"FloatTy"],[4,"IntTy"],[4,"Lit"],[4,"StrStyle"],[4,"BinOpToken"],[4,"DelimToken"],[4,"Token"],[4,"TokenTree"],[4,"Body"],[4,"BinOp"],[4,"UnOp"],[4,"Abi"],[4,"FunctionRetTy"],[4,"Mutability"],[4,"PathParameters"],[4,"Ty"],[4,"Unsafety"],[3,"ImplGenerics"],[3,"TyGenerics"],[3,"Turbofish"],[3,"Ident"],[8,"Visitor"],[4,"IResult"]]};
searchIndex["synom"] = {"doc":"Adapted from `nom` by removing the `IResult::Incomplete` variant which:","items":[[4,"IResult","synom","The result of a parser.",null,null],[13,"Done","","Parsing succeeded. The first field contains the rest of the unparsed data and the second field contains the parse result.",0,null],[13,"Error","","Parsing failed.",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"iresult"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"iresult"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"iresult"}}],[11,"expect","","Unwraps the result, asserting the the parse is complete. Panics with a message based on the given string if the parse failed or is incomplete.",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"o"}}],[14,"punct","","Parse a piece of punctuation like \"+\" or \"+=\".",null,null],[14,"keyword","","Parse a keyword like \"fn\" or \"struct\".",null,null],[14,"option","","Turn a failed parse into `None` and a successful parse into `Some`.",null,null],[14,"opt_vec","","Turn a failed parse into an empty vector. The argument parser must itself return a vector.",null,null],[14,"epsilon","","Parses nothing and always succeeds.",null,null],[14,"separated_list","","Zero or more values separated by some separator. Does not allow a trailing seperator.",null,null],[14,"terminated_list","","Zero or more values separated by some separator. A trailing separator is allowed.",null,null],[14,"named","","Define a function from a parser combination.",null,null],[14,"call","","Invoke the given parser function with the passed in arguments.",null,null],[14,"map","","Transform the result of a parser by applying a function or closure.",null,null],[14,"not","","Parses successfully if the given parser fails to parse. Does not consume any of the input.",null,null],[14,"cond","","Conditionally execute the given parser.",null,null],[14,"cond_reduce","","Fail to parse if condition is false, otherwise parse the given parser.",null,null],[14,"preceded","","Parse two things, returning the value of the second.",null,null],[14,"terminated","","Parse two things, returning the value of the first.",null,null],[14,"many0","","Parse zero or more values using the given parser.",null,null],[14,"peek","","Parse a value without consuming it from the input data.",null,null],[14,"take_until","","Parse the part of the input up to but not including the given string. Fail to parse if the given string is not present in the input.",null,null],[14,"tag","","Parse the given string from exactly the current position in the input. You almost always want `punct!` or `keyword!` instead of this.",null,null],[14,"switch","","Pattern-match the result of a parser to select which other parser to run.",null,null],[14,"value","","Produce the given value without parsing anything. Useful as an argument to `switch!`.",null,null],[14,"delimited","","Value surrounded by a pair of delimiters.",null,null],[14,"separated_nonempty_list","","One or more values separated by some separator. Does not allow a trailing separator.",null,null],[14,"tuple","","Run a series of parsers and produce all of the results in a tuple.",null,null],[14,"alt","","Run a series of parsers, returning the result of the first one which succeeds.",null,null],[14,"do_parse","","Run a series of parsers, one after another, optionally assigning the results a name. Fail if any of the parsers fails.",null,null]],"paths":[[4,"IResult"]]};
searchIndex["tempfile"] = {"doc":"Securely create and manage temporary files. Temporary files created by this create are automatically deleted.","items":[[3,"NamedTempFile","tempfile","A named temporary file.",null,null],[3,"NamedTempFileOptions","","Create a new temporary file with custom parameters.",null,null],[3,"PersistError","","Error returned when persisting a temporary file fails",null,null],[12,"error","","The underlying IO error.",0,null],[12,"file","","The temporary file that couldn't be persisted.",0,null],[5,"tempfile","","Create an unnamed temporary file.",null,{"inputs":[],"output":{"generics":["file"],"name":"result"}}],[5,"tempfile_in","","Create an unnamed temporary file in the specified directory.",null,{"inputs":[{"name":"p"}],"output":{"generics":["file"],"name":"result"}}],[11,"as_ref","","",1,{"inputs":[{"name":"self"}],"output":{"name":"file"}}],[11,"as_mut","","",1,{"inputs":[{"name":"self"}],"output":{"name":"file"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",1,{"inputs":[{"name":"self"}],"output":{"name":"file"}}],[11,"deref_mut","","",1,{"inputs":[{"name":"self"}],"output":{"name":"file"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"persisterror"}],"output":{"name":"namedtempfile"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"new","","Create a new temporary file.",1,{"inputs":[],"output":{"generics":["namedtempfile"],"name":"result"}}],[11,"new_in","","Create a new temporary file in the specified directory.",1,{"inputs":[{"name":"p"}],"output":{"generics":["namedtempfile"],"name":"result"}}],[11,"path","","Get the temporary file's path.",1,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"close","","Close and remove the temporary file.",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"persist","","Persist the temporary file at the target path.",1,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"generics":["file","persisterror"],"name":"result"}}],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file exists there.",1,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"generics":["file","persisterror"],"name":"result"}}],[11,"reopen","","Reopen the temporary file.",1,{"inputs":[{"name":"self"}],"output":{"generics":["file"],"name":"result"}}],[11,"drop","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"read","","",1,null],[11,"write","","",1,null],[11,"flush","","",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"seek","","",1,{"inputs":[{"name":"self"},{"name":"seekfrom"}],"output":{"generics":["u64"],"name":"result"}}],[11,"as_raw_fd","","",1,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"namedtempfileoptions"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"namedtempfileoptions"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"namedtempfileoptions"}],"output":{"name":"bool"}}],[11,"new","","Create a new NamedTempFileOptions",2,{"inputs":[],"output":{"name":"self"}}],[11,"prefix","","Set a custom filename prefix.",2,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"suffix","","Set a custom filename suffix.",2,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"rand_bytes","","Set the number of random bytes.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"create","","Create the named temporary file.",2,{"inputs":[{"name":"self"}],"output":{"generics":["namedtempfile"],"name":"result"}}],[11,"create_in","","Create the named temporary file in the specified directory.",2,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"generics":["namedtempfile"],"name":"result"}}]],"paths":[[3,"PersistError"],[3,"NamedTempFile"],[3,"NamedTempFileOptions"]]};
searchIndex["thread_id"] = {"doc":"Thread-ID: get a unique ID for the current thread.","items":[[5,"get","thread_id","Returns a number that is unique to the calling thread.",null,{"inputs":[],"output":{"name":"usize"}}]],"paths":[]};
searchIndex["thread_local"] = {"doc":"Per-object thread-local storage","items":[[3,"ThreadLocal","thread_local","Thread-local variable wrapper",null,null],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",null,null],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",null,null],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a single thread.",null,null],[6,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",null,null],[6,"CachedIntoIter","","An iterator that moves out of a `CachedThreadLocal`.",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"threadlocal"}}],[11,"drop","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new empty `ThreadLocal`.",0,{"inputs":[],"output":{"name":"threadlocal"}}],[11,"get","","Returns the element for the current thread, if it exists.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn't exist.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"get_or_try","","Returns the element for the current thread, or creates it if it doesn't exist. If `create` fails, that error is returned and no element is added.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",0,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively reseting it to its original state.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"into_iter","","",0,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"get_default","","Returns the element for the current thread, or creates a default one if it doesn't exist.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["box"],"name":"option"}}],[11,"size_hint","","",1,null],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["box"],"name":"option"}}],[11,"size_hint","","",2,null],[11,"default","","",3,{"inputs":[],"output":{"name":"cachedthreadlocal"}}],[11,"new","","Creates a new empty `CachedThreadLocal`.",3,{"inputs":[],"output":{"name":"cachedthreadlocal"}}],[11,"get","","Returns the element for the current thread, if it exists.",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn't exist.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"get_or_try","","Returns the element for the current thread, or creates it if it doesn't exist. If `create` fails, that error is returned and no element is added.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",3,{"inputs":[{"name":"self"}],"output":{"name":"cacheditermut"}}],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively reseting it to its original state.",3,{"inputs":[{"name":"self"}],"output":null}],[11,"into_iter","","",3,{"inputs":[{"name":"self"}],"output":{"name":"cachedintoiter"}}],[11,"get_default","","Returns the element for the current thread, or creates a default one if it doesn't exist.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"ThreadLocal"],[3,"IterMut"],[3,"IntoIter"],[3,"CachedThreadLocal"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library implementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where nanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month, day, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time value, including any adjustment for Daylight Saving Time. This is the number of seconds east of UTC. For example, for U.S. Pacific Daylight Time, the value is `-7*60*60 = -25200`.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 109 - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"generics":["tm","parseerror"],"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and nanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter in nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter in seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"generics":["string","parseerror"],"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"weeks","","Makes a new `Duration` with given number of weeks. Equivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days. Equivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours. Equivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes. Equivalent to `Duration::seconds(minutes * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds. Panics when the duration is more than `i64::MAX` milliseconds or less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the closure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration, or `None` on overflow (exceeding 263 microseconds in either direction).",4,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration, or `None` on overflow (exceeding 263 nanoseconds in either direction).",4,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"generics":["duration"],"name":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"generics":["duration"],"name":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"inputs":[{"name":"stdduration"}],"output":{"generics":["duration","outofrangeerror"],"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,{"inputs":[{"name":"self"}],"output":{"generics":["stdduration","outofrangeerror"],"name":"result"}}],[11,"neg","","",4,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"add","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",4,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"div","","",4,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"outofrangeerror"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"outofrangeerror"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"outofrangeerror"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"timespec"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"timespec"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"duration"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"precisetime"}}],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of `self` to the value of `later`.",6,{"inputs":[{"name":"self"},{"name":"precisetime"}],"output":{"name":"duration"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"steadytime"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"cmp","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"ordering"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sub","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"duration"}}],[11,"sub","","",7,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"add","","",7,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",1,null],[11,"add","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"tm"}}],[11,"sub","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"tm"}}],[11,"sub","","",1,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"name":"duration"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"name":"ordering"}}],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"to_local","","Convert time to the local timezone",1,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"to_utc","","Convert time to the UTC",1,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO C, in the local timezone.",1,{"inputs":[{"name":"self"}],"output":{"name":"tmfmt"}}],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO C.",1,{"inputs":[{"name":"self"}],"output":{"name":"tmfmt"}}],[11,"strftime","","Formats the time according to the format string.",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["tmfmt","parseerror"],"name":"result"}}],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,{"inputs":[{"name":"self"}],"output":{"name":"tmfmt"}}],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,{"inputs":[{"name":"self"}],"output":{"name":"tmfmt"}}],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is compatible with ISO 8601.",1,{"inputs":[{"name":"self"}],"output":{"name":"tmfmt"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"parseerror"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["tuple_utils"] = {"doc":"A simple set of utility traits for working with tuples","items":[[8,"Append","tuple_utils","Helper trait to allow Appending of tuples",null,null],[16,"Output","","",0,null],[10,"append","","Append T onto the end of the tuple returning a new tuple with the existing elements and T",0,null],[8,"Prepend","","Helper trait to allow Perpending of tuples",null,null],[16,"Output","","",1,null],[10,"prepend","","Append T onto the start of the tuple returning a new tuple with all the elements from shifted over one row and T in the first slot",1,null],[8,"Merge","","Helper trait that allow for merging of tuples",null,null],[16,"Output","","",2,null],[10,"merge","","merge LHS with RHS returning a new tuple that contains the elements of both tuples ordering is preserved such that LHS elements come before RHS elements.",2,null],[8,"Split","","Tries to split a tuple into two tuples if the tuple is odd sized the Right side will contain the extra element",null,null],[16,"Left","","",3,null],[16,"Right","","",3,null],[10,"split","","",3,null]],"paths":[[8,"Append"],[8,"Prepend"],[8,"Merge"],[8,"Split"]]};
searchIndex["unicode_normalization"] = {"doc":"Unicode character composition and decomposition utilities as described in Unicode Standard Annex #15.","items":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition's characters.",null,null],[3,"Recompositions","","External iterator for a string recomposition's characters.",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"decompositions"}}],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["char"],"name":"option"}}],[11,"size_hint","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"recompositions"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["char"],"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"char","","Methods for composing and decomposing characters.",null,null],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character. See Unicode Standard Annex #15 for more information.",null,{"inputs":[{"name":"char"},{"name":"f"}],"output":null}],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for character. See Unicode Standard Annex #15 for more information.",null,{"inputs":[{"name":"char"},{"name":"f"}],"output":null}],[5,"compose","","Compose two characters into a single character, if possible. See Unicode Standard Annex #15 for more information.",null,{"inputs":[{"name":"char"},{"name":"char"}],"output":{"generics":["char"],"name":"option"}}],[5,"canonical_combining_class","","",null,{"inputs":[{"name":"char"}],"output":{"name":"u8"}}],[5,"is_combining_mark","","Return whether the given character is a combining mark (`General_Category=Mark`)",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[17,"UNICODE_VERSION","unicode_normalization","The version of Unicode that this version of unicode-normalization is based on.",null,null],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode normalizations as described in Unicode Standard Annex #15.",null,null],[10,"nfd","","Returns an iterator over the string in Unicode Normalization Form D (canonical decomposition).",2,{"inputs":[{"name":"self"}],"output":{"name":"decompositions"}}],[10,"nfkd","","Returns an iterator over the string in Unicode Normalization Form KD (compatibility decomposition).",2,{"inputs":[{"name":"self"}],"output":{"name":"decompositions"}}],[10,"nfc","","An Iterator over the string in Unicode Normalization Form C (canonical decomposition followed by canonical composition).",2,{"inputs":[{"name":"self"}],"output":{"name":"recompositions"}}],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form KC (compatibility decomposition followed by canonical composition).",2,{"inputs":[{"name":"self"}],"output":{"name":"recompositions"}}]],"paths":[[3,"Decompositions"],[3,"Recompositions"],[8,"UnicodeNormalization"]]};
searchIndex["unicode_segmentation"] = {"doc":"Iterators which split strings on Grapheme Cluster or Word boundaries, according to the Unicode Standard Annex #29 rules.","items":[[3,"Graphemes","unicode_segmentation","External iterator for a string's grapheme clusters.",null,null],[3,"GraphemeIndices","","External iterator for grapheme clusters and byte offsets.",null,null],[3,"GraphemeCursor","","Cursor-based segmenter for grapheme clusters.",null,null],[3,"UWordBounds","","External iterator for a string's word boundaries.",null,null],[3,"UWordBoundIndices","","External iterator for word boundaries and byte offsets.",null,null],[3,"UnicodeWords","","An iterator over the substrings of a string which, after splitting the string on word boundaries, contain any characters with the Alphabetic property, or with General_Category=Number.",null,null],[4,"GraphemeIncomplete","","An error return indicating that not enough content was available in the provided chunk to satisfy the query, and that more content must be provided.",null,null],[13,"PreContext","","More pre-context is needed. The caller should call `provide_context` with a chunk ending at the offset given, then retry the query. This will only be returned if the `chunk_start` parameter is nonzero.",0,null],[13,"PrevChunk","","When requesting `prev_boundary`, the cursor is moving past the beginning of the current chunk, so the chunk before that is requested. This will only be returned if the `chunk_start` parameter is nonzero.",0,null],[13,"NextChunk","","When requesting `next_boundary`, the cursor is moving past the end of the current chunk, so the chunk after that is requested. This will only be returned if the chunk ends before the `len` parameter provided on creation of the cursor.",0,null],[13,"InvalidOffset","","An error returned when the chunk given does not contain the cursor position.",0,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"graphemeindices"}}],[11,"as_str","","View the underlying data (the part yet to be iterated) as a slice of the original string.",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",1,null],[11,"next_back","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"graphemes"}}],[11,"as_str","","View the underlying data (the part yet to be iterated) as a slice of the original string.",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"size_hint","","",2,null],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"next_back","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"graphemecursor"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"graphemeincomplete"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"graphemeincomplete"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new cursor. The string and initial offset are given at creation time, but the contents of the string are not. The `is_extended` parameter controls whether extended grapheme clusters are selected.",3,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"bool"}],"output":{"name":"graphemecursor"}}],[11,"set_cursor","","Set the cursor to a new location in the same string.",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"cur_cursor","","The current offset of the cursor. Equal to the last value provided to `new()` or `set_cursor()`, or returned from `next_boundary()` or `prev_boundary()`.",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"provide_context","","Provide additional pre-context when it is needed to decide a boundary. The end of the chunk must coincide with the value given in the `GraphemeIncomplete::PreContext` request.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":null}],[11,"is_boundary","","Determine whether the current cursor location is a grapheme cluster boundary. Only a part of the string need be supplied. If `chunk_start` is nonzero or the length of `chunk` is not equal to `len` on creation, then this method may return `GraphemeIncomplete::PreContext`. The caller should then call `provide_context` with the requested chunk, then retry calling this method.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"generics":["bool","graphemeincomplete"],"name":"result"}}],[11,"next_boundary","","Find the next boundary after the current cursor position. Only a part of the string need be supplied. If the chunk is incomplete, then this method might return `GraphemeIncomplete::PreContext` or `GraphemeIncomplete::NextChunk`. In the former case, the caller should call `provide_context` with the requested chunk, then retry. In the latter case, the caller should provide the chunk following the one given, then retry.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"generics":["option","graphemeincomplete"],"name":"result"}}],[11,"prev_boundary","","Find the previous boundary after the current cursor position. Only a part of the string need be supplied. If the chunk is incomplete, then this method might return `GraphemeIncomplete::PreContext` or `GraphemeIncomplete::PrevChunk`. In the former case, the caller should call `provide_context` with the requested chunk, then retry. In the latter case, the caller should provide the chunk preceding the one given, then retry.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"generics":["option","graphemeincomplete"],"name":"result"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"next_back","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"uwordbounds"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"uwordboundindices"}}],[11,"as_str","","View the underlying data (the part yet to be iterated) as a slice of the original string.",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"next","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",6,null],[11,"next_back","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",5,null],[11,"next","","",5,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"next_back","","",5,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"as_str","","View the underlying data (the part yet to be iterated) as a slice of the original string.",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[17,"UNICODE_VERSION","","The version of Unicode that this version of unicode-segmentation is based on.",null,null],[8,"UnicodeSegmentation","","Methods for segmenting strings according to Unicode Standard Annex #29.",null,null],[10,"graphemes","","Returns an iterator over the [grapheme clusters][graphemes] of `self`.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"graphemes"}}],[10,"grapheme_indices","","Returns an iterator over the grapheme clusters of `self` and their byte offsets. See `graphemes()` for more information.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"graphemeindices"}}],[10,"unicode_words","","Returns an iterator over the words of `self`, separated on UAX#29 word boundaries.",7,{"inputs":[{"name":"self"}],"output":{"name":"unicodewords"}}],[10,"split_word_bounds","","Returns an iterator over substrings of `self` separated on UAX#29 word boundaries.",7,{"inputs":[{"name":"self"}],"output":{"name":"uwordbounds"}}],[10,"split_word_bound_indices","","Returns an iterator over substrings of `self`, split on UAX#29 word boundaries, and their offsets. See `split_word_bounds()` for more information.",7,{"inputs":[{"name":"self"}],"output":{"name":"uwordboundindices"}}]],"paths":[[4,"GraphemeIncomplete"],[3,"GraphemeIndices"],[3,"Graphemes"],[3,"GraphemeCursor"],[3,"UnicodeWords"],[3,"UWordBounds"],[3,"UWordBoundIndices"],[8,"UnicodeSegmentation"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser and/or lexer according to Unicode Standard Annex #31 rules.","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is based on.",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid identifier character.",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the 'XID_Start' Unicode property.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the 'XID_Continue' Unicode property.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}]],"paths":[[8,"UnicodeXID"]]};
searchIndex["unreachable"] = {"doc":"unreachable","items":[[5,"unreachable","unreachable","Hint to the optimizer that any code path which calls this function is statically unreachable and can be removed.",null,null],[8,"UncheckedOptionExt","","An extension trait for `Option<T>` providing unchecked unwrapping methods.",null,null],[10,"unchecked_unwrap","","Get the value out of this Option without checking for None.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[10,"unchecked_unwrap_none","","Assert that this Option is a None to the optimizer.",0,{"inputs":[{"name":"self"}],"output":null}],[8,"UncheckedResultExt","","An extension trait for `Result<T, E>` providing unchecked unwrapping methods.",null,null],[10,"unchecked_unwrap_ok","","Get the value out of this Result without checking for Err.",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[10,"unchecked_unwrap_err","","Get the error out of this Result without checking for Ok.",1,{"inputs":[{"name":"self"}],"output":{"name":"e"}}]],"paths":[[8,"UncheckedOptionExt"],[8,"UncheckedResultExt"]]};
searchIndex["utf8_ranges"] = {"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar values to equivalent ranges of UTF-8 bytes. This is useful for constructing byte based automatons that need to embed UTF-8 decoding.","items":[[3,"Utf8Range","utf8_ranges","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",0,null],[12,"end","","End of byte range (inclusive).",0,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",1,null],[13,"Two","","Two successive byte ranges.",1,null],[13,"Three","","Three successive byte ranges.",1,null],[13,"Four","","Four successive byte ranges.",1,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"utf8sequence"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"utf8sequence"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"utf8sequence"}],"output":{"name":"bool"}}],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",1,null],[11,"len","","Returns the number of byte ranges in this sequence.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"matches","","Returns true if and only if a prefix of `bytes` matches this sequence of byte ranges.",1,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"utf8range"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"utf8range"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"utf8range"}],"output":{"name":"bool"}}],[11,"matches","","Returns true if and only if the given byte is in this range.",0,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new iterator over UTF-8 byte ranges for the scalar value range given.",2,{"inputs":[{"name":"char"},{"name":"char"}],"output":{"name":"self"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"]]};
searchIndex["void"] = {"doc":"Void","items":[[4,"Void","void","The empty type for cases which can't occur.",null,null],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",null,null],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",null,null],[10,"void_unwrap","","Get the value out of a wrapper.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",null,null],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"void"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["ordering"],"name":"option"}}]],"paths":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]};
searchIndex["wavefront_obj"] = {"doc":"Parsers for wavefront's `.obj` and `.mtl` file format for loading meshes.","items":[[3,"ParseError","wavefront_obj","A parsing error, with location information.",null,null],[12,"line_number","","The line of input the error is on.",0,null],[12,"message","","The error message.",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[0,"mtl","","A parser for Wavefront's `.mtl` file format, for storing information about the material of which a 3D mesh is composed.",null,null],[3,"ParseError","wavefront_obj::mtl","A parsing error, with location information.",null,null],[12,"line_number","","The line of input the error is on.",0,null],[12,"message","","The error message.",0,null],[3,"MtlSet","","A set of materials in one `.mtl` file.",null,null],[12,"materials","","",1,null],[3,"Material","","A single material that can be applied to any face. They are generally applied by using the Phong shading model.",null,null],[12,"name","","",2,null],[12,"specular_coefficient","","",2,null],[12,"color_ambient","","",2,null],[12,"color_diffuse","","",2,null],[12,"color_specular","","",2,null],[12,"color_emissive","","",2,null],[12,"optical_density","","",2,null],[12,"alpha","","",2,null],[12,"illumination","","",2,null],[12,"uv_map","","",2,null],[3,"Color","","",null,null],[12,"r","","",3,null],[12,"g","","",3,null],[12,"b","","",3,null],[4,"Illumination","","How a given material is supposed to be illuminated.",null,null],[13,"Ambient","","",4,null],[13,"AmbientDiffuse","","",4,null],[13,"AmbientDiffuseSpecular","","",4,null],[5,"parse","","Parses a wavefront `.mtl` file, returning either the successfully parsed file, or an error. Support in this parser for the full file format is best-effort and realistically I will only end up supporting the subset of the file format which falls under the \"shit I see exported from blender\" category.",null,{"inputs":[{"name":"string"}],"output":{"generics":["mtlset","parseerror"],"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"mtlset"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"mtlset"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"mtlset"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"material"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"illumination"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"illumination"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"illumination"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"illumination"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"material"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"material"}],"output":{"generics":["ordering"],"name":"option"}}],[0,"obj","wavefront_obj","A parser for Wavefront's `.obj` file format for storing 3D meshes.",null,null],[3,"ObjSet","wavefront_obj::obj","A set of objects, as listed in an `.obj` file.",null,null],[12,"material_library","","Which material library to use.",5,null],[12,"objects","","The set of objects.",5,null],[3,"Object","","A mesh object.",null,null],[12,"name","","A human-readable name for this object.",6,null],[12,"vertices","","The set of vertices this object is composed of. These are referenced by index in `shapes` contained within each element of `geometry`.",6,null],[12,"tex_vertices","","The set of texture vertices referenced by this object. The actual vertices are indexed by the second element in a `VTNIndex`.",6,null],[12,"normals","","The set of normals referenced by this object. This are are referenced by the third element in a `VTNIndex`.",6,null],[12,"geometry","","A set of shapes (with materials applied to them) of which this object is composed.",6,null],[3,"Geometry","","A set of shapes, all using the given material.",null,null],[12,"material_name","","A reference to the material to apply to this geometry.",7,null],[12,"shapes","","The shapes of which this geometry is composed.",7,null],[3,"Shape","","A shape gathers a primitive and groups.",null,null],[12,"primitive","","The primitive of the shape.",8,null],[12,"groups","","Associated groups. No associated group means the shape uses the default group.",8,null],[12,"smoothing_groups","","Associated smoothing groups. No associated smoothing group means the shape should be rendered flat.",8,null],[3,"Vertex","","A single 3-dimensional point on the corner of an object.",null,null],[12,"x","","",9,null],[12,"y","","",9,null],[12,"z","","",9,null],[3,"TVertex","","A single 3-dimensional point on a texture. \"Texure Vertex\".",null,null],[12,"u","","",10,null],[12,"v","","",10,null],[12,"w","","",10,null],[4,"Primitive","","The various primitives supported by this library.",null,null],[13,"Point","","A point specified by its position.",11,null],[13,"Line","","A line specified by its endpoints.",11,null],[13,"Triangle","","A triangle specified by its three vertices.",11,null],[5,"parse","","Parses a wavefront `.obj` file, returning either the successfully parsed file, or an error. Support in this parser for the full file format is best-effort and realistically I will only end up supporting the subset of the file format which falls under the \"things I see exported from blender\" category.",null,{"inputs":[{"name":"string"}],"output":{"generics":["objset","parseerror"],"name":"result"}}],[6,"GroupName","","Name of a group.",null,null],[6,"Normal","","A single 3-dimensional normal",null,null],[6,"VertexIndex","","An index into the `vertices` array of an object, representing a vertex in the mesh. After parsing, this is guaranteed to be a valid index into the array, so unchecked indexing may be used.",null,null],[6,"TextureIndex","","An index into the `texture vertex` array of an object.",null,null],[6,"NormalIndex","","An index into the `normals` array of an object.",null,null],[6,"VTNIndex","","An index into the vertex array, with an optional index into the texture array. This is used to define the corners of shapes which may or may not be textured.",null,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"objset"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"objset"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"objset"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"object"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"object"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"object"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"geometry"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"geometry"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"geometry"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"shape"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"shape"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"shape"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"primitive"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",11,null],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"vertex"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"tvertex"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"vertex"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"vertex"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"tvertex"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"self"},{"name":"tvertex"}],"output":{"generics":["ordering"],"name":"option"}}]],"paths":[[3,"ParseError"],[3,"MtlSet"],[3,"Material"],[3,"Color"],[4,"Illumination"],[3,"ObjSet"],[3,"Object"],[3,"Geometry"],[3,"Shape"],[3,"Vertex"],[3,"TVertex"],[4,"Primitive"]]};
searchIndex["wayland_client"] = {"doc":"Client-side Wayland connector","items":[[3,"EnvHandler","wayland_client","Utility type to handle the registry and global objects",null,null],[3,"EventQueue","","An event queue managing wayland events",null,null],[3,"EventQueueHandle","","Handle to an event queue",null,null],[3,"ReadEventsGuard","","A guard over a read intention.",null,null],[3,"StateGuard","","Guard to access internal state of an event queue",null,null],[4,"ConnectError","","Enum representing the possible reasons why connecting to the wayland server failed",null,null],[13,"NoWaylandLib","","The library was compiled with the `dlopen` feature, and the `libwayland-client.so` library could not be found at runtime",0,null],[13,"NoCompositorListening","","Any needed library was found, but the listening socket of the server could not be found.",0,null],[4,"FatalError","","Enum representing possible errors fatal to a wayland session",null,null],[13,"Io","","Session aborted after an I/O error",1,null],[13,"Protocol","","Session aborted after a protocol error",1,null],[12,"interface","wayland_client::FatalError","name of the interface of the proxy that generated this error",1,null],[12,"proxy_id","","internal id of the proxy that generated this error",1,null],[12,"error_code","","code of the error, as defined by the `Error` enum of the interface of the proxy. It can directly be fed to the `from_raw` static method of this enum.",1,null],[4,"RegisterStatus","wayland_client","Status of a registration attempt of a proxy.",null,null],[13,"Registered","","The proxy was properly registered to this event queue & handler.",2,null],[13,"Unmanaged","","The proxy was not registered because it is not managed by `wayland-client`.",2,null],[13,"Dead","","The proxy was not registered because it is already destroyed.",2,null],[4,"RequestResult","","Possible outcome of the call of a request on a proxy",null,null],[13,"Sent","","Message has been buffered and will be sent to server",3,null],[13,"Destroyed","","This proxy is already destroyed, request has been ignored",3,null],[4,"Liveness","","Represents the state of liveness of a wayland object",null,null],[13,"Alive","","This object is alive and its requests can be called",4,null],[13,"Dead","","This object is dead, calling its requests will do nothing and return and error.",4,null],[13,"Unmanaged","","This object is not managed by `wayland-client`, you can call its methods but this might crash the program if it was actually dead.",4,null],[5,"connect_to","","Connect to the compositor socket",null,{"inputs":[{"name":"osstr"}],"output":{"generics":["connecterror"],"name":"result"}}],[5,"default_connect","","Connect to the compositor socket",null,{"inputs":[],"output":{"generics":["connecterror"],"name":"result"}}],[0,"protocol","","The wayland core protocol",null,null],[0,"wl_display","wayland_client::protocol","core global object",null,null],[3,"WlDisplay","wayland_client::protocol::wl_display","",null,null],[4,"Error","","global error values",null,null],[13,"InvalidObject","","",5,null],[13,"InvalidMethod","","",5,null],[13,"NoMemory","","",5,null],[0,"wl_registry","wayland_client::protocol","global registry object",null,null],[3,"WlRegistry","wayland_client::protocol::wl_registry","",null,null],[8,"Handler","","",null,null],[11,"global","","announce global object",6,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlregistry"},{"name":"u32"},{"name":"string"},{"name":"u32"}],"output":null}],[11,"global_remove","","announce removal of global object",6,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlregistry"},{"name":"u32"}],"output":null}],[0,"wl_callback","wayland_client::protocol","callback object",null,null],[3,"WlCallback","wayland_client::protocol::wl_callback","",null,null],[8,"Handler","","",null,null],[11,"done","","done event",7,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlcallback"},{"name":"u32"}],"output":null}],[0,"wl_compositor","wayland_client::protocol","the compositor singleton",null,null],[3,"WlCompositor","wayland_client::protocol::wl_compositor","",null,null],[0,"wl_shm_pool","wayland_client::protocol","a shared memory pool",null,null],[3,"WlShmPool","wayland_client::protocol::wl_shm_pool","",null,null],[0,"wl_shm","wayland_client::protocol","shared memory support",null,null],[3,"WlShm","wayland_client::protocol::wl_shm","",null,null],[4,"Error","","wl_shm error values",null,null],[13,"InvalidFormat","","",8,null],[13,"InvalidStride","","",8,null],[13,"InvalidFd","","",8,null],[4,"Format","","pixel formats",null,null],[13,"Argb8888","","",9,null],[13,"Xrgb8888","","",9,null],[13,"C8","","",9,null],[13,"Rgb332","","",9,null],[13,"Bgr233","","",9,null],[13,"Xrgb4444","","",9,null],[13,"Xbgr4444","","",9,null],[13,"Rgbx4444","","",9,null],[13,"Bgrx4444","","",9,null],[13,"Argb4444","","",9,null],[13,"Abgr4444","","",9,null],[13,"Rgba4444","","",9,null],[13,"Bgra4444","","",9,null],[13,"Xrgb1555","","",9,null],[13,"Xbgr1555","","",9,null],[13,"Rgbx5551","","",9,null],[13,"Bgrx5551","","",9,null],[13,"Argb1555","","",9,null],[13,"Abgr1555","","",9,null],[13,"Rgba5551","","",9,null],[13,"Bgra5551","","",9,null],[13,"Rgb565","","",9,null],[13,"Bgr565","","",9,null],[13,"Rgb888","","",9,null],[13,"Bgr888","","",9,null],[13,"Xbgr8888","","",9,null],[13,"Rgbx8888","","",9,null],[13,"Bgrx8888","","",9,null],[13,"Abgr8888","","",9,null],[13,"Rgba8888","","",9,null],[13,"Bgra8888","","",9,null],[13,"Xrgb2101010","","",9,null],[13,"Xbgr2101010","","",9,null],[13,"Rgbx1010102","","",9,null],[13,"Bgrx1010102","","",9,null],[13,"Argb2101010","","",9,null],[13,"Abgr2101010","","",9,null],[13,"Rgba1010102","","",9,null],[13,"Bgra1010102","","",9,null],[13,"Yuyv","","",9,null],[13,"Yvyu","","",9,null],[13,"Uyvy","","",9,null],[13,"Vyuy","","",9,null],[13,"Ayuv","","",9,null],[13,"Nv12","","",9,null],[13,"Nv21","","",9,null],[13,"Nv16","","",9,null],[13,"Nv61","","",9,null],[13,"Yuv410","","",9,null],[13,"Yvu410","","",9,null],[13,"Yuv411","","",9,null],[13,"Yvu411","","",9,null],[13,"Yuv420","","",9,null],[13,"Yvu420","","",9,null],[13,"Yuv422","","",9,null],[13,"Yvu422","","",9,null],[13,"Yuv444","","",9,null],[13,"Yvu444","","",9,null],[8,"Handler","","",null,null],[11,"format","","pixel format description",10,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshm"},{"name":"format"}],"output":null}],[0,"wl_buffer","wayland_client::protocol","content for a wl_surface",null,null],[3,"WlBuffer","wayland_client::protocol::wl_buffer","",null,null],[8,"Handler","","",null,null],[11,"release","","compositor releases buffer",11,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlbuffer"}],"output":null}],[0,"wl_data_offer","wayland_client::protocol","offer to transfer data",null,null],[3,"WlDataOffer","wayland_client::protocol::wl_data_offer","",null,null],[4,"Error","","",null,null],[13,"InvalidFinish","","",12,null],[13,"InvalidActionMask","","",12,null],[13,"InvalidAction","","",12,null],[13,"InvalidOffer","","",12,null],[8,"Handler","","",null,null],[11,"offer","","advertise offered mime type",13,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldataoffer"},{"name":"string"}],"output":null}],[11,"source_actions","","notify the source-side available actions",13,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldataoffer"},{"name":"u32"}],"output":null}],[11,"action","","notify the selected action",13,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldataoffer"},{"name":"u32"}],"output":null}],[0,"wl_data_source","wayland_client::protocol","offer to transfer data",null,null],[3,"WlDataSource","wayland_client::protocol::wl_data_source","",null,null],[4,"Error","","",null,null],[13,"InvalidActionMask","","",14,null],[13,"InvalidSource","","",14,null],[8,"Handler","","",null,null],[11,"target","","a target accepts an offered mime type",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"},{"generics":["string"],"name":"option"}],"output":null}],[11,"send","","send the data",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"},{"name":"string"},{"name":"rawfd"}],"output":null}],[11,"cancelled","","selection was cancelled",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"}],"output":null}],[11,"dnd_drop_performed","","the drag-and-drop operation physically finished",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"}],"output":null}],[11,"dnd_finished","","the drag-and-drop operation concluded",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"}],"output":null}],[11,"action","","notify the selected action",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"},{"name":"u32"}],"output":null}],[0,"wl_data_device","wayland_client::protocol","data transfer device",null,null],[3,"WlDataDevice","wayland_client::protocol::wl_data_device","",null,null],[4,"Error","","",null,null],[13,"Role","","",16,null],[8,"Handler","","",null,null],[11,"data_offer","","introduce a new wl_data_offer",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"},{"name":"wldataoffer"}],"output":null}],[11,"enter","","initiate drag-and-drop session",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"},{"name":"u32"},{"name":"wlsurface"},{"name":"f64"},{"name":"f64"},{"generics":["wldataoffer"],"name":"option"}],"output":null}],[11,"leave","","end drag-and-drop session",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"}],"output":null}],[11,"motion","","drag-and-drop session motion",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"drop","","end drag-and-drop session successfully",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"}],"output":null}],[11,"selection","","advertise new selection",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"},{"generics":["wldataoffer"],"name":"option"}],"output":null}],[0,"wl_data_device_manager","wayland_client::protocol","data transfer interface",null,null],[3,"WlDataDeviceManager","wayland_client::protocol::wl_data_device_manager","",null,null],[3,"DndAction","","drag and drop actions",null,null],[17,"None","","",null,null],[17,"Copy","","",null,null],[17,"Move","","",null,null],[17,"Ask","","",null,null],[0,"wl_shell","wayland_client::protocol","create desktop-style surfaces",null,null],[3,"WlShell","wayland_client::protocol::wl_shell","",null,null],[4,"Error","","",null,null],[13,"Role","","",18,null],[0,"wl_shell_surface","wayland_client::protocol","desktop-style metadata interface",null,null],[3,"WlShellSurface","wayland_client::protocol::wl_shell_surface","",null,null],[3,"Resize","","edge values for resizing",null,null],[3,"Transient","","details of transient behaviour",null,null],[4,"FullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","",19,null],[13,"Scale","","",19,null],[13,"Driver","","",19,null],[13,"Fill","","",19,null],[17,"None","","",null,null],[17,"Top","","",null,null],[17,"Bottom","","",null,null],[17,"Left","","",null,null],[17,"TopLeft","","",null,null],[17,"BottomLeft","","",null,null],[17,"Right","","",null,null],[17,"TopRight","","",null,null],[17,"BottomRight","","",null,null],[17,"Inactive","","",null,null],[8,"Handler","","",null,null],[11,"ping","","ping client",20,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshellsurface"},{"name":"u32"}],"output":null}],[11,"configure","","suggest resize",20,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshellsurface"},{"name":"resize"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"popup_done","","popup interaction is done",20,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshellsurface"}],"output":null}],[0,"wl_surface","wayland_client::protocol","an onscreen surface",null,null],[3,"WlSurface","wayland_client::protocol::wl_surface","",null,null],[4,"Error","","wl_surface error values",null,null],[13,"InvalidScale","","",21,null],[13,"InvalidTransform","","",21,null],[8,"Handler","","",null,null],[11,"enter","","surface enters an output",22,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlsurface"},{"name":"wloutput"}],"output":null}],[11,"leave","","surface leaves an output",22,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlsurface"},{"name":"wloutput"}],"output":null}],[0,"wl_seat","wayland_client::protocol","group of input devices",null,null],[3,"WlSeat","wayland_client::protocol::wl_seat","",null,null],[3,"Capability","","seat capability bitmask",null,null],[17,"Pointer","","",null,null],[17,"Keyboard","","",null,null],[17,"Touch","","",null,null],[8,"Handler","","",null,null],[11,"capabilities","","seat capabilities changed",23,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlseat"},{"name":"capability"}],"output":null}],[11,"name","","unique identifier for this seat",23,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlseat"},{"name":"string"}],"output":null}],[0,"wl_pointer","wayland_client::protocol","pointer input device",null,null],[3,"WlPointer","wayland_client::protocol::wl_pointer","",null,null],[4,"Error","","",null,null],[13,"Role","","",24,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","",25,null],[13,"Pressed","","",25,null],[4,"Axis","","axis types",null,null],[13,"VerticalScroll","","",26,null],[13,"HorizontalScroll","","",26,null],[4,"AxisSource","","axis source types",null,null],[13,"Wheel","","",27,null],[13,"Finger","","",27,null],[13,"Continuous","","",27,null],[8,"Handler","","",null,null],[11,"enter","","enter event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"wlsurface"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"leave","","leave event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"wlsurface"}],"output":null}],[11,"motion","","pointer motion event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"button","","pointer button event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":null}],[11,"axis","","axis event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"axis"},{"name":"f64"}],"output":null}],[11,"frame","","end of a pointer event sequence",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"}],"output":null}],[11,"axis_source","","axis source event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"axissource"}],"output":null}],[11,"axis_stop","","axis stop event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"axis"}],"output":null}],[11,"axis_discrete","","axis click event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"axis"},{"name":"i32"}],"output":null}],[0,"wl_keyboard","wayland_client::protocol","keyboard input device",null,null],[3,"WlKeyboard","wayland_client::protocol::wl_keyboard","",null,null],[4,"KeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","",29,null],[13,"XkbV1","","",29,null],[4,"KeyState","","physical key state",null,null],[13,"Released","","",30,null],[13,"Pressed","","",30,null],[8,"Handler","","",null,null],[11,"keymap","","keyboard mapping",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"keymapformat"},{"name":"rawfd"},{"name":"u32"}],"output":null}],[11,"enter","","enter event",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"wlsurface"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"leave","","leave event",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"wlsurface"}],"output":null}],[11,"key","","key event",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"keystate"}],"output":null}],[11,"modifiers","","modifier and group state",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"repeat_info","","repeat rate and delay",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"i32"},{"name":"i32"}],"output":null}],[0,"wl_touch","wayland_client::protocol","touchscreen input device",null,null],[3,"WlTouch","wayland_client::protocol::wl_touch","",null,null],[8,"Handler","","",null,null],[11,"down","","touch down event and beginning of a touch sequence",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"i32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"up","","end of a touch event sequence",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":null}],[11,"motion","","update of touch point coordinates",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"},{"name":"u32"},{"name":"i32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"frame","","end of touch frame event",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"}],"output":null}],[11,"cancel","","touch session cancelled",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"}],"output":null}],[0,"wl_output","wayland_client::protocol","compositor output region",null,null],[3,"WlOutput","wayland_client::protocol::wl_output","",null,null],[3,"Mode","","mode information",null,null],[4,"Subpixel","","subpixel geometry information",null,null],[13,"Unknown","","",33,null],[13,"None","","",33,null],[13,"HorizontalRgb","","",33,null],[13,"HorizontalBgr","","",33,null],[13,"VerticalRgb","","",33,null],[13,"VerticalBgr","","",33,null],[4,"Transform","","transform from framebuffer to output",null,null],[13,"Normal","","",34,null],[13,"_90","","",34,null],[13,"_180","","",34,null],[13,"_270","","",34,null],[13,"Flipped","","",34,null],[13,"Flipped90","","",34,null],[13,"Flipped180","","",34,null],[13,"Flipped270","","",34,null],[17,"Current","","",null,null],[17,"Preferred","","",null,null],[8,"Handler","","",null,null],[11,"geometry","","properties of the output",35,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wloutput"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"subpixel"},{"name":"string"},{"name":"string"},{"name":"transform"}],"output":null}],[11,"mode","","advertise available modes for the output",35,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wloutput"},{"name":"mode"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"done","","sent all information about output",35,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wloutput"}],"output":null}],[11,"scale","","output scaling properties",35,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wloutput"},{"name":"i32"}],"output":null}],[0,"wl_region","wayland_client::protocol","region interface",null,null],[3,"WlRegion","wayland_client::protocol::wl_region","",null,null],[0,"wl_subcompositor","wayland_client::protocol","sub-surface compositing",null,null],[3,"WlSubcompositor","wayland_client::protocol::wl_subcompositor","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","",36,null],[0,"wl_subsurface","wayland_client::protocol","sub-surface interface to a wl_surface",null,null],[3,"WlSubsurface","wayland_client::protocol::wl_subsurface","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","",37,null],[0,"protocol_interfaces","wayland_client","Interfaces for the core protocol",null,null],[7,"wl_display_requests","wayland_client::protocol_interfaces","",null,null],[7,"wl_display_events","","",null,null],[7,"wl_display_interface","","",null,null],[7,"wl_registry_requests","","",null,null],[7,"wl_registry_events","","",null,null],[7,"wl_registry_interface","","",null,null],[7,"wl_callback_events","","",null,null],[7,"wl_callback_interface","","",null,null],[7,"wl_compositor_requests","","",null,null],[7,"wl_compositor_interface","","",null,null],[7,"wl_shm_pool_requests","","",null,null],[7,"wl_shm_pool_interface","","",null,null],[7,"wl_shm_requests","","",null,null],[7,"wl_shm_events","","",null,null],[7,"wl_shm_interface","","",null,null],[7,"wl_buffer_requests","","",null,null],[7,"wl_buffer_events","","",null,null],[7,"wl_buffer_interface","","",null,null],[7,"wl_data_offer_requests","","",null,null],[7,"wl_data_offer_events","","",null,null],[7,"wl_data_offer_interface","","",null,null],[7,"wl_data_source_requests","","",null,null],[7,"wl_data_source_events","","",null,null],[7,"wl_data_source_interface","","",null,null],[7,"wl_data_device_requests","","",null,null],[7,"wl_data_device_events","","",null,null],[7,"wl_data_device_interface","","",null,null],[7,"wl_data_device_manager_requests","","",null,null],[7,"wl_data_device_manager_interface","","",null,null],[7,"wl_shell_requests","","",null,null],[7,"wl_shell_interface","","",null,null],[7,"wl_shell_surface_requests","","",null,null],[7,"wl_shell_surface_events","","",null,null],[7,"wl_shell_surface_interface","","",null,null],[7,"wl_surface_requests","","",null,null],[7,"wl_surface_events","","",null,null],[7,"wl_surface_interface","","",null,null],[7,"wl_seat_requests","","",null,null],[7,"wl_seat_events","","",null,null],[7,"wl_seat_interface","","",null,null],[7,"wl_pointer_requests","","",null,null],[7,"wl_pointer_events","","",null,null],[7,"wl_pointer_interface","","",null,null],[7,"wl_keyboard_requests","","",null,null],[7,"wl_keyboard_events","","",null,null],[7,"wl_keyboard_interface","","",null,null],[7,"wl_touch_requests","","",null,null],[7,"wl_touch_events","","",null,null],[7,"wl_touch_interface","","",null,null],[7,"wl_output_requests","","",null,null],[7,"wl_output_events","","",null,null],[7,"wl_output_interface","","",null,null],[7,"wl_region_requests","","",null,null],[7,"wl_region_interface","","",null,null],[7,"wl_subcompositor_requests","","",null,null],[7,"wl_subcompositor_interface","","",null,null],[7,"wl_subsurface_requests","","",null,null],[7,"wl_subsurface_interface","","",null,null],[11,"fmt","wayland_client","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"flush","wayland_client::protocol::wl_display","Non-blocking write to the server",38,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[11,"create_event_queue","","Create a new EventQueue",38,{"inputs":[{"name":"self"}],"output":{"name":"eventqueue"}}],[11,"last_error","","Get the last error that occured on the session",38,{"inputs":[{"name":"self"}],"output":{"generics":["fatalerror"],"name":"option"}}],[11,"get_fd","","Get the raw File Descriptor associated with the connection",38,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"drop","","",38,{"inputs":[{"name":"self"}],"output":null}],[11,"register","wayland_client","Register a proxy to a handler of this event queue.",39,{"inputs":[{"name":"self"},{"name":"p"},{"name":"usize"}],"output":{"name":"registerstatus"}}],[11,"add_handler","","Insert a new handler to this event queue",39,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"name":"usize"}}],[11,"add_handler_with_init","","Insert a new handler with init",39,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"name":"usize"}}],[11,"remove_handler","","Remove a handler previously inserted in this event loop and returns it.",39,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"h"}}],[11,"get_handler","","Get a reference to a handler",40,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"h"}}],[11,"get_mut_handler","","Get a mutable reference to a handler",40,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"h"}}],[11,"dispatch","","Dispatches events from the internal buffer.",41,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"ioresult"}}],[11,"dispatch_pending","","Dispatches pending events from the internal buffer.",41,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"ioresult"}}],[11,"sync_roundtrip","","Synchronous roundtrip",41,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"ioresult"}}],[11,"state","","Get a handle to the internal state",41,{"inputs":[{"name":"self"}],"output":{"name":"stateguard"}}],[11,"prepare_read","","Prepare an conccurent read",41,{"inputs":[{"name":"self"}],"output":{"generics":["readeventsguard"],"name":"option"}}],[11,"deref","","",41,{"inputs":[{"name":"self"}],"output":{"name":"eventqueuehandle"}}],[11,"deref_mut","","",41,{"inputs":[{"name":"self"}],"output":{"name":"eventqueuehandle"}}],[11,"read_events","","Read events",42,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"ioresult"}}],[11,"cancel","","Cancel the read",42,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",42,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Create a new EnvHandler",43,{"inputs":[],"output":{"name":"envhandler"}}],[11,"ready","","Is the handler ready",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"globals","","List of advertised globals",43,null],[11,"deref","","",43,{"inputs":[{"name":"self"}],"output":{"name":"h"}}],[11,"global","","",43,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlregistry"},{"name":"u32"},{"name":"string"},{"name":"u32"}],"output":null}],[11,"global_remove","","",43,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlregistry"},{"name":"u32"}],"output":null}],[11,"message","","",43,null],[0,"egl","","EGL utilities",null,null],[3,"WlEglSurface","wayland_client::egl","EGL surface",null,null],[5,"is_available","","Checks if the wayland-egl lib is available and can be used",null,{"inputs":[],"output":{"name":"bool"}}],[11,"new","","Create an EGL surface from a wayland surface",44,{"inputs":[{"name":"wlsurface"},{"name":"i32"},{"name":"i32"}],"output":{"name":"wleglsurface"}}],[11,"new_from_raw","","Create an EGL surface from a raw pointer to a wayland surface",44,null],[11,"get_size","","Fetch current size of the EGL surface",44,null],[11,"resize","","Resize the EGL surface",44,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"ptr","","Raw pointer to the EGL surface",44,null],[11,"drop","","",44,{"inputs":[{"name":"self"}],"output":null}],[0,"cursor","wayland_client","Cursor utilities",null,null],[3,"CursorTheme","wayland_client::cursor","Represents a cursor theme loaded from the system.",null,null],[3,"Cursor","","A cursor from a theme. Can contain several images if animated.",null,null],[3,"CursorImageBuffer","","A buffer containing a cursor image.",null,null],[5,"is_available","","Checks if the wayland-cursor lib is available and can be used",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_theme","","Attempts to load a cursor theme from given name.",null,{"inputs":[{"generics":["str"],"name":"option"},{"name":"u32"},{"name":"wlshm"}],"output":{"name":"cursortheme"}}],[11,"get_cursor","","Retrieve a cursor from the theme.",45,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["cursor"],"name":"option"}}],[11,"drop","","",45,{"inputs":[{"name":"self"}],"output":null}],[11,"name","","Retrieve the name of this cursor.",46,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"image_count","","Retrieve the number of images contained in this animated cursor",46,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"frame","","Retrieve the image number of cursor animation.",46,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"usize"}}],[11,"frame_and_duration","","Retrieve the image number and its duration.",46,null],[11,"frame_buffer","","Retrieve a `CursorImageBuffer` containing the given image of an animation.",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["cursorimagebuffer"],"name":"option"}}],[11,"frame_info","","Retrive the metadate associated with given frame of the animation.",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"deref","","",47,{"inputs":[{"name":"self"}],"output":{"name":"wlbuffer"}}],[11,"ptr","wayland_client::protocol::wl_display","",38,null],[11,"from_ptr_new","","",38,null],[11,"from_ptr_initialized","","",38,null],[11,"interface_ptr","","",38,null],[11,"interface_name","","",38,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",38,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",38,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",38,{"inputs":[{"name":"self"},{"name":"wldisplay"}],"output":{"name":"bool"}}],[11,"set_user_data","","",38,null],[11,"get_user_data","","",38,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",5,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"sync","","asynchronous roundtrip",38,{"inputs":[{"name":"self"}],"output":{"name":"wlcallback"}}],[11,"get_registry","","get global registry object",38,{"inputs":[{"name":"self"}],"output":{"name":"wlregistry"}}],[11,"global","wayland_client::protocol::wl_registry","announce global object",6,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlregistry"},{"name":"u32"},{"name":"string"},{"name":"u32"}],"output":null}],[11,"global_remove","","announce removal of global object",6,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlregistry"},{"name":"u32"}],"output":null}],[11,"ptr","","",48,null],[11,"from_ptr_new","","",48,null],[11,"from_ptr_initialized","","",48,null],[11,"interface_ptr","","",48,null],[11,"interface_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",48,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",48,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",48,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",48,{"inputs":[{"name":"self"},{"name":"wlregistry"}],"output":{"name":"bool"}}],[11,"set_user_data","","",48,null],[11,"get_user_data","","",48,null],[11,"bind","","bind an object to the display",48,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"t"}}],[11,"done","wayland_client::protocol::wl_callback","done event",7,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlcallback"},{"name":"u32"}],"output":null}],[11,"ptr","","",49,null],[11,"from_ptr_new","","",49,null],[11,"from_ptr_initialized","","",49,null],[11,"interface_ptr","","",49,null],[11,"interface_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",49,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",49,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",49,{"inputs":[{"name":"self"},{"name":"wlcallback"}],"output":{"name":"bool"}}],[11,"set_user_data","","",49,null],[11,"get_user_data","","",49,null],[11,"ptr","wayland_client::protocol::wl_compositor","",50,null],[11,"from_ptr_new","","",50,null],[11,"from_ptr_initialized","","",50,null],[11,"interface_ptr","","",50,null],[11,"interface_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",50,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",50,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",50,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",50,{"inputs":[{"name":"self"},{"name":"wlcompositor"}],"output":{"name":"bool"}}],[11,"set_user_data","","",50,null],[11,"get_user_data","","",50,null],[11,"create_surface","","create new surface",50,{"inputs":[{"name":"self"}],"output":{"name":"wlsurface"}}],[11,"create_region","","create new region",50,{"inputs":[{"name":"self"}],"output":{"name":"wlregion"}}],[11,"ptr","wayland_client::protocol::wl_shm_pool","",51,null],[11,"from_ptr_new","","",51,null],[11,"from_ptr_initialized","","",51,null],[11,"interface_ptr","","",51,null],[11,"interface_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",51,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",51,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",51,{"inputs":[{"name":"self"},{"name":"wlshmpool"}],"output":{"name":"bool"}}],[11,"set_user_data","","",51,null],[11,"get_user_data","","",51,null],[11,"create_buffer","","create a buffer from the pool",51,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"format"}],"output":{"generics":["wlbuffer"],"name":"requestresult"}}],[11,"destroy","","destroy the pool",51,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"resize","","change the size of the pool mapping",51,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"format","wayland_client::protocol::wl_shm","pixel format description",10,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshm"},{"name":"format"}],"output":null}],[11,"ptr","","",52,null],[11,"from_ptr_new","","",52,null],[11,"from_ptr_initialized","","",52,null],[11,"interface_ptr","","",52,null],[11,"interface_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",52,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",52,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",52,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",52,{"inputs":[{"name":"self"},{"name":"wlshm"}],"output":{"name":"bool"}}],[11,"set_user_data","","",52,null],[11,"get_user_data","","",52,null],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",8,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"format"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"from_raw","","",9,{"inputs":[{"name":"u32"}],"output":{"generics":["format"],"name":"option"}}],[11,"to_raw","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"create_pool","","create a shm pool",52,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"i32"}],"output":{"name":"wlshmpool"}}],[11,"release","wayland_client::protocol::wl_buffer","compositor releases buffer",11,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlbuffer"}],"output":null}],[11,"ptr","","",53,null],[11,"from_ptr_new","","",53,null],[11,"from_ptr_initialized","","",53,null],[11,"interface_ptr","","",53,null],[11,"interface_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",53,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",53,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",53,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",53,{"inputs":[{"name":"self"},{"name":"wlbuffer"}],"output":{"name":"bool"}}],[11,"set_user_data","","",53,null],[11,"get_user_data","","",53,null],[11,"destroy","","destroy a buffer",53,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"offer","wayland_client::protocol::wl_data_offer","advertise offered mime type",13,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldataoffer"},{"name":"string"}],"output":null}],[11,"source_actions","","notify the source-side available actions",13,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldataoffer"},{"name":"u32"}],"output":null}],[11,"action","","notify the selected action",13,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldataoffer"},{"name":"u32"}],"output":null}],[11,"ptr","","",54,null],[11,"from_ptr_new","","",54,null],[11,"from_ptr_initialized","","",54,null],[11,"interface_ptr","","",54,null],[11,"interface_name","","",54,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",54,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",54,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",54,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",54,{"inputs":[{"name":"self"},{"name":"wldataoffer"}],"output":{"name":"bool"}}],[11,"set_user_data","","",54,null],[11,"get_user_data","","",54,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",12,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"accept","","accept one of the offered mime types",54,{"inputs":[{"name":"self"},{"name":"u32"},{"generics":["string"],"name":"option"}],"output":{"name":"requestresult"}}],[11,"receive","","request that the data is transferred",54,{"inputs":[{"name":"self"},{"name":"string"},{"name":"rawfd"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy data offer",54,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"finish","","the offer will no longer be used",54,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_actions","","set the available/preferred drag-and-drop actions",54,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"target","wayland_client::protocol::wl_data_source","a target accepts an offered mime type",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"},{"generics":["string"],"name":"option"}],"output":null}],[11,"send","","send the data",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"},{"name":"string"},{"name":"rawfd"}],"output":null}],[11,"cancelled","","selection was cancelled",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"}],"output":null}],[11,"dnd_drop_performed","","the drag-and-drop operation physically finished",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"}],"output":null}],[11,"dnd_finished","","the drag-and-drop operation concluded",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"}],"output":null}],[11,"action","","notify the selected action",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"},{"name":"u32"}],"output":null}],[11,"ptr","","",55,null],[11,"from_ptr_new","","",55,null],[11,"from_ptr_initialized","","",55,null],[11,"interface_ptr","","",55,null],[11,"interface_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",55,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",55,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",55,{"inputs":[{"name":"self"},{"name":"wldatasource"}],"output":{"name":"bool"}}],[11,"set_user_data","","",55,null],[11,"get_user_data","","",55,null],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",14,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"offer","","add an offered mime type",55,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the data source",55,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_actions","","set the available drag-and-drop actions",55,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"data_offer","wayland_client::protocol::wl_data_device","introduce a new wl_data_offer",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"},{"name":"wldataoffer"}],"output":null}],[11,"enter","","initiate drag-and-drop session",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"},{"name":"u32"},{"name":"wlsurface"},{"name":"f64"},{"name":"f64"},{"generics":["wldataoffer"],"name":"option"}],"output":null}],[11,"leave","","end drag-and-drop session",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"}],"output":null}],[11,"motion","","drag-and-drop session motion",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"drop","","end drag-and-drop session successfully",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"}],"output":null}],[11,"selection","","advertise new selection",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"},{"generics":["wldataoffer"],"name":"option"}],"output":null}],[11,"ptr","","",56,null],[11,"from_ptr_new","","",56,null],[11,"from_ptr_initialized","","",56,null],[11,"interface_ptr","","",56,null],[11,"interface_name","","",56,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",56,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",56,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",56,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",56,{"inputs":[{"name":"self"},{"name":"wldatadevice"}],"output":{"name":"bool"}}],[11,"set_user_data","","",56,null],[11,"get_user_data","","",56,null],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",16,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",16,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"start_drag","","start drag-and-drop operation",56,{"inputs":[{"name":"self"},{"generics":["wldatasource"],"name":"option"},{"name":"wlsurface"},{"generics":["wlsurface"],"name":"option"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"set_selection","","copy data to the selection",56,{"inputs":[{"name":"self"},{"generics":["wldatasource"],"name":"option"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"release","","destroy data device",56,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_data_device_manager","",57,null],[11,"from_ptr_new","","",57,null],[11,"from_ptr_initialized","","",57,null],[11,"interface_ptr","","",57,null],[11,"interface_name","","",57,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",57,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",57,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",57,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",57,{"inputs":[{"name":"self"},{"name":"wldatadevicemanager"}],"output":{"name":"bool"}}],[11,"set_user_data","","",57,null],[11,"get_user_data","","",57,null],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"dndaction"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"le","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"gt","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"ge","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"cmp","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"ordering"}}],[11,"hash","","",58,null],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",58,{"inputs":[],"output":{"name":"dndaction"}}],[11,"all","","Returns the set containing all flags.",58,{"inputs":[],"output":{"name":"dndaction"}}],[11,"bits","","Returns the raw value of the flags currently stored.",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",58,{"inputs":[{"name":"u32"}],"output":{"generics":["dndaction"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",58,{"inputs":[{"name":"u32"}],"output":{"name":"dndaction"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",58,{"inputs":[{"name":"self"},{"name":"dndaction"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitor_assign","","Adds the set of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitxor_assign","","Toggles the set of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"sub_assign","","Disables all flags enabled in the set.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",58,{"inputs":[{"name":"self"}],"output":{"name":"dndaction"}}],[11,"extend","","",58,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",58,{"inputs":[{"name":"t"}],"output":{"name":"dndaction"}}],[11,"from_raw","","",58,{"inputs":[{"name":"u32"}],"output":{"generics":["dndaction"],"name":"option"}}],[11,"to_raw","","",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"create_data_source","","create a new data source",57,{"inputs":[{"name":"self"}],"output":{"name":"wldatasource"}}],[11,"get_data_device","","create a new data device",57,{"inputs":[{"name":"self"},{"name":"wlseat"}],"output":{"name":"wldatadevice"}}],[11,"ptr","wayland_client::protocol::wl_shell","",59,null],[11,"from_ptr_new","","",59,null],[11,"from_ptr_initialized","","",59,null],[11,"interface_ptr","","",59,null],[11,"interface_name","","",59,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",59,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",59,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",59,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",59,{"inputs":[{"name":"self"},{"name":"wlshell"}],"output":{"name":"bool"}}],[11,"set_user_data","","",59,null],[11,"get_user_data","","",59,null],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",18,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",18,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_shell_surface","","create a shell surface from a surface",59,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"wlshellsurface"}}],[11,"ping","wayland_client::protocol::wl_shell_surface","ping client",20,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshellsurface"},{"name":"u32"}],"output":null}],[11,"configure","","suggest resize",20,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshellsurface"},{"name":"resize"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"popup_done","","popup interaction is done",20,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshellsurface"}],"output":null}],[11,"ptr","","",60,null],[11,"from_ptr_new","","",60,null],[11,"from_ptr_initialized","","",60,null],[11,"interface_ptr","","",60,null],[11,"interface_name","","",60,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",60,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",60,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",60,{"inputs":[{"name":"self"},{"name":"wlshellsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",60,null],[11,"get_user_data","","",60,null],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"resize"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"le","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"gt","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"ge","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"cmp","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"ordering"}}],[11,"hash","","",61,null],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",61,{"inputs":[],"output":{"name":"resize"}}],[11,"all","","Returns the set containing all flags.",61,{"inputs":[],"output":{"name":"resize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",61,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",61,{"inputs":[{"name":"u32"}],"output":{"generics":["resize"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",61,{"inputs":[{"name":"u32"}],"output":{"name":"resize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",61,{"inputs":[{"name":"self"},{"name":"resize"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitor_assign","","Adds the set of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitxor_assign","","Toggles the set of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"sub_assign","","Disables all flags enabled in the set.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",61,{"inputs":[{"name":"self"}],"output":{"name":"resize"}}],[11,"extend","","",61,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",61,{"inputs":[{"name":"t"}],"output":{"name":"resize"}}],[11,"from_raw","","",61,{"inputs":[{"name":"u32"}],"output":{"generics":["resize"],"name":"option"}}],[11,"to_raw","","",61,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"transient"}}],[11,"partial_cmp","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"le","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"gt","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"ge","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"cmp","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"ordering"}}],[11,"hash","","",62,null],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",62,{"inputs":[],"output":{"name":"transient"}}],[11,"all","","Returns the set containing all flags.",62,{"inputs":[],"output":{"name":"transient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",62,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",62,{"inputs":[{"name":"u32"}],"output":{"generics":["transient"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",62,{"inputs":[{"name":"u32"}],"output":{"name":"transient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",62,{"inputs":[{"name":"self"},{"name":"transient"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitor_assign","","Adds the set of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitxor_assign","","Toggles the set of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"sub_assign","","Disables all flags enabled in the set.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",62,{"inputs":[{"name":"self"}],"output":{"name":"transient"}}],[11,"extend","","",62,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",62,{"inputs":[{"name":"t"}],"output":{"name":"transient"}}],[11,"from_raw","","",62,{"inputs":[{"name":"u32"}],"output":{"generics":["transient"],"name":"option"}}],[11,"to_raw","","",62,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"fullscreenmethod"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"fullscreenmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",19,{"inputs":[{"name":"u32"}],"output":{"generics":["fullscreenmethod"],"name":"option"}}],[11,"to_raw","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"pong","","respond to a ping event",60,null],[11,"_move","","start an interactive move",60,null],[11,"resize","","start an interactive resize",60,null],[11,"set_toplevel","","make the surface a toplevel surface",60,null],[11,"set_transient","","make the surface a transient surface",60,null],[11,"set_fullscreen","","make the surface a fullscreen surface",60,null],[11,"set_popup","","make the surface a popup surface",60,null],[11,"set_maximized","","make the surface a maximized surface",60,null],[11,"set_title","","set surface title",60,null],[11,"set_class","","set surface class",60,null],[11,"enter","wayland_client::protocol::wl_surface","surface enters an output",22,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlsurface"},{"name":"wloutput"}],"output":null}],[11,"leave","","surface leaves an output",22,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlsurface"},{"name":"wloutput"}],"output":null}],[11,"ptr","","",63,null],[11,"from_ptr_new","","",63,null],[11,"from_ptr_initialized","","",63,null],[11,"interface_ptr","","",63,null],[11,"interface_name","","",63,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",63,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",63,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",63,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",63,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",63,null],[11,"get_user_data","","",63,null],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",21,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","delete surface",63,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"attach","","set the surface contents",63,{"inputs":[{"name":"self"},{"generics":["wlbuffer"],"name":"option"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"damage","","mark part of the surface damaged",63,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"frame","","request a frame throttling hint",63,{"inputs":[{"name":"self"}],"output":{"generics":["wlcallback"],"name":"requestresult"}}],[11,"set_opaque_region","","set opaque region",63,{"inputs":[{"name":"self"},{"generics":["wlregion"],"name":"option"}],"output":{"name":"requestresult"}}],[11,"set_input_region","","set input region",63,{"inputs":[{"name":"self"},{"generics":["wlregion"],"name":"option"}],"output":{"name":"requestresult"}}],[11,"commit","","commit pending surface state",63,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_buffer_transform","","sets the buffer transformation",63,{"inputs":[{"name":"self"},{"name":"transform"}],"output":{"name":"requestresult"}}],[11,"set_buffer_scale","","sets the buffer scaling factor",63,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"damage_buffer","","mark part of the surface damaged using buffer coordinates",63,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"capabilities","wayland_client::protocol::wl_seat","seat capabilities changed",23,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlseat"},{"name":"capability"}],"output":null}],[11,"name","","unique identifier for this seat",23,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlseat"},{"name":"string"}],"output":null}],[11,"ptr","","",64,null],[11,"from_ptr_new","","",64,null],[11,"from_ptr_initialized","","",64,null],[11,"interface_ptr","","",64,null],[11,"interface_name","","",64,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",64,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",64,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",64,{"inputs":[{"name":"self"},{"name":"wlseat"}],"output":{"name":"bool"}}],[11,"set_user_data","","",64,null],[11,"get_user_data","","",64,null],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"partial_cmp","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"le","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"gt","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"ge","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"cmp","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"ordering"}}],[11,"hash","","",65,null],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",65,{"inputs":[],"output":{"name":"capability"}}],[11,"all","","Returns the set containing all flags.",65,{"inputs":[],"output":{"name":"capability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",65,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",65,{"inputs":[{"name":"u32"}],"output":{"generics":["capability"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",65,{"inputs":[{"name":"u32"}],"output":{"name":"capability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",65,{"inputs":[{"name":"self"},{"name":"capability"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitor_assign","","Adds the set of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitxor_assign","","Toggles the set of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"sub_assign","","Disables all flags enabled in the set.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",65,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"extend","","",65,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",65,{"inputs":[{"name":"t"}],"output":{"name":"capability"}}],[11,"from_raw","","",65,{"inputs":[{"name":"u32"}],"output":{"generics":["capability"],"name":"option"}}],[11,"to_raw","","",65,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_pointer","","return pointer object",64,{"inputs":[{"name":"self"}],"output":{"generics":["wlpointer"],"name":"requestresult"}}],[11,"get_keyboard","","return keyboard object",64,{"inputs":[{"name":"self"}],"output":{"generics":["wlkeyboard"],"name":"requestresult"}}],[11,"get_touch","","return touch object",64,{"inputs":[{"name":"self"}],"output":{"generics":["wltouch"],"name":"requestresult"}}],[11,"release","","release the seat object",64,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"enter","wayland_client::protocol::wl_pointer","enter event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"wlsurface"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"leave","","leave event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"wlsurface"}],"output":null}],[11,"motion","","pointer motion event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"button","","pointer button event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":null}],[11,"axis","","axis event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"axis"},{"name":"f64"}],"output":null}],[11,"frame","","end of a pointer event sequence",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"}],"output":null}],[11,"axis_source","","axis source event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"axissource"}],"output":null}],[11,"axis_stop","","axis stop event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"axis"}],"output":null}],[11,"axis_discrete","","axis click event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"axis"},{"name":"i32"}],"output":null}],[11,"ptr","","",66,null],[11,"from_ptr_new","","",66,null],[11,"from_ptr_initialized","","",66,null],[11,"interface_ptr","","",66,null],[11,"interface_name","","",66,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",66,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",66,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",66,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",66,{"inputs":[{"name":"self"},{"name":"wlpointer"}],"output":{"name":"bool"}}],[11,"set_user_data","","",66,null],[11,"get_user_data","","",66,null],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",24,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",25,{"inputs":[{"name":"u32"}],"output":{"generics":["buttonstate"],"name":"option"}}],[11,"to_raw","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"axis"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"axis"}],"output":{"name":"bool"}}],[11,"from_raw","","",26,{"inputs":[{"name":"u32"}],"output":{"generics":["axis"],"name":"option"}}],[11,"to_raw","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"axissource"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"axissource"}],"output":{"name":"bool"}}],[11,"from_raw","","",27,{"inputs":[{"name":"u32"}],"output":{"generics":["axissource"],"name":"option"}}],[11,"to_raw","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_cursor","","set the pointer surface",66,{"inputs":[{"name":"self"},{"name":"u32"},{"generics":["wlsurface"],"name":"option"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"release","","release the pointer object",66,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"keymap","wayland_client::protocol::wl_keyboard","keyboard mapping",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"keymapformat"},{"name":"rawfd"},{"name":"u32"}],"output":null}],[11,"enter","","enter event",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"wlsurface"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"leave","","leave event",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"wlsurface"}],"output":null}],[11,"key","","key event",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"keystate"}],"output":null}],[11,"modifiers","","modifier and group state",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"repeat_info","","repeat rate and delay",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"ptr","","",67,null],[11,"from_ptr_new","","",67,null],[11,"from_ptr_initialized","","",67,null],[11,"interface_ptr","","",67,null],[11,"interface_name","","",67,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",67,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",67,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",67,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",67,{"inputs":[{"name":"self"},{"name":"wlkeyboard"}],"output":{"name":"bool"}}],[11,"set_user_data","","",67,null],[11,"get_user_data","","",67,null],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"keymapformat"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"keymapformat"}],"output":{"name":"bool"}}],[11,"from_raw","","",29,{"inputs":[{"name":"u32"}],"output":{"generics":["keymapformat"],"name":"option"}}],[11,"to_raw","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"keystate"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"keystate"}],"output":{"name":"bool"}}],[11,"from_raw","","",30,{"inputs":[{"name":"u32"}],"output":{"generics":["keystate"],"name":"option"}}],[11,"to_raw","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"release","","release the keyboard object",67,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"down","wayland_client::protocol::wl_touch","touch down event and beginning of a touch sequence",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"i32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"up","","end of a touch event sequence",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":null}],[11,"motion","","update of touch point coordinates",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"},{"name":"u32"},{"name":"i32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"frame","","end of touch frame event",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"}],"output":null}],[11,"cancel","","touch session cancelled",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"}],"output":null}],[11,"ptr","","",68,null],[11,"from_ptr_new","","",68,null],[11,"from_ptr_initialized","","",68,null],[11,"interface_ptr","","",68,null],[11,"interface_name","","",68,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",68,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",68,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",68,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",68,{"inputs":[{"name":"self"},{"name":"wltouch"}],"output":{"name":"bool"}}],[11,"set_user_data","","",68,null],[11,"get_user_data","","",68,null],[11,"release","","release the touch object",68,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"geometry","wayland_client::protocol::wl_output","properties of the output",35,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wloutput"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"subpixel"},{"name":"string"},{"name":"string"},{"name":"transform"}],"output":null}],[11,"mode","","advertise available modes for the output",35,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wloutput"},{"name":"mode"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"done","","sent all information about output",35,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wloutput"}],"output":null}],[11,"scale","","output scaling properties",35,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wloutput"},{"name":"i32"}],"output":null}],[11,"ptr","","",69,null],[11,"from_ptr_new","","",69,null],[11,"from_ptr_initialized","","",69,null],[11,"interface_ptr","","",69,null],[11,"interface_name","","",69,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",69,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",69,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",69,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",69,{"inputs":[{"name":"self"},{"name":"wloutput"}],"output":{"name":"bool"}}],[11,"set_user_data","","",69,null],[11,"get_user_data","","",69,null],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"subpixel"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"subpixel"}],"output":{"name":"bool"}}],[11,"from_raw","","",33,{"inputs":[{"name":"u32"}],"output":{"generics":["subpixel"],"name":"option"}}],[11,"to_raw","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"transform"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"transform"}],"output":{"name":"bool"}}],[11,"from_raw","","",34,{"inputs":[{"name":"u32"}],"output":{"generics":["transform"],"name":"option"}}],[11,"to_raw","","",34,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"le","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"gt","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ge","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"cmp","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"ordering"}}],[11,"hash","","",70,null],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",70,{"inputs":[],"output":{"name":"mode"}}],[11,"all","","Returns the set containing all flags.",70,{"inputs":[],"output":{"name":"mode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",70,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",70,{"inputs":[{"name":"u32"}],"output":{"generics":["mode"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",70,{"inputs":[{"name":"u32"}],"output":{"name":"mode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",70,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",70,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",70,{"inputs":[{"name":"self"},{"name":"mode"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitor_assign","","Adds the set of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitxor_assign","","Toggles the set of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",70,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"extend","","",70,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",70,{"inputs":[{"name":"t"}],"output":{"name":"mode"}}],[11,"from_raw","","",70,{"inputs":[{"name":"u32"}],"output":{"generics":["mode"],"name":"option"}}],[11,"to_raw","","",70,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"release","","release the output object",69,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_region","",71,null],[11,"from_ptr_new","","",71,null],[11,"from_ptr_initialized","","",71,null],[11,"interface_ptr","","",71,null],[11,"interface_name","","",71,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",71,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",71,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",71,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",71,{"inputs":[{"name":"self"},{"name":"wlregion"}],"output":{"name":"bool"}}],[11,"set_user_data","","",71,null],[11,"get_user_data","","",71,null],[11,"destroy","","destroy region",71,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"add","","add rectangle to region",71,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"subtract","","subtract rectangle from region",71,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_subcompositor","",72,null],[11,"from_ptr_new","","",72,null],[11,"from_ptr_initialized","","",72,null],[11,"interface_ptr","","",72,null],[11,"interface_name","","",72,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",72,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",72,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",72,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",72,{"inputs":[{"name":"self"},{"name":"wlsubcompositor"}],"output":{"name":"bool"}}],[11,"set_user_data","","",72,null],[11,"get_user_data","","",72,null],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",36,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",36,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","unbind from the subcompositor interface",72,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_subsurface","","give a surface the role sub-surface",72,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wlsurface"}],"output":{"generics":["wlsubsurface"],"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_subsurface","",73,null],[11,"from_ptr_new","","",73,null],[11,"from_ptr_initialized","","",73,null],[11,"interface_ptr","","",73,null],[11,"interface_name","","",73,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",73,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",73,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",73,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",73,{"inputs":[{"name":"self"},{"name":"wlsubsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",73,null],[11,"get_user_data","","",73,null],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",37,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","remove sub-surface interface",73,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_position","","reposition the sub-surface",73,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"place_above","","restack the sub-surface",73,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"place_below","","restack the sub-surface",73,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"set_sync","","set sub-surface to synchronized mode",73,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_desync","","set sub-surface to desynchronized mode",73,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[0,"sys","wayland_client","Reexports of types and objects from wayland-sys",null,null],[8,"Init","","A trait to initialize handlers after they've been inserted in an event queue",null,null],[10,"init","","Init the handler",74,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"usize"}],"output":null}],[8,"Proxy","","Common routines for wayland proxy objects.",null,null],[10,"ptr","","Pointer to the underlying wayland proxy object",75,null],[10,"from_ptr_new","","Create an instance from a wayland pointer",75,null],[10,"from_ptr_initialized","","Create an instance from a wayland pointer",75,null],[10,"interface_ptr","","Pointer to the interface representation",75,null],[10,"interface_name","","Internal wayland name of this interface",75,{"inputs":[],"output":{"name":"str"}}],[10,"supported_version","","Max version of this interface supported",75,{"inputs":[],"output":{"name":"u32"}}],[10,"version","","Current version of the interface this proxy is instantiated with",75,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"status","","Check if the proxy behind this handle is actually still alive",75,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[10,"equals","","Check of two handles are actually the same wayland object",75,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"set_user_data","","Set a pointer associated as user data on this proxy",75,null],[10,"get_user_data","","Get the pointer associated as user data on this proxy",75,null],[11,"clone","","Clone this proxy handle",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone_unchecked","","Unsafely clone this proxy handle",75,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[8,"Handler","","Generic handler trait",null,null],[10,"message","","Dispatch a message.",76,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"expect","","Assert that result is successfull and extract the value.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"t"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"liveness"}],"output":{"name":"bool"}}],[14,"client_declare_handler","","Synonym of the declare_handler! macro",null,null],[14,"declare_handler","","Registers a handler type so it can be used in event queue",null,null],[14,"client_declare_delegating_handler","","Synonym of the declare_delegating_handler! macro",null,null],[14,"declare_delegating_handler","","Registers a handler type so it as delegating to one of its fields",null,null],[14,"wayland_env","","Create an environment handling struct",null,null]],"paths":[[4,"ConnectError"],[4,"FatalError"],[4,"RegisterStatus"],[4,"RequestResult"],[4,"Liveness"],[4,"Error"],[8,"Handler"],[8,"Handler"],[4,"Error"],[4,"Format"],[8,"Handler"],[8,"Handler"],[4,"Error"],[8,"Handler"],[4,"Error"],[8,"Handler"],[4,"Error"],[8,"Handler"],[4,"Error"],[4,"FullscreenMethod"],[8,"Handler"],[4,"Error"],[8,"Handler"],[8,"Handler"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[8,"Handler"],[4,"KeymapFormat"],[4,"KeyState"],[8,"Handler"],[8,"Handler"],[4,"Subpixel"],[4,"Transform"],[8,"Handler"],[4,"Error"],[4,"Error"],[3,"WlDisplay"],[3,"EventQueueHandle"],[3,"StateGuard"],[3,"EventQueue"],[3,"ReadEventsGuard"],[3,"EnvHandler"],[3,"WlEglSurface"],[3,"CursorTheme"],[3,"Cursor"],[3,"CursorImageBuffer"],[3,"WlRegistry"],[3,"WlCallback"],[3,"WlCompositor"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"WlDataDeviceManager"],[3,"DndAction"],[3,"WlShell"],[3,"WlShellSurface"],[3,"Resize"],[3,"Transient"],[3,"WlSurface"],[3,"WlSeat"],[3,"Capability"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"WlOutput"],[3,"Mode"],[3,"WlRegion"],[3,"WlSubcompositor"],[3,"WlSubsurface"],[8,"Init"],[8,"Proxy"],[8,"Handler"]]};
searchIndex["wayland_kbd"] = {"doc":"Keyboard mapping utility for `wayland-client` using libxkbcommon.","items":[[3,"MappedKeyboard","wayland_kbd","A wayland keyboard mapped to its keymap",null,null],[3,"ModifiersState","","Represents the current state of the keyboard modifiers",null,null],[12,"ctrl","","The \"control\" key",0,null],[12,"alt","","The \"alt\" key",0,null],[12,"shift","","The \"shift\" key",0,null],[12,"caps_lock","","The \"Caps lock\" key",0,null],[12,"logo","","The \"logo\" key",0,null],[12,"num_lock","","The \"Num lock\" key",0,null],[4,"MappedKeyboardError","","",null,null],[13,"XKBNotFound","","",1,null],[13,"NoKeyboardOnSeat","","",1,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"modifiersstate"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",2,{"inputs":[{"name":"h"}],"output":{"generics":["mappedkeyboard","mappedkeyboarderror"],"name":"result"}}],[11,"handler","","",2,{"inputs":[{"name":"self"}],"output":{"name":"h"}}],[11,"keymap","","",2,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"keymapformat"},{"name":"rawfd"},{"name":"u32"}],"output":null}],[11,"enter","","",2,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"wlsurface"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"leave","","",2,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"wlsurface"}],"output":null}],[11,"key","","",2,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"keystate"}],"output":null}],[11,"modifiers","","",2,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"repeat_info","","",2,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"message","","",2,null],[0,"keysyms","","",null,null],[17,"XKB_KEY_VoidSymbol","wayland_kbd::keysyms","",null,null],[17,"XKB_KEY_BackSpace","","",null,null],[17,"XKB_KEY_Tab","","",null,null],[17,"XKB_KEY_Linefeed","","",null,null],[17,"XKB_KEY_Clear","","",null,null],[17,"XKB_KEY_Return","","",null,null],[17,"XKB_KEY_Pause","","",null,null],[17,"XKB_KEY_Scroll_Lock","","",null,null],[17,"XKB_KEY_Sys_Req","","",null,null],[17,"XKB_KEY_Escape","","",null,null],[17,"XKB_KEY_Delete","","",null,null],[17,"XKB_KEY_Multi_key","","",null,null],[17,"XKB_KEY_Codeinput","","",null,null],[17,"XKB_KEY_SingleCandidate","","",null,null],[17,"XKB_KEY_MultipleCandidate","","",null,null],[17,"XKB_KEY_PreviousCandidate","","",null,null],[17,"XKB_KEY_Kanji","","",null,null],[17,"XKB_KEY_Muhenkan","","",null,null],[17,"XKB_KEY_Henkan_Mode","","",null,null],[17,"XKB_KEY_Henkan","","",null,null],[17,"XKB_KEY_Romaji","","",null,null],[17,"XKB_KEY_Hiragana","","",null,null],[17,"XKB_KEY_Katakana","","",null,null],[17,"XKB_KEY_Hiragana_Katakana","","",null,null],[17,"XKB_KEY_Zenkaku","","",null,null],[17,"XKB_KEY_Hankaku","","",null,null],[17,"XKB_KEY_Zenkaku_Hankaku","","",null,null],[17,"XKB_KEY_Touroku","","",null,null],[17,"XKB_KEY_Massyo","","",null,null],[17,"XKB_KEY_Kana_Lock","","",null,null],[17,"XKB_KEY_Kana_Shift","","",null,null],[17,"XKB_KEY_Eisu_Shift","","",null,null],[17,"XKB_KEY_Eisu_toggle","","",null,null],[17,"XKB_KEY_Kanji_Bangou","","",null,null],[17,"XKB_KEY_Zen_Koho","","",null,null],[17,"XKB_KEY_Mae_Koho","","",null,null],[17,"XKB_KEY_Home","","",null,null],[17,"XKB_KEY_Left","","",null,null],[17,"XKB_KEY_Up","","",null,null],[17,"XKB_KEY_Right","","",null,null],[17,"XKB_KEY_Down","","",null,null],[17,"XKB_KEY_Prior","","",null,null],[17,"XKB_KEY_Page_Up","","",null,null],[17,"XKB_KEY_Next","","",null,null],[17,"XKB_KEY_Page_Down","","",null,null],[17,"XKB_KEY_End","","",null,null],[17,"XKB_KEY_Begin","","",null,null],[17,"XKB_KEY_Select","","",null,null],[17,"XKB_KEY_Print","","",null,null],[17,"XKB_KEY_Execute","","",null,null],[17,"XKB_KEY_Insert","","",null,null],[17,"XKB_KEY_Undo","","",null,null],[17,"XKB_KEY_Redo","","",null,null],[17,"XKB_KEY_Menu","","",null,null],[17,"XKB_KEY_Find","","",null,null],[17,"XKB_KEY_Cancel","","",null,null],[17,"XKB_KEY_Help","","",null,null],[17,"XKB_KEY_Break","","",null,null],[17,"XKB_KEY_Mode_switch","","",null,null],[17,"XKB_KEY_script_switch","","",null,null],[17,"XKB_KEY_Num_Lock","","",null,null],[17,"XKB_KEY_KP_Space","","",null,null],[17,"XKB_KEY_KP_Tab","","",null,null],[17,"XKB_KEY_KP_Enter","","",null,null],[17,"XKB_KEY_KP_F1","","",null,null],[17,"XKB_KEY_KP_F2","","",null,null],[17,"XKB_KEY_KP_F3","","",null,null],[17,"XKB_KEY_KP_F4","","",null,null],[17,"XKB_KEY_KP_Home","","",null,null],[17,"XKB_KEY_KP_Left","","",null,null],[17,"XKB_KEY_KP_Up","","",null,null],[17,"XKB_KEY_KP_Right","","",null,null],[17,"XKB_KEY_KP_Down","","",null,null],[17,"XKB_KEY_KP_Prior","","",null,null],[17,"XKB_KEY_KP_Page_Up","","",null,null],[17,"XKB_KEY_KP_Next","","",null,null],[17,"XKB_KEY_KP_Page_Down","","",null,null],[17,"XKB_KEY_KP_End","","",null,null],[17,"XKB_KEY_KP_Begin","","",null,null],[17,"XKB_KEY_KP_Insert","","",null,null],[17,"XKB_KEY_KP_Delete","","",null,null],[17,"XKB_KEY_KP_Equal","","",null,null],[17,"XKB_KEY_KP_Multiply","","",null,null],[17,"XKB_KEY_KP_Add","","",null,null],[17,"XKB_KEY_KP_Separator","","",null,null],[17,"XKB_KEY_KP_Subtract","","",null,null],[17,"XKB_KEY_KP_Decimal","","",null,null],[17,"XKB_KEY_KP_Divide","","",null,null],[17,"XKB_KEY_KP_0","","",null,null],[17,"XKB_KEY_KP_1","","",null,null],[17,"XKB_KEY_KP_2","","",null,null],[17,"XKB_KEY_KP_3","","",null,null],[17,"XKB_KEY_KP_4","","",null,null],[17,"XKB_KEY_KP_5","","",null,null],[17,"XKB_KEY_KP_6","","",null,null],[17,"XKB_KEY_KP_7","","",null,null],[17,"XKB_KEY_KP_8","","",null,null],[17,"XKB_KEY_KP_9","","",null,null],[17,"XKB_KEY_F1","","",null,null],[17,"XKB_KEY_F2","","",null,null],[17,"XKB_KEY_F3","","",null,null],[17,"XKB_KEY_F4","","",null,null],[17,"XKB_KEY_F5","","",null,null],[17,"XKB_KEY_F6","","",null,null],[17,"XKB_KEY_F7","","",null,null],[17,"XKB_KEY_F8","","",null,null],[17,"XKB_KEY_F9","","",null,null],[17,"XKB_KEY_F10","","",null,null],[17,"XKB_KEY_F11","","",null,null],[17,"XKB_KEY_L1","","",null,null],[17,"XKB_KEY_F12","","",null,null],[17,"XKB_KEY_L2","","",null,null],[17,"XKB_KEY_F13","","",null,null],[17,"XKB_KEY_L3","","",null,null],[17,"XKB_KEY_F14","","",null,null],[17,"XKB_KEY_L4","","",null,null],[17,"XKB_KEY_F15","","",null,null],[17,"XKB_KEY_L5","","",null,null],[17,"XKB_KEY_F16","","",null,null],[17,"XKB_KEY_L6","","",null,null],[17,"XKB_KEY_F17","","",null,null],[17,"XKB_KEY_L7","","",null,null],[17,"XKB_KEY_F18","","",null,null],[17,"XKB_KEY_L8","","",null,null],[17,"XKB_KEY_F19","","",null,null],[17,"XKB_KEY_L9","","",null,null],[17,"XKB_KEY_F20","","",null,null],[17,"XKB_KEY_L10","","",null,null],[17,"XKB_KEY_F21","","",null,null],[17,"XKB_KEY_R1","","",null,null],[17,"XKB_KEY_F22","","",null,null],[17,"XKB_KEY_R2","","",null,null],[17,"XKB_KEY_F23","","",null,null],[17,"XKB_KEY_R3","","",null,null],[17,"XKB_KEY_F24","","",null,null],[17,"XKB_KEY_R4","","",null,null],[17,"XKB_KEY_F25","","",null,null],[17,"XKB_KEY_R5","","",null,null],[17,"XKB_KEY_F26","","",null,null],[17,"XKB_KEY_R6","","",null,null],[17,"XKB_KEY_F27","","",null,null],[17,"XKB_KEY_R7","","",null,null],[17,"XKB_KEY_F28","","",null,null],[17,"XKB_KEY_R8","","",null,null],[17,"XKB_KEY_F29","","",null,null],[17,"XKB_KEY_R9","","",null,null],[17,"XKB_KEY_F30","","",null,null],[17,"XKB_KEY_R10","","",null,null],[17,"XKB_KEY_F31","","",null,null],[17,"XKB_KEY_R11","","",null,null],[17,"XKB_KEY_F32","","",null,null],[17,"XKB_KEY_R12","","",null,null],[17,"XKB_KEY_F33","","",null,null],[17,"XKB_KEY_R13","","",null,null],[17,"XKB_KEY_F34","","",null,null],[17,"XKB_KEY_R14","","",null,null],[17,"XKB_KEY_F35","","",null,null],[17,"XKB_KEY_R15","","",null,null],[17,"XKB_KEY_Shift_L","","",null,null],[17,"XKB_KEY_Shift_R","","",null,null],[17,"XKB_KEY_Control_L","","",null,null],[17,"XKB_KEY_Control_R","","",null,null],[17,"XKB_KEY_Caps_Lock","","",null,null],[17,"XKB_KEY_Shift_Lock","","",null,null],[17,"XKB_KEY_Meta_L","","",null,null],[17,"XKB_KEY_Meta_R","","",null,null],[17,"XKB_KEY_Alt_L","","",null,null],[17,"XKB_KEY_Alt_R","","",null,null],[17,"XKB_KEY_Super_L","","",null,null],[17,"XKB_KEY_Super_R","","",null,null],[17,"XKB_KEY_Hyper_L","","",null,null],[17,"XKB_KEY_Hyper_R","","",null,null],[17,"XKB_KEY_ISO_Lock","","",null,null],[17,"XKB_KEY_ISO_Level2_Latch","","",null,null],[17,"XKB_KEY_ISO_Level3_Shift","","",null,null],[17,"XKB_KEY_ISO_Level3_Latch","","",null,null],[17,"XKB_KEY_ISO_Level3_Lock","","",null,null],[17,"XKB_KEY_ISO_Level5_Shift","","",null,null],[17,"XKB_KEY_ISO_Level5_Latch","","",null,null],[17,"XKB_KEY_ISO_Level5_Lock","","",null,null],[17,"XKB_KEY_ISO_Group_Shift","","",null,null],[17,"XKB_KEY_ISO_Group_Latch","","",null,null],[17,"XKB_KEY_ISO_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Next_Group","","",null,null],[17,"XKB_KEY_ISO_Next_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Prev_Group","","",null,null],[17,"XKB_KEY_ISO_Prev_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_First_Group","","",null,null],[17,"XKB_KEY_ISO_First_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Last_Group","","",null,null],[17,"XKB_KEY_ISO_Last_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Left_Tab","","",null,null],[17,"XKB_KEY_ISO_Move_Line_Up","","",null,null],[17,"XKB_KEY_ISO_Move_Line_Down","","",null,null],[17,"XKB_KEY_ISO_Partial_Line_Up","","",null,null],[17,"XKB_KEY_ISO_Partial_Line_Down","","",null,null],[17,"XKB_KEY_ISO_Partial_Space_Left","","",null,null],[17,"XKB_KEY_ISO_Partial_Space_Right","","",null,null],[17,"XKB_KEY_ISO_Set_Margin_Left","","",null,null],[17,"XKB_KEY_ISO_Set_Margin_Right","","",null,null],[17,"XKB_KEY_ISO_Release_Margin_Left","","",null,null],[17,"XKB_KEY_ISO_Release_Margin_Right","","",null,null],[17,"XKB_KEY_ISO_Release_Both_Margins","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Left","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Right","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Up","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Down","","",null,null],[17,"XKB_KEY_ISO_Continuous_Underline","","",null,null],[17,"XKB_KEY_ISO_Discontinuous_Underline","","",null,null],[17,"XKB_KEY_ISO_Emphasize","","",null,null],[17,"XKB_KEY_ISO_Center_Object","","",null,null],[17,"XKB_KEY_ISO_Enter","","",null,null],[17,"XKB_KEY_dead_grave","","",null,null],[17,"XKB_KEY_dead_acute","","",null,null],[17,"XKB_KEY_dead_circumflex","","",null,null],[17,"XKB_KEY_dead_tilde","","",null,null],[17,"XKB_KEY_dead_perispomeni","","",null,null],[17,"XKB_KEY_dead_macron","","",null,null],[17,"XKB_KEY_dead_breve","","",null,null],[17,"XKB_KEY_dead_abovedot","","",null,null],[17,"XKB_KEY_dead_diaeresis","","",null,null],[17,"XKB_KEY_dead_abovering","","",null,null],[17,"XKB_KEY_dead_doubleacute","","",null,null],[17,"XKB_KEY_dead_caron","","",null,null],[17,"XKB_KEY_dead_cedilla","","",null,null],[17,"XKB_KEY_dead_ogonek","","",null,null],[17,"XKB_KEY_dead_iota","","",null,null],[17,"XKB_KEY_dead_voiced_sound","","",null,null],[17,"XKB_KEY_dead_semivoiced_sound","","",null,null],[17,"XKB_KEY_dead_belowdot","","",null,null],[17,"XKB_KEY_dead_hook","","",null,null],[17,"XKB_KEY_dead_horn","","",null,null],[17,"XKB_KEY_dead_stroke","","",null,null],[17,"XKB_KEY_dead_abovecomma","","",null,null],[17,"XKB_KEY_dead_psili","","",null,null],[17,"XKB_KEY_dead_abovereversedcomma","","",null,null],[17,"XKB_KEY_dead_dasia","","",null,null],[17,"XKB_KEY_dead_doublegrave","","",null,null],[17,"XKB_KEY_dead_belowring","","",null,null],[17,"XKB_KEY_dead_belowmacron","","",null,null],[17,"XKB_KEY_dead_belowcircumflex","","",null,null],[17,"XKB_KEY_dead_belowtilde","","",null,null],[17,"XKB_KEY_dead_belowbreve","","",null,null],[17,"XKB_KEY_dead_belowdiaeresis","","",null,null],[17,"XKB_KEY_dead_invertedbreve","","",null,null],[17,"XKB_KEY_dead_belowcomma","","",null,null],[17,"XKB_KEY_dead_currency","","",null,null],[17,"XKB_KEY_dead_lowline","","",null,null],[17,"XKB_KEY_dead_aboveverticalline","","",null,null],[17,"XKB_KEY_dead_belowverticalline","","",null,null],[17,"XKB_KEY_dead_longsolidusoverlay","","",null,null],[17,"XKB_KEY_dead_a","","",null,null],[17,"XKB_KEY_dead_A","","",null,null],[17,"XKB_KEY_dead_e","","",null,null],[17,"XKB_KEY_dead_E","","",null,null],[17,"XKB_KEY_dead_i","","",null,null],[17,"XKB_KEY_dead_I","","",null,null],[17,"XKB_KEY_dead_o","","",null,null],[17,"XKB_KEY_dead_O","","",null,null],[17,"XKB_KEY_dead_u","","",null,null],[17,"XKB_KEY_dead_U","","",null,null],[17,"XKB_KEY_dead_small_schwa","","",null,null],[17,"XKB_KEY_dead_capital_schwa","","",null,null],[17,"XKB_KEY_dead_greek","","",null,null],[17,"XKB_KEY_First_Virtual_Screen","","",null,null],[17,"XKB_KEY_Prev_Virtual_Screen","","",null,null],[17,"XKB_KEY_Next_Virtual_Screen","","",null,null],[17,"XKB_KEY_Last_Virtual_Screen","","",null,null],[17,"XKB_KEY_Terminate_Server","","",null,null],[17,"XKB_KEY_AccessX_Enable","","",null,null],[17,"XKB_KEY_AccessX_Feedback_Enable","","",null,null],[17,"XKB_KEY_RepeatKeys_Enable","","",null,null],[17,"XKB_KEY_SlowKeys_Enable","","",null,null],[17,"XKB_KEY_BounceKeys_Enable","","",null,null],[17,"XKB_KEY_StickyKeys_Enable","","",null,null],[17,"XKB_KEY_MouseKeys_Enable","","",null,null],[17,"XKB_KEY_MouseKeys_Accel_Enable","","",null,null],[17,"XKB_KEY_Overlay1_Enable","","",null,null],[17,"XKB_KEY_Overlay2_Enable","","",null,null],[17,"XKB_KEY_AudibleBell_Enable","","",null,null],[17,"XKB_KEY_Pointer_Left","","",null,null],[17,"XKB_KEY_Pointer_Right","","",null,null],[17,"XKB_KEY_Pointer_Up","","",null,null],[17,"XKB_KEY_Pointer_Down","","",null,null],[17,"XKB_KEY_Pointer_UpLeft","","",null,null],[17,"XKB_KEY_Pointer_UpRight","","",null,null],[17,"XKB_KEY_Pointer_DownLeft","","",null,null],[17,"XKB_KEY_Pointer_DownRight","","",null,null],[17,"XKB_KEY_Pointer_Button_Dflt","","",null,null],[17,"XKB_KEY_Pointer_Button1","","",null,null],[17,"XKB_KEY_Pointer_Button2","","",null,null],[17,"XKB_KEY_Pointer_Button3","","",null,null],[17,"XKB_KEY_Pointer_Button4","","",null,null],[17,"XKB_KEY_Pointer_Button5","","",null,null],[17,"XKB_KEY_Pointer_DblClick_Dflt","","",null,null],[17,"XKB_KEY_Pointer_DblClick1","","",null,null],[17,"XKB_KEY_Pointer_DblClick2","","",null,null],[17,"XKB_KEY_Pointer_DblClick3","","",null,null],[17,"XKB_KEY_Pointer_DblClick4","","",null,null],[17,"XKB_KEY_Pointer_DblClick5","","",null,null],[17,"XKB_KEY_Pointer_Drag_Dflt","","",null,null],[17,"XKB_KEY_Pointer_Drag1","","",null,null],[17,"XKB_KEY_Pointer_Drag2","","",null,null],[17,"XKB_KEY_Pointer_Drag3","","",null,null],[17,"XKB_KEY_Pointer_Drag4","","",null,null],[17,"XKB_KEY_Pointer_Drag5","","",null,null],[17,"XKB_KEY_Pointer_EnableKeys","","",null,null],[17,"XKB_KEY_Pointer_Accelerate","","",null,null],[17,"XKB_KEY_Pointer_DfltBtnNext","","",null,null],[17,"XKB_KEY_Pointer_DfltBtnPrev","","",null,null],[17,"XKB_KEY_ch","","",null,null],[17,"XKB_KEY_Ch","","",null,null],[17,"XKB_KEY_CH","","",null,null],[17,"XKB_KEY_c_h","","",null,null],[17,"XKB_KEY_C_h","","",null,null],[17,"XKB_KEY_C_H","","",null,null],[17,"XKB_KEY_3270_Duplicate","","",null,null],[17,"XKB_KEY_3270_FieldMark","","",null,null],[17,"XKB_KEY_3270_Right2","","",null,null],[17,"XKB_KEY_3270_Left2","","",null,null],[17,"XKB_KEY_3270_BackTab","","",null,null],[17,"XKB_KEY_3270_EraseEOF","","",null,null],[17,"XKB_KEY_3270_EraseInput","","",null,null],[17,"XKB_KEY_3270_Reset","","",null,null],[17,"XKB_KEY_3270_Quit","","",null,null],[17,"XKB_KEY_3270_PA1","","",null,null],[17,"XKB_KEY_3270_PA2","","",null,null],[17,"XKB_KEY_3270_PA3","","",null,null],[17,"XKB_KEY_3270_Test","","",null,null],[17,"XKB_KEY_3270_Attn","","",null,null],[17,"XKB_KEY_3270_CursorBlink","","",null,null],[17,"XKB_KEY_3270_AltCursor","","",null,null],[17,"XKB_KEY_3270_KeyClick","","",null,null],[17,"XKB_KEY_3270_Jump","","",null,null],[17,"XKB_KEY_3270_Ident","","",null,null],[17,"XKB_KEY_3270_Rule","","",null,null],[17,"XKB_KEY_3270_Copy","","",null,null],[17,"XKB_KEY_3270_Play","","",null,null],[17,"XKB_KEY_3270_Setup","","",null,null],[17,"XKB_KEY_3270_Record","","",null,null],[17,"XKB_KEY_3270_ChangeScreen","","",null,null],[17,"XKB_KEY_3270_DeleteWord","","",null,null],[17,"XKB_KEY_3270_ExSelect","","",null,null],[17,"XKB_KEY_3270_CursorSelect","","",null,null],[17,"XKB_KEY_3270_PrintScreen","","",null,null],[17,"XKB_KEY_3270_Enter","","",null,null],[17,"XKB_KEY_space","","",null,null],[17,"XKB_KEY_exclam","","",null,null],[17,"XKB_KEY_quotedbl","","",null,null],[17,"XKB_KEY_numbersign","","",null,null],[17,"XKB_KEY_dollar","","",null,null],[17,"XKB_KEY_percent","","",null,null],[17,"XKB_KEY_ampersand","","",null,null],[17,"XKB_KEY_apostrophe","","",null,null],[17,"XKB_KEY_quoteright","","",null,null],[17,"XKB_KEY_parenleft","","",null,null],[17,"XKB_KEY_parenright","","",null,null],[17,"XKB_KEY_asterisk","","",null,null],[17,"XKB_KEY_plus","","",null,null],[17,"XKB_KEY_comma","","",null,null],[17,"XKB_KEY_minus","","",null,null],[17,"XKB_KEY_period","","",null,null],[17,"XKB_KEY_slash","","",null,null],[17,"XKB_KEY_0","","",null,null],[17,"XKB_KEY_1","","",null,null],[17,"XKB_KEY_2","","",null,null],[17,"XKB_KEY_3","","",null,null],[17,"XKB_KEY_4","","",null,null],[17,"XKB_KEY_5","","",null,null],[17,"XKB_KEY_6","","",null,null],[17,"XKB_KEY_7","","",null,null],[17,"XKB_KEY_8","","",null,null],[17,"XKB_KEY_9","","",null,null],[17,"XKB_KEY_colon","","",null,null],[17,"XKB_KEY_semicolon","","",null,null],[17,"XKB_KEY_less","","",null,null],[17,"XKB_KEY_equal","","",null,null],[17,"XKB_KEY_greater","","",null,null],[17,"XKB_KEY_question","","",null,null],[17,"XKB_KEY_at","","",null,null],[17,"XKB_KEY_A","","",null,null],[17,"XKB_KEY_B","","",null,null],[17,"XKB_KEY_C","","",null,null],[17,"XKB_KEY_D","","",null,null],[17,"XKB_KEY_E","","",null,null],[17,"XKB_KEY_F","","",null,null],[17,"XKB_KEY_G","","",null,null],[17,"XKB_KEY_H","","",null,null],[17,"XKB_KEY_I","","",null,null],[17,"XKB_KEY_J","","",null,null],[17,"XKB_KEY_K","","",null,null],[17,"XKB_KEY_L","","",null,null],[17,"XKB_KEY_M","","",null,null],[17,"XKB_KEY_N","","",null,null],[17,"XKB_KEY_O","","",null,null],[17,"XKB_KEY_P","","",null,null],[17,"XKB_KEY_Q","","",null,null],[17,"XKB_KEY_R","","",null,null],[17,"XKB_KEY_S","","",null,null],[17,"XKB_KEY_T","","",null,null],[17,"XKB_KEY_U","","",null,null],[17,"XKB_KEY_V","","",null,null],[17,"XKB_KEY_W","","",null,null],[17,"XKB_KEY_X","","",null,null],[17,"XKB_KEY_Y","","",null,null],[17,"XKB_KEY_Z","","",null,null],[17,"XKB_KEY_bracketleft","","",null,null],[17,"XKB_KEY_backslash","","",null,null],[17,"XKB_KEY_bracketright","","",null,null],[17,"XKB_KEY_asciicircum","","",null,null],[17,"XKB_KEY_underscore","","",null,null],[17,"XKB_KEY_grave","","",null,null],[17,"XKB_KEY_quoteleft","","",null,null],[17,"XKB_KEY_a","","",null,null],[17,"XKB_KEY_b","","",null,null],[17,"XKB_KEY_c","","",null,null],[17,"XKB_KEY_d","","",null,null],[17,"XKB_KEY_e","","",null,null],[17,"XKB_KEY_f","","",null,null],[17,"XKB_KEY_g","","",null,null],[17,"XKB_KEY_h","","",null,null],[17,"XKB_KEY_i","","",null,null],[17,"XKB_KEY_j","","",null,null],[17,"XKB_KEY_k","","",null,null],[17,"XKB_KEY_l","","",null,null],[17,"XKB_KEY_m","","",null,null],[17,"XKB_KEY_n","","",null,null],[17,"XKB_KEY_o","","",null,null],[17,"XKB_KEY_p","","",null,null],[17,"XKB_KEY_q","","",null,null],[17,"XKB_KEY_r","","",null,null],[17,"XKB_KEY_s","","",null,null],[17,"XKB_KEY_t","","",null,null],[17,"XKB_KEY_u","","",null,null],[17,"XKB_KEY_v","","",null,null],[17,"XKB_KEY_w","","",null,null],[17,"XKB_KEY_x","","",null,null],[17,"XKB_KEY_y","","",null,null],[17,"XKB_KEY_z","","",null,null],[17,"XKB_KEY_braceleft","","",null,null],[17,"XKB_KEY_bar","","",null,null],[17,"XKB_KEY_braceright","","",null,null],[17,"XKB_KEY_asciitilde","","",null,null],[17,"XKB_KEY_nobreakspace","","",null,null],[17,"XKB_KEY_exclamdown","","",null,null],[17,"XKB_KEY_cent","","",null,null],[17,"XKB_KEY_sterling","","",null,null],[17,"XKB_KEY_currency","","",null,null],[17,"XKB_KEY_yen","","",null,null],[17,"XKB_KEY_brokenbar","","",null,null],[17,"XKB_KEY_section","","",null,null],[17,"XKB_KEY_diaeresis","","",null,null],[17,"XKB_KEY_copyright","","",null,null],[17,"XKB_KEY_ordfeminine","","",null,null],[17,"XKB_KEY_guillemotleft","","",null,null],[17,"XKB_KEY_notsign","","",null,null],[17,"XKB_KEY_hyphen","","",null,null],[17,"XKB_KEY_registered","","",null,null],[17,"XKB_KEY_macron","","",null,null],[17,"XKB_KEY_degree","","",null,null],[17,"XKB_KEY_plusminus","","",null,null],[17,"XKB_KEY_twosuperior","","",null,null],[17,"XKB_KEY_threesuperior","","",null,null],[17,"XKB_KEY_acute","","",null,null],[17,"XKB_KEY_mu","","",null,null],[17,"XKB_KEY_paragraph","","",null,null],[17,"XKB_KEY_periodcentered","","",null,null],[17,"XKB_KEY_cedilla","","",null,null],[17,"XKB_KEY_onesuperior","","",null,null],[17,"XKB_KEY_masculine","","",null,null],[17,"XKB_KEY_guillemotright","","",null,null],[17,"XKB_KEY_onequarter","","",null,null],[17,"XKB_KEY_onehalf","","",null,null],[17,"XKB_KEY_threequarters","","",null,null],[17,"XKB_KEY_questiondown","","",null,null],[17,"XKB_KEY_Agrave","","",null,null],[17,"XKB_KEY_Aacute","","",null,null],[17,"XKB_KEY_Acircumflex","","",null,null],[17,"XKB_KEY_Atilde","","",null,null],[17,"XKB_KEY_Adiaeresis","","",null,null],[17,"XKB_KEY_Aring","","",null,null],[17,"XKB_KEY_AE","","",null,null],[17,"XKB_KEY_Ccedilla","","",null,null],[17,"XKB_KEY_Egrave","","",null,null],[17,"XKB_KEY_Eacute","","",null,null],[17,"XKB_KEY_Ecircumflex","","",null,null],[17,"XKB_KEY_Ediaeresis","","",null,null],[17,"XKB_KEY_Igrave","","",null,null],[17,"XKB_KEY_Iacute","","",null,null],[17,"XKB_KEY_Icircumflex","","",null,null],[17,"XKB_KEY_Idiaeresis","","",null,null],[17,"XKB_KEY_ETH","","",null,null],[17,"XKB_KEY_Eth","","",null,null],[17,"XKB_KEY_Ntilde","","",null,null],[17,"XKB_KEY_Ograve","","",null,null],[17,"XKB_KEY_Oacute","","",null,null],[17,"XKB_KEY_Ocircumflex","","",null,null],[17,"XKB_KEY_Otilde","","",null,null],[17,"XKB_KEY_Odiaeresis","","",null,null],[17,"XKB_KEY_multiply","","",null,null],[17,"XKB_KEY_Oslash","","",null,null],[17,"XKB_KEY_Ooblique","","",null,null],[17,"XKB_KEY_Ugrave","","",null,null],[17,"XKB_KEY_Uacute","","",null,null],[17,"XKB_KEY_Ucircumflex","","",null,null],[17,"XKB_KEY_Udiaeresis","","",null,null],[17,"XKB_KEY_Yacute","","",null,null],[17,"XKB_KEY_THORN","","",null,null],[17,"XKB_KEY_Thorn","","",null,null],[17,"XKB_KEY_ssharp","","",null,null],[17,"XKB_KEY_agrave","","",null,null],[17,"XKB_KEY_aacute","","",null,null],[17,"XKB_KEY_acircumflex","","",null,null],[17,"XKB_KEY_atilde","","",null,null],[17,"XKB_KEY_adiaeresis","","",null,null],[17,"XKB_KEY_aring","","",null,null],[17,"XKB_KEY_ae","","",null,null],[17,"XKB_KEY_ccedilla","","",null,null],[17,"XKB_KEY_egrave","","",null,null],[17,"XKB_KEY_eacute","","",null,null],[17,"XKB_KEY_ecircumflex","","",null,null],[17,"XKB_KEY_ediaeresis","","",null,null],[17,"XKB_KEY_igrave","","",null,null],[17,"XKB_KEY_iacute","","",null,null],[17,"XKB_KEY_icircumflex","","",null,null],[17,"XKB_KEY_idiaeresis","","",null,null],[17,"XKB_KEY_eth","","",null,null],[17,"XKB_KEY_ntilde","","",null,null],[17,"XKB_KEY_ograve","","",null,null],[17,"XKB_KEY_oacute","","",null,null],[17,"XKB_KEY_ocircumflex","","",null,null],[17,"XKB_KEY_otilde","","",null,null],[17,"XKB_KEY_odiaeresis","","",null,null],[17,"XKB_KEY_division","","",null,null],[17,"XKB_KEY_oslash","","",null,null],[17,"XKB_KEY_ooblique","","",null,null],[17,"XKB_KEY_ugrave","","",null,null],[17,"XKB_KEY_uacute","","",null,null],[17,"XKB_KEY_ucircumflex","","",null,null],[17,"XKB_KEY_udiaeresis","","",null,null],[17,"XKB_KEY_yacute","","",null,null],[17,"XKB_KEY_thorn","","",null,null],[17,"XKB_KEY_ydiaeresis","","",null,null],[17,"XKB_KEY_Aogonek","","",null,null],[17,"XKB_KEY_breve","","",null,null],[17,"XKB_KEY_Lstroke","","",null,null],[17,"XKB_KEY_Lcaron","","",null,null],[17,"XKB_KEY_Sacute","","",null,null],[17,"XKB_KEY_Scaron","","",null,null],[17,"XKB_KEY_Scedilla","","",null,null],[17,"XKB_KEY_Tcaron","","",null,null],[17,"XKB_KEY_Zacute","","",null,null],[17,"XKB_KEY_Zcaron","","",null,null],[17,"XKB_KEY_Zabovedot","","",null,null],[17,"XKB_KEY_aogonek","","",null,null],[17,"XKB_KEY_ogonek","","",null,null],[17,"XKB_KEY_lstroke","","",null,null],[17,"XKB_KEY_lcaron","","",null,null],[17,"XKB_KEY_sacute","","",null,null],[17,"XKB_KEY_caron","","",null,null],[17,"XKB_KEY_scaron","","",null,null],[17,"XKB_KEY_scedilla","","",null,null],[17,"XKB_KEY_tcaron","","",null,null],[17,"XKB_KEY_zacute","","",null,null],[17,"XKB_KEY_doubleacute","","",null,null],[17,"XKB_KEY_zcaron","","",null,null],[17,"XKB_KEY_zabovedot","","",null,null],[17,"XKB_KEY_Racute","","",null,null],[17,"XKB_KEY_Abreve","","",null,null],[17,"XKB_KEY_Lacute","","",null,null],[17,"XKB_KEY_Cacute","","",null,null],[17,"XKB_KEY_Ccaron","","",null,null],[17,"XKB_KEY_Eogonek","","",null,null],[17,"XKB_KEY_Ecaron","","",null,null],[17,"XKB_KEY_Dcaron","","",null,null],[17,"XKB_KEY_Dstroke","","",null,null],[17,"XKB_KEY_Nacute","","",null,null],[17,"XKB_KEY_Ncaron","","",null,null],[17,"XKB_KEY_Odoubleacute","","",null,null],[17,"XKB_KEY_Rcaron","","",null,null],[17,"XKB_KEY_Uring","","",null,null],[17,"XKB_KEY_Udoubleacute","","",null,null],[17,"XKB_KEY_Tcedilla","","",null,null],[17,"XKB_KEY_racute","","",null,null],[17,"XKB_KEY_abreve","","",null,null],[17,"XKB_KEY_lacute","","",null,null],[17,"XKB_KEY_cacute","","",null,null],[17,"XKB_KEY_ccaron","","",null,null],[17,"XKB_KEY_eogonek","","",null,null],[17,"XKB_KEY_ecaron","","",null,null],[17,"XKB_KEY_dcaron","","",null,null],[17,"XKB_KEY_dstroke","","",null,null],[17,"XKB_KEY_nacute","","",null,null],[17,"XKB_KEY_ncaron","","",null,null],[17,"XKB_KEY_odoubleacute","","",null,null],[17,"XKB_KEY_rcaron","","",null,null],[17,"XKB_KEY_uring","","",null,null],[17,"XKB_KEY_udoubleacute","","",null,null],[17,"XKB_KEY_tcedilla","","",null,null],[17,"XKB_KEY_abovedot","","",null,null],[17,"XKB_KEY_Hstroke","","",null,null],[17,"XKB_KEY_Hcircumflex","","",null,null],[17,"XKB_KEY_Iabovedot","","",null,null],[17,"XKB_KEY_Gbreve","","",null,null],[17,"XKB_KEY_Jcircumflex","","",null,null],[17,"XKB_KEY_hstroke","","",null,null],[17,"XKB_KEY_hcircumflex","","",null,null],[17,"XKB_KEY_idotless","","",null,null],[17,"XKB_KEY_gbreve","","",null,null],[17,"XKB_KEY_jcircumflex","","",null,null],[17,"XKB_KEY_Cabovedot","","",null,null],[17,"XKB_KEY_Ccircumflex","","",null,null],[17,"XKB_KEY_Gabovedot","","",null,null],[17,"XKB_KEY_Gcircumflex","","",null,null],[17,"XKB_KEY_Ubreve","","",null,null],[17,"XKB_KEY_Scircumflex","","",null,null],[17,"XKB_KEY_cabovedot","","",null,null],[17,"XKB_KEY_ccircumflex","","",null,null],[17,"XKB_KEY_gabovedot","","",null,null],[17,"XKB_KEY_gcircumflex","","",null,null],[17,"XKB_KEY_ubreve","","",null,null],[17,"XKB_KEY_scircumflex","","",null,null],[17,"XKB_KEY_kra","","",null,null],[17,"XKB_KEY_kappa","","",null,null],[17,"XKB_KEY_Rcedilla","","",null,null],[17,"XKB_KEY_Itilde","","",null,null],[17,"XKB_KEY_Lcedilla","","",null,null],[17,"XKB_KEY_Emacron","","",null,null],[17,"XKB_KEY_Gcedilla","","",null,null],[17,"XKB_KEY_Tslash","","",null,null],[17,"XKB_KEY_rcedilla","","",null,null],[17,"XKB_KEY_itilde","","",null,null],[17,"XKB_KEY_lcedilla","","",null,null],[17,"XKB_KEY_emacron","","",null,null],[17,"XKB_KEY_gcedilla","","",null,null],[17,"XKB_KEY_tslash","","",null,null],[17,"XKB_KEY_ENG","","",null,null],[17,"XKB_KEY_eng","","",null,null],[17,"XKB_KEY_Amacron","","",null,null],[17,"XKB_KEY_Iogonek","","",null,null],[17,"XKB_KEY_Eabovedot","","",null,null],[17,"XKB_KEY_Imacron","","",null,null],[17,"XKB_KEY_Ncedilla","","",null,null],[17,"XKB_KEY_Omacron","","",null,null],[17,"XKB_KEY_Kcedilla","","",null,null],[17,"XKB_KEY_Uogonek","","",null,null],[17,"XKB_KEY_Utilde","","",null,null],[17,"XKB_KEY_Umacron","","",null,null],[17,"XKB_KEY_amacron","","",null,null],[17,"XKB_KEY_iogonek","","",null,null],[17,"XKB_KEY_eabovedot","","",null,null],[17,"XKB_KEY_imacron","","",null,null],[17,"XKB_KEY_ncedilla","","",null,null],[17,"XKB_KEY_omacron","","",null,null],[17,"XKB_KEY_kcedilla","","",null,null],[17,"XKB_KEY_uogonek","","",null,null],[17,"XKB_KEY_utilde","","",null,null],[17,"XKB_KEY_umacron","","",null,null],[17,"XKB_KEY_Wcircumflex","","",null,null],[17,"XKB_KEY_wcircumflex","","",null,null],[17,"XKB_KEY_Ycircumflex","","",null,null],[17,"XKB_KEY_ycircumflex","","",null,null],[17,"XKB_KEY_Babovedot","","",null,null],[17,"XKB_KEY_babovedot","","",null,null],[17,"XKB_KEY_Dabovedot","","",null,null],[17,"XKB_KEY_dabovedot","","",null,null],[17,"XKB_KEY_Fabovedot","","",null,null],[17,"XKB_KEY_fabovedot","","",null,null],[17,"XKB_KEY_Mabovedot","","",null,null],[17,"XKB_KEY_mabovedot","","",null,null],[17,"XKB_KEY_Pabovedot","","",null,null],[17,"XKB_KEY_pabovedot","","",null,null],[17,"XKB_KEY_Sabovedot","","",null,null],[17,"XKB_KEY_sabovedot","","",null,null],[17,"XKB_KEY_Tabovedot","","",null,null],[17,"XKB_KEY_tabovedot","","",null,null],[17,"XKB_KEY_Wgrave","","",null,null],[17,"XKB_KEY_wgrave","","",null,null],[17,"XKB_KEY_Wacute","","",null,null],[17,"XKB_KEY_wacute","","",null,null],[17,"XKB_KEY_Wdiaeresis","","",null,null],[17,"XKB_KEY_wdiaeresis","","",null,null],[17,"XKB_KEY_Ygrave","","",null,null],[17,"XKB_KEY_ygrave","","",null,null],[17,"XKB_KEY_OE","","",null,null],[17,"XKB_KEY_oe","","",null,null],[17,"XKB_KEY_Ydiaeresis","","",null,null],[17,"XKB_KEY_overline","","",null,null],[17,"XKB_KEY_kana_fullstop","","",null,null],[17,"XKB_KEY_kana_openingbracket","","",null,null],[17,"XKB_KEY_kana_closingbracket","","",null,null],[17,"XKB_KEY_kana_comma","","",null,null],[17,"XKB_KEY_kana_conjunctive","","",null,null],[17,"XKB_KEY_kana_middledot","","",null,null],[17,"XKB_KEY_kana_WO","","",null,null],[17,"XKB_KEY_kana_a","","",null,null],[17,"XKB_KEY_kana_i","","",null,null],[17,"XKB_KEY_kana_u","","",null,null],[17,"XKB_KEY_kana_e","","",null,null],[17,"XKB_KEY_kana_o","","",null,null],[17,"XKB_KEY_kana_ya","","",null,null],[17,"XKB_KEY_kana_yu","","",null,null],[17,"XKB_KEY_kana_yo","","",null,null],[17,"XKB_KEY_kana_tsu","","",null,null],[17,"XKB_KEY_kana_tu","","",null,null],[17,"XKB_KEY_prolongedsound","","",null,null],[17,"XKB_KEY_kana_A","","",null,null],[17,"XKB_KEY_kana_I","","",null,null],[17,"XKB_KEY_kana_U","","",null,null],[17,"XKB_KEY_kana_E","","",null,null],[17,"XKB_KEY_kana_O","","",null,null],[17,"XKB_KEY_kana_KA","","",null,null],[17,"XKB_KEY_kana_KI","","",null,null],[17,"XKB_KEY_kana_KU","","",null,null],[17,"XKB_KEY_kana_KE","","",null,null],[17,"XKB_KEY_kana_KO","","",null,null],[17,"XKB_KEY_kana_SA","","",null,null],[17,"XKB_KEY_kana_SHI","","",null,null],[17,"XKB_KEY_kana_SU","","",null,null],[17,"XKB_KEY_kana_SE","","",null,null],[17,"XKB_KEY_kana_SO","","",null,null],[17,"XKB_KEY_kana_TA","","",null,null],[17,"XKB_KEY_kana_CHI","","",null,null],[17,"XKB_KEY_kana_TI","","",null,null],[17,"XKB_KEY_kana_TSU","","",null,null],[17,"XKB_KEY_kana_TU","","",null,null],[17,"XKB_KEY_kana_TE","","",null,null],[17,"XKB_KEY_kana_TO","","",null,null],[17,"XKB_KEY_kana_NA","","",null,null],[17,"XKB_KEY_kana_NI","","",null,null],[17,"XKB_KEY_kana_NU","","",null,null],[17,"XKB_KEY_kana_NE","","",null,null],[17,"XKB_KEY_kana_NO","","",null,null],[17,"XKB_KEY_kana_HA","","",null,null],[17,"XKB_KEY_kana_HI","","",null,null],[17,"XKB_KEY_kana_FU","","",null,null],[17,"XKB_KEY_kana_HU","","",null,null],[17,"XKB_KEY_kana_HE","","",null,null],[17,"XKB_KEY_kana_HO","","",null,null],[17,"XKB_KEY_kana_MA","","",null,null],[17,"XKB_KEY_kana_MI","","",null,null],[17,"XKB_KEY_kana_MU","","",null,null],[17,"XKB_KEY_kana_ME","","",null,null],[17,"XKB_KEY_kana_MO","","",null,null],[17,"XKB_KEY_kana_YA","","",null,null],[17,"XKB_KEY_kana_YU","","",null,null],[17,"XKB_KEY_kana_YO","","",null,null],[17,"XKB_KEY_kana_RA","","",null,null],[17,"XKB_KEY_kana_RI","","",null,null],[17,"XKB_KEY_kana_RU","","",null,null],[17,"XKB_KEY_kana_RE","","",null,null],[17,"XKB_KEY_kana_RO","","",null,null],[17,"XKB_KEY_kana_WA","","",null,null],[17,"XKB_KEY_kana_N","","",null,null],[17,"XKB_KEY_voicedsound","","",null,null],[17,"XKB_KEY_semivoicedsound","","",null,null],[17,"XKB_KEY_kana_switch","","",null,null],[17,"XKB_KEY_Farsi_0","","",null,null],[17,"XKB_KEY_Farsi_1","","",null,null],[17,"XKB_KEY_Farsi_2","","",null,null],[17,"XKB_KEY_Farsi_3","","",null,null],[17,"XKB_KEY_Farsi_4","","",null,null],[17,"XKB_KEY_Farsi_5","","",null,null],[17,"XKB_KEY_Farsi_6","","",null,null],[17,"XKB_KEY_Farsi_7","","",null,null],[17,"XKB_KEY_Farsi_8","","",null,null],[17,"XKB_KEY_Farsi_9","","",null,null],[17,"XKB_KEY_Arabic_percent","","",null,null],[17,"XKB_KEY_Arabic_superscript_alef","","",null,null],[17,"XKB_KEY_Arabic_tteh","","",null,null],[17,"XKB_KEY_Arabic_peh","","",null,null],[17,"XKB_KEY_Arabic_tcheh","","",null,null],[17,"XKB_KEY_Arabic_ddal","","",null,null],[17,"XKB_KEY_Arabic_rreh","","",null,null],[17,"XKB_KEY_Arabic_comma","","",null,null],[17,"XKB_KEY_Arabic_fullstop","","",null,null],[17,"XKB_KEY_Arabic_0","","",null,null],[17,"XKB_KEY_Arabic_1","","",null,null],[17,"XKB_KEY_Arabic_2","","",null,null],[17,"XKB_KEY_Arabic_3","","",null,null],[17,"XKB_KEY_Arabic_4","","",null,null],[17,"XKB_KEY_Arabic_5","","",null,null],[17,"XKB_KEY_Arabic_6","","",null,null],[17,"XKB_KEY_Arabic_7","","",null,null],[17,"XKB_KEY_Arabic_8","","",null,null],[17,"XKB_KEY_Arabic_9","","",null,null],[17,"XKB_KEY_Arabic_semicolon","","",null,null],[17,"XKB_KEY_Arabic_question_mark","","",null,null],[17,"XKB_KEY_Arabic_hamza","","",null,null],[17,"XKB_KEY_Arabic_maddaonalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonwaw","","",null,null],[17,"XKB_KEY_Arabic_hamzaunderalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonyeh","","",null,null],[17,"XKB_KEY_Arabic_alef","","",null,null],[17,"XKB_KEY_Arabic_beh","","",null,null],[17,"XKB_KEY_Arabic_tehmarbuta","","",null,null],[17,"XKB_KEY_Arabic_teh","","",null,null],[17,"XKB_KEY_Arabic_theh","","",null,null],[17,"XKB_KEY_Arabic_jeem","","",null,null],[17,"XKB_KEY_Arabic_hah","","",null,null],[17,"XKB_KEY_Arabic_khah","","",null,null],[17,"XKB_KEY_Arabic_dal","","",null,null],[17,"XKB_KEY_Arabic_thal","","",null,null],[17,"XKB_KEY_Arabic_ra","","",null,null],[17,"XKB_KEY_Arabic_zain","","",null,null],[17,"XKB_KEY_Arabic_seen","","",null,null],[17,"XKB_KEY_Arabic_sheen","","",null,null],[17,"XKB_KEY_Arabic_sad","","",null,null],[17,"XKB_KEY_Arabic_dad","","",null,null],[17,"XKB_KEY_Arabic_tah","","",null,null],[17,"XKB_KEY_Arabic_zah","","",null,null],[17,"XKB_KEY_Arabic_ain","","",null,null],[17,"XKB_KEY_Arabic_ghain","","",null,null],[17,"XKB_KEY_Arabic_tatweel","","",null,null],[17,"XKB_KEY_Arabic_feh","","",null,null],[17,"XKB_KEY_Arabic_qaf","","",null,null],[17,"XKB_KEY_Arabic_kaf","","",null,null],[17,"XKB_KEY_Arabic_lam","","",null,null],[17,"XKB_KEY_Arabic_meem","","",null,null],[17,"XKB_KEY_Arabic_noon","","",null,null],[17,"XKB_KEY_Arabic_ha","","",null,null],[17,"XKB_KEY_Arabic_heh","","",null,null],[17,"XKB_KEY_Arabic_waw","","",null,null],[17,"XKB_KEY_Arabic_alefmaksura","","",null,null],[17,"XKB_KEY_Arabic_yeh","","",null,null],[17,"XKB_KEY_Arabic_fathatan","","",null,null],[17,"XKB_KEY_Arabic_dammatan","","",null,null],[17,"XKB_KEY_Arabic_kasratan","","",null,null],[17,"XKB_KEY_Arabic_fatha","","",null,null],[17,"XKB_KEY_Arabic_damma","","",null,null],[17,"XKB_KEY_Arabic_kasra","","",null,null],[17,"XKB_KEY_Arabic_shadda","","",null,null],[17,"XKB_KEY_Arabic_sukun","","",null,null],[17,"XKB_KEY_Arabic_madda_above","","",null,null],[17,"XKB_KEY_Arabic_hamza_above","","",null,null],[17,"XKB_KEY_Arabic_hamza_below","","",null,null],[17,"XKB_KEY_Arabic_jeh","","",null,null],[17,"XKB_KEY_Arabic_veh","","",null,null],[17,"XKB_KEY_Arabic_keheh","","",null,null],[17,"XKB_KEY_Arabic_gaf","","",null,null],[17,"XKB_KEY_Arabic_noon_ghunna","","",null,null],[17,"XKB_KEY_Arabic_heh_doachashmee","","",null,null],[17,"XKB_KEY_Farsi_yeh","","",null,null],[17,"XKB_KEY_Arabic_farsi_yeh","","",null,null],[17,"XKB_KEY_Arabic_yeh_baree","","",null,null],[17,"XKB_KEY_Arabic_heh_goal","","",null,null],[17,"XKB_KEY_Arabic_switch","","",null,null],[17,"XKB_KEY_Cyrillic_GHE_bar","","",null,null],[17,"XKB_KEY_Cyrillic_ghe_bar","","",null,null],[17,"XKB_KEY_Cyrillic_ZHE_descender","","",null,null],[17,"XKB_KEY_Cyrillic_zhe_descender","","",null,null],[17,"XKB_KEY_Cyrillic_KA_descender","","",null,null],[17,"XKB_KEY_Cyrillic_ka_descender","","",null,null],[17,"XKB_KEY_Cyrillic_KA_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_ka_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_EN_descender","","",null,null],[17,"XKB_KEY_Cyrillic_en_descender","","",null,null],[17,"XKB_KEY_Cyrillic_U_straight","","",null,null],[17,"XKB_KEY_Cyrillic_u_straight","","",null,null],[17,"XKB_KEY_Cyrillic_U_straight_bar","","",null,null],[17,"XKB_KEY_Cyrillic_u_straight_bar","","",null,null],[17,"XKB_KEY_Cyrillic_HA_descender","","",null,null],[17,"XKB_KEY_Cyrillic_ha_descender","","",null,null],[17,"XKB_KEY_Cyrillic_CHE_descender","","",null,null],[17,"XKB_KEY_Cyrillic_che_descender","","",null,null],[17,"XKB_KEY_Cyrillic_CHE_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_che_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_SHHA","","",null,null],[17,"XKB_KEY_Cyrillic_shha","","",null,null],[17,"XKB_KEY_Cyrillic_SCHWA","","",null,null],[17,"XKB_KEY_Cyrillic_schwa","","",null,null],[17,"XKB_KEY_Cyrillic_I_macron","","",null,null],[17,"XKB_KEY_Cyrillic_i_macron","","",null,null],[17,"XKB_KEY_Cyrillic_O_bar","","",null,null],[17,"XKB_KEY_Cyrillic_o_bar","","",null,null],[17,"XKB_KEY_Cyrillic_U_macron","","",null,null],[17,"XKB_KEY_Cyrillic_u_macron","","",null,null],[17,"XKB_KEY_Serbian_dje","","",null,null],[17,"XKB_KEY_Macedonia_gje","","",null,null],[17,"XKB_KEY_Cyrillic_io","","",null,null],[17,"XKB_KEY_Ukrainian_ie","","",null,null],[17,"XKB_KEY_Ukranian_je","","",null,null],[17,"XKB_KEY_Macedonia_dse","","",null,null],[17,"XKB_KEY_Ukrainian_i","","",null,null],[17,"XKB_KEY_Ukranian_i","","",null,null],[17,"XKB_KEY_Ukrainian_yi","","",null,null],[17,"XKB_KEY_Ukranian_yi","","",null,null],[17,"XKB_KEY_Cyrillic_je","","",null,null],[17,"XKB_KEY_Serbian_je","","",null,null],[17,"XKB_KEY_Cyrillic_lje","","",null,null],[17,"XKB_KEY_Serbian_lje","","",null,null],[17,"XKB_KEY_Cyrillic_nje","","",null,null],[17,"XKB_KEY_Serbian_nje","","",null,null],[17,"XKB_KEY_Serbian_tshe","","",null,null],[17,"XKB_KEY_Macedonia_kje","","",null,null],[17,"XKB_KEY_Ukrainian_ghe_with_upturn","","",null,null],[17,"XKB_KEY_Byelorussian_shortu","","",null,null],[17,"XKB_KEY_Cyrillic_dzhe","","",null,null],[17,"XKB_KEY_Serbian_dze","","",null,null],[17,"XKB_KEY_numerosign","","",null,null],[17,"XKB_KEY_Serbian_DJE","","",null,null],[17,"XKB_KEY_Macedonia_GJE","","",null,null],[17,"XKB_KEY_Cyrillic_IO","","",null,null],[17,"XKB_KEY_Ukrainian_IE","","",null,null],[17,"XKB_KEY_Ukranian_JE","","",null,null],[17,"XKB_KEY_Macedonia_DSE","","",null,null],[17,"XKB_KEY_Ukrainian_I","","",null,null],[17,"XKB_KEY_Ukranian_I","","",null,null],[17,"XKB_KEY_Ukrainian_YI","","",null,null],[17,"XKB_KEY_Ukranian_YI","","",null,null],[17,"XKB_KEY_Cyrillic_JE","","",null,null],[17,"XKB_KEY_Serbian_JE","","",null,null],[17,"XKB_KEY_Cyrillic_LJE","","",null,null],[17,"XKB_KEY_Serbian_LJE","","",null,null],[17,"XKB_KEY_Cyrillic_NJE","","",null,null],[17,"XKB_KEY_Serbian_NJE","","",null,null],[17,"XKB_KEY_Serbian_TSHE","","",null,null],[17,"XKB_KEY_Macedonia_KJE","","",null,null],[17,"XKB_KEY_Ukrainian_GHE_WITH_UPTURN","","",null,null],[17,"XKB_KEY_Byelorussian_SHORTU","","",null,null],[17,"XKB_KEY_Cyrillic_DZHE","","",null,null],[17,"XKB_KEY_Serbian_DZE","","",null,null],[17,"XKB_KEY_Cyrillic_yu","","",null,null],[17,"XKB_KEY_Cyrillic_a","","",null,null],[17,"XKB_KEY_Cyrillic_be","","",null,null],[17,"XKB_KEY_Cyrillic_tse","","",null,null],[17,"XKB_KEY_Cyrillic_de","","",null,null],[17,"XKB_KEY_Cyrillic_ie","","",null,null],[17,"XKB_KEY_Cyrillic_ef","","",null,null],[17,"XKB_KEY_Cyrillic_ghe","","",null,null],[17,"XKB_KEY_Cyrillic_ha","","",null,null],[17,"XKB_KEY_Cyrillic_i","","",null,null],[17,"XKB_KEY_Cyrillic_shorti","","",null,null],[17,"XKB_KEY_Cyrillic_ka","","",null,null],[17,"XKB_KEY_Cyrillic_el","","",null,null],[17,"XKB_KEY_Cyrillic_em","","",null,null],[17,"XKB_KEY_Cyrillic_en","","",null,null],[17,"XKB_KEY_Cyrillic_o","","",null,null],[17,"XKB_KEY_Cyrillic_pe","","",null,null],[17,"XKB_KEY_Cyrillic_ya","","",null,null],[17,"XKB_KEY_Cyrillic_er","","",null,null],[17,"XKB_KEY_Cyrillic_es","","",null,null],[17,"XKB_KEY_Cyrillic_te","","",null,null],[17,"XKB_KEY_Cyrillic_u","","",null,null],[17,"XKB_KEY_Cyrillic_zhe","","",null,null],[17,"XKB_KEY_Cyrillic_ve","","",null,null],[17,"XKB_KEY_Cyrillic_softsign","","",null,null],[17,"XKB_KEY_Cyrillic_yeru","","",null,null],[17,"XKB_KEY_Cyrillic_ze","","",null,null],[17,"XKB_KEY_Cyrillic_sha","","",null,null],[17,"XKB_KEY_Cyrillic_e","","",null,null],[17,"XKB_KEY_Cyrillic_shcha","","",null,null],[17,"XKB_KEY_Cyrillic_che","","",null,null],[17,"XKB_KEY_Cyrillic_hardsign","","",null,null],[17,"XKB_KEY_Cyrillic_YU","","",null,null],[17,"XKB_KEY_Cyrillic_A","","",null,null],[17,"XKB_KEY_Cyrillic_BE","","",null,null],[17,"XKB_KEY_Cyrillic_TSE","","",null,null],[17,"XKB_KEY_Cyrillic_DE","","",null,null],[17,"XKB_KEY_Cyrillic_IE","","",null,null],[17,"XKB_KEY_Cyrillic_EF","","",null,null],[17,"XKB_KEY_Cyrillic_GHE","","",null,null],[17,"XKB_KEY_Cyrillic_HA","","",null,null],[17,"XKB_KEY_Cyrillic_I","","",null,null],[17,"XKB_KEY_Cyrillic_SHORTI","","",null,null],[17,"XKB_KEY_Cyrillic_KA","","",null,null],[17,"XKB_KEY_Cyrillic_EL","","",null,null],[17,"XKB_KEY_Cyrillic_EM","","",null,null],[17,"XKB_KEY_Cyrillic_EN","","",null,null],[17,"XKB_KEY_Cyrillic_O","","",null,null],[17,"XKB_KEY_Cyrillic_PE","","",null,null],[17,"XKB_KEY_Cyrillic_YA","","",null,null],[17,"XKB_KEY_Cyrillic_ER","","",null,null],[17,"XKB_KEY_Cyrillic_ES","","",null,null],[17,"XKB_KEY_Cyrillic_TE","","",null,null],[17,"XKB_KEY_Cyrillic_U","","",null,null],[17,"XKB_KEY_Cyrillic_ZHE","","",null,null],[17,"XKB_KEY_Cyrillic_VE","","",null,null],[17,"XKB_KEY_Cyrillic_SOFTSIGN","","",null,null],[17,"XKB_KEY_Cyrillic_YERU","","",null,null],[17,"XKB_KEY_Cyrillic_ZE","","",null,null],[17,"XKB_KEY_Cyrillic_SHA","","",null,null],[17,"XKB_KEY_Cyrillic_E","","",null,null],[17,"XKB_KEY_Cyrillic_SHCHA","","",null,null],[17,"XKB_KEY_Cyrillic_CHE","","",null,null],[17,"XKB_KEY_Cyrillic_HARDSIGN","","",null,null],[17,"XKB_KEY_Greek_ALPHAaccent","","",null,null],[17,"XKB_KEY_Greek_EPSILONaccent","","",null,null],[17,"XKB_KEY_Greek_ETAaccent","","",null,null],[17,"XKB_KEY_Greek_IOTAaccent","","",null,null],[17,"XKB_KEY_Greek_IOTAdieresis","","",null,null],[17,"XKB_KEY_Greek_IOTAdiaeresis","","",null,null],[17,"XKB_KEY_Greek_OMICRONaccent","","",null,null],[17,"XKB_KEY_Greek_UPSILONaccent","","",null,null],[17,"XKB_KEY_Greek_UPSILONdieresis","","",null,null],[17,"XKB_KEY_Greek_OMEGAaccent","","",null,null],[17,"XKB_KEY_Greek_accentdieresis","","",null,null],[17,"XKB_KEY_Greek_horizbar","","",null,null],[17,"XKB_KEY_Greek_alphaaccent","","",null,null],[17,"XKB_KEY_Greek_epsilonaccent","","",null,null],[17,"XKB_KEY_Greek_etaaccent","","",null,null],[17,"XKB_KEY_Greek_iotaaccent","","",null,null],[17,"XKB_KEY_Greek_iotadieresis","","",null,null],[17,"XKB_KEY_Greek_iotaaccentdieresis","","",null,null],[17,"XKB_KEY_Greek_omicronaccent","","",null,null],[17,"XKB_KEY_Greek_upsilonaccent","","",null,null],[17,"XKB_KEY_Greek_upsilondieresis","","",null,null],[17,"XKB_KEY_Greek_upsilonaccentdieresis","","",null,null],[17,"XKB_KEY_Greek_omegaaccent","","",null,null],[17,"XKB_KEY_Greek_ALPHA","","",null,null],[17,"XKB_KEY_Greek_BETA","","",null,null],[17,"XKB_KEY_Greek_GAMMA","","",null,null],[17,"XKB_KEY_Greek_DELTA","","",null,null],[17,"XKB_KEY_Greek_EPSILON","","",null,null],[17,"XKB_KEY_Greek_ZETA","","",null,null],[17,"XKB_KEY_Greek_ETA","","",null,null],[17,"XKB_KEY_Greek_THETA","","",null,null],[17,"XKB_KEY_Greek_IOTA","","",null,null],[17,"XKB_KEY_Greek_KAPPA","","",null,null],[17,"XKB_KEY_Greek_LAMDA","","",null,null],[17,"XKB_KEY_Greek_LAMBDA","","",null,null],[17,"XKB_KEY_Greek_MU","","",null,null],[17,"XKB_KEY_Greek_NU","","",null,null],[17,"XKB_KEY_Greek_XI","","",null,null],[17,"XKB_KEY_Greek_OMICRON","","",null,null],[17,"XKB_KEY_Greek_PI","","",null,null],[17,"XKB_KEY_Greek_RHO","","",null,null],[17,"XKB_KEY_Greek_SIGMA","","",null,null],[17,"XKB_KEY_Greek_TAU","","",null,null],[17,"XKB_KEY_Greek_UPSILON","","",null,null],[17,"XKB_KEY_Greek_PHI","","",null,null],[17,"XKB_KEY_Greek_CHI","","",null,null],[17,"XKB_KEY_Greek_PSI","","",null,null],[17,"XKB_KEY_Greek_OMEGA","","",null,null],[17,"XKB_KEY_Greek_alpha","","",null,null],[17,"XKB_KEY_Greek_beta","","",null,null],[17,"XKB_KEY_Greek_gamma","","",null,null],[17,"XKB_KEY_Greek_delta","","",null,null],[17,"XKB_KEY_Greek_epsilon","","",null,null],[17,"XKB_KEY_Greek_zeta","","",null,null],[17,"XKB_KEY_Greek_eta","","",null,null],[17,"XKB_KEY_Greek_theta","","",null,null],[17,"XKB_KEY_Greek_iota","","",null,null],[17,"XKB_KEY_Greek_kappa","","",null,null],[17,"XKB_KEY_Greek_lamda","","",null,null],[17,"XKB_KEY_Greek_lambda","","",null,null],[17,"XKB_KEY_Greek_mu","","",null,null],[17,"XKB_KEY_Greek_nu","","",null,null],[17,"XKB_KEY_Greek_xi","","",null,null],[17,"XKB_KEY_Greek_omicron","","",null,null],[17,"XKB_KEY_Greek_pi","","",null,null],[17,"XKB_KEY_Greek_rho","","",null,null],[17,"XKB_KEY_Greek_sigma","","",null,null],[17,"XKB_KEY_Greek_finalsmallsigma","","",null,null],[17,"XKB_KEY_Greek_tau","","",null,null],[17,"XKB_KEY_Greek_upsilon","","",null,null],[17,"XKB_KEY_Greek_phi","","",null,null],[17,"XKB_KEY_Greek_chi","","",null,null],[17,"XKB_KEY_Greek_psi","","",null,null],[17,"XKB_KEY_Greek_omega","","",null,null],[17,"XKB_KEY_Greek_switch","","",null,null],[17,"XKB_KEY_leftradical","","",null,null],[17,"XKB_KEY_topleftradical","","",null,null],[17,"XKB_KEY_horizconnector","","",null,null],[17,"XKB_KEY_topintegral","","",null,null],[17,"XKB_KEY_botintegral","","",null,null],[17,"XKB_KEY_vertconnector","","",null,null],[17,"XKB_KEY_topleftsqbracket","","",null,null],[17,"XKB_KEY_botleftsqbracket","","",null,null],[17,"XKB_KEY_toprightsqbracket","","",null,null],[17,"XKB_KEY_botrightsqbracket","","",null,null],[17,"XKB_KEY_topleftparens","","",null,null],[17,"XKB_KEY_botleftparens","","",null,null],[17,"XKB_KEY_toprightparens","","",null,null],[17,"XKB_KEY_botrightparens","","",null,null],[17,"XKB_KEY_leftmiddlecurlybrace","","",null,null],[17,"XKB_KEY_rightmiddlecurlybrace","","",null,null],[17,"XKB_KEY_topleftsummation","","",null,null],[17,"XKB_KEY_botleftsummation","","",null,null],[17,"XKB_KEY_topvertsummationconnector","","",null,null],[17,"XKB_KEY_botvertsummationconnector","","",null,null],[17,"XKB_KEY_toprightsummation","","",null,null],[17,"XKB_KEY_botrightsummation","","",null,null],[17,"XKB_KEY_rightmiddlesummation","","",null,null],[17,"XKB_KEY_lessthanequal","","",null,null],[17,"XKB_KEY_notequal","","",null,null],[17,"XKB_KEY_greaterthanequal","","",null,null],[17,"XKB_KEY_integral","","",null,null],[17,"XKB_KEY_therefore","","",null,null],[17,"XKB_KEY_variation","","",null,null],[17,"XKB_KEY_infinity","","",null,null],[17,"XKB_KEY_nabla","","",null,null],[17,"XKB_KEY_approximate","","",null,null],[17,"XKB_KEY_similarequal","","",null,null],[17,"XKB_KEY_ifonlyif","","",null,null],[17,"XKB_KEY_implies","","",null,null],[17,"XKB_KEY_identical","","",null,null],[17,"XKB_KEY_radical","","",null,null],[17,"XKB_KEY_includedin","","",null,null],[17,"XKB_KEY_includes","","",null,null],[17,"XKB_KEY_intersection","","",null,null],[17,"XKB_KEY_union","","",null,null],[17,"XKB_KEY_logicaland","","",null,null],[17,"XKB_KEY_logicalor","","",null,null],[17,"XKB_KEY_partialderivative","","",null,null],[17,"XKB_KEY_function","","",null,null],[17,"XKB_KEY_leftarrow","","",null,null],[17,"XKB_KEY_uparrow","","",null,null],[17,"XKB_KEY_rightarrow","","",null,null],[17,"XKB_KEY_downarrow","","",null,null],[17,"XKB_KEY_blank","","",null,null],[17,"XKB_KEY_soliddiamond","","",null,null],[17,"XKB_KEY_checkerboard","","",null,null],[17,"XKB_KEY_ht","","",null,null],[17,"XKB_KEY_ff","","",null,null],[17,"XKB_KEY_cr","","",null,null],[17,"XKB_KEY_lf","","",null,null],[17,"XKB_KEY_nl","","",null,null],[17,"XKB_KEY_vt","","",null,null],[17,"XKB_KEY_lowrightcorner","","",null,null],[17,"XKB_KEY_uprightcorner","","",null,null],[17,"XKB_KEY_upleftcorner","","",null,null],[17,"XKB_KEY_lowleftcorner","","",null,null],[17,"XKB_KEY_crossinglines","","",null,null],[17,"XKB_KEY_horizlinescan1","","",null,null],[17,"XKB_KEY_horizlinescan3","","",null,null],[17,"XKB_KEY_horizlinescan5","","",null,null],[17,"XKB_KEY_horizlinescan7","","",null,null],[17,"XKB_KEY_horizlinescan9","","",null,null],[17,"XKB_KEY_leftt","","",null,null],[17,"XKB_KEY_rightt","","",null,null],[17,"XKB_KEY_bott","","",null,null],[17,"XKB_KEY_topt","","",null,null],[17,"XKB_KEY_vertbar","","",null,null],[17,"XKB_KEY_emspace","","",null,null],[17,"XKB_KEY_enspace","","",null,null],[17,"XKB_KEY_em3space","","",null,null],[17,"XKB_KEY_em4space","","",null,null],[17,"XKB_KEY_digitspace","","",null,null],[17,"XKB_KEY_punctspace","","",null,null],[17,"XKB_KEY_thinspace","","",null,null],[17,"XKB_KEY_hairspace","","",null,null],[17,"XKB_KEY_emdash","","",null,null],[17,"XKB_KEY_endash","","",null,null],[17,"XKB_KEY_signifblank","","",null,null],[17,"XKB_KEY_ellipsis","","",null,null],[17,"XKB_KEY_doubbaselinedot","","",null,null],[17,"XKB_KEY_onethird","","",null,null],[17,"XKB_KEY_twothirds","","",null,null],[17,"XKB_KEY_onefifth","","",null,null],[17,"XKB_KEY_twofifths","","",null,null],[17,"XKB_KEY_threefifths","","",null,null],[17,"XKB_KEY_fourfifths","","",null,null],[17,"XKB_KEY_onesixth","","",null,null],[17,"XKB_KEY_fivesixths","","",null,null],[17,"XKB_KEY_careof","","",null,null],[17,"XKB_KEY_figdash","","",null,null],[17,"XKB_KEY_leftanglebracket","","",null,null],[17,"XKB_KEY_decimalpoint","","",null,null],[17,"XKB_KEY_rightanglebracket","","",null,null],[17,"XKB_KEY_marker","","",null,null],[17,"XKB_KEY_oneeighth","","",null,null],[17,"XKB_KEY_threeeighths","","",null,null],[17,"XKB_KEY_fiveeighths","","",null,null],[17,"XKB_KEY_seveneighths","","",null,null],[17,"XKB_KEY_trademark","","",null,null],[17,"XKB_KEY_signaturemark","","",null,null],[17,"XKB_KEY_trademarkincircle","","",null,null],[17,"XKB_KEY_leftopentriangle","","",null,null],[17,"XKB_KEY_rightopentriangle","","",null,null],[17,"XKB_KEY_emopencircle","","",null,null],[17,"XKB_KEY_emopenrectangle","","",null,null],[17,"XKB_KEY_leftsinglequotemark","","",null,null],[17,"XKB_KEY_rightsinglequotemark","","",null,null],[17,"XKB_KEY_leftdoublequotemark","","",null,null],[17,"XKB_KEY_rightdoublequotemark","","",null,null],[17,"XKB_KEY_prescription","","",null,null],[17,"XKB_KEY_permille","","",null,null],[17,"XKB_KEY_minutes","","",null,null],[17,"XKB_KEY_seconds","","",null,null],[17,"XKB_KEY_latincross","","",null,null],[17,"XKB_KEY_hexagram","","",null,null],[17,"XKB_KEY_filledrectbullet","","",null,null],[17,"XKB_KEY_filledlefttribullet","","",null,null],[17,"XKB_KEY_filledrighttribullet","","",null,null],[17,"XKB_KEY_emfilledcircle","","",null,null],[17,"XKB_KEY_emfilledrect","","",null,null],[17,"XKB_KEY_enopencircbullet","","",null,null],[17,"XKB_KEY_enopensquarebullet","","",null,null],[17,"XKB_KEY_openrectbullet","","",null,null],[17,"XKB_KEY_opentribulletup","","",null,null],[17,"XKB_KEY_opentribulletdown","","",null,null],[17,"XKB_KEY_openstar","","",null,null],[17,"XKB_KEY_enfilledcircbullet","","",null,null],[17,"XKB_KEY_enfilledsqbullet","","",null,null],[17,"XKB_KEY_filledtribulletup","","",null,null],[17,"XKB_KEY_filledtribulletdown","","",null,null],[17,"XKB_KEY_leftpointer","","",null,null],[17,"XKB_KEY_rightpointer","","",null,null],[17,"XKB_KEY_club","","",null,null],[17,"XKB_KEY_diamond","","",null,null],[17,"XKB_KEY_heart","","",null,null],[17,"XKB_KEY_maltesecross","","",null,null],[17,"XKB_KEY_dagger","","",null,null],[17,"XKB_KEY_doubledagger","","",null,null],[17,"XKB_KEY_checkmark","","",null,null],[17,"XKB_KEY_ballotcross","","",null,null],[17,"XKB_KEY_musicalsharp","","",null,null],[17,"XKB_KEY_musicalflat","","",null,null],[17,"XKB_KEY_malesymbol","","",null,null],[17,"XKB_KEY_femalesymbol","","",null,null],[17,"XKB_KEY_telephone","","",null,null],[17,"XKB_KEY_telephonerecorder","","",null,null],[17,"XKB_KEY_phonographcopyright","","",null,null],[17,"XKB_KEY_caret","","",null,null],[17,"XKB_KEY_singlelowquotemark","","",null,null],[17,"XKB_KEY_doublelowquotemark","","",null,null],[17,"XKB_KEY_cursor","","",null,null],[17,"XKB_KEY_leftcaret","","",null,null],[17,"XKB_KEY_rightcaret","","",null,null],[17,"XKB_KEY_downcaret","","",null,null],[17,"XKB_KEY_upcaret","","",null,null],[17,"XKB_KEY_overbar","","",null,null],[17,"XKB_KEY_downtack","","",null,null],[17,"XKB_KEY_upshoe","","",null,null],[17,"XKB_KEY_downstile","","",null,null],[17,"XKB_KEY_underbar","","",null,null],[17,"XKB_KEY_jot","","",null,null],[17,"XKB_KEY_quad","","",null,null],[17,"XKB_KEY_uptack","","",null,null],[17,"XKB_KEY_circle","","",null,null],[17,"XKB_KEY_upstile","","",null,null],[17,"XKB_KEY_downshoe","","",null,null],[17,"XKB_KEY_rightshoe","","",null,null],[17,"XKB_KEY_leftshoe","","",null,null],[17,"XKB_KEY_lefttack","","",null,null],[17,"XKB_KEY_righttack","","",null,null],[17,"XKB_KEY_hebrew_doublelowline","","",null,null],[17,"XKB_KEY_hebrew_aleph","","",null,null],[17,"XKB_KEY_hebrew_bet","","",null,null],[17,"XKB_KEY_hebrew_beth","","",null,null],[17,"XKB_KEY_hebrew_gimel","","",null,null],[17,"XKB_KEY_hebrew_gimmel","","",null,null],[17,"XKB_KEY_hebrew_dalet","","",null,null],[17,"XKB_KEY_hebrew_daleth","","",null,null],[17,"XKB_KEY_hebrew_he","","",null,null],[17,"XKB_KEY_hebrew_waw","","",null,null],[17,"XKB_KEY_hebrew_zain","","",null,null],[17,"XKB_KEY_hebrew_zayin","","",null,null],[17,"XKB_KEY_hebrew_chet","","",null,null],[17,"XKB_KEY_hebrew_het","","",null,null],[17,"XKB_KEY_hebrew_tet","","",null,null],[17,"XKB_KEY_hebrew_teth","","",null,null],[17,"XKB_KEY_hebrew_yod","","",null,null],[17,"XKB_KEY_hebrew_finalkaph","","",null,null],[17,"XKB_KEY_hebrew_kaph","","",null,null],[17,"XKB_KEY_hebrew_lamed","","",null,null],[17,"XKB_KEY_hebrew_finalmem","","",null,null],[17,"XKB_KEY_hebrew_mem","","",null,null],[17,"XKB_KEY_hebrew_finalnun","","",null,null],[17,"XKB_KEY_hebrew_nun","","",null,null],[17,"XKB_KEY_hebrew_samech","","",null,null],[17,"XKB_KEY_hebrew_samekh","","",null,null],[17,"XKB_KEY_hebrew_ayin","","",null,null],[17,"XKB_KEY_hebrew_finalpe","","",null,null],[17,"XKB_KEY_hebrew_pe","","",null,null],[17,"XKB_KEY_hebrew_finalzade","","",null,null],[17,"XKB_KEY_hebrew_finalzadi","","",null,null],[17,"XKB_KEY_hebrew_zade","","",null,null],[17,"XKB_KEY_hebrew_zadi","","",null,null],[17,"XKB_KEY_hebrew_qoph","","",null,null],[17,"XKB_KEY_hebrew_kuf","","",null,null],[17,"XKB_KEY_hebrew_resh","","",null,null],[17,"XKB_KEY_hebrew_shin","","",null,null],[17,"XKB_KEY_hebrew_taw","","",null,null],[17,"XKB_KEY_hebrew_taf","","",null,null],[17,"XKB_KEY_Hebrew_switch","","",null,null],[17,"XKB_KEY_Thai_kokai","","",null,null],[17,"XKB_KEY_Thai_khokhai","","",null,null],[17,"XKB_KEY_Thai_khokhuat","","",null,null],[17,"XKB_KEY_Thai_khokhwai","","",null,null],[17,"XKB_KEY_Thai_khokhon","","",null,null],[17,"XKB_KEY_Thai_khorakhang","","",null,null],[17,"XKB_KEY_Thai_ngongu","","",null,null],[17,"XKB_KEY_Thai_chochan","","",null,null],[17,"XKB_KEY_Thai_choching","","",null,null],[17,"XKB_KEY_Thai_chochang","","",null,null],[17,"XKB_KEY_Thai_soso","","",null,null],[17,"XKB_KEY_Thai_chochoe","","",null,null],[17,"XKB_KEY_Thai_yoying","","",null,null],[17,"XKB_KEY_Thai_dochada","","",null,null],[17,"XKB_KEY_Thai_topatak","","",null,null],[17,"XKB_KEY_Thai_thothan","","",null,null],[17,"XKB_KEY_Thai_thonangmontho","","",null,null],[17,"XKB_KEY_Thai_thophuthao","","",null,null],[17,"XKB_KEY_Thai_nonen","","",null,null],[17,"XKB_KEY_Thai_dodek","","",null,null],[17,"XKB_KEY_Thai_totao","","",null,null],[17,"XKB_KEY_Thai_thothung","","",null,null],[17,"XKB_KEY_Thai_thothahan","","",null,null],[17,"XKB_KEY_Thai_thothong","","",null,null],[17,"XKB_KEY_Thai_nonu","","",null,null],[17,"XKB_KEY_Thai_bobaimai","","",null,null],[17,"XKB_KEY_Thai_popla","","",null,null],[17,"XKB_KEY_Thai_phophung","","",null,null],[17,"XKB_KEY_Thai_fofa","","",null,null],[17,"XKB_KEY_Thai_phophan","","",null,null],[17,"XKB_KEY_Thai_fofan","","",null,null],[17,"XKB_KEY_Thai_phosamphao","","",null,null],[17,"XKB_KEY_Thai_moma","","",null,null],[17,"XKB_KEY_Thai_yoyak","","",null,null],[17,"XKB_KEY_Thai_rorua","","",null,null],[17,"XKB_KEY_Thai_ru","","",null,null],[17,"XKB_KEY_Thai_loling","","",null,null],[17,"XKB_KEY_Thai_lu","","",null,null],[17,"XKB_KEY_Thai_wowaen","","",null,null],[17,"XKB_KEY_Thai_sosala","","",null,null],[17,"XKB_KEY_Thai_sorusi","","",null,null],[17,"XKB_KEY_Thai_sosua","","",null,null],[17,"XKB_KEY_Thai_hohip","","",null,null],[17,"XKB_KEY_Thai_lochula","","",null,null],[17,"XKB_KEY_Thai_oang","","",null,null],[17,"XKB_KEY_Thai_honokhuk","","",null,null],[17,"XKB_KEY_Thai_paiyannoi","","",null,null],[17,"XKB_KEY_Thai_saraa","","",null,null],[17,"XKB_KEY_Thai_maihanakat","","",null,null],[17,"XKB_KEY_Thai_saraaa","","",null,null],[17,"XKB_KEY_Thai_saraam","","",null,null],[17,"XKB_KEY_Thai_sarai","","",null,null],[17,"XKB_KEY_Thai_saraii","","",null,null],[17,"XKB_KEY_Thai_saraue","","",null,null],[17,"XKB_KEY_Thai_sarauee","","",null,null],[17,"XKB_KEY_Thai_sarau","","",null,null],[17,"XKB_KEY_Thai_sarauu","","",null,null],[17,"XKB_KEY_Thai_phinthu","","",null,null],[17,"XKB_KEY_Thai_maihanakat_maitho","","",null,null],[17,"XKB_KEY_Thai_baht","","",null,null],[17,"XKB_KEY_Thai_sarae","","",null,null],[17,"XKB_KEY_Thai_saraae","","",null,null],[17,"XKB_KEY_Thai_sarao","","",null,null],[17,"XKB_KEY_Thai_saraaimaimuan","","",null,null],[17,"XKB_KEY_Thai_saraaimaimalai","","",null,null],[17,"XKB_KEY_Thai_lakkhangyao","","",null,null],[17,"XKB_KEY_Thai_maiyamok","","",null,null],[17,"XKB_KEY_Thai_maitaikhu","","",null,null],[17,"XKB_KEY_Thai_maiek","","",null,null],[17,"XKB_KEY_Thai_maitho","","",null,null],[17,"XKB_KEY_Thai_maitri","","",null,null],[17,"XKB_KEY_Thai_maichattawa","","",null,null],[17,"XKB_KEY_Thai_thanthakhat","","",null,null],[17,"XKB_KEY_Thai_nikhahit","","",null,null],[17,"XKB_KEY_Thai_leksun","","",null,null],[17,"XKB_KEY_Thai_leknung","","",null,null],[17,"XKB_KEY_Thai_leksong","","",null,null],[17,"XKB_KEY_Thai_leksam","","",null,null],[17,"XKB_KEY_Thai_leksi","","",null,null],[17,"XKB_KEY_Thai_lekha","","",null,null],[17,"XKB_KEY_Thai_lekhok","","",null,null],[17,"XKB_KEY_Thai_lekchet","","",null,null],[17,"XKB_KEY_Thai_lekpaet","","",null,null],[17,"XKB_KEY_Thai_lekkao","","",null,null],[17,"XKB_KEY_Hangul","","",null,null],[17,"XKB_KEY_Hangul_Start","","",null,null],[17,"XKB_KEY_Hangul_End","","",null,null],[17,"XKB_KEY_Hangul_Hanja","","",null,null],[17,"XKB_KEY_Hangul_Jamo","","",null,null],[17,"XKB_KEY_Hangul_Romaja","","",null,null],[17,"XKB_KEY_Hangul_Codeinput","","",null,null],[17,"XKB_KEY_Hangul_Jeonja","","",null,null],[17,"XKB_KEY_Hangul_Banja","","",null,null],[17,"XKB_KEY_Hangul_PreHanja","","",null,null],[17,"XKB_KEY_Hangul_PostHanja","","",null,null],[17,"XKB_KEY_Hangul_SingleCandidate","","",null,null],[17,"XKB_KEY_Hangul_MultipleCandidate","","",null,null],[17,"XKB_KEY_Hangul_PreviousCandidate","","",null,null],[17,"XKB_KEY_Hangul_Special","","",null,null],[17,"XKB_KEY_Hangul_switch","","",null,null],[17,"XKB_KEY_Hangul_Kiyeog","","",null,null],[17,"XKB_KEY_Hangul_SsangKiyeog","","",null,null],[17,"XKB_KEY_Hangul_KiyeogSios","","",null,null],[17,"XKB_KEY_Hangul_Nieun","","",null,null],[17,"XKB_KEY_Hangul_NieunJieuj","","",null,null],[17,"XKB_KEY_Hangul_NieunHieuh","","",null,null],[17,"XKB_KEY_Hangul_Dikeud","","",null,null],[17,"XKB_KEY_Hangul_SsangDikeud","","",null,null],[17,"XKB_KEY_Hangul_Rieul","","",null,null],[17,"XKB_KEY_Hangul_RieulKiyeog","","",null,null],[17,"XKB_KEY_Hangul_RieulMieum","","",null,null],[17,"XKB_KEY_Hangul_RieulPieub","","",null,null],[17,"XKB_KEY_Hangul_RieulSios","","",null,null],[17,"XKB_KEY_Hangul_RieulTieut","","",null,null],[17,"XKB_KEY_Hangul_RieulPhieuf","","",null,null],[17,"XKB_KEY_Hangul_RieulHieuh","","",null,null],[17,"XKB_KEY_Hangul_Mieum","","",null,null],[17,"XKB_KEY_Hangul_Pieub","","",null,null],[17,"XKB_KEY_Hangul_SsangPieub","","",null,null],[17,"XKB_KEY_Hangul_PieubSios","","",null,null],[17,"XKB_KEY_Hangul_Sios","","",null,null],[17,"XKB_KEY_Hangul_SsangSios","","",null,null],[17,"XKB_KEY_Hangul_Ieung","","",null,null],[17,"XKB_KEY_Hangul_Jieuj","","",null,null],[17,"XKB_KEY_Hangul_SsangJieuj","","",null,null],[17,"XKB_KEY_Hangul_Cieuc","","",null,null],[17,"XKB_KEY_Hangul_Khieuq","","",null,null],[17,"XKB_KEY_Hangul_Tieut","","",null,null],[17,"XKB_KEY_Hangul_Phieuf","","",null,null],[17,"XKB_KEY_Hangul_Hieuh","","",null,null],[17,"XKB_KEY_Hangul_A","","",null,null],[17,"XKB_KEY_Hangul_AE","","",null,null],[17,"XKB_KEY_Hangul_YA","","",null,null],[17,"XKB_KEY_Hangul_YAE","","",null,null],[17,"XKB_KEY_Hangul_EO","","",null,null],[17,"XKB_KEY_Hangul_E","","",null,null],[17,"XKB_KEY_Hangul_YEO","","",null,null],[17,"XKB_KEY_Hangul_YE","","",null,null],[17,"XKB_KEY_Hangul_O","","",null,null],[17,"XKB_KEY_Hangul_WA","","",null,null],[17,"XKB_KEY_Hangul_WAE","","",null,null],[17,"XKB_KEY_Hangul_OE","","",null,null],[17,"XKB_KEY_Hangul_YO","","",null,null],[17,"XKB_KEY_Hangul_U","","",null,null],[17,"XKB_KEY_Hangul_WEO","","",null,null],[17,"XKB_KEY_Hangul_WE","","",null,null],[17,"XKB_KEY_Hangul_WI","","",null,null],[17,"XKB_KEY_Hangul_YU","","",null,null],[17,"XKB_KEY_Hangul_EU","","",null,null],[17,"XKB_KEY_Hangul_YI","","",null,null],[17,"XKB_KEY_Hangul_I","","",null,null],[17,"XKB_KEY_Hangul_J_Kiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_SsangKiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_KiyeogSios","","",null,null],[17,"XKB_KEY_Hangul_J_Nieun","","",null,null],[17,"XKB_KEY_Hangul_J_NieunJieuj","","",null,null],[17,"XKB_KEY_Hangul_J_NieunHieuh","","",null,null],[17,"XKB_KEY_Hangul_J_Dikeud","","",null,null],[17,"XKB_KEY_Hangul_J_Rieul","","",null,null],[17,"XKB_KEY_Hangul_J_RieulKiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_RieulMieum","","",null,null],[17,"XKB_KEY_Hangul_J_RieulPieub","","",null,null],[17,"XKB_KEY_Hangul_J_RieulSios","","",null,null],[17,"XKB_KEY_Hangul_J_RieulTieut","","",null,null],[17,"XKB_KEY_Hangul_J_RieulPhieuf","","",null,null],[17,"XKB_KEY_Hangul_J_RieulHieuh","","",null,null],[17,"XKB_KEY_Hangul_J_Mieum","","",null,null],[17,"XKB_KEY_Hangul_J_Pieub","","",null,null],[17,"XKB_KEY_Hangul_J_PieubSios","","",null,null],[17,"XKB_KEY_Hangul_J_Sios","","",null,null],[17,"XKB_KEY_Hangul_J_SsangSios","","",null,null],[17,"XKB_KEY_Hangul_J_Ieung","","",null,null],[17,"XKB_KEY_Hangul_J_Jieuj","","",null,null],[17,"XKB_KEY_Hangul_J_Cieuc","","",null,null],[17,"XKB_KEY_Hangul_J_Khieuq","","",null,null],[17,"XKB_KEY_Hangul_J_Tieut","","",null,null],[17,"XKB_KEY_Hangul_J_Phieuf","","",null,null],[17,"XKB_KEY_Hangul_J_Hieuh","","",null,null],[17,"XKB_KEY_Hangul_RieulYeorinHieuh","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumMieum","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumPieub","","",null,null],[17,"XKB_KEY_Hangul_PanSios","","",null,null],[17,"XKB_KEY_Hangul_KkogjiDalrinIeung","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumPhieuf","","",null,null],[17,"XKB_KEY_Hangul_YeorinHieuh","","",null,null],[17,"XKB_KEY_Hangul_AraeA","","",null,null],[17,"XKB_KEY_Hangul_AraeAE","","",null,null],[17,"XKB_KEY_Hangul_J_PanSios","","",null,null],[17,"XKB_KEY_Hangul_J_KkogjiDalrinIeung","","",null,null],[17,"XKB_KEY_Hangul_J_YeorinHieuh","","",null,null],[17,"XKB_KEY_Korean_Won","","",null,null],[17,"XKB_KEY_Armenian_ligature_ew","","",null,null],[17,"XKB_KEY_Armenian_full_stop","","",null,null],[17,"XKB_KEY_Armenian_verjaket","","",null,null],[17,"XKB_KEY_Armenian_separation_mark","","",null,null],[17,"XKB_KEY_Armenian_but","","",null,null],[17,"XKB_KEY_Armenian_hyphen","","",null,null],[17,"XKB_KEY_Armenian_yentamna","","",null,null],[17,"XKB_KEY_Armenian_exclam","","",null,null],[17,"XKB_KEY_Armenian_amanak","","",null,null],[17,"XKB_KEY_Armenian_accent","","",null,null],[17,"XKB_KEY_Armenian_shesht","","",null,null],[17,"XKB_KEY_Armenian_question","","",null,null],[17,"XKB_KEY_Armenian_paruyk","","",null,null],[17,"XKB_KEY_Armenian_AYB","","",null,null],[17,"XKB_KEY_Armenian_ayb","","",null,null],[17,"XKB_KEY_Armenian_BEN","","",null,null],[17,"XKB_KEY_Armenian_ben","","",null,null],[17,"XKB_KEY_Armenian_GIM","","",null,null],[17,"XKB_KEY_Armenian_gim","","",null,null],[17,"XKB_KEY_Armenian_DA","","",null,null],[17,"XKB_KEY_Armenian_da","","",null,null],[17,"XKB_KEY_Armenian_YECH","","",null,null],[17,"XKB_KEY_Armenian_yech","","",null,null],[17,"XKB_KEY_Armenian_ZA","","",null,null],[17,"XKB_KEY_Armenian_za","","",null,null],[17,"XKB_KEY_Armenian_E","","",null,null],[17,"XKB_KEY_Armenian_e","","",null,null],[17,"XKB_KEY_Armenian_AT","","",null,null],[17,"XKB_KEY_Armenian_at","","",null,null],[17,"XKB_KEY_Armenian_TO","","",null,null],[17,"XKB_KEY_Armenian_to","","",null,null],[17,"XKB_KEY_Armenian_ZHE","","",null,null],[17,"XKB_KEY_Armenian_zhe","","",null,null],[17,"XKB_KEY_Armenian_INI","","",null,null],[17,"XKB_KEY_Armenian_ini","","",null,null],[17,"XKB_KEY_Armenian_LYUN","","",null,null],[17,"XKB_KEY_Armenian_lyun","","",null,null],[17,"XKB_KEY_Armenian_KHE","","",null,null],[17,"XKB_KEY_Armenian_khe","","",null,null],[17,"XKB_KEY_Armenian_TSA","","",null,null],[17,"XKB_KEY_Armenian_tsa","","",null,null],[17,"XKB_KEY_Armenian_KEN","","",null,null],[17,"XKB_KEY_Armenian_ken","","",null,null],[17,"XKB_KEY_Armenian_HO","","",null,null],[17,"XKB_KEY_Armenian_ho","","",null,null],[17,"XKB_KEY_Armenian_DZA","","",null,null],[17,"XKB_KEY_Armenian_dza","","",null,null],[17,"XKB_KEY_Armenian_GHAT","","",null,null],[17,"XKB_KEY_Armenian_ghat","","",null,null],[17,"XKB_KEY_Armenian_TCHE","","",null,null],[17,"XKB_KEY_Armenian_tche","","",null,null],[17,"XKB_KEY_Armenian_MEN","","",null,null],[17,"XKB_KEY_Armenian_men","","",null,null],[17,"XKB_KEY_Armenian_HI","","",null,null],[17,"XKB_KEY_Armenian_hi","","",null,null],[17,"XKB_KEY_Armenian_NU","","",null,null],[17,"XKB_KEY_Armenian_nu","","",null,null],[17,"XKB_KEY_Armenian_SHA","","",null,null],[17,"XKB_KEY_Armenian_sha","","",null,null],[17,"XKB_KEY_Armenian_VO","","",null,null],[17,"XKB_KEY_Armenian_vo","","",null,null],[17,"XKB_KEY_Armenian_CHA","","",null,null],[17,"XKB_KEY_Armenian_cha","","",null,null],[17,"XKB_KEY_Armenian_PE","","",null,null],[17,"XKB_KEY_Armenian_pe","","",null,null],[17,"XKB_KEY_Armenian_JE","","",null,null],[17,"XKB_KEY_Armenian_je","","",null,null],[17,"XKB_KEY_Armenian_RA","","",null,null],[17,"XKB_KEY_Armenian_ra","","",null,null],[17,"XKB_KEY_Armenian_SE","","",null,null],[17,"XKB_KEY_Armenian_se","","",null,null],[17,"XKB_KEY_Armenian_VEV","","",null,null],[17,"XKB_KEY_Armenian_vev","","",null,null],[17,"XKB_KEY_Armenian_TYUN","","",null,null],[17,"XKB_KEY_Armenian_tyun","","",null,null],[17,"XKB_KEY_Armenian_RE","","",null,null],[17,"XKB_KEY_Armenian_re","","",null,null],[17,"XKB_KEY_Armenian_TSO","","",null,null],[17,"XKB_KEY_Armenian_tso","","",null,null],[17,"XKB_KEY_Armenian_VYUN","","",null,null],[17,"XKB_KEY_Armenian_vyun","","",null,null],[17,"XKB_KEY_Armenian_PYUR","","",null,null],[17,"XKB_KEY_Armenian_pyur","","",null,null],[17,"XKB_KEY_Armenian_KE","","",null,null],[17,"XKB_KEY_Armenian_ke","","",null,null],[17,"XKB_KEY_Armenian_O","","",null,null],[17,"XKB_KEY_Armenian_o","","",null,null],[17,"XKB_KEY_Armenian_FE","","",null,null],[17,"XKB_KEY_Armenian_fe","","",null,null],[17,"XKB_KEY_Armenian_apostrophe","","",null,null],[17,"XKB_KEY_Georgian_an","","",null,null],[17,"XKB_KEY_Georgian_ban","","",null,null],[17,"XKB_KEY_Georgian_gan","","",null,null],[17,"XKB_KEY_Georgian_don","","",null,null],[17,"XKB_KEY_Georgian_en","","",null,null],[17,"XKB_KEY_Georgian_vin","","",null,null],[17,"XKB_KEY_Georgian_zen","","",null,null],[17,"XKB_KEY_Georgian_tan","","",null,null],[17,"XKB_KEY_Georgian_in","","",null,null],[17,"XKB_KEY_Georgian_kan","","",null,null],[17,"XKB_KEY_Georgian_las","","",null,null],[17,"XKB_KEY_Georgian_man","","",null,null],[17,"XKB_KEY_Georgian_nar","","",null,null],[17,"XKB_KEY_Georgian_on","","",null,null],[17,"XKB_KEY_Georgian_par","","",null,null],[17,"XKB_KEY_Georgian_zhar","","",null,null],[17,"XKB_KEY_Georgian_rae","","",null,null],[17,"XKB_KEY_Georgian_san","","",null,null],[17,"XKB_KEY_Georgian_tar","","",null,null],[17,"XKB_KEY_Georgian_un","","",null,null],[17,"XKB_KEY_Georgian_phar","","",null,null],[17,"XKB_KEY_Georgian_khar","","",null,null],[17,"XKB_KEY_Georgian_ghan","","",null,null],[17,"XKB_KEY_Georgian_qar","","",null,null],[17,"XKB_KEY_Georgian_shin","","",null,null],[17,"XKB_KEY_Georgian_chin","","",null,null],[17,"XKB_KEY_Georgian_can","","",null,null],[17,"XKB_KEY_Georgian_jil","","",null,null],[17,"XKB_KEY_Georgian_cil","","",null,null],[17,"XKB_KEY_Georgian_char","","",null,null],[17,"XKB_KEY_Georgian_xan","","",null,null],[17,"XKB_KEY_Georgian_jhan","","",null,null],[17,"XKB_KEY_Georgian_hae","","",null,null],[17,"XKB_KEY_Georgian_he","","",null,null],[17,"XKB_KEY_Georgian_hie","","",null,null],[17,"XKB_KEY_Georgian_we","","",null,null],[17,"XKB_KEY_Georgian_har","","",null,null],[17,"XKB_KEY_Georgian_hoe","","",null,null],[17,"XKB_KEY_Georgian_fi","","",null,null],[17,"XKB_KEY_Xabovedot","","",null,null],[17,"XKB_KEY_Ibreve","","",null,null],[17,"XKB_KEY_Zstroke","","",null,null],[17,"XKB_KEY_Gcaron","","",null,null],[17,"XKB_KEY_Ocaron","","",null,null],[17,"XKB_KEY_Obarred","","",null,null],[17,"XKB_KEY_xabovedot","","",null,null],[17,"XKB_KEY_ibreve","","",null,null],[17,"XKB_KEY_zstroke","","",null,null],[17,"XKB_KEY_gcaron","","",null,null],[17,"XKB_KEY_ocaron","","",null,null],[17,"XKB_KEY_obarred","","",null,null],[17,"XKB_KEY_SCHWA","","",null,null],[17,"XKB_KEY_schwa","","",null,null],[17,"XKB_KEY_EZH","","",null,null],[17,"XKB_KEY_ezh","","",null,null],[17,"XKB_KEY_Lbelowdot","","",null,null],[17,"XKB_KEY_lbelowdot","","",null,null],[17,"XKB_KEY_Abelowdot","","",null,null],[17,"XKB_KEY_abelowdot","","",null,null],[17,"XKB_KEY_Ahook","","",null,null],[17,"XKB_KEY_ahook","","",null,null],[17,"XKB_KEY_Acircumflexacute","","",null,null],[17,"XKB_KEY_acircumflexacute","","",null,null],[17,"XKB_KEY_Acircumflexgrave","","",null,null],[17,"XKB_KEY_acircumflexgrave","","",null,null],[17,"XKB_KEY_Acircumflexhook","","",null,null],[17,"XKB_KEY_acircumflexhook","","",null,null],[17,"XKB_KEY_Acircumflextilde","","",null,null],[17,"XKB_KEY_acircumflextilde","","",null,null],[17,"XKB_KEY_Acircumflexbelowdot","","",null,null],[17,"XKB_KEY_acircumflexbelowdot","","",null,null],[17,"XKB_KEY_Abreveacute","","",null,null],[17,"XKB_KEY_abreveacute","","",null,null],[17,"XKB_KEY_Abrevegrave","","",null,null],[17,"XKB_KEY_abrevegrave","","",null,null],[17,"XKB_KEY_Abrevehook","","",null,null],[17,"XKB_KEY_abrevehook","","",null,null],[17,"XKB_KEY_Abrevetilde","","",null,null],[17,"XKB_KEY_abrevetilde","","",null,null],[17,"XKB_KEY_Abrevebelowdot","","",null,null],[17,"XKB_KEY_abrevebelowdot","","",null,null],[17,"XKB_KEY_Ebelowdot","","",null,null],[17,"XKB_KEY_ebelowdot","","",null,null],[17,"XKB_KEY_Ehook","","",null,null],[17,"XKB_KEY_ehook","","",null,null],[17,"XKB_KEY_Etilde","","",null,null],[17,"XKB_KEY_etilde","","",null,null],[17,"XKB_KEY_Ecircumflexacute","","",null,null],[17,"XKB_KEY_ecircumflexacute","","",null,null],[17,"XKB_KEY_Ecircumflexgrave","","",null,null],[17,"XKB_KEY_ecircumflexgrave","","",null,null],[17,"XKB_KEY_Ecircumflexhook","","",null,null],[17,"XKB_KEY_ecircumflexhook","","",null,null],[17,"XKB_KEY_Ecircumflextilde","","",null,null],[17,"XKB_KEY_ecircumflextilde","","",null,null],[17,"XKB_KEY_Ecircumflexbelowdot","","",null,null],[17,"XKB_KEY_ecircumflexbelowdot","","",null,null],[17,"XKB_KEY_Ihook","","",null,null],[17,"XKB_KEY_ihook","","",null,null],[17,"XKB_KEY_Ibelowdot","","",null,null],[17,"XKB_KEY_ibelowdot","","",null,null],[17,"XKB_KEY_Obelowdot","","",null,null],[17,"XKB_KEY_obelowdot","","",null,null],[17,"XKB_KEY_Ohook","","",null,null],[17,"XKB_KEY_ohook","","",null,null],[17,"XKB_KEY_Ocircumflexacute","","",null,null],[17,"XKB_KEY_ocircumflexacute","","",null,null],[17,"XKB_KEY_Ocircumflexgrave","","",null,null],[17,"XKB_KEY_ocircumflexgrave","","",null,null],[17,"XKB_KEY_Ocircumflexhook","","",null,null],[17,"XKB_KEY_ocircumflexhook","","",null,null],[17,"XKB_KEY_Ocircumflextilde","","",null,null],[17,"XKB_KEY_ocircumflextilde","","",null,null],[17,"XKB_KEY_Ocircumflexbelowdot","","",null,null],[17,"XKB_KEY_ocircumflexbelowdot","","",null,null],[17,"XKB_KEY_Ohornacute","","",null,null],[17,"XKB_KEY_ohornacute","","",null,null],[17,"XKB_KEY_Ohorngrave","","",null,null],[17,"XKB_KEY_ohorngrave","","",null,null],[17,"XKB_KEY_Ohornhook","","",null,null],[17,"XKB_KEY_ohornhook","","",null,null],[17,"XKB_KEY_Ohorntilde","","",null,null],[17,"XKB_KEY_ohorntilde","","",null,null],[17,"XKB_KEY_Ohornbelowdot","","",null,null],[17,"XKB_KEY_ohornbelowdot","","",null,null],[17,"XKB_KEY_Ubelowdot","","",null,null],[17,"XKB_KEY_ubelowdot","","",null,null],[17,"XKB_KEY_Uhook","","",null,null],[17,"XKB_KEY_uhook","","",null,null],[17,"XKB_KEY_Uhornacute","","",null,null],[17,"XKB_KEY_uhornacute","","",null,null],[17,"XKB_KEY_Uhorngrave","","",null,null],[17,"XKB_KEY_uhorngrave","","",null,null],[17,"XKB_KEY_Uhornhook","","",null,null],[17,"XKB_KEY_uhornhook","","",null,null],[17,"XKB_KEY_Uhorntilde","","",null,null],[17,"XKB_KEY_uhorntilde","","",null,null],[17,"XKB_KEY_Uhornbelowdot","","",null,null],[17,"XKB_KEY_uhornbelowdot","","",null,null],[17,"XKB_KEY_Ybelowdot","","",null,null],[17,"XKB_KEY_ybelowdot","","",null,null],[17,"XKB_KEY_Yhook","","",null,null],[17,"XKB_KEY_yhook","","",null,null],[17,"XKB_KEY_Ytilde","","",null,null],[17,"XKB_KEY_ytilde","","",null,null],[17,"XKB_KEY_Ohorn","","",null,null],[17,"XKB_KEY_ohorn","","",null,null],[17,"XKB_KEY_Uhorn","","",null,null],[17,"XKB_KEY_uhorn","","",null,null],[17,"XKB_KEY_EcuSign","","",null,null],[17,"XKB_KEY_ColonSign","","",null,null],[17,"XKB_KEY_CruzeiroSign","","",null,null],[17,"XKB_KEY_FFrancSign","","",null,null],[17,"XKB_KEY_LiraSign","","",null,null],[17,"XKB_KEY_MillSign","","",null,null],[17,"XKB_KEY_NairaSign","","",null,null],[17,"XKB_KEY_PesetaSign","","",null,null],[17,"XKB_KEY_RupeeSign","","",null,null],[17,"XKB_KEY_WonSign","","",null,null],[17,"XKB_KEY_NewSheqelSign","","",null,null],[17,"XKB_KEY_DongSign","","",null,null],[17,"XKB_KEY_EuroSign","","",null,null],[17,"XKB_KEY_zerosuperior","","",null,null],[17,"XKB_KEY_foursuperior","","",null,null],[17,"XKB_KEY_fivesuperior","","",null,null],[17,"XKB_KEY_sixsuperior","","",null,null],[17,"XKB_KEY_sevensuperior","","",null,null],[17,"XKB_KEY_eightsuperior","","",null,null],[17,"XKB_KEY_ninesuperior","","",null,null],[17,"XKB_KEY_zerosubscript","","",null,null],[17,"XKB_KEY_onesubscript","","",null,null],[17,"XKB_KEY_twosubscript","","",null,null],[17,"XKB_KEY_threesubscript","","",null,null],[17,"XKB_KEY_foursubscript","","",null,null],[17,"XKB_KEY_fivesubscript","","",null,null],[17,"XKB_KEY_sixsubscript","","",null,null],[17,"XKB_KEY_sevensubscript","","",null,null],[17,"XKB_KEY_eightsubscript","","",null,null],[17,"XKB_KEY_ninesubscript","","",null,null],[17,"XKB_KEY_partdifferential","","",null,null],[17,"XKB_KEY_emptyset","","",null,null],[17,"XKB_KEY_elementof","","",null,null],[17,"XKB_KEY_notelementof","","",null,null],[17,"XKB_KEY_containsas","","",null,null],[17,"XKB_KEY_squareroot","","",null,null],[17,"XKB_KEY_cuberoot","","",null,null],[17,"XKB_KEY_fourthroot","","",null,null],[17,"XKB_KEY_dintegral","","",null,null],[17,"XKB_KEY_tintegral","","",null,null],[17,"XKB_KEY_because","","",null,null],[17,"XKB_KEY_approxeq","","",null,null],[17,"XKB_KEY_notapproxeq","","",null,null],[17,"XKB_KEY_notidentical","","",null,null],[17,"XKB_KEY_stricteq","","",null,null],[17,"XKB_KEY_braille_dot_1","","",null,null],[17,"XKB_KEY_braille_dot_2","","",null,null],[17,"XKB_KEY_braille_dot_3","","",null,null],[17,"XKB_KEY_braille_dot_4","","",null,null],[17,"XKB_KEY_braille_dot_5","","",null,null],[17,"XKB_KEY_braille_dot_6","","",null,null],[17,"XKB_KEY_braille_dot_7","","",null,null],[17,"XKB_KEY_braille_dot_8","","",null,null],[17,"XKB_KEY_braille_dot_9","","",null,null],[17,"XKB_KEY_braille_dot_10","","",null,null],[17,"XKB_KEY_braille_blank","","",null,null],[17,"XKB_KEY_braille_dots_1","","",null,null],[17,"XKB_KEY_braille_dots_2","","",null,null],[17,"XKB_KEY_braille_dots_12","","",null,null],[17,"XKB_KEY_braille_dots_3","","",null,null],[17,"XKB_KEY_braille_dots_13","","",null,null],[17,"XKB_KEY_braille_dots_23","","",null,null],[17,"XKB_KEY_braille_dots_123","","",null,null],[17,"XKB_KEY_braille_dots_4","","",null,null],[17,"XKB_KEY_braille_dots_14","","",null,null],[17,"XKB_KEY_braille_dots_24","","",null,null],[17,"XKB_KEY_braille_dots_124","","",null,null],[17,"XKB_KEY_braille_dots_34","","",null,null],[17,"XKB_KEY_braille_dots_134","","",null,null],[17,"XKB_KEY_braille_dots_234","","",null,null],[17,"XKB_KEY_braille_dots_1234","","",null,null],[17,"XKB_KEY_braille_dots_5","","",null,null],[17,"XKB_KEY_braille_dots_15","","",null,null],[17,"XKB_KEY_braille_dots_25","","",null,null],[17,"XKB_KEY_braille_dots_125","","",null,null],[17,"XKB_KEY_braille_dots_35","","",null,null],[17,"XKB_KEY_braille_dots_135","","",null,null],[17,"XKB_KEY_braille_dots_235","","",null,null],[17,"XKB_KEY_braille_dots_1235","","",null,null],[17,"XKB_KEY_braille_dots_45","","",null,null],[17,"XKB_KEY_braille_dots_145","","",null,null],[17,"XKB_KEY_braille_dots_245","","",null,null],[17,"XKB_KEY_braille_dots_1245","","",null,null],[17,"XKB_KEY_braille_dots_345","","",null,null],[17,"XKB_KEY_braille_dots_1345","","",null,null],[17,"XKB_KEY_braille_dots_2345","","",null,null],[17,"XKB_KEY_braille_dots_12345","","",null,null],[17,"XKB_KEY_braille_dots_6","","",null,null],[17,"XKB_KEY_braille_dots_16","","",null,null],[17,"XKB_KEY_braille_dots_26","","",null,null],[17,"XKB_KEY_braille_dots_126","","",null,null],[17,"XKB_KEY_braille_dots_36","","",null,null],[17,"XKB_KEY_braille_dots_136","","",null,null],[17,"XKB_KEY_braille_dots_236","","",null,null],[17,"XKB_KEY_braille_dots_1236","","",null,null],[17,"XKB_KEY_braille_dots_46","","",null,null],[17,"XKB_KEY_braille_dots_146","","",null,null],[17,"XKB_KEY_braille_dots_246","","",null,null],[17,"XKB_KEY_braille_dots_1246","","",null,null],[17,"XKB_KEY_braille_dots_346","","",null,null],[17,"XKB_KEY_braille_dots_1346","","",null,null],[17,"XKB_KEY_braille_dots_2346","","",null,null],[17,"XKB_KEY_braille_dots_12346","","",null,null],[17,"XKB_KEY_braille_dots_56","","",null,null],[17,"XKB_KEY_braille_dots_156","","",null,null],[17,"XKB_KEY_braille_dots_256","","",null,null],[17,"XKB_KEY_braille_dots_1256","","",null,null],[17,"XKB_KEY_braille_dots_356","","",null,null],[17,"XKB_KEY_braille_dots_1356","","",null,null],[17,"XKB_KEY_braille_dots_2356","","",null,null],[17,"XKB_KEY_braille_dots_12356","","",null,null],[17,"XKB_KEY_braille_dots_456","","",null,null],[17,"XKB_KEY_braille_dots_1456","","",null,null],[17,"XKB_KEY_braille_dots_2456","","",null,null],[17,"XKB_KEY_braille_dots_12456","","",null,null],[17,"XKB_KEY_braille_dots_3456","","",null,null],[17,"XKB_KEY_braille_dots_13456","","",null,null],[17,"XKB_KEY_braille_dots_23456","","",null,null],[17,"XKB_KEY_braille_dots_123456","","",null,null],[17,"XKB_KEY_braille_dots_7","","",null,null],[17,"XKB_KEY_braille_dots_17","","",null,null],[17,"XKB_KEY_braille_dots_27","","",null,null],[17,"XKB_KEY_braille_dots_127","","",null,null],[17,"XKB_KEY_braille_dots_37","","",null,null],[17,"XKB_KEY_braille_dots_137","","",null,null],[17,"XKB_KEY_braille_dots_237","","",null,null],[17,"XKB_KEY_braille_dots_1237","","",null,null],[17,"XKB_KEY_braille_dots_47","","",null,null],[17,"XKB_KEY_braille_dots_147","","",null,null],[17,"XKB_KEY_braille_dots_247","","",null,null],[17,"XKB_KEY_braille_dots_1247","","",null,null],[17,"XKB_KEY_braille_dots_347","","",null,null],[17,"XKB_KEY_braille_dots_1347","","",null,null],[17,"XKB_KEY_braille_dots_2347","","",null,null],[17,"XKB_KEY_braille_dots_12347","","",null,null],[17,"XKB_KEY_braille_dots_57","","",null,null],[17,"XKB_KEY_braille_dots_157","","",null,null],[17,"XKB_KEY_braille_dots_257","","",null,null],[17,"XKB_KEY_braille_dots_1257","","",null,null],[17,"XKB_KEY_braille_dots_357","","",null,null],[17,"XKB_KEY_braille_dots_1357","","",null,null],[17,"XKB_KEY_braille_dots_2357","","",null,null],[17,"XKB_KEY_braille_dots_12357","","",null,null],[17,"XKB_KEY_braille_dots_457","","",null,null],[17,"XKB_KEY_braille_dots_1457","","",null,null],[17,"XKB_KEY_braille_dots_2457","","",null,null],[17,"XKB_KEY_braille_dots_12457","","",null,null],[17,"XKB_KEY_braille_dots_3457","","",null,null],[17,"XKB_KEY_braille_dots_13457","","",null,null],[17,"XKB_KEY_braille_dots_23457","","",null,null],[17,"XKB_KEY_braille_dots_123457","","",null,null],[17,"XKB_KEY_braille_dots_67","","",null,null],[17,"XKB_KEY_braille_dots_167","","",null,null],[17,"XKB_KEY_braille_dots_267","","",null,null],[17,"XKB_KEY_braille_dots_1267","","",null,null],[17,"XKB_KEY_braille_dots_367","","",null,null],[17,"XKB_KEY_braille_dots_1367","","",null,null],[17,"XKB_KEY_braille_dots_2367","","",null,null],[17,"XKB_KEY_braille_dots_12367","","",null,null],[17,"XKB_KEY_braille_dots_467","","",null,null],[17,"XKB_KEY_braille_dots_1467","","",null,null],[17,"XKB_KEY_braille_dots_2467","","",null,null],[17,"XKB_KEY_braille_dots_12467","","",null,null],[17,"XKB_KEY_braille_dots_3467","","",null,null],[17,"XKB_KEY_braille_dots_13467","","",null,null],[17,"XKB_KEY_braille_dots_23467","","",null,null],[17,"XKB_KEY_braille_dots_123467","","",null,null],[17,"XKB_KEY_braille_dots_567","","",null,null],[17,"XKB_KEY_braille_dots_1567","","",null,null],[17,"XKB_KEY_braille_dots_2567","","",null,null],[17,"XKB_KEY_braille_dots_12567","","",null,null],[17,"XKB_KEY_braille_dots_3567","","",null,null],[17,"XKB_KEY_braille_dots_13567","","",null,null],[17,"XKB_KEY_braille_dots_23567","","",null,null],[17,"XKB_KEY_braille_dots_123567","","",null,null],[17,"XKB_KEY_braille_dots_4567","","",null,null],[17,"XKB_KEY_braille_dots_14567","","",null,null],[17,"XKB_KEY_braille_dots_24567","","",null,null],[17,"XKB_KEY_braille_dots_124567","","",null,null],[17,"XKB_KEY_braille_dots_34567","","",null,null],[17,"XKB_KEY_braille_dots_134567","","",null,null],[17,"XKB_KEY_braille_dots_234567","","",null,null],[17,"XKB_KEY_braille_dots_1234567","","",null,null],[17,"XKB_KEY_braille_dots_8","","",null,null],[17,"XKB_KEY_braille_dots_18","","",null,null],[17,"XKB_KEY_braille_dots_28","","",null,null],[17,"XKB_KEY_braille_dots_128","","",null,null],[17,"XKB_KEY_braille_dots_38","","",null,null],[17,"XKB_KEY_braille_dots_138","","",null,null],[17,"XKB_KEY_braille_dots_238","","",null,null],[17,"XKB_KEY_braille_dots_1238","","",null,null],[17,"XKB_KEY_braille_dots_48","","",null,null],[17,"XKB_KEY_braille_dots_148","","",null,null],[17,"XKB_KEY_braille_dots_248","","",null,null],[17,"XKB_KEY_braille_dots_1248","","",null,null],[17,"XKB_KEY_braille_dots_348","","",null,null],[17,"XKB_KEY_braille_dots_1348","","",null,null],[17,"XKB_KEY_braille_dots_2348","","",null,null],[17,"XKB_KEY_braille_dots_12348","","",null,null],[17,"XKB_KEY_braille_dots_58","","",null,null],[17,"XKB_KEY_braille_dots_158","","",null,null],[17,"XKB_KEY_braille_dots_258","","",null,null],[17,"XKB_KEY_braille_dots_1258","","",null,null],[17,"XKB_KEY_braille_dots_358","","",null,null],[17,"XKB_KEY_braille_dots_1358","","",null,null],[17,"XKB_KEY_braille_dots_2358","","",null,null],[17,"XKB_KEY_braille_dots_12358","","",null,null],[17,"XKB_KEY_braille_dots_458","","",null,null],[17,"XKB_KEY_braille_dots_1458","","",null,null],[17,"XKB_KEY_braille_dots_2458","","",null,null],[17,"XKB_KEY_braille_dots_12458","","",null,null],[17,"XKB_KEY_braille_dots_3458","","",null,null],[17,"XKB_KEY_braille_dots_13458","","",null,null],[17,"XKB_KEY_braille_dots_23458","","",null,null],[17,"XKB_KEY_braille_dots_123458","","",null,null],[17,"XKB_KEY_braille_dots_68","","",null,null],[17,"XKB_KEY_braille_dots_168","","",null,null],[17,"XKB_KEY_braille_dots_268","","",null,null],[17,"XKB_KEY_braille_dots_1268","","",null,null],[17,"XKB_KEY_braille_dots_368","","",null,null],[17,"XKB_KEY_braille_dots_1368","","",null,null],[17,"XKB_KEY_braille_dots_2368","","",null,null],[17,"XKB_KEY_braille_dots_12368","","",null,null],[17,"XKB_KEY_braille_dots_468","","",null,null],[17,"XKB_KEY_braille_dots_1468","","",null,null],[17,"XKB_KEY_braille_dots_2468","","",null,null],[17,"XKB_KEY_braille_dots_12468","","",null,null],[17,"XKB_KEY_braille_dots_3468","","",null,null],[17,"XKB_KEY_braille_dots_13468","","",null,null],[17,"XKB_KEY_braille_dots_23468","","",null,null],[17,"XKB_KEY_braille_dots_123468","","",null,null],[17,"XKB_KEY_braille_dots_568","","",null,null],[17,"XKB_KEY_braille_dots_1568","","",null,null],[17,"XKB_KEY_braille_dots_2568","","",null,null],[17,"XKB_KEY_braille_dots_12568","","",null,null],[17,"XKB_KEY_braille_dots_3568","","",null,null],[17,"XKB_KEY_braille_dots_13568","","",null,null],[17,"XKB_KEY_braille_dots_23568","","",null,null],[17,"XKB_KEY_braille_dots_123568","","",null,null],[17,"XKB_KEY_braille_dots_4568","","",null,null],[17,"XKB_KEY_braille_dots_14568","","",null,null],[17,"XKB_KEY_braille_dots_24568","","",null,null],[17,"XKB_KEY_braille_dots_124568","","",null,null],[17,"XKB_KEY_braille_dots_34568","","",null,null],[17,"XKB_KEY_braille_dots_134568","","",null,null],[17,"XKB_KEY_braille_dots_234568","","",null,null],[17,"XKB_KEY_braille_dots_1234568","","",null,null],[17,"XKB_KEY_braille_dots_78","","",null,null],[17,"XKB_KEY_braille_dots_178","","",null,null],[17,"XKB_KEY_braille_dots_278","","",null,null],[17,"XKB_KEY_braille_dots_1278","","",null,null],[17,"XKB_KEY_braille_dots_378","","",null,null],[17,"XKB_KEY_braille_dots_1378","","",null,null],[17,"XKB_KEY_braille_dots_2378","","",null,null],[17,"XKB_KEY_braille_dots_12378","","",null,null],[17,"XKB_KEY_braille_dots_478","","",null,null],[17,"XKB_KEY_braille_dots_1478","","",null,null],[17,"XKB_KEY_braille_dots_2478","","",null,null],[17,"XKB_KEY_braille_dots_12478","","",null,null],[17,"XKB_KEY_braille_dots_3478","","",null,null],[17,"XKB_KEY_braille_dots_13478","","",null,null],[17,"XKB_KEY_braille_dots_23478","","",null,null],[17,"XKB_KEY_braille_dots_123478","","",null,null],[17,"XKB_KEY_braille_dots_578","","",null,null],[17,"XKB_KEY_braille_dots_1578","","",null,null],[17,"XKB_KEY_braille_dots_2578","","",null,null],[17,"XKB_KEY_braille_dots_12578","","",null,null],[17,"XKB_KEY_braille_dots_3578","","",null,null],[17,"XKB_KEY_braille_dots_13578","","",null,null],[17,"XKB_KEY_braille_dots_23578","","",null,null],[17,"XKB_KEY_braille_dots_123578","","",null,null],[17,"XKB_KEY_braille_dots_4578","","",null,null],[17,"XKB_KEY_braille_dots_14578","","",null,null],[17,"XKB_KEY_braille_dots_24578","","",null,null],[17,"XKB_KEY_braille_dots_124578","","",null,null],[17,"XKB_KEY_braille_dots_34578","","",null,null],[17,"XKB_KEY_braille_dots_134578","","",null,null],[17,"XKB_KEY_braille_dots_234578","","",null,null],[17,"XKB_KEY_braille_dots_1234578","","",null,null],[17,"XKB_KEY_braille_dots_678","","",null,null],[17,"XKB_KEY_braille_dots_1678","","",null,null],[17,"XKB_KEY_braille_dots_2678","","",null,null],[17,"XKB_KEY_braille_dots_12678","","",null,null],[17,"XKB_KEY_braille_dots_3678","","",null,null],[17,"XKB_KEY_braille_dots_13678","","",null,null],[17,"XKB_KEY_braille_dots_23678","","",null,null],[17,"XKB_KEY_braille_dots_123678","","",null,null],[17,"XKB_KEY_braille_dots_4678","","",null,null],[17,"XKB_KEY_braille_dots_14678","","",null,null],[17,"XKB_KEY_braille_dots_24678","","",null,null],[17,"XKB_KEY_braille_dots_124678","","",null,null],[17,"XKB_KEY_braille_dots_34678","","",null,null],[17,"XKB_KEY_braille_dots_134678","","",null,null],[17,"XKB_KEY_braille_dots_234678","","",null,null],[17,"XKB_KEY_braille_dots_1234678","","",null,null],[17,"XKB_KEY_braille_dots_5678","","",null,null],[17,"XKB_KEY_braille_dots_15678","","",null,null],[17,"XKB_KEY_braille_dots_25678","","",null,null],[17,"XKB_KEY_braille_dots_125678","","",null,null],[17,"XKB_KEY_braille_dots_35678","","",null,null],[17,"XKB_KEY_braille_dots_135678","","",null,null],[17,"XKB_KEY_braille_dots_235678","","",null,null],[17,"XKB_KEY_braille_dots_1235678","","",null,null],[17,"XKB_KEY_braille_dots_45678","","",null,null],[17,"XKB_KEY_braille_dots_145678","","",null,null],[17,"XKB_KEY_braille_dots_245678","","",null,null],[17,"XKB_KEY_braille_dots_1245678","","",null,null],[17,"XKB_KEY_braille_dots_345678","","",null,null],[17,"XKB_KEY_braille_dots_1345678","","",null,null],[17,"XKB_KEY_braille_dots_2345678","","",null,null],[17,"XKB_KEY_braille_dots_12345678","","",null,null],[17,"XKB_KEY_Sinh_ng","","",null,null],[17,"XKB_KEY_Sinh_h2","","",null,null],[17,"XKB_KEY_Sinh_a","","",null,null],[17,"XKB_KEY_Sinh_aa","","",null,null],[17,"XKB_KEY_Sinh_ae","","",null,null],[17,"XKB_KEY_Sinh_aee","","",null,null],[17,"XKB_KEY_Sinh_i","","",null,null],[17,"XKB_KEY_Sinh_ii","","",null,null],[17,"XKB_KEY_Sinh_u","","",null,null],[17,"XKB_KEY_Sinh_uu","","",null,null],[17,"XKB_KEY_Sinh_ri","","",null,null],[17,"XKB_KEY_Sinh_rii","","",null,null],[17,"XKB_KEY_Sinh_lu","","",null,null],[17,"XKB_KEY_Sinh_luu","","",null,null],[17,"XKB_KEY_Sinh_e","","",null,null],[17,"XKB_KEY_Sinh_ee","","",null,null],[17,"XKB_KEY_Sinh_ai","","",null,null],[17,"XKB_KEY_Sinh_o","","",null,null],[17,"XKB_KEY_Sinh_oo","","",null,null],[17,"XKB_KEY_Sinh_au","","",null,null],[17,"XKB_KEY_Sinh_ka","","",null,null],[17,"XKB_KEY_Sinh_kha","","",null,null],[17,"XKB_KEY_Sinh_ga","","",null,null],[17,"XKB_KEY_Sinh_gha","","",null,null],[17,"XKB_KEY_Sinh_ng2","","",null,null],[17,"XKB_KEY_Sinh_nga","","",null,null],[17,"XKB_KEY_Sinh_ca","","",null,null],[17,"XKB_KEY_Sinh_cha","","",null,null],[17,"XKB_KEY_Sinh_ja","","",null,null],[17,"XKB_KEY_Sinh_jha","","",null,null],[17,"XKB_KEY_Sinh_nya","","",null,null],[17,"XKB_KEY_Sinh_jnya","","",null,null],[17,"XKB_KEY_Sinh_nja","","",null,null],[17,"XKB_KEY_Sinh_tta","","",null,null],[17,"XKB_KEY_Sinh_ttha","","",null,null],[17,"XKB_KEY_Sinh_dda","","",null,null],[17,"XKB_KEY_Sinh_ddha","","",null,null],[17,"XKB_KEY_Sinh_nna","","",null,null],[17,"XKB_KEY_Sinh_ndda","","",null,null],[17,"XKB_KEY_Sinh_tha","","",null,null],[17,"XKB_KEY_Sinh_thha","","",null,null],[17,"XKB_KEY_Sinh_dha","","",null,null],[17,"XKB_KEY_Sinh_dhha","","",null,null],[17,"XKB_KEY_Sinh_na","","",null,null],[17,"XKB_KEY_Sinh_ndha","","",null,null],[17,"XKB_KEY_Sinh_pa","","",null,null],[17,"XKB_KEY_Sinh_pha","","",null,null],[17,"XKB_KEY_Sinh_ba","","",null,null],[17,"XKB_KEY_Sinh_bha","","",null,null],[17,"XKB_KEY_Sinh_ma","","",null,null],[17,"XKB_KEY_Sinh_mba","","",null,null],[17,"XKB_KEY_Sinh_ya","","",null,null],[17,"XKB_KEY_Sinh_ra","","",null,null],[17,"XKB_KEY_Sinh_la","","",null,null],[17,"XKB_KEY_Sinh_va","","",null,null],[17,"XKB_KEY_Sinh_sha","","",null,null],[17,"XKB_KEY_Sinh_ssha","","",null,null],[17,"XKB_KEY_Sinh_sa","","",null,null],[17,"XKB_KEY_Sinh_ha","","",null,null],[17,"XKB_KEY_Sinh_lla","","",null,null],[17,"XKB_KEY_Sinh_fa","","",null,null],[17,"XKB_KEY_Sinh_al","","",null,null],[17,"XKB_KEY_Sinh_aa2","","",null,null],[17,"XKB_KEY_Sinh_ae2","","",null,null],[17,"XKB_KEY_Sinh_aee2","","",null,null],[17,"XKB_KEY_Sinh_i2","","",null,null],[17,"XKB_KEY_Sinh_ii2","","",null,null],[17,"XKB_KEY_Sinh_u2","","",null,null],[17,"XKB_KEY_Sinh_uu2","","",null,null],[17,"XKB_KEY_Sinh_ru2","","",null,null],[17,"XKB_KEY_Sinh_e2","","",null,null],[17,"XKB_KEY_Sinh_ee2","","",null,null],[17,"XKB_KEY_Sinh_ai2","","",null,null],[17,"XKB_KEY_Sinh_o2","","",null,null],[17,"XKB_KEY_Sinh_oo2","","",null,null],[17,"XKB_KEY_Sinh_au2","","",null,null],[17,"XKB_KEY_Sinh_lu2","","",null,null],[17,"XKB_KEY_Sinh_ruu2","","",null,null],[17,"XKB_KEY_Sinh_luu2","","",null,null],[17,"XKB_KEY_Sinh_kunddaliya","","",null,null],[17,"XKB_KEY_XF86ModeLock","","",null,null],[17,"XKB_KEY_XF86MonBrightnessUp","","",null,null],[17,"XKB_KEY_XF86MonBrightnessDown","","",null,null],[17,"XKB_KEY_XF86KbdLightOnOff","","",null,null],[17,"XKB_KEY_XF86KbdBrightnessUp","","",null,null],[17,"XKB_KEY_XF86KbdBrightnessDown","","",null,null],[17,"XKB_KEY_XF86Standby","","",null,null],[17,"XKB_KEY_XF86AudioLowerVolume","","",null,null],[17,"XKB_KEY_XF86AudioMute","","",null,null],[17,"XKB_KEY_XF86AudioRaiseVolume","","",null,null],[17,"XKB_KEY_XF86AudioPlay","","",null,null],[17,"XKB_KEY_XF86AudioStop","","",null,null],[17,"XKB_KEY_XF86AudioPrev","","",null,null],[17,"XKB_KEY_XF86AudioNext","","",null,null],[17,"XKB_KEY_XF86HomePage","","",null,null],[17,"XKB_KEY_XF86Mail","","",null,null],[17,"XKB_KEY_XF86Start","","",null,null],[17,"XKB_KEY_XF86Search","","",null,null],[17,"XKB_KEY_XF86AudioRecord","","",null,null],[17,"XKB_KEY_XF86Calculator","","",null,null],[17,"XKB_KEY_XF86Memo","","",null,null],[17,"XKB_KEY_XF86ToDoList","","",null,null],[17,"XKB_KEY_XF86Calendar","","",null,null],[17,"XKB_KEY_XF86PowerDown","","",null,null],[17,"XKB_KEY_XF86ContrastAdjust","","",null,null],[17,"XKB_KEY_XF86RockerUp","","",null,null],[17,"XKB_KEY_XF86RockerDown","","",null,null],[17,"XKB_KEY_XF86RockerEnter","","",null,null],[17,"XKB_KEY_XF86Back","","",null,null],[17,"XKB_KEY_XF86Forward","","",null,null],[17,"XKB_KEY_XF86Stop","","",null,null],[17,"XKB_KEY_XF86Refresh","","",null,null],[17,"XKB_KEY_XF86PowerOff","","",null,null],[17,"XKB_KEY_XF86WakeUp","","",null,null],[17,"XKB_KEY_XF86Eject","","",null,null],[17,"XKB_KEY_XF86ScreenSaver","","",null,null],[17,"XKB_KEY_XF86WWW","","",null,null],[17,"XKB_KEY_XF86Sleep","","",null,null],[17,"XKB_KEY_XF86Favorites","","",null,null],[17,"XKB_KEY_XF86AudioPause","","",null,null],[17,"XKB_KEY_XF86AudioMedia","","",null,null],[17,"XKB_KEY_XF86MyComputer","","",null,null],[17,"XKB_KEY_XF86VendorHome","","",null,null],[17,"XKB_KEY_XF86LightBulb","","",null,null],[17,"XKB_KEY_XF86Shop","","",null,null],[17,"XKB_KEY_XF86History","","",null,null],[17,"XKB_KEY_XF86OpenURL","","",null,null],[17,"XKB_KEY_XF86AddFavorite","","",null,null],[17,"XKB_KEY_XF86HotLinks","","",null,null],[17,"XKB_KEY_XF86BrightnessAdjust","","",null,null],[17,"XKB_KEY_XF86Finance","","",null,null],[17,"XKB_KEY_XF86Community","","",null,null],[17,"XKB_KEY_XF86AudioRewind","","",null,null],[17,"XKB_KEY_XF86BackForward","","",null,null],[17,"XKB_KEY_XF86Launch0","","",null,null],[17,"XKB_KEY_XF86Launch1","","",null,null],[17,"XKB_KEY_XF86Launch2","","",null,null],[17,"XKB_KEY_XF86Launch3","","",null,null],[17,"XKB_KEY_XF86Launch4","","",null,null],[17,"XKB_KEY_XF86Launch5","","",null,null],[17,"XKB_KEY_XF86Launch6","","",null,null],[17,"XKB_KEY_XF86Launch7","","",null,null],[17,"XKB_KEY_XF86Launch8","","",null,null],[17,"XKB_KEY_XF86Launch9","","",null,null],[17,"XKB_KEY_XF86LaunchA","","",null,null],[17,"XKB_KEY_XF86LaunchB","","",null,null],[17,"XKB_KEY_XF86LaunchC","","",null,null],[17,"XKB_KEY_XF86LaunchD","","",null,null],[17,"XKB_KEY_XF86LaunchE","","",null,null],[17,"XKB_KEY_XF86LaunchF","","",null,null],[17,"XKB_KEY_XF86ApplicationLeft","","",null,null],[17,"XKB_KEY_XF86ApplicationRight","","",null,null],[17,"XKB_KEY_XF86Book","","",null,null],[17,"XKB_KEY_XF86CD","","",null,null],[17,"XKB_KEY_XF86Calculater","","",null,null],[17,"XKB_KEY_XF86Clear","","",null,null],[17,"XKB_KEY_XF86Close","","",null,null],[17,"XKB_KEY_XF86Copy","","",null,null],[17,"XKB_KEY_XF86Cut","","",null,null],[17,"XKB_KEY_XF86Display","","",null,null],[17,"XKB_KEY_XF86DOS","","",null,null],[17,"XKB_KEY_XF86Documents","","",null,null],[17,"XKB_KEY_XF86Excel","","",null,null],[17,"XKB_KEY_XF86Explorer","","",null,null],[17,"XKB_KEY_XF86Game","","",null,null],[17,"XKB_KEY_XF86Go","","",null,null],[17,"XKB_KEY_XF86iTouch","","",null,null],[17,"XKB_KEY_XF86LogOff","","",null,null],[17,"XKB_KEY_XF86Market","","",null,null],[17,"XKB_KEY_XF86Meeting","","",null,null],[17,"XKB_KEY_XF86MenuKB","","",null,null],[17,"XKB_KEY_XF86MenuPB","","",null,null],[17,"XKB_KEY_XF86MySites","","",null,null],[17,"XKB_KEY_XF86New","","",null,null],[17,"XKB_KEY_XF86News","","",null,null],[17,"XKB_KEY_XF86OfficeHome","","",null,null],[17,"XKB_KEY_XF86Open","","",null,null],[17,"XKB_KEY_XF86Option","","",null,null],[17,"XKB_KEY_XF86Paste","","",null,null],[17,"XKB_KEY_XF86Phone","","",null,null],[17,"XKB_KEY_XF86Q","","",null,null],[17,"XKB_KEY_XF86Reply","","",null,null],[17,"XKB_KEY_XF86Reload","","",null,null],[17,"XKB_KEY_XF86RotateWindows","","",null,null],[17,"XKB_KEY_XF86RotationPB","","",null,null],[17,"XKB_KEY_XF86RotationKB","","",null,null],[17,"XKB_KEY_XF86Save","","",null,null],[17,"XKB_KEY_XF86ScrollUp","","",null,null],[17,"XKB_KEY_XF86ScrollDown","","",null,null],[17,"XKB_KEY_XF86ScrollClick","","",null,null],[17,"XKB_KEY_XF86Send","","",null,null],[17,"XKB_KEY_XF86Spell","","",null,null],[17,"XKB_KEY_XF86SplitScreen","","",null,null],[17,"XKB_KEY_XF86Support","","",null,null],[17,"XKB_KEY_XF86TaskPane","","",null,null],[17,"XKB_KEY_XF86Terminal","","",null,null],[17,"XKB_KEY_XF86Tools","","",null,null],[17,"XKB_KEY_XF86Travel","","",null,null],[17,"XKB_KEY_XF86UserPB","","",null,null],[17,"XKB_KEY_XF86User1KB","","",null,null],[17,"XKB_KEY_XF86User2KB","","",null,null],[17,"XKB_KEY_XF86Video","","",null,null],[17,"XKB_KEY_XF86WheelButton","","",null,null],[17,"XKB_KEY_XF86Word","","",null,null],[17,"XKB_KEY_XF86Xfer","","",null,null],[17,"XKB_KEY_XF86ZoomIn","","",null,null],[17,"XKB_KEY_XF86ZoomOut","","",null,null],[17,"XKB_KEY_XF86Away","","",null,null],[17,"XKB_KEY_XF86Messenger","","",null,null],[17,"XKB_KEY_XF86WebCam","","",null,null],[17,"XKB_KEY_XF86MailForward","","",null,null],[17,"XKB_KEY_XF86Pictures","","",null,null],[17,"XKB_KEY_XF86Music","","",null,null],[17,"XKB_KEY_XF86Battery","","",null,null],[17,"XKB_KEY_XF86Bluetooth","","",null,null],[17,"XKB_KEY_XF86WLAN","","",null,null],[17,"XKB_KEY_XF86UWB","","",null,null],[17,"XKB_KEY_XF86AudioForward","","",null,null],[17,"XKB_KEY_XF86AudioRepeat","","",null,null],[17,"XKB_KEY_XF86AudioRandomPlay","","",null,null],[17,"XKB_KEY_XF86Subtitle","","",null,null],[17,"XKB_KEY_XF86AudioCycleTrack","","",null,null],[17,"XKB_KEY_XF86CycleAngle","","",null,null],[17,"XKB_KEY_XF86FrameBack","","",null,null],[17,"XKB_KEY_XF86FrameForward","","",null,null],[17,"XKB_KEY_XF86Time","","",null,null],[17,"XKB_KEY_XF86Select","","",null,null],[17,"XKB_KEY_XF86View","","",null,null],[17,"XKB_KEY_XF86TopMenu","","",null,null],[17,"XKB_KEY_XF86Red","","",null,null],[17,"XKB_KEY_XF86Green","","",null,null],[17,"XKB_KEY_XF86Yellow","","",null,null],[17,"XKB_KEY_XF86Blue","","",null,null],[17,"XKB_KEY_XF86Suspend","","",null,null],[17,"XKB_KEY_XF86Hibernate","","",null,null],[17,"XKB_KEY_XF86TouchpadToggle","","",null,null],[17,"XKB_KEY_XF86TouchpadOn","","",null,null],[17,"XKB_KEY_XF86TouchpadOff","","",null,null],[17,"XKB_KEY_XF86AudioMicMute","","",null,null],[17,"XKB_KEY_XF86Switch_VT_1","","",null,null],[17,"XKB_KEY_XF86Switch_VT_2","","",null,null],[17,"XKB_KEY_XF86Switch_VT_3","","",null,null],[17,"XKB_KEY_XF86Switch_VT_4","","",null,null],[17,"XKB_KEY_XF86Switch_VT_5","","",null,null],[17,"XKB_KEY_XF86Switch_VT_6","","",null,null],[17,"XKB_KEY_XF86Switch_VT_7","","",null,null],[17,"XKB_KEY_XF86Switch_VT_8","","",null,null],[17,"XKB_KEY_XF86Switch_VT_9","","",null,null],[17,"XKB_KEY_XF86Switch_VT_10","","",null,null],[17,"XKB_KEY_XF86Switch_VT_11","","",null,null],[17,"XKB_KEY_XF86Switch_VT_12","","",null,null],[17,"XKB_KEY_XF86Ungrab","","",null,null],[17,"XKB_KEY_XF86ClearGrab","","",null,null],[17,"XKB_KEY_XF86Next_VMode","","",null,null],[17,"XKB_KEY_XF86Prev_VMode","","",null,null],[17,"XKB_KEY_XF86LogWindowTree","","",null,null],[17,"XKB_KEY_XF86LogGrabInfo","","",null,null],[17,"XKB_KEY_SunFA_Grave","","",null,null],[17,"XKB_KEY_SunFA_Circum","","",null,null],[17,"XKB_KEY_SunFA_Tilde","","",null,null],[17,"XKB_KEY_SunFA_Acute","","",null,null],[17,"XKB_KEY_SunFA_Diaeresis","","",null,null],[17,"XKB_KEY_SunFA_Cedilla","","",null,null],[17,"XKB_KEY_SunF36","","",null,null],[17,"XKB_KEY_SunF37","","",null,null],[17,"XKB_KEY_SunSys_Req","","",null,null],[17,"XKB_KEY_SunPrint_Screen","","",null,null],[17,"XKB_KEY_SunCompose","","",null,null],[17,"XKB_KEY_SunAltGraph","","",null,null],[17,"XKB_KEY_SunPageUp","","",null,null],[17,"XKB_KEY_SunPageDown","","",null,null],[17,"XKB_KEY_SunUndo","","",null,null],[17,"XKB_KEY_SunAgain","","",null,null],[17,"XKB_KEY_SunFind","","",null,null],[17,"XKB_KEY_SunStop","","",null,null],[17,"XKB_KEY_SunProps","","",null,null],[17,"XKB_KEY_SunFront","","",null,null],[17,"XKB_KEY_SunCopy","","",null,null],[17,"XKB_KEY_SunOpen","","",null,null],[17,"XKB_KEY_SunPaste","","",null,null],[17,"XKB_KEY_SunCut","","",null,null],[17,"XKB_KEY_SunPowerSwitch","","",null,null],[17,"XKB_KEY_SunAudioLowerVolume","","",null,null],[17,"XKB_KEY_SunAudioMute","","",null,null],[17,"XKB_KEY_SunAudioRaiseVolume","","",null,null],[17,"XKB_KEY_SunVideoDegauss","","",null,null],[17,"XKB_KEY_SunVideoLowerBrightness","","",null,null],[17,"XKB_KEY_SunVideoRaiseBrightness","","",null,null],[17,"XKB_KEY_SunPowerSwitchShift","","",null,null],[17,"XKB_KEY_Dring_accent","","",null,null],[17,"XKB_KEY_Dcircumflex_accent","","",null,null],[17,"XKB_KEY_Dcedilla_accent","","",null,null],[17,"XKB_KEY_Dacute_accent","","",null,null],[17,"XKB_KEY_Dgrave_accent","","",null,null],[17,"XKB_KEY_Dtilde","","",null,null],[17,"XKB_KEY_Ddiaeresis","","",null,null],[17,"XKB_KEY_DRemove","","",null,null],[17,"XKB_KEY_hpClearLine","","",null,null],[17,"XKB_KEY_hpInsertLine","","",null,null],[17,"XKB_KEY_hpDeleteLine","","",null,null],[17,"XKB_KEY_hpInsertChar","","",null,null],[17,"XKB_KEY_hpDeleteChar","","",null,null],[17,"XKB_KEY_hpBackTab","","",null,null],[17,"XKB_KEY_hpKP_BackTab","","",null,null],[17,"XKB_KEY_hpModelock1","","",null,null],[17,"XKB_KEY_hpModelock2","","",null,null],[17,"XKB_KEY_hpReset","","",null,null],[17,"XKB_KEY_hpSystem","","",null,null],[17,"XKB_KEY_hpUser","","",null,null],[17,"XKB_KEY_hpmute_acute","","",null,null],[17,"XKB_KEY_hpmute_grave","","",null,null],[17,"XKB_KEY_hpmute_asciicircum","","",null,null],[17,"XKB_KEY_hpmute_diaeresis","","",null,null],[17,"XKB_KEY_hpmute_asciitilde","","",null,null],[17,"XKB_KEY_hplira","","",null,null],[17,"XKB_KEY_hpguilder","","",null,null],[17,"XKB_KEY_hpYdiaeresis","","",null,null],[17,"XKB_KEY_hpIO","","",null,null],[17,"XKB_KEY_hplongminus","","",null,null],[17,"XKB_KEY_hpblock","","",null,null],[17,"XKB_KEY_osfCopy","","",null,null],[17,"XKB_KEY_osfCut","","",null,null],[17,"XKB_KEY_osfPaste","","",null,null],[17,"XKB_KEY_osfBackTab","","",null,null],[17,"XKB_KEY_osfBackSpace","","",null,null],[17,"XKB_KEY_osfClear","","",null,null],[17,"XKB_KEY_osfEscape","","",null,null],[17,"XKB_KEY_osfAddMode","","",null,null],[17,"XKB_KEY_osfPrimaryPaste","","",null,null],[17,"XKB_KEY_osfQuickPaste","","",null,null],[17,"XKB_KEY_osfPageLeft","","",null,null],[17,"XKB_KEY_osfPageUp","","",null,null],[17,"XKB_KEY_osfPageDown","","",null,null],[17,"XKB_KEY_osfPageRight","","",null,null],[17,"XKB_KEY_osfActivate","","",null,null],[17,"XKB_KEY_osfMenuBar","","",null,null],[17,"XKB_KEY_osfLeft","","",null,null],[17,"XKB_KEY_osfUp","","",null,null],[17,"XKB_KEY_osfRight","","",null,null],[17,"XKB_KEY_osfDown","","",null,null],[17,"XKB_KEY_osfEndLine","","",null,null],[17,"XKB_KEY_osfBeginLine","","",null,null],[17,"XKB_KEY_osfEndData","","",null,null],[17,"XKB_KEY_osfBeginData","","",null,null],[17,"XKB_KEY_osfPrevMenu","","",null,null],[17,"XKB_KEY_osfNextMenu","","",null,null],[17,"XKB_KEY_osfPrevField","","",null,null],[17,"XKB_KEY_osfNextField","","",null,null],[17,"XKB_KEY_osfSelect","","",null,null],[17,"XKB_KEY_osfInsert","","",null,null],[17,"XKB_KEY_osfUndo","","",null,null],[17,"XKB_KEY_osfMenu","","",null,null],[17,"XKB_KEY_osfCancel","","",null,null],[17,"XKB_KEY_osfHelp","","",null,null],[17,"XKB_KEY_osfSelectAll","","",null,null],[17,"XKB_KEY_osfDeselectAll","","",null,null],[17,"XKB_KEY_osfReselect","","",null,null],[17,"XKB_KEY_osfExtend","","",null,null],[17,"XKB_KEY_osfRestore","","",null,null],[17,"XKB_KEY_osfDelete","","",null,null],[17,"XKB_KEY_Reset","","",null,null],[17,"XKB_KEY_System","","",null,null],[17,"XKB_KEY_User","","",null,null],[17,"XKB_KEY_ClearLine","","",null,null],[17,"XKB_KEY_InsertLine","","",null,null],[17,"XKB_KEY_DeleteLine","","",null,null],[17,"XKB_KEY_InsertChar","","",null,null],[17,"XKB_KEY_DeleteChar","","",null,null],[17,"XKB_KEY_BackTab","","",null,null],[17,"XKB_KEY_KP_BackTab","","",null,null],[17,"XKB_KEY_Ext16bit_L","","",null,null],[17,"XKB_KEY_Ext16bit_R","","",null,null],[17,"XKB_KEY_mute_acute","","",null,null],[17,"XKB_KEY_mute_grave","","",null,null],[17,"XKB_KEY_mute_asciicircum","","",null,null],[17,"XKB_KEY_mute_diaeresis","","",null,null],[17,"XKB_KEY_mute_asciitilde","","",null,null],[17,"XKB_KEY_lira","","",null,null],[17,"XKB_KEY_guilder","","",null,null],[17,"XKB_KEY_IO","","",null,null],[17,"XKB_KEY_longminus","","",null,null],[17,"XKB_KEY_block","","",null,null],[8,"Handler","wayland_kbd","",null,null],[11,"enter","","",3,null],[11,"leave","","",3,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"wlsurface"}],"output":null}],[11,"key","","",3,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"u32"},{"name":"modifiersstate"},{"name":"u32"},{"name":"u32"},{"name":"keystate"},{"generics":["string"],"name":"option"}],"output":null}],[11,"repeat_info","","",3,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"enter","","",3,null],[11,"leave","","",3,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"wlsurface"}],"output":null}],[11,"key","","",3,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"u32"},{"name":"modifiersstate"},{"name":"u32"},{"name":"u32"},{"name":"keystate"},{"generics":["string"],"name":"option"}],"output":null}],[11,"repeat_info","","",3,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"i32"},{"name":"i32"}],"output":null}]],"paths":[[3,"ModifiersState"],[4,"MappedKeyboardError"],[3,"MappedKeyboard"],[8,"Handler"]]};
searchIndex["wayland_protocols"] = {"doc":"This crate provides bindings to the official wayland protocol extensions provided in https://cgit.freedesktop.org/wayland/wayland-protocols","items":[[0,"unstable","wayland_protocols","",null,null],[0,"fullscreen_shell","wayland_protocols::unstable","",null,null],[0,"client","wayland_protocols::unstable::fullscreen_shell","",null,null],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::client","displays a single surface per output",null,null],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::client::zwp_fullscreen_shell_v1","",null,null],[4,"Capability","","capabilities advertised by the compositor",null,null],[13,"ArbitraryModes","","",0,null],[13,"CursorPlane","","",0,null],[4,"PresentMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","",1,null],[13,"Center","","",1,null],[13,"Zoom","","",1,null],[13,"ZoomCrop","","",1,null],[13,"Stretch","","",1,null],[4,"Error","","wl_fullscreen_shell error values",null,null],[13,"InvalidMethod","","",2,null],[8,"Handler","","",null,null],[11,"capability","","advertises a capability of the compositor",3,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpfullscreenshellv1"},{"name":"u32"}],"output":null}],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::client","",null,null],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::client::zwp_fullscreen_shell_mode_feedback_v1","",null,null],[8,"Handler","","",null,null],[11,"mode_successful","","mode switch succeeded",4,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":null}],[11,"mode_failed","","mode switch failed",4,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":null}],[11,"present_cancelled","","mode switch cancelled",4,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":null}],[11,"capability","wayland_protocols::unstable::fullscreen_shell::client::zwp_fullscreen_shell_v1","advertises a capability of the compositor",3,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpfullscreenshellv1"},{"name":"u32"}],"output":null}],[11,"ptr","","",5,null],[11,"from_ptr_new","","",5,null],[11,"from_ptr_initialized","","",5,null],[11,"interface_ptr","","",5,null],[11,"interface_name","","",5,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",5,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",5,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",5,{"inputs":[{"name":"self"},{"name":"zwpfullscreenshellv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",5,null],[11,"get_user_data","","",5,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",0,{"inputs":[{"name":"u32"}],"output":{"generics":["capability"],"name":"option"}}],[11,"to_raw","","",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"presentmethod"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"presentmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",1,{"inputs":[{"name":"u32"}],"output":{"generics":["presentmethod"],"name":"option"}}],[11,"to_raw","","",1,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",2,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",2,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"release","","release the wl_fullscreen_shell interface",5,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"present_surface","","present surface for display",5,{"inputs":[{"name":"self"},{"generics":["wlsurface"],"name":"option"},{"name":"u32"},{"generics":["wloutput"],"name":"option"}],"output":{"name":"requestresult"}}],[11,"present_surface_for_mode","","present surface for display at a particular mode",5,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wloutput"},{"name":"i32"}],"output":{"generics":["zwpfullscreenshellmodefeedbackv1"],"name":"requestresult"}}],[11,"mode_successful","wayland_protocols::unstable::fullscreen_shell::client::zwp_fullscreen_shell_mode_feedback_v1","mode switch succeeded",4,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":null}],[11,"mode_failed","","mode switch failed",4,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":null}],[11,"present_cancelled","","mode switch cancelled",4,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":null}],[11,"ptr","","",6,null],[11,"from_ptr_new","","",6,null],[11,"from_ptr_initialized","","",6,null],[11,"interface_ptr","","",6,null],[11,"interface_name","","",6,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",6,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",6,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",6,{"inputs":[{"name":"self"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",6,null],[11,"get_user_data","","",6,null],[0,"idle_inhibit","wayland_protocols::unstable","",null,null],[0,"client","wayland_protocols::unstable::idle_inhibit","",null,null],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::client","control behavior when display idles",null,null],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::client::zwp_idle_inhibit_manager_v1","",null,null],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::client","context object for inhibiting idle behavior",null,null],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::client::zwp_idle_inhibitor_v1","",null,null],[11,"ptr","wayland_protocols::unstable::idle_inhibit::client::zwp_idle_inhibit_manager_v1","",7,null],[11,"from_ptr_new","","",7,null],[11,"from_ptr_initialized","","",7,null],[11,"interface_ptr","","",7,null],[11,"interface_name","","",7,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",7,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",7,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",7,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",7,{"inputs":[{"name":"self"},{"name":"zwpidleinhibitmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",7,null],[11,"get_user_data","","",7,null],[11,"destroy","","destroy the idle inhibitor object",7,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"create_inhibitor","","create a new inhibitor object",7,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"generics":["zwpidleinhibitorv1"],"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::idle_inhibit::client::zwp_idle_inhibitor_v1","",8,null],[11,"from_ptr_new","","",8,null],[11,"from_ptr_initialized","","",8,null],[11,"interface_ptr","","",8,null],[11,"interface_name","","",8,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",8,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",8,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",8,{"inputs":[{"name":"self"},{"name":"zwpidleinhibitorv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",8,null],[11,"get_user_data","","",8,null],[11,"destroy","","destroy the idle inhibitor object",8,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[0,"input_method","wayland_protocols::unstable","",null,null],[0,"client","wayland_protocols::unstable::input_method","",null,null],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::client","input method context",null,null],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::client::zwp_input_method_context_v1","",null,null],[8,"Handler","","",null,null],[11,"surrounding_text","","surrounding text event",9,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"string"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"reset","","",9,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"}],"output":null}],[11,"content_type","","",9,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"invoke_action","","",9,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"commit_state","","",9,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"}],"output":null}],[11,"preferred_language","","",9,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"string"}],"output":null}],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::client","input method",null,null],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::client::zwp_input_method_v1","",null,null],[8,"Handler","","",null,null],[11,"activate","","activate event",10,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodv1"},{"name":"zwpinputmethodcontextv1"}],"output":null}],[11,"deactivate","","deactivate event",10,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodv1"},{"name":"zwpinputmethodcontextv1"}],"output":null}],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::client","interface for implementing keyboards",null,null],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::client::zwp_input_panel_v1","",null,null],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::client","",null,null],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::client::zwp_input_panel_surface_v1","",null,null],[4,"Position","","",null,null],[13,"CenterBottom","","",11,null],[11,"surrounding_text","wayland_protocols::unstable::input_method::client::zwp_input_method_context_v1","surrounding text event",9,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"string"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"reset","","",9,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"}],"output":null}],[11,"content_type","","",9,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"invoke_action","","",9,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"commit_state","","",9,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"}],"output":null}],[11,"preferred_language","","",9,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"string"}],"output":null}],[11,"ptr","","",12,null],[11,"from_ptr_new","","",12,null],[11,"from_ptr_initialized","","",12,null],[11,"interface_ptr","","",12,null],[11,"interface_name","","",12,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",12,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",12,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",12,{"inputs":[{"name":"self"},{"name":"zwpinputmethodcontextv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",12,null],[11,"get_user_data","","",12,null],[11,"destroy","","",12,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"commit_string","","commit string",12,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"preedit_string","","pre-edit string",12,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"preedit_styling","","pre-edit styling",12,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"preedit_cursor","","pre-edit cursor",12,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"delete_surrounding_text","","delete text",12,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"cursor_position","","set cursor to a new position",12,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"modifiers_map","","",12,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"}],"output":{"name":"requestresult"}}],[11,"keysym","","keysym",12,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"grab_keyboard","","grab hardware keyboard",12,{"inputs":[{"name":"self"}],"output":{"generics":["wlkeyboard"],"name":"requestresult"}}],[11,"key","","forward key event",12,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"modifiers","","forward modifiers event",12,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"language","","",12,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"text_direction","","",12,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"activate","wayland_protocols::unstable::input_method::client::zwp_input_method_v1","activate event",10,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodv1"},{"name":"zwpinputmethodcontextv1"}],"output":null}],[11,"deactivate","","deactivate event",10,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodv1"},{"name":"zwpinputmethodcontextv1"}],"output":null}],[11,"ptr","","",13,null],[11,"from_ptr_new","","",13,null],[11,"from_ptr_initialized","","",13,null],[11,"interface_ptr","","",13,null],[11,"interface_name","","",13,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",13,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",13,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",13,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",13,{"inputs":[{"name":"self"},{"name":"zwpinputmethodv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",13,null],[11,"get_user_data","","",13,null],[11,"ptr","wayland_protocols::unstable::input_method::client::zwp_input_panel_v1","",14,null],[11,"from_ptr_new","","",14,null],[11,"from_ptr_initialized","","",14,null],[11,"interface_ptr","","",14,null],[11,"interface_name","","",14,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",14,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",14,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",14,{"inputs":[{"name":"self"},{"name":"zwpinputpanelv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",14,null],[11,"get_user_data","","",14,null],[11,"get_input_panel_surface","","",14,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"zwpinputpanelsurfacev1"}}],[11,"ptr","wayland_protocols::unstable::input_method::client::zwp_input_panel_surface_v1","",15,null],[11,"from_ptr_new","","",15,null],[11,"from_ptr_initialized","","",15,null],[11,"interface_ptr","","",15,null],[11,"interface_name","","",15,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",15,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",15,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",15,{"inputs":[{"name":"self"},{"name":"zwpinputpanelsurfacev1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",15,null],[11,"get_user_data","","",15,null],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"from_raw","","",11,{"inputs":[{"name":"u32"}],"output":{"generics":["position"],"name":"option"}}],[11,"to_raw","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_toplevel","","set the surface type as a keyboard",15,null],[11,"set_overlay_panel","","set the surface type as an overlay panel",15,null],[0,"linux_dmabuf","wayland_protocols::unstable","",null,null],[0,"client","wayland_protocols::unstable::linux_dmabuf","",null,null],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::client","factory for creating dmabuf-based wl_buffers",null,null],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::client::zwp_linux_dmabuf_v1","",null,null],[8,"Handler","","",null,null],[11,"format","","supported buffer format",16,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplinuxdmabufv1"},{"name":"u32"}],"output":null}],[11,"modifier","","supported buffer format modifier",16,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplinuxdmabufv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::client","parameters for creating a dmabuf-based wl_buffer",null,null],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::client::zwp_linux_buffer_params_v1","",null,null],[4,"Error","","",null,null],[13,"AlreadyUsed","","",17,null],[13,"PlaneIdx","","",17,null],[13,"PlaneSet","","",17,null],[13,"Incomplete","","",17,null],[13,"InvalidFormat","","",17,null],[13,"InvalidDimensions","","",17,null],[13,"OutOfBounds","","",17,null],[13,"InvalidWlBuffer","","",17,null],[4,"Flags","","",null,null],[13,"YInvert","","",18,null],[13,"Interlaced","","",18,null],[13,"BottomFirst","","",18,null],[8,"Handler","","",null,null],[11,"created","","buffer creation succeeded",19,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplinuxbufferparamsv1"},{"name":"wlbuffer"}],"output":null}],[11,"failed","","buffer creation failed",19,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplinuxbufferparamsv1"}],"output":null}],[11,"format","wayland_protocols::unstable::linux_dmabuf::client::zwp_linux_dmabuf_v1","supported buffer format",16,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplinuxdmabufv1"},{"name":"u32"}],"output":null}],[11,"modifier","","supported buffer format modifier",16,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplinuxdmabufv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"ptr","","",20,null],[11,"from_ptr_new","","",20,null],[11,"from_ptr_initialized","","",20,null],[11,"interface_ptr","","",20,null],[11,"interface_name","","",20,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",20,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",20,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",20,{"inputs":[{"name":"self"},{"name":"zwplinuxdmabufv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",20,null],[11,"get_user_data","","",20,null],[11,"destroy","","unbind the factory",20,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"create_params","","create a temporary object for buffer parameters",20,{"inputs":[{"name":"self"}],"output":{"generics":["zwplinuxbufferparamsv1"],"name":"requestresult"}}],[11,"created","wayland_protocols::unstable::linux_dmabuf::client::zwp_linux_buffer_params_v1","buffer creation succeeded",19,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplinuxbufferparamsv1"},{"name":"wlbuffer"}],"output":null}],[11,"failed","","buffer creation failed",19,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplinuxbufferparamsv1"}],"output":null}],[11,"ptr","","",21,null],[11,"from_ptr_new","","",21,null],[11,"from_ptr_initialized","","",21,null],[11,"interface_ptr","","",21,null],[11,"interface_name","","",21,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",21,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",21,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",21,{"inputs":[{"name":"self"},{"name":"zwplinuxbufferparamsv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",21,null],[11,"get_user_data","","",21,null],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",17,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",17,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"from_raw","","",18,{"inputs":[{"name":"u32"}],"output":{"generics":["flags"],"name":"option"}}],[11,"to_raw","","",18,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","delete this object, used or not",21,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"add","","add a dmabuf to the temporary set",21,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"create","","create a wl_buffer from the given dmabufs",21,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"create_immed","","immediately create a wl_buffer from the given dmabufs",21,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"generics":["wlbuffer"],"name":"requestresult"}}],[0,"pointer_constraints","wayland_protocols::unstable","protocol for constraining pointer motions",null,null],[0,"client","wayland_protocols::unstable::pointer_constraints","",null,null],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::client","constrain the movement of a pointer",null,null],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::client::zwp_pointer_constraints_v1","",null,null],[4,"Error","","wp_pointer_constraints error values",null,null],[13,"AlreadyConstrained","","",22,null],[4,"Lifetime","","constraint lifetime",null,null],[13,"Oneshot","","the pointer constraint is defunct once deactivated",23,null],[13,"Persistent","","the pointer constraint may reactivate",23,null],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::client","receive relative pointer motion events",null,null],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::client::zwp_locked_pointer_v1","",null,null],[8,"Handler","","",null,null],[11,"locked","","lock activation event",24,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplockedpointerv1"}],"output":null}],[11,"unlocked","","lock deactivation event",24,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplockedpointerv1"}],"output":null}],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::client","confined pointer object",null,null],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::client::zwp_confined_pointer_v1","",null,null],[8,"Handler","","",null,null],[11,"confined","","pointer confined",25,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpconfinedpointerv1"}],"output":null}],[11,"unconfined","","pointer unconfined",25,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpconfinedpointerv1"}],"output":null}],[11,"ptr","wayland_protocols::unstable::pointer_constraints::client::zwp_pointer_constraints_v1","",26,null],[11,"from_ptr_new","","",26,null],[11,"from_ptr_initialized","","",26,null],[11,"interface_ptr","","",26,null],[11,"interface_name","","",26,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",26,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",26,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",26,{"inputs":[{"name":"self"},{"name":"zwppointerconstraintsv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",26,null],[11,"get_user_data","","",26,null],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",22,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",22,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"lifetime"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"from_raw","","",23,{"inputs":[{"name":"u32"}],"output":{"generics":["lifetime"],"name":"option"}}],[11,"to_raw","","",23,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","destroy the pointer constraints manager object",26,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"lock_pointer","","lock pointer to a position",26,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wlpointer"},{"generics":["wlregion"],"name":"option"},{"name":"u32"}],"output":{"generics":["zwplockedpointerv1"],"name":"requestresult"}}],[11,"confine_pointer","","confine pointer to a region",26,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wlpointer"},{"generics":["wlregion"],"name":"option"},{"name":"u32"}],"output":{"generics":["zwpconfinedpointerv1"],"name":"requestresult"}}],[11,"locked","wayland_protocols::unstable::pointer_constraints::client::zwp_locked_pointer_v1","lock activation event",24,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplockedpointerv1"}],"output":null}],[11,"unlocked","","lock deactivation event",24,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplockedpointerv1"}],"output":null}],[11,"ptr","","",27,null],[11,"from_ptr_new","","",27,null],[11,"from_ptr_initialized","","",27,null],[11,"interface_ptr","","",27,null],[11,"interface_name","","",27,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",27,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",27,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",27,{"inputs":[{"name":"self"},{"name":"zwplockedpointerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",27,null],[11,"get_user_data","","",27,null],[11,"destroy","","destroy the locked pointer object",27,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_cursor_position_hint","","set the pointer cursor position hint",27,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":{"name":"requestresult"}}],[11,"set_region","","set a new lock region",27,{"inputs":[{"name":"self"},{"generics":["wlregion"],"name":"option"}],"output":{"name":"requestresult"}}],[11,"confined","wayland_protocols::unstable::pointer_constraints::client::zwp_confined_pointer_v1","pointer confined",25,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpconfinedpointerv1"}],"output":null}],[11,"unconfined","","pointer unconfined",25,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpconfinedpointerv1"}],"output":null}],[11,"ptr","","",28,null],[11,"from_ptr_new","","",28,null],[11,"from_ptr_initialized","","",28,null],[11,"interface_ptr","","",28,null],[11,"interface_name","","",28,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",28,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",28,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",28,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",28,{"inputs":[{"name":"self"},{"name":"zwpconfinedpointerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",28,null],[11,"get_user_data","","",28,null],[11,"destroy","","destroy the confined pointer object",28,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_region","","set a new confine region",28,{"inputs":[{"name":"self"},{"generics":["wlregion"],"name":"option"}],"output":{"name":"requestresult"}}],[0,"pointer_gestures","wayland_protocols::unstable","",null,null],[0,"client","wayland_protocols::unstable::pointer_gestures","",null,null],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::client","touchpad gestures",null,null],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::client::zwp_pointer_gestures_v1","",null,null],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::client","a swipe gesture object",null,null],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::client::zwp_pointer_gesture_swipe_v1","",null,null],[8,"Handler","","",null,null],[11,"begin","","multi-finger swipe begin",29,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergestureswipev1"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"u32"}],"output":null}],[11,"update","","multi-finger swipe motion",29,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergestureswipev1"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"end","","multi-finger swipe end",29,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergestureswipev1"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":null}],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::client","a pinch gesture object",null,null],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::client::zwp_pointer_gesture_pinch_v1","",null,null],[8,"Handler","","",null,null],[11,"begin","","multi-finger pinch begin",30,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergesturepinchv1"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"u32"}],"output":null}],[11,"update","","multi-finger pinch motion",30,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergesturepinchv1"},{"name":"u32"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"end","","multi-finger pinch end",30,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergesturepinchv1"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":null}],[11,"ptr","wayland_protocols::unstable::pointer_gestures::client::zwp_pointer_gestures_v1","",31,null],[11,"from_ptr_new","","",31,null],[11,"from_ptr_initialized","","",31,null],[11,"interface_ptr","","",31,null],[11,"interface_name","","",31,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",31,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",31,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",31,{"inputs":[{"name":"self"},{"name":"zwppointergesturesv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",31,null],[11,"get_user_data","","",31,null],[11,"get_swipe_gesture","","get swipe gesture",31,{"inputs":[{"name":"self"},{"name":"wlpointer"}],"output":{"name":"zwppointergestureswipev1"}}],[11,"get_pinch_gesture","","get pinch gesture",31,{"inputs":[{"name":"self"},{"name":"wlpointer"}],"output":{"name":"zwppointergesturepinchv1"}}],[11,"begin","wayland_protocols::unstable::pointer_gestures::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe begin",29,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergestureswipev1"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"u32"}],"output":null}],[11,"update","","multi-finger swipe motion",29,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergestureswipev1"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"end","","multi-finger swipe end",29,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergestureswipev1"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":null}],[11,"ptr","","",32,null],[11,"from_ptr_new","","",32,null],[11,"from_ptr_initialized","","",32,null],[11,"interface_ptr","","",32,null],[11,"interface_name","","",32,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",32,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",32,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",32,{"inputs":[{"name":"self"},{"name":"zwppointergestureswipev1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",32,null],[11,"get_user_data","","",32,null],[11,"destroy","","destroy the pointer swipe gesture object",32,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"begin","wayland_protocols::unstable::pointer_gestures::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch begin",30,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergesturepinchv1"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"u32"}],"output":null}],[11,"update","","multi-finger pinch motion",30,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergesturepinchv1"},{"name":"u32"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"end","","multi-finger pinch end",30,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergesturepinchv1"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":null}],[11,"ptr","","",33,null],[11,"from_ptr_new","","",33,null],[11,"from_ptr_initialized","","",33,null],[11,"interface_ptr","","",33,null],[11,"interface_name","","",33,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",33,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",33,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",33,{"inputs":[{"name":"self"},{"name":"zwppointergesturepinchv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",33,null],[11,"get_user_data","","",33,null],[11,"destroy","","destroy the pinch gesture object",33,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[0,"relative_pointer","wayland_protocols::unstable","protocol for relative pointer motion events",null,null],[0,"client","wayland_protocols::unstable::relative_pointer","",null,null],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::client","get relative pointer objects",null,null],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::client::zwp_relative_pointer_manager_v1","",null,null],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::client","relative pointer object",null,null],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::client::zwp_relative_pointer_v1","",null,null],[8,"Handler","","",null,null],[11,"relative_motion","","relative pointer motion",34,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwprelativepointerv1"},{"name":"u32"},{"name":"u32"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"ptr","wayland_protocols::unstable::relative_pointer::client::zwp_relative_pointer_manager_v1","",35,null],[11,"from_ptr_new","","",35,null],[11,"from_ptr_initialized","","",35,null],[11,"interface_ptr","","",35,null],[11,"interface_name","","",35,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",35,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",35,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",35,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",35,{"inputs":[{"name":"self"},{"name":"zwprelativepointermanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",35,null],[11,"get_user_data","","",35,null],[11,"destroy","","destroy the relative pointer manager object",35,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_relative_pointer","","get a relative pointer object",35,{"inputs":[{"name":"self"},{"name":"wlpointer"}],"output":{"generics":["zwprelativepointerv1"],"name":"requestresult"}}],[11,"relative_motion","wayland_protocols::unstable::relative_pointer::client::zwp_relative_pointer_v1","relative pointer motion",34,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwprelativepointerv1"},{"name":"u32"},{"name":"u32"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"ptr","","",36,null],[11,"from_ptr_new","","",36,null],[11,"from_ptr_initialized","","",36,null],[11,"interface_ptr","","",36,null],[11,"interface_name","","",36,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",36,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",36,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",36,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",36,{"inputs":[{"name":"self"},{"name":"zwprelativepointerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",36,null],[11,"get_user_data","","",36,null],[11,"destroy","","release the relative pointer object",36,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[0,"tablet","wayland_protocols::unstable","Wayland protocol for graphics tablets",null,null],[0,"client","wayland_protocols::unstable::tablet","",null,null],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::client","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::client::zwp_tablet_manager_v2","",null,null],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::client","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::client::zwp_tablet_seat_v2","",null,null],[8,"Handler","","",null,null],[11,"tablet_added","","new device notification",37,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletseatv2"},{"name":"zwptabletv2"}],"output":null}],[11,"tool_added","","a new tool has been used with a tablet",37,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletseatv2"},{"name":"zwptablettoolv2"}],"output":null}],[11,"pad_added","","new pad notification",37,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletseatv2"},{"name":"zwptabletpadv2"}],"output":null}],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::client","a physical tablet tool",null,null],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::client::zwp_tablet_tool_v2","",null,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","",38,null],[13,"Eraser","","",38,null],[13,"Brush","","",38,null],[13,"Pencil","","",38,null],[13,"Airbrush","","",38,null],[13,"Finger","","",38,null],[13,"Mouse","","",38,null],[13,"Lens","","",38,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","",39,null],[13,"Pressure","","",39,null],[13,"Distance","","",39,null],[13,"Rotation","","",39,null],[13,"Slider","","",39,null],[13,"Wheel","","",39,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","",40,null],[13,"Pressed","","",40,null],[4,"Error","","",null,null],[13,"Role","","",41,null],[8,"Handler","","",null,null],[11,"type_","","tool type",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"type"}],"output":null}],[11,"hardware_serial","","unique hardware serial number of the tool",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"hardware_id_wacom","","hardware id notification in Wacom's format",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"capability","","tool capability notification",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"capability"}],"output":null}],[11,"done","","tool description events sequence complete",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"}],"output":null}],[11,"removed","","tool removed",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"}],"output":null}],[11,"proximity_in","","proximity in event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"zwptabletv2"},{"name":"wlsurface"}],"output":null}],[11,"proximity_out","","proximity out event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"}],"output":null}],[11,"down","","tablet tool is making contact",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"}],"output":null}],[11,"up","","tablet tool is no longer making contact",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"}],"output":null}],[11,"motion","","motion event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"pressure","","pressure change event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"}],"output":null}],[11,"distance","","distance change event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"}],"output":null}],[11,"tilt","","tilt change event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"rotation","","z-rotation change event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"f64"}],"output":null}],[11,"slider","","Slider position change event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"i32"}],"output":null}],[11,"wheel","","Wheel delta event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"f64"},{"name":"i32"}],"output":null}],[11,"button","","button event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":null}],[11,"frame","","frame event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"}],"output":null}],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::client","graphics tablet device",null,null],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::client::zwp_tablet_v2","",null,null],[8,"Handler","","",null,null],[11,"name","","tablet device name",43,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"},{"name":"string"}],"output":null}],[11,"id","","tablet device USB vendor/product id",43,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"path","","path to the device",43,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"},{"name":"string"}],"output":null}],[11,"done","","tablet description events sequence complete",43,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"}],"output":null}],[11,"removed","","tablet removed event",43,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"}],"output":null}],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::client","pad ring",null,null],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::client::zwp_tablet_pad_ring_v2","",null,null],[4,"Source","","ring axis source",null,null],[13,"Finger","","",44,null],[8,"Handler","","",null,null],[11,"source","","ring event source",45,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadringv2"},{"name":"source"}],"output":null}],[11,"angle","","angle changed",45,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadringv2"},{"name":"f64"}],"output":null}],[11,"stop","","interaction stopped",45,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadringv2"}],"output":null}],[11,"frame","","end of a ring event sequence",45,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadringv2"},{"name":"u32"}],"output":null}],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::client","pad strip",null,null],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::client::zwp_tablet_pad_strip_v2","",null,null],[4,"Source","","strip axis source",null,null],[13,"Finger","","",46,null],[8,"Handler","","",null,null],[11,"source","","strip event source",47,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadstripv2"},{"name":"source"}],"output":null}],[11,"position","","position changed",47,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadstripv2"},{"name":"u32"}],"output":null}],[11,"stop","","interaction stopped",47,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadstripv2"}],"output":null}],[11,"frame","","end of a strip event sequence",47,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadstripv2"},{"name":"u32"}],"output":null}],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::client","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::client::zwp_tablet_pad_group_v2","",null,null],[8,"Handler","","",null,null],[11,"buttons","","buttons announced",48,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"ring","","ring announced",48,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"zwptabletpadringv2"}],"output":null}],[11,"strip","","strip announced",48,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"zwptabletpadstripv2"}],"output":null}],[11,"modes","","mode-switch ability announced",48,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"u32"}],"output":null}],[11,"done","","tablet group description events sequence complete",48,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"}],"output":null}],[11,"mode_switch","","mode switch event",48,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::client","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::client::zwp_tablet_pad_v2","",null,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","",49,null],[13,"Pressed","","",49,null],[8,"Handler","","",null,null],[11,"group","","group announced",50,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"zwptabletpadgroupv2"}],"output":null}],[11,"path","","path to the device",50,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"string"}],"output":null}],[11,"buttons","","buttons announced",50,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"u32"}],"output":null}],[11,"done","","pad description event sequence complete",50,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"}],"output":null}],[11,"button","","physical button state",50,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":null}],[11,"enter","","enter event",50,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"u32"},{"name":"zwptabletv2"},{"name":"wlsurface"}],"output":null}],[11,"leave","","enter event",50,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"u32"},{"name":"wlsurface"}],"output":null}],[11,"removed","","pad removed event",50,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"}],"output":null}],[11,"ptr","wayland_protocols::unstable::tablet::client::zwp_tablet_manager_v2","",51,null],[11,"from_ptr_new","","",51,null],[11,"from_ptr_initialized","","",51,null],[11,"interface_ptr","","",51,null],[11,"interface_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",51,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",51,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",51,{"inputs":[{"name":"self"},{"name":"zwptabletmanagerv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",51,null],[11,"get_user_data","","",51,null],[11,"get_tablet_seat","","get the tablet seat",51,{"inputs":[{"name":"self"},{"name":"wlseat"}],"output":{"generics":["zwptabletseatv2"],"name":"requestresult"}}],[11,"destroy","","release the memory for the tablet manager object",51,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"tablet_added","wayland_protocols::unstable::tablet::client::zwp_tablet_seat_v2","new device notification",37,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletseatv2"},{"name":"zwptabletv2"}],"output":null}],[11,"tool_added","","a new tool has been used with a tablet",37,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletseatv2"},{"name":"zwptablettoolv2"}],"output":null}],[11,"pad_added","","new pad notification",37,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletseatv2"},{"name":"zwptabletpadv2"}],"output":null}],[11,"ptr","","",52,null],[11,"from_ptr_new","","",52,null],[11,"from_ptr_initialized","","",52,null],[11,"interface_ptr","","",52,null],[11,"interface_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",52,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",52,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",52,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",52,{"inputs":[{"name":"self"},{"name":"zwptabletseatv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",52,null],[11,"get_user_data","","",52,null],[11,"destroy","","release the memory for the tablet seat object",52,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"type_","wayland_protocols::unstable::tablet::client::zwp_tablet_tool_v2","tool type",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"type"}],"output":null}],[11,"hardware_serial","","unique hardware serial number of the tool",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"hardware_id_wacom","","hardware id notification in Wacom's format",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"capability","","tool capability notification",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"capability"}],"output":null}],[11,"done","","tool description events sequence complete",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"}],"output":null}],[11,"removed","","tool removed",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"}],"output":null}],[11,"proximity_in","","proximity in event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"zwptabletv2"},{"name":"wlsurface"}],"output":null}],[11,"proximity_out","","proximity out event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"}],"output":null}],[11,"down","","tablet tool is making contact",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"}],"output":null}],[11,"up","","tablet tool is no longer making contact",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"}],"output":null}],[11,"motion","","motion event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"pressure","","pressure change event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"}],"output":null}],[11,"distance","","distance change event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"}],"output":null}],[11,"tilt","","tilt change event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"rotation","","z-rotation change event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"f64"}],"output":null}],[11,"slider","","Slider position change event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"i32"}],"output":null}],[11,"wheel","","Wheel delta event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"f64"},{"name":"i32"}],"output":null}],[11,"button","","button event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":null}],[11,"frame","","frame event",42,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"}],"output":null}],[11,"ptr","","",53,null],[11,"from_ptr_new","","",53,null],[11,"from_ptr_initialized","","",53,null],[11,"interface_ptr","","",53,null],[11,"interface_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",53,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",53,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",53,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",53,{"inputs":[{"name":"self"},{"name":"zwptablettoolv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",53,null],[11,"get_user_data","","",53,null],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"from_raw","","",38,{"inputs":[{"name":"u32"}],"output":{"generics":["type"],"name":"option"}}],[11,"to_raw","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",39,{"inputs":[{"name":"u32"}],"output":{"generics":["capability"],"name":"option"}}],[11,"to_raw","","",39,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",40,{"inputs":[{"name":"u32"}],"output":{"generics":["buttonstate"],"name":"option"}}],[11,"to_raw","","",40,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",41,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",41,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_cursor","","set the tablet tool's surface",53,{"inputs":[{"name":"self"},{"name":"u32"},{"generics":["wlsurface"],"name":"option"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the tool object",53,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"name","wayland_protocols::unstable::tablet::client::zwp_tablet_v2","tablet device name",43,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"},{"name":"string"}],"output":null}],[11,"id","","tablet device USB vendor/product id",43,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"path","","path to the device",43,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"},{"name":"string"}],"output":null}],[11,"done","","tablet description events sequence complete",43,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"}],"output":null}],[11,"removed","","tablet removed event",43,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"}],"output":null}],[11,"ptr","","",54,null],[11,"from_ptr_new","","",54,null],[11,"from_ptr_initialized","","",54,null],[11,"interface_ptr","","",54,null],[11,"interface_name","","",54,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",54,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",54,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",54,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",54,{"inputs":[{"name":"self"},{"name":"zwptabletv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",54,null],[11,"get_user_data","","",54,null],[11,"destroy","","destroy the tablet object",54,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"source","wayland_protocols::unstable::tablet::client::zwp_tablet_pad_ring_v2","ring event source",45,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadringv2"},{"name":"source"}],"output":null}],[11,"angle","","angle changed",45,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadringv2"},{"name":"f64"}],"output":null}],[11,"stop","","interaction stopped",45,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadringv2"}],"output":null}],[11,"frame","","end of a ring event sequence",45,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadringv2"},{"name":"u32"}],"output":null}],[11,"ptr","","",55,null],[11,"from_ptr_new","","",55,null],[11,"from_ptr_initialized","","",55,null],[11,"interface_ptr","","",55,null],[11,"interface_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",55,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",55,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",55,{"inputs":[{"name":"self"},{"name":"zwptabletpadringv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",55,null],[11,"get_user_data","","",55,null],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"source"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"bool"}}],[11,"from_raw","","",44,{"inputs":[{"name":"u32"}],"output":{"generics":["source"],"name":"option"}}],[11,"to_raw","","",44,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_feedback","","set compositor feedback",55,{"inputs":[{"name":"self"},{"name":"string"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the ring object",55,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"source","wayland_protocols::unstable::tablet::client::zwp_tablet_pad_strip_v2","strip event source",47,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadstripv2"},{"name":"source"}],"output":null}],[11,"position","","position changed",47,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadstripv2"},{"name":"u32"}],"output":null}],[11,"stop","","interaction stopped",47,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadstripv2"}],"output":null}],[11,"frame","","end of a strip event sequence",47,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadstripv2"},{"name":"u32"}],"output":null}],[11,"ptr","","",56,null],[11,"from_ptr_new","","",56,null],[11,"from_ptr_initialized","","",56,null],[11,"interface_ptr","","",56,null],[11,"interface_name","","",56,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",56,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",56,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",56,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",56,{"inputs":[{"name":"self"},{"name":"zwptabletpadstripv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",56,null],[11,"get_user_data","","",56,null],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"source"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"bool"}}],[11,"from_raw","","",46,{"inputs":[{"name":"u32"}],"output":{"generics":["source"],"name":"option"}}],[11,"to_raw","","",46,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_feedback","","set compositor feedback",56,{"inputs":[{"name":"self"},{"name":"string"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the strip object",56,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"buttons","wayland_protocols::unstable::tablet::client::zwp_tablet_pad_group_v2","buttons announced",48,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"ring","","ring announced",48,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"zwptabletpadringv2"}],"output":null}],[11,"strip","","strip announced",48,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"zwptabletpadstripv2"}],"output":null}],[11,"modes","","mode-switch ability announced",48,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"u32"}],"output":null}],[11,"done","","tablet group description events sequence complete",48,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"}],"output":null}],[11,"mode_switch","","mode switch event",48,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"ptr","","",57,null],[11,"from_ptr_new","","",57,null],[11,"from_ptr_initialized","","",57,null],[11,"interface_ptr","","",57,null],[11,"interface_name","","",57,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",57,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",57,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",57,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",57,{"inputs":[{"name":"self"},{"name":"zwptabletpadgroupv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",57,null],[11,"get_user_data","","",57,null],[11,"destroy","","destroy the pad object",57,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"group","wayland_protocols::unstable::tablet::client::zwp_tablet_pad_v2","group announced",50,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"zwptabletpadgroupv2"}],"output":null}],[11,"path","","path to the device",50,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"string"}],"output":null}],[11,"buttons","","buttons announced",50,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"u32"}],"output":null}],[11,"done","","pad description event sequence complete",50,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"}],"output":null}],[11,"button","","physical button state",50,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":null}],[11,"enter","","enter event",50,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"u32"},{"name":"zwptabletv2"},{"name":"wlsurface"}],"output":null}],[11,"leave","","enter event",50,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"u32"},{"name":"wlsurface"}],"output":null}],[11,"removed","","pad removed event",50,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"}],"output":null}],[11,"ptr","","",58,null],[11,"from_ptr_new","","",58,null],[11,"from_ptr_initialized","","",58,null],[11,"interface_ptr","","",58,null],[11,"interface_name","","",58,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",58,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",58,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",58,{"inputs":[{"name":"self"},{"name":"zwptabletpadv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",58,null],[11,"get_user_data","","",58,null],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",49,{"inputs":[{"name":"u32"}],"output":{"generics":["buttonstate"],"name":"option"}}],[11,"to_raw","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_feedback","","set compositor feedback",58,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the pad object",58,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[0,"text_input","wayland_protocols::unstable","",null,null],[0,"client","wayland_protocols::unstable::text_input","",null,null],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::client","text input",null,null],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::client::zwp_text_input_v1","",null,null],[4,"ContentHint","","content hint",null,null],[13,"None","","",59,null],[13,"Default","","",59,null],[13,"Password","","",59,null],[13,"AutoCompletion","","",59,null],[13,"AutoCorrection","","",59,null],[13,"AutoCapitalization","","",59,null],[13,"Lowercase","","",59,null],[13,"Uppercase","","",59,null],[13,"Titlecase","","",59,null],[13,"HiddenText","","",59,null],[13,"SensitiveData","","",59,null],[13,"Latin","","",59,null],[13,"Multiline","","",59,null],[4,"ContentPurpose","","content purpose",null,null],[13,"Normal","","",60,null],[13,"Alpha","","",60,null],[13,"Digits","","",60,null],[13,"Number","","",60,null],[13,"Phone","","",60,null],[13,"Url","","",60,null],[13,"Email","","",60,null],[13,"Name","","",60,null],[13,"Password","","",60,null],[13,"Date","","",60,null],[13,"Time","","",60,null],[13,"Datetime","","",60,null],[13,"Terminal","","",60,null],[4,"PreeditStyle","","",null,null],[13,"Default","","",61,null],[13,"None","","",61,null],[13,"Active","","",61,null],[13,"Inactive","","",61,null],[13,"Highlight","","",61,null],[13,"Underline","","",61,null],[13,"Selection","","",61,null],[13,"Incorrect","","",61,null],[4,"TextDirection","","",null,null],[13,"Auto","","",62,null],[13,"Ltr","","",62,null],[13,"Rtl","","",62,null],[8,"Handler","","",null,null],[11,"enter","","enter event",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"wlsurface"}],"output":null}],[11,"leave","","leave event",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"}],"output":null}],[11,"modifiers_map","","modifiers map",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"input_panel_state","","state of the input panel",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"}],"output":null}],[11,"preedit_string","","pre-edit",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"string"},{"name":"string"}],"output":null}],[11,"preedit_styling","","pre-edit styling",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"preedit_cursor","","pre-edit cursor",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"i32"}],"output":null}],[11,"commit_string","","commit",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"string"}],"output":null}],[11,"cursor_position","","set cursor to new position",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"delete_surrounding_text","","delete surrounding text",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"i32"},{"name":"u32"}],"output":null}],[11,"keysym","","keysym",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"language","","language",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"string"}],"output":null}],[11,"text_direction","","text direction",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::client","text input manager",null,null],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::client::zwp_text_input_manager_v1","",null,null],[11,"enter","wayland_protocols::unstable::text_input::client::zwp_text_input_v1","enter event",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"wlsurface"}],"output":null}],[11,"leave","","leave event",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"}],"output":null}],[11,"modifiers_map","","modifiers map",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"input_panel_state","","state of the input panel",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"}],"output":null}],[11,"preedit_string","","pre-edit",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"string"},{"name":"string"}],"output":null}],[11,"preedit_styling","","pre-edit styling",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"preedit_cursor","","pre-edit cursor",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"i32"}],"output":null}],[11,"commit_string","","commit",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"string"}],"output":null}],[11,"cursor_position","","set cursor to new position",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"delete_surrounding_text","","delete surrounding text",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"i32"},{"name":"u32"}],"output":null}],[11,"keysym","","keysym",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"language","","language",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"string"}],"output":null}],[11,"text_direction","","text direction",63,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"ptr","","",64,null],[11,"from_ptr_new","","",64,null],[11,"from_ptr_initialized","","",64,null],[11,"interface_ptr","","",64,null],[11,"interface_name","","",64,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",64,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",64,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",64,{"inputs":[{"name":"self"},{"name":"zwptextinputv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",64,null],[11,"get_user_data","","",64,null],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"contenthint"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"contenthint"}],"output":{"name":"bool"}}],[11,"from_raw","","",59,{"inputs":[{"name":"u32"}],"output":{"generics":["contenthint"],"name":"option"}}],[11,"to_raw","","",59,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"contentpurpose"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"contentpurpose"}],"output":{"name":"bool"}}],[11,"from_raw","","",60,{"inputs":[{"name":"u32"}],"output":{"generics":["contentpurpose"],"name":"option"}}],[11,"to_raw","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"preeditstyle"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"preeditstyle"}],"output":{"name":"bool"}}],[11,"from_raw","","",61,{"inputs":[{"name":"u32"}],"output":{"generics":["preeditstyle"],"name":"option"}}],[11,"to_raw","","",61,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"textdirection"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"textdirection"}],"output":{"name":"bool"}}],[11,"from_raw","","",62,{"inputs":[{"name":"u32"}],"output":{"generics":["textdirection"],"name":"option"}}],[11,"to_raw","","",62,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"activate","","request activation",64,null],[11,"deactivate","","request deactivation",64,null],[11,"show_input_panel","","show input panels",64,null],[11,"hide_input_panel","","hide input panels",64,null],[11,"reset","","reset",64,null],[11,"set_surrounding_text","","sets the surrounding text",64,null],[11,"set_content_type","","set content purpose and hint",64,null],[11,"set_cursor_rectangle","","",64,null],[11,"set_preferred_language","","sets preferred language",64,null],[11,"commit_state","","",64,null],[11,"invoke_action","","",64,null],[11,"ptr","wayland_protocols::unstable::text_input::client::zwp_text_input_manager_v1","",65,null],[11,"from_ptr_new","","",65,null],[11,"from_ptr_initialized","","",65,null],[11,"interface_ptr","","",65,null],[11,"interface_name","","",65,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",65,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",65,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",65,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",65,{"inputs":[{"name":"self"},{"name":"zwptextinputmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",65,null],[11,"get_user_data","","",65,null],[11,"create_text_input","","create text input",65,{"inputs":[{"name":"self"}],"output":{"name":"zwptextinputv1"}}],[0,"xdg_foreign","wayland_protocols::unstable","Protocol for exporting xdg surface handles",null,null],[0,"client","wayland_protocols::unstable::xdg_foreign","",null,null],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::client","interface for exporting surfaces",null,null],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::client::zxdg_exporter_v1","",null,null],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::client","interface for importing surfaces",null,null],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::client::zxdg_importer_v1","",null,null],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::client","an exported surface handle",null,null],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::client::zxdg_exported_v1","",null,null],[8,"Handler","","",null,null],[11,"handle","","the exported surface handle",66,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgexportedv1"},{"name":"string"}],"output":null}],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::client","an imported surface handle",null,null],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::client::zxdg_imported_v1","",null,null],[8,"Handler","","",null,null],[11,"destroyed","","the imported surface handle has been destroyed",67,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgimportedv1"}],"output":null}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::client::zxdg_exporter_v1","",68,null],[11,"from_ptr_new","","",68,null],[11,"from_ptr_initialized","","",68,null],[11,"interface_ptr","","",68,null],[11,"interface_name","","",68,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",68,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",68,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",68,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",68,{"inputs":[{"name":"self"},{"name":"zxdgexporterv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",68,null],[11,"get_user_data","","",68,null],[11,"destroy","","destroy the xdg_exporter object",68,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"export","","export a surface",68,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"generics":["zxdgexportedv1"],"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::client::zxdg_importer_v1","",69,null],[11,"from_ptr_new","","",69,null],[11,"from_ptr_initialized","","",69,null],[11,"interface_ptr","","",69,null],[11,"interface_name","","",69,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",69,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",69,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",69,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",69,{"inputs":[{"name":"self"},{"name":"zxdgimporterv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",69,null],[11,"get_user_data","","",69,null],[11,"destroy","","destroy the xdg_importer object",69,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"import","","import a surface",69,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["zxdgimportedv1"],"name":"requestresult"}}],[11,"handle","wayland_protocols::unstable::xdg_foreign::client::zxdg_exported_v1","the exported surface handle",66,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgexportedv1"},{"name":"string"}],"output":null}],[11,"ptr","","",70,null],[11,"from_ptr_new","","",70,null],[11,"from_ptr_initialized","","",70,null],[11,"interface_ptr","","",70,null],[11,"interface_name","","",70,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",70,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",70,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",70,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",70,{"inputs":[{"name":"self"},{"name":"zxdgexportedv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",70,null],[11,"get_user_data","","",70,null],[11,"destroy","","unexport the exported surface",70,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"destroyed","wayland_protocols::unstable::xdg_foreign::client::zxdg_imported_v1","the imported surface handle has been destroyed",67,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgimportedv1"}],"output":null}],[11,"ptr","","",71,null],[11,"from_ptr_new","","",71,null],[11,"from_ptr_initialized","","",71,null],[11,"interface_ptr","","",71,null],[11,"interface_name","","",71,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",71,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",71,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",71,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",71,{"inputs":[{"name":"self"},{"name":"zxdgimportedv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",71,null],[11,"get_user_data","","",71,null],[11,"destroy","","destroy the xdg_imported object",71,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_parent_of","","set as the parent of some surface",71,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[0,"xdg_shell","wayland_protocols::unstable","",null,null],[0,"client","wayland_protocols::unstable::xdg_shell","",null,null],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::client","create desktop-style surfaces",null,null],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::client::zxdg_shell_v6","",null,null],[4,"Error","","",null,null],[13,"Role","","",72,null],[13,"DefunctSurfaces","","",72,null],[13,"NotTheTopmostPopup","","",72,null],[13,"InvalidPopupParent","","",72,null],[13,"InvalidSurfaceState","","",72,null],[13,"InvalidPositioner","","",72,null],[8,"Handler","","",null,null],[11,"ping","","check if the client is alive",73,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgshellv6"},{"name":"u32"}],"output":null}],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::client","child surface positioner",null,null],[3,"ZxdgPositionerV6","wayland_protocols::unstable::xdg_shell::client::zxdg_positioner_v6","",null,null],[3,"Anchor","","",null,null],[3,"Gravity","","",null,null],[3,"ConstraintAdjustment","","constraint adjustments",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","",74,null],[17,"AnchorNone","","",null,null],[17,"AnchorTop","","",null,null],[17,"AnchorBottom","","",null,null],[17,"AnchorLeft","","",null,null],[17,"AnchorRight","","",null,null],[17,"GravityNone","","",null,null],[17,"GravityTop","","",null,null],[17,"GravityBottom","","",null,null],[17,"GravityLeft","","",null,null],[17,"GravityRight","","",null,null],[17,"ConstraintAdjustmentNone","","don't move the child surface when constrained",null,null],[17,"ConstraintAdjustmentSlideX","","move along the x axis until unconstrained",null,null],[17,"ConstraintAdjustmentSlideY","","move along the y axis until unconstrained",null,null],[17,"ConstraintAdjustmentFlipX","","invert the anchor and gravity on the x axis",null,null],[17,"ConstraintAdjustmentFlipY","","invert the anchor and gravity on the y axis",null,null],[17,"ConstraintAdjustmentResizeX","","horizontally resize the surface",null,null],[17,"ConstraintAdjustmentResizeY","","vertically resize the surface",null,null],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::client","desktop user interface surface base interface",null,null],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::client::zxdg_surface_v6","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",75,null],[13,"AlreadyConstructed","","",75,null],[13,"UnconfiguredBuffer","","",75,null],[8,"Handler","","",null,null],[11,"configure","","suggest a surface change",76,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgsurfacev6"},{"name":"u32"}],"output":null}],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::client","toplevel surface",null,null],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::client::zxdg_toplevel_v6","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",77,null],[13,"Top","","",77,null],[13,"Bottom","","",77,null],[13,"Left","","",77,null],[13,"TopLeft","","",77,null],[13,"BottomLeft","","",77,null],[13,"Right","","",77,null],[13,"TopRight","","",77,null],[13,"BottomRight","","",77,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",78,null],[13,"Fullscreen","","the surface is fullscreen",78,null],[13,"Resizing","","the surface is being resized",78,null],[13,"Activated","","the surface is now activated",78,null],[8,"Handler","","",null,null],[11,"configure","","suggest a surface change",79,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgtoplevelv6"},{"name":"i32"},{"name":"i32"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"close","","surface wants to be closed",79,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgtoplevelv6"}],"output":null}],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::client","short-lived, popup surfaces for menus",null,null],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::client::zxdg_popup_v6","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","",80,null],[8,"Handler","","",null,null],[11,"configure","","configure the popup surface",81,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgpopupv6"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"popup_done","","popup interaction is done",81,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgpopupv6"}],"output":null}],[11,"ping","wayland_protocols::unstable::xdg_shell::client::zxdg_shell_v6","check if the client is alive",73,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgshellv6"},{"name":"u32"}],"output":null}],[11,"ptr","","",82,null],[11,"from_ptr_new","","",82,null],[11,"from_ptr_initialized","","",82,null],[11,"interface_ptr","","",82,null],[11,"interface_name","","",82,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",82,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",82,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",82,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",82,{"inputs":[{"name":"self"},{"name":"zxdgshellv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",82,null],[11,"get_user_data","","",82,null],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",72,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",72,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","destroy xdg_shell",82,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"create_positioner","","create a positioner object",82,{"inputs":[{"name":"self"}],"output":{"generics":["zxdgpositionerv6"],"name":"requestresult"}}],[11,"get_xdg_surface","","create a shell surface from a surface",82,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"generics":["zxdgsurfacev6"],"name":"requestresult"}}],[11,"pong","","respond to a ping event",82,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_shell::client::zxdg_positioner_v6","",83,null],[11,"from_ptr_new","","",83,null],[11,"from_ptr_initialized","","",83,null],[11,"interface_ptr","","",83,null],[11,"interface_name","","",83,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",83,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",83,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",83,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",83,{"inputs":[{"name":"self"},{"name":"zxdgpositionerv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",83,null],[11,"get_user_data","","",83,null],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",74,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",74,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",74,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"anchor"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"le","","",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"gt","","",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"ge","","",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"cmp","","",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"ordering"}}],[11,"hash","","",84,null],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",84,{"inputs":[],"output":{"name":"anchor"}}],[11,"all","","Returns the set containing all flags.",84,{"inputs":[],"output":{"name":"anchor"}}],[11,"bits","","Returns the raw value of the flags currently stored.",84,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",84,{"inputs":[{"name":"u32"}],"output":{"generics":["anchor"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",84,{"inputs":[{"name":"u32"}],"output":{"name":"anchor"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",84,{"inputs":[{"name":"self"},{"name":"anchor"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitor_assign","","Adds the set of flags.",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitxor_assign","","Toggles the set of flags.",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"sub_assign","","Disables all flags enabled in the set.",84,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",84,{"inputs":[{"name":"self"}],"output":{"name":"anchor"}}],[11,"extend","","",84,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",84,{"inputs":[{"name":"t"}],"output":{"name":"anchor"}}],[11,"from_raw","","",84,{"inputs":[{"name":"u32"}],"output":{"generics":["anchor"],"name":"option"}}],[11,"to_raw","","",84,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"le","","",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"gt","","",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"ge","","",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"cmp","","",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"ordering"}}],[11,"hash","","",85,null],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",85,{"inputs":[],"output":{"name":"gravity"}}],[11,"all","","Returns the set containing all flags.",85,{"inputs":[],"output":{"name":"gravity"}}],[11,"bits","","Returns the raw value of the flags currently stored.",85,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",85,{"inputs":[{"name":"u32"}],"output":{"generics":["gravity"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",85,{"inputs":[{"name":"u32"}],"output":{"name":"gravity"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",85,{"inputs":[{"name":"self"},{"name":"gravity"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitor_assign","","Adds the set of flags.",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitxor_assign","","Toggles the set of flags.",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"sub_assign","","Disables all flags enabled in the set.",85,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",85,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"extend","","",85,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",85,{"inputs":[{"name":"t"}],"output":{"name":"gravity"}}],[11,"from_raw","","",85,{"inputs":[{"name":"u32"}],"output":{"generics":["gravity"],"name":"option"}}],[11,"to_raw","","",85,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"partial_cmp","","",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"le","","",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"gt","","",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ge","","",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"cmp","","",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"ordering"}}],[11,"hash","","",86,null],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",86,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"all","","Returns the set containing all flags.",86,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"bits","","Returns the raw value of the flags currently stored.",86,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",86,{"inputs":[{"name":"u32"}],"output":{"generics":["constraintadjustment"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",86,{"inputs":[{"name":"u32"}],"output":{"name":"constraintadjustment"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitor_assign","","Adds the set of flags.",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitxor_assign","","Toggles the set of flags.",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"sub_assign","","Disables all flags enabled in the set.",86,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",86,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"extend","","",86,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",86,{"inputs":[{"name":"t"}],"output":{"name":"constraintadjustment"}}],[11,"from_raw","","",86,{"inputs":[{"name":"u32"}],"output":{"generics":["constraintadjustment"],"name":"option"}}],[11,"to_raw","","",86,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","destroy the xdg_positioner object",83,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_size","","set the size of the to-be positioned rectangle",83,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"set_anchor_rect","","set the anchor rectangle within the parent surface",83,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"set_anchor","","set anchor rectangle anchor edges",83,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"requestresult"}}],[11,"set_gravity","","set child surface gravity",83,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"requestresult"}}],[11,"set_constraint_adjustment","","set the adjustment to be done when constrained",83,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"set_offset","","set surface position offset",83,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"configure","wayland_protocols::unstable::xdg_shell::client::zxdg_surface_v6","suggest a surface change",76,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgsurfacev6"},{"name":"u32"}],"output":null}],[11,"ptr","","",87,null],[11,"from_ptr_new","","",87,null],[11,"from_ptr_initialized","","",87,null],[11,"interface_ptr","","",87,null],[11,"interface_name","","",87,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",87,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",87,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",87,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",87,{"inputs":[{"name":"self"},{"name":"zxdgsurfacev6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",87,null],[11,"get_user_data","","",87,null],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",75,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",75,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",75,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","destroy the xdg_surface",87,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_toplevel","","assign the xdg_toplevel surface role",87,{"inputs":[{"name":"self"}],"output":{"generics":["zxdgtoplevelv6"],"name":"requestresult"}}],[11,"get_popup","","assign the xdg_popup surface role",87,{"inputs":[{"name":"self"},{"name":"zxdgsurfacev6"},{"name":"zxdgpositionerv6"}],"output":{"generics":["zxdgpopupv6"],"name":"requestresult"}}],[11,"set_window_geometry","","set the new window geometry",87,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"ack_configure","","ack a configure event",87,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"configure","wayland_protocols::unstable::xdg_shell::client::zxdg_toplevel_v6","suggest a surface change",79,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgtoplevelv6"},{"name":"i32"},{"name":"i32"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"close","","surface wants to be closed",79,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgtoplevelv6"}],"output":null}],[11,"ptr","","",88,null],[11,"from_ptr_new","","",88,null],[11,"from_ptr_initialized","","",88,null],[11,"interface_ptr","","",88,null],[11,"interface_name","","",88,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",88,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",88,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",88,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",88,{"inputs":[{"name":"self"},{"name":"zxdgtoplevelv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",88,null],[11,"get_user_data","","",88,null],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"resizeedge"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",77,{"inputs":[{"name":"self"},{"name":"resizeedge"}],"output":{"name":"bool"}}],[11,"from_raw","","",77,{"inputs":[{"name":"u32"}],"output":{"generics":["resizeedge"],"name":"option"}}],[11,"to_raw","","",77,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"state"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",78,{"inputs":[{"name":"self"},{"name":"state"}],"output":{"name":"bool"}}],[11,"from_raw","","",78,{"inputs":[{"name":"u32"}],"output":{"generics":["state"],"name":"option"}}],[11,"to_raw","","",78,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","destroy the xdg_toplevel",88,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_parent","","set the parent of this surface",88,{"inputs":[{"name":"self"},{"generics":["zxdgtoplevelv6"],"name":"option"}],"output":{"name":"requestresult"}}],[11,"set_title","","set surface title",88,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"set_app_id","","set application ID",88,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"show_window_menu","","show the window menu",88,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"_move","","start an interactive move",88,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"resize","","start an interactive resize",88,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"set_max_size","","set the maximum size",88,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"set_min_size","","set the minimum size",88,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"set_maximized","","maximize the window",88,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"unset_maximized","","unmaximize the window",88,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_fullscreen","","set the window as fullscreen on a monitor",88,{"inputs":[{"name":"self"},{"generics":["wloutput"],"name":"option"}],"output":{"name":"requestresult"}}],[11,"unset_fullscreen","","",88,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_minimized","","set the window as minimized",88,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"configure","wayland_protocols::unstable::xdg_shell::client::zxdg_popup_v6","configure the popup surface",81,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgpopupv6"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"popup_done","","popup interaction is done",81,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgpopupv6"}],"output":null}],[11,"ptr","","",89,null],[11,"from_ptr_new","","",89,null],[11,"from_ptr_initialized","","",89,null],[11,"interface_ptr","","",89,null],[11,"interface_name","","",89,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",89,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",89,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",89,{"inputs":[{"name":"self"},{"name":"zxdgpopupv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",89,null],[11,"get_user_data","","",89,null],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",80,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",80,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","remove xdg_popup interface",89,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"grab","","make the popup take an explicit grab",89,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"}],"output":{"name":"requestresult"}}],[0,"presentation_time","wayland_protocols","Presentation time protocol",null,null],[0,"client","wayland_protocols::presentation_time","",null,null],[0,"wp_presentation","wayland_protocols::presentation_time::client","timed presentation related wl_surface requests",null,null],[3,"WpPresentation","wayland_protocols::presentation_time::client::wp_presentation","",null,null],[4,"Error","","fatal presentation errors",null,null],[13,"InvalidTimestamp","","",90,null],[13,"InvalidFlag","","",90,null],[8,"Handler","","",null,null],[11,"clock_id","","clock ID for timestamps",91,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wppresentation"},{"name":"u32"}],"output":null}],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::client","presentation time feedback event",null,null],[3,"WpPresentationFeedback","wayland_protocols::presentation_time::client::wp_presentation_feedback","",null,null],[4,"Kind","","bitmask of flags in presented event",null,null],[13,"Vsync","","",92,null],[13,"HwClock","","",92,null],[13,"HwCompletion","","",92,null],[13,"ZeroCopy","","",92,null],[8,"Handler","","",null,null],[11,"sync_output","","presentation synchronized to this output",93,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wppresentationfeedback"},{"name":"wloutput"}],"output":null}],[11,"presented","","the content update was displayed",93,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wppresentationfeedback"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"discarded","","the content update was not displayed",93,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wppresentationfeedback"}],"output":null}],[0,"viewporter","wayland_protocols","Viewporter protocol",null,null],[0,"client","wayland_protocols::viewporter","",null,null],[0,"wp_viewporter","wayland_protocols::viewporter::client","surface cropping and scaling",null,null],[3,"WpViewporter","wayland_protocols::viewporter::client::wp_viewporter","",null,null],[4,"Error","","",null,null],[13,"ViewportExists","","",94,null],[0,"wp_viewport","wayland_protocols::viewporter::client","crop and scale interface to a wl_surface",null,null],[3,"WpViewport","wayland_protocols::viewporter::client::wp_viewport","",null,null],[4,"Error","","",null,null],[13,"BadValue","","",95,null],[13,"BadSize","","",95,null],[13,"OutOfBuffer","","",95,null],[13,"NoSurface","","",95,null],[11,"clock_id","wayland_protocols::presentation_time::client::wp_presentation","clock ID for timestamps",91,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wppresentation"},{"name":"u32"}],"output":null}],[11,"ptr","","",96,null],[11,"from_ptr_new","","",96,null],[11,"from_ptr_initialized","","",96,null],[11,"interface_ptr","","",96,null],[11,"interface_name","","",96,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",96,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",96,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",96,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",96,{"inputs":[{"name":"self"},{"name":"wppresentation"}],"output":{"name":"bool"}}],[11,"set_user_data","","",96,null],[11,"get_user_data","","",96,null],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",90,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",90,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",90,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","unbind from the presentation interface",96,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"feedback","","request presentation feedback information",96,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"generics":["wppresentationfeedback"],"name":"requestresult"}}],[11,"sync_output","wayland_protocols::presentation_time::client::wp_presentation_feedback","presentation synchronized to this output",93,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wppresentationfeedback"},{"name":"wloutput"}],"output":null}],[11,"presented","","the content update was displayed",93,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wppresentationfeedback"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"discarded","","the content update was not displayed",93,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wppresentationfeedback"}],"output":null}],[11,"ptr","","",97,null],[11,"from_ptr_new","","",97,null],[11,"from_ptr_initialized","","",97,null],[11,"interface_ptr","","",97,null],[11,"interface_name","","",97,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",97,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",97,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",97,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",97,{"inputs":[{"name":"self"},{"name":"wppresentationfeedback"}],"output":{"name":"bool"}}],[11,"set_user_data","","",97,null],[11,"get_user_data","","",97,null],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"kind"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",92,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"from_raw","","",92,{"inputs":[{"name":"u32"}],"output":{"generics":["kind"],"name":"option"}}],[11,"to_raw","","",92,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"ptr","wayland_protocols::viewporter::client::wp_viewporter","",98,null],[11,"from_ptr_new","","",98,null],[11,"from_ptr_initialized","","",98,null],[11,"interface_ptr","","",98,null],[11,"interface_name","","",98,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",98,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",98,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",98,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",98,{"inputs":[{"name":"self"},{"name":"wpviewporter"}],"output":{"name":"bool"}}],[11,"set_user_data","","",98,null],[11,"get_user_data","","",98,null],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",94,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",94,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",94,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","unbind from the cropping and scaling interface",98,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_viewport","","extend surface interface for crop and scale",98,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"generics":["wpviewport"],"name":"requestresult"}}],[11,"ptr","wayland_protocols::viewporter::client::wp_viewport","",99,null],[11,"from_ptr_new","","",99,null],[11,"from_ptr_initialized","","",99,null],[11,"interface_ptr","","",99,null],[11,"interface_name","","",99,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",99,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",99,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",99,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",99,{"inputs":[{"name":"self"},{"name":"wpviewport"}],"output":{"name":"bool"}}],[11,"set_user_data","","",99,null],[11,"get_user_data","","",99,null],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",95,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",95,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",95,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","remove scaling and cropping from the surface",99,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_source","","set the source rectangle for cropping",99,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"requestresult"}}],[11,"set_destination","","set the surface size for scaling",99,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}]],"paths":[[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[8,"Handler"],[8,"Handler"],[3,"ZwpFullscreenShellV1"],[3,"ZwpFullscreenShellModeFeedbackV1"],[3,"ZwpIdleInhibitManagerV1"],[3,"ZwpIdleInhibitorV1"],[8,"Handler"],[8,"Handler"],[4,"Position"],[3,"ZwpInputMethodContextV1"],[3,"ZwpInputMethodV1"],[3,"ZwpInputPanelV1"],[3,"ZwpInputPanelSurfaceV1"],[8,"Handler"],[4,"Error"],[4,"Flags"],[8,"Handler"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[4,"Error"],[4,"Lifetime"],[8,"Handler"],[8,"Handler"],[3,"ZwpPointerConstraintsV1"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[8,"Handler"],[8,"Handler"],[3,"ZwpPointerGesturesV1"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[8,"Handler"],[3,"ZwpRelativePointerManagerV1"],[3,"ZwpRelativePointerV1"],[8,"Handler"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[8,"Handler"],[8,"Handler"],[4,"Source"],[8,"Handler"],[4,"Source"],[8,"Handler"],[8,"Handler"],[4,"ButtonState"],[8,"Handler"],[3,"ZwpTabletManagerV2"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[8,"Handler"],[3,"ZwpTextInputV1"],[3,"ZwpTextInputManagerV1"],[8,"Handler"],[8,"Handler"],[3,"ZxdgExporterV1"],[3,"ZxdgImporterV1"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[4,"Error"],[8,"Handler"],[4,"Error"],[4,"Error"],[8,"Handler"],[4,"ResizeEdge"],[4,"State"],[8,"Handler"],[4,"Error"],[8,"Handler"],[3,"ZxdgShellV6"],[3,"ZxdgPositionerV6"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[4,"Error"],[8,"Handler"],[4,"Kind"],[8,"Handler"],[4,"Error"],[4,"Error"],[3,"WpPresentation"],[3,"WpPresentationFeedback"],[3,"WpViewporter"],[3,"WpViewport"]]};
searchIndex["wayland_sys"] = {"doc":"FFI bindings to the wayland system libraries.","items":[[0,"common","wayland_sys","Various types and functions that are used by both the client and the server libraries.",null,null],[3,"wl_message","wayland_sys::common","",null,null],[12,"name","","",0,null],[12,"signature","","",0,null],[12,"types","","",0,null],[3,"wl_interface","","",null,null],[12,"name","","",1,null],[12,"version","","",1,null],[12,"request_count","","",1,null],[12,"requests","","",1,null],[12,"event_count","","",1,null],[12,"events","","",1,null],[3,"wl_list","","",null,null],[12,"prev","","",2,null],[12,"next","","",2,null],[3,"wl_array","","",null,null],[12,"size","","",3,null],[12,"alloc","","",3,null],[12,"data","","",3,null],[3,"wl_argument","","",null,null],[5,"wl_fixed_to_double","","",null,{"inputs":[{"name":"wl_fixed_t"}],"output":{"name":"f64"}}],[5,"wl_fixed_from_double","","",null,{"inputs":[{"name":"f64"}],"output":{"name":"wl_fixed_t"}}],[5,"wl_fixed_to_int","","",null,{"inputs":[{"name":"wl_fixed_t"}],"output":{"name":"i32"}}],[5,"wl_fixed_from_int","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"wl_fixed_t"}}],[6,"wl_fixed_t","","",null,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"client","wayland_sys","Bindings to the client library `libwayland-client.so`",null,null],[3,"WaylandClient","wayland_sys::client","",null,null],[12,"wl_display_connect_to_fd","","",4,null],[12,"wl_display_connect","","",4,null],[12,"wl_display_disconnect","","",4,null],[12,"wl_display_get_fd","","",4,null],[12,"wl_display_roundtrip","","",4,null],[12,"wl_display_read_events","","",4,null],[12,"wl_display_prepare_read","","",4,null],[12,"wl_display_cancel_read","","",4,null],[12,"wl_display_dispatch","","",4,null],[12,"wl_display_dispatch_pending","","",4,null],[12,"wl_display_get_error","","",4,null],[12,"wl_display_get_protocol_error","","",4,null],[12,"wl_display_flush","","",4,null],[12,"wl_event_queue_destroy","","",4,null],[12,"wl_display_create_queue","","",4,null],[12,"wl_display_roundtrip_queue","","",4,null],[12,"wl_display_prepare_read_queue","","",4,null],[12,"wl_display_dispatch_queue","","",4,null],[12,"wl_display_dispatch_queue_pending","","",4,null],[12,"wl_proxy_create","","",4,null],[12,"wl_proxy_destroy","","",4,null],[12,"wl_proxy_add_listener","","",4,null],[12,"wl_proxy_get_listener","","",4,null],[12,"wl_proxy_add_dispatcher","","",4,null],[12,"wl_proxy_marshal_array_constructor","","",4,null],[12,"wl_proxy_marshal_array_constructor_versioned","","",4,null],[12,"wl_proxy_marshal_array","","",4,null],[12,"wl_proxy_set_user_data","","",4,null],[12,"wl_proxy_get_user_data","","",4,null],[12,"wl_proxy_get_id","","",4,null],[12,"wl_proxy_get_class","","",4,null],[12,"wl_proxy_set_queue","","",4,null],[12,"wl_proxy_get_version","","",4,null],[12,"wl_log_set_handler_client","","",4,null],[12,"wl_list_init","","",4,null],[12,"wl_list_insert","","",4,null],[12,"wl_list_remove","","",4,null],[12,"wl_list_length","","",4,null],[12,"wl_list_empty","","",4,null],[12,"wl_list_insert_list","","",4,null],[12,"wl_array_init","","",4,null],[12,"wl_array_release","","",4,null],[12,"wl_array_add","","",4,null],[12,"wl_array_copy","","",4,null],[12,"wl_proxy_marshal_constructor","","",4,null],[12,"wl_proxy_marshal_constructor_versioned","","",4,null],[12,"wl_proxy_marshal","","",4,null],[3,"WAYLAND_CLIENT_OPTION","","",null,null],[3,"WAYLAND_CLIENT_HANDLE","","",null,null],[4,"wl_proxy","","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_queue","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",4,{"inputs":[{"name":"str"}],"output":{"generics":["waylandclient","dlerror"],"name":"result"}}],[11,"deref","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"initialize","","",5,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"waylandclient"}}],[11,"initialize","","",6,{"inputs":[{"name":"self"}],"output":null}],[0,"egl","wayland_sys","Bindings to the EGL library `libwayland-egl.so`",null,null],[3,"WaylandEgl","wayland_sys::egl","",null,null],[12,"wl_egl_window_create","","",7,null],[12,"wl_egl_window_destroy","","",7,null],[12,"wl_egl_window_resize","","",7,null],[12,"wl_egl_window_get_attached_size","","",7,null],[3,"WAYLAND_EGL_OPTION","","",null,null],[3,"WAYLAND_EGL_HANDLE","","",null,null],[4,"wl_egl_window","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",7,{"inputs":[{"name":"str"}],"output":{"generics":["waylandegl","dlerror"],"name":"result"}}],[11,"deref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"initialize","","",8,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",9,{"inputs":[{"name":"self"}],"output":{"name":"waylandegl"}}],[11,"initialize","","",9,{"inputs":[{"name":"self"}],"output":null}],[0,"cursor","wayland_sys","Bindings to the `wayland-cursor.so` library",null,null],[3,"wl_cursor_image","wayland_sys::cursor","",null,null],[12,"width","","actual width",10,null],[12,"height","","actual height",10,null],[12,"hotspot_x","","hot spot x (must be inside image)",10,null],[12,"hotspot_y","","hot spot y (must be inside image)",10,null],[12,"delay","","animation delay to next frame",10,null],[3,"wl_cursor","","",null,null],[12,"image_count","","",11,null],[12,"images","","",11,null],[12,"name","","",11,null],[3,"WaylandCursor","","",null,null],[12,"wl_cursor_theme_load","","",12,null],[12,"wl_cursor_theme_destroy","","",12,null],[12,"wl_cursor_theme_get_cursor","","",12,null],[12,"wl_cursor_image_get_buffer","","",12,null],[12,"wl_cursor_frame","","",12,null],[12,"wl_cursor_frame_and_duration","","",12,null],[3,"WAYLAND_CURSOR_OPTION","","",null,null],[3,"WAYLAND_CURSOR_HANDLE","","",null,null],[4,"wl_cursor_theme","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",12,{"inputs":[{"name":"str"}],"output":{"generics":["waylandcursor","dlerror"],"name":"result"}}],[11,"deref","","",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"initialize","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",14,{"inputs":[{"name":"self"}],"output":{"name":"waylandcursor"}}],[11,"initialize","","",14,{"inputs":[{"name":"self"}],"output":null}],[7,"RUST_MANAGED","wayland_sys","Magic pointer for wayland objects managed by wayland-client or wayland-server",null,null],[14,"ffi_dispatch","","",null,null]],"paths":[[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[3,"WaylandClient"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"],[3,"WaylandEgl"],[3,"WAYLAND_EGL_OPTION"],[3,"WAYLAND_EGL_HANDLE"],[3,"wl_cursor_image"],[3,"wl_cursor"],[3,"WaylandCursor"],[3,"WAYLAND_CURSOR_OPTION"],[3,"WAYLAND_CURSOR_HANDLE"]]};
searchIndex["wayland_window"] = {"doc":"Wayland Window, a minimalistic decoration-drawing library for wayland applications.","items":[[3,"DecoratedSurface","wayland_window","A wrapper for a decorated surface.",null,null],[4,"Configure","","Configure data for a decorated surface handler.",null,null],[13,"Xdg","","",0,null],[13,"Wl","","",0,null],[4,"Shell","","",null,null],[13,"Xdg","","",1,null],[13,"Wl","","",1,null],[5,"subtract_borders","","Subtracts the border dimensions from the given dimensions.",null,null],[5,"add_borders","","Adds the border dimensions to the given dimensions.",null,null],[11,"resize","","Resizes the borders to given width and height.",2,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"new","","Creates a new decorated window around given surface.",2,{"inputs":[{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"wlcompositor"},{"name":"wlsubcompositor"},{"name":"wlshm"},{"name":"shell"},{"generics":["wlseat"],"name":"option"},{"name":"bool"}],"output":{"generics":["decoratedsurface"],"name":"result"}}],[11,"set_title","","Set a short title for the surface.",2,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"set_class","","Set a class for the surface.",2,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"set_decorate","","Turn on or off decoration of this surface",2,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"set_fullscreen","","Sets this surface as fullscreen (see `wl_shell_surface` for details)",2,{"inputs":[{"name":"self"},{"generics":["wloutput"],"name":"option"}],"output":null}],[11,"handler","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"init","","",2,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"usize"}],"output":null}],[11,"enter","","",2,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"wlsurface"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"leave","","",2,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"wlsurface"}],"output":null}],[11,"motion","","",2,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"button","","",2,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":null}],[11,"message","","",2,null],[11,"message","","",2,null],[11,"message","","",2,null],[11,"configure","","",2,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgtoplevelv6"},{"name":"i32"},{"name":"i32"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"close","","",2,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgtoplevelv6"}],"output":null}],[11,"configure","","",2,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgsurfacev6"},{"name":"u32"}],"output":null}],[11,"ping","","",2,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshellsurface"},{"name":"u32"}],"output":null}],[11,"configure","","",2,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshellsurface"},{"name":"resize"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"message","","",2,null],[8,"Handler","","For handling events that occur to a DecoratedSurface.",null,null],[10,"configure","","Called whenever the DecoratedSurface has been resized.",3,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"configure"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"close","","Called when the DecoratedSurface is closed.",3,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"}],"output":null}]],"paths":[[4,"Configure"],[4,"Shell"],[3,"DecoratedSurface"],[8,"Handler"]]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
searchIndex["winit"] = {"doc":"Winit allows you to build a window on as many platforms as possible.","items":[[3,"KeyboardInput","winit","",null,null],[12,"scancode","","Identifies the physical key pressed",0,null],[12,"state","","",0,null],[12,"virtual_keycode","","Identifies the semantic meaning of the key",0,null],[12,"modifiers","","Modifier keys active at the time of this input.",0,null],[3,"Touch","","Represents touch event",null,null],[12,"device_id","","",1,null],[12,"phase","","",1,null],[12,"location","","",1,null],[12,"id","","unique identifier of a finger.",1,null],[3,"ModifiersState","","Represents the current state of the keyboard modifiers",null,null],[12,"shift","","The \"shift\" key",2,null],[12,"ctrl","","The \"control\" key",2,null],[12,"alt","","The \"alt\" key",2,null],[12,"logo","","The \"logo\" key",2,null],[3,"AvailableMonitorsIter","","An iterator for the list of available monitors.",null,null],[3,"MonitorId","","Identifier for a monitor.",null,null],[3,"Window","","Represents a window.",null,null],[3,"WindowId","","Identifier of a window. Unique for each window.",null,null],[3,"DeviceId","","Identifier of an input device.",null,null],[3,"EventsLoop","","Provides a way to retreive events from the windows that were registered to it.",null,null],[3,"EventsLoopProxy","","Used to wake up the `EventsLoop` from another thread.",null,null],[3,"EventsLoopClosed","","The error that is returned when an `EventsLoopProxy` attempts to wake up an `EventsLoop` that no longer exists.",null,null],[3,"WindowBuilder","","Object that allows you to build windows.",null,null],[12,"window","","The attributes to use to create the window.",3,null],[3,"WindowAttributes","","Attributes to use when creating a window.",null,null],[12,"dimensions","","The dimensions of the window. If this is `None`, some platform-specific dimensions will be used.",4,null],[12,"min_dimensions","","The minimum dimensions a window can be, If this is `None`, the window will have no minimum dimensions (aside from reserved).",4,null],[12,"max_dimensions","","The maximum dimensions a window can be, If this is `None`, the maximum will have no maximum or will be set to the primary monitor's dimensions by the platform.",4,null],[12,"monitor","","If `Some`, the window will be in fullscreen mode with the given monitor.",4,null],[12,"title","","The title of the window in the title bar.",4,null],[12,"visible","","Whether the window should be immediately visible upon creation.",4,null],[12,"transparent","","Whether the the window should be transparent. If this is true, writing colors with alpha values different than `1.0` will produce a transparent window.",4,null],[12,"decorations","","Whether the window should have borders and bars.",4,null],[12,"multitouch","","[iOS only] Enable multitouch, see [UIView#multipleTouchEnabled] (https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIView_Class/#//apple_ref/occ/instp/UIView/multipleTouchEnabled)",4,null],[4,"Event","","",null,null],[13,"WindowEvent","","",5,null],[12,"window_id","winit::Event","",5,null],[12,"event","","",5,null],[13,"DeviceEvent","winit","",5,null],[12,"device_id","winit::Event","",5,null],[12,"event","","",5,null],[13,"Awakened","winit","",5,null],[4,"WindowEvent","","",null,null],[13,"Resized","","The size of the window has changed.",6,null],[13,"Moved","","The position of the window has changed.",6,null],[13,"Closed","","The window has been closed.",6,null],[13,"DroppedFile","","A file has been dropped into the window.",6,null],[13,"HoveredFile","","A file is being hovered over the window.",6,null],[13,"HoveredFileCancelled","","A file was hovered, but has exited the window.",6,null],[13,"ReceivedCharacter","","The window received a unicode character.",6,null],[13,"Focused","","The window gained or lost focus.",6,null],[13,"KeyboardInput","","An event from the keyboard has been received.",6,null],[12,"device_id","winit::WindowEvent","",6,null],[12,"input","","",6,null],[13,"MouseMoved","winit","The cursor has moved on the window.",6,null],[12,"device_id","winit::WindowEvent","",6,null],[12,"position","","",6,null],[13,"MouseEntered","winit","The cursor has entered the window.",6,null],[12,"device_id","winit::WindowEvent","",6,null],[13,"MouseLeft","winit","The cursor has left the window.",6,null],[12,"device_id","winit::WindowEvent","",6,null],[13,"MouseWheel","winit","A mouse wheel movement or touchpad scroll occurred.",6,null],[12,"device_id","winit::WindowEvent","",6,null],[12,"delta","","",6,null],[12,"phase","","",6,null],[13,"MouseInput","winit","An mouse button press has been received.",6,null],[12,"device_id","winit::WindowEvent","",6,null],[12,"state","","",6,null],[12,"button","","",6,null],[13,"TouchpadPressure","winit","Touchpad pressure event.",6,null],[12,"device_id","winit::WindowEvent","",6,null],[12,"pressure","","",6,null],[12,"stage","","",6,null],[13,"AxisMotion","winit","Motion on some analog axis not otherwise handled. May overlap with mouse motion.",6,null],[12,"device_id","winit::WindowEvent","",6,null],[12,"axis","","",6,null],[12,"value","","",6,null],[13,"Refresh","winit","The window needs to be redrawn.",6,null],[13,"Suspended","","App has been suspended or resumed.",6,null],[13,"Touch","","Touch event has been received",6,null],[4,"DeviceEvent","","Represents raw hardware events that are not associated with any particular window.",null,null],[13,"Added","","",7,null],[13,"Removed","","",7,null],[13,"Motion","","",7,null],[12,"axis","winit::DeviceEvent","",7,null],[12,"value","","",7,null],[13,"Button","winit","",7,null],[12,"button","winit::DeviceEvent","",7,null],[12,"state","","",7,null],[13,"Key","winit","",7,null],[13,"Text","","",7,null],[12,"codepoint","winit::DeviceEvent","",7,null],[4,"TouchPhase","winit","",null,null],[13,"Started","","",8,null],[13,"Moved","","",8,null],[13,"Ended","","",8,null],[13,"Cancelled","","",8,null],[4,"ElementState","","",null,null],[13,"Pressed","","",9,null],[13,"Released","","",9,null],[4,"MouseButton","","",null,null],[13,"Left","","",10,null],[13,"Right","","",10,null],[13,"Middle","","",10,null],[13,"Other","","",10,null],[4,"MouseScrollDelta","","",null,null],[13,"LineDelta","","Amount in lines or rows to scroll in the horizontal and vertical directions.",11,null],[13,"PixelDelta","","Amount in pixels to scroll in the horizontal and vertical direction.",11,null],[4,"VirtualKeyCode","","",null,null],[13,"Key1","","The '1' key over the letters.",12,null],[13,"Key2","","The '2' key over the letters.",12,null],[13,"Key3","","The '3' key over the letters.",12,null],[13,"Key4","","The '4' key over the letters.",12,null],[13,"Key5","","The '5' key over the letters.",12,null],[13,"Key6","","The '6' key over the letters.",12,null],[13,"Key7","","The '7' key over the letters.",12,null],[13,"Key8","","The '8' key over the letters.",12,null],[13,"Key9","","The '9' key over the letters.",12,null],[13,"Key0","","The '0' key over the 'O' and 'P' keys.",12,null],[13,"A","","",12,null],[13,"B","","",12,null],[13,"C","","",12,null],[13,"D","","",12,null],[13,"E","","",12,null],[13,"F","","",12,null],[13,"G","","",12,null],[13,"H","","",12,null],[13,"I","","",12,null],[13,"J","","",12,null],[13,"K","","",12,null],[13,"L","","",12,null],[13,"M","","",12,null],[13,"N","","",12,null],[13,"O","","",12,null],[13,"P","","",12,null],[13,"Q","","",12,null],[13,"R","","",12,null],[13,"S","","",12,null],[13,"T","","",12,null],[13,"U","","",12,null],[13,"V","","",12,null],[13,"W","","",12,null],[13,"X","","",12,null],[13,"Y","","",12,null],[13,"Z","","",12,null],[13,"Escape","","The Escape key, next to F1.",12,null],[13,"F1","","",12,null],[13,"F2","","",12,null],[13,"F3","","",12,null],[13,"F4","","",12,null],[13,"F5","","",12,null],[13,"F6","","",12,null],[13,"F7","","",12,null],[13,"F8","","",12,null],[13,"F9","","",12,null],[13,"F10","","",12,null],[13,"F11","","",12,null],[13,"F12","","",12,null],[13,"F13","","",12,null],[13,"F14","","",12,null],[13,"F15","","",12,null],[13,"Snapshot","","Print Screen/SysRq.",12,null],[13,"Scroll","","Scroll Lock.",12,null],[13,"Pause","","Pause/Break key, next to Scroll lock.",12,null],[13,"Insert","","`Insert`, next to Backspace.",12,null],[13,"Home","","",12,null],[13,"Delete","","",12,null],[13,"End","","",12,null],[13,"PageDown","","",12,null],[13,"PageUp","","",12,null],[13,"Left","","",12,null],[13,"Up","","",12,null],[13,"Right","","",12,null],[13,"Down","","",12,null],[13,"Back","","The Backspace key, right over Enter.",12,null],[13,"Return","","The Enter key.",12,null],[13,"Space","","The space bar.",12,null],[13,"Compose","","The \"Compose\" key on Linux.",12,null],[13,"Numlock","","",12,null],[13,"Numpad0","","",12,null],[13,"Numpad1","","",12,null],[13,"Numpad2","","",12,null],[13,"Numpad3","","",12,null],[13,"Numpad4","","",12,null],[13,"Numpad5","","",12,null],[13,"Numpad6","","",12,null],[13,"Numpad7","","",12,null],[13,"Numpad8","","",12,null],[13,"Numpad9","","",12,null],[13,"AbntC1","","",12,null],[13,"AbntC2","","",12,null],[13,"Add","","",12,null],[13,"Apostrophe","","",12,null],[13,"Apps","","",12,null],[13,"At","","",12,null],[13,"Ax","","",12,null],[13,"Backslash","","",12,null],[13,"Calculator","","",12,null],[13,"Capital","","",12,null],[13,"Colon","","",12,null],[13,"Comma","","",12,null],[13,"Convert","","",12,null],[13,"Decimal","","",12,null],[13,"Divide","","",12,null],[13,"Equals","","",12,null],[13,"Grave","","",12,null],[13,"Kana","","",12,null],[13,"Kanji","","",12,null],[13,"LAlt","","",12,null],[13,"LBracket","","",12,null],[13,"LControl","","",12,null],[13,"LMenu","","",12,null],[13,"LShift","","",12,null],[13,"LWin","","",12,null],[13,"Mail","","",12,null],[13,"MediaSelect","","",12,null],[13,"MediaStop","","",12,null],[13,"Minus","","",12,null],[13,"Multiply","","",12,null],[13,"Mute","","",12,null],[13,"MyComputer","","",12,null],[13,"NavigateForward","","",12,null],[13,"NavigateBackward","","",12,null],[13,"NextTrack","","",12,null],[13,"NoConvert","","",12,null],[13,"NumpadComma","","",12,null],[13,"NumpadEnter","","",12,null],[13,"NumpadEquals","","",12,null],[13,"OEM102","","",12,null],[13,"Period","","",12,null],[13,"PlayPause","","",12,null],[13,"Power","","",12,null],[13,"PrevTrack","","",12,null],[13,"RAlt","","",12,null],[13,"RBracket","","",12,null],[13,"RControl","","",12,null],[13,"RMenu","","",12,null],[13,"RShift","","",12,null],[13,"RWin","","",12,null],[13,"Semicolon","","",12,null],[13,"Slash","","",12,null],[13,"Sleep","","",12,null],[13,"Stop","","",12,null],[13,"Subtract","","",12,null],[13,"Sysrq","","",12,null],[13,"Tab","","",12,null],[13,"Underline","","",12,null],[13,"Unlabeled","","",12,null],[13,"VolumeDown","","",12,null],[13,"VolumeUp","","",12,null],[13,"Wake","","",12,null],[13,"WebBack","","",12,null],[13,"WebFavorites","","",12,null],[13,"WebForward","","",12,null],[13,"WebHome","","",12,null],[13,"WebRefresh","","",12,null],[13,"WebSearch","","",12,null],[13,"WebStop","","",12,null],[13,"Yen","","",12,null],[4,"NativeMonitorId","","Native platform identifier for a monitor. Different platforms use fundamentally different types to represent a monitor ID.",null,null],[13,"Numeric","","Cocoa and X11 use a numeric identifier to represent a monitor.",13,null],[13,"Name","","Win32 uses a Unicode string to represent a monitor.",13,null],[13,"Unavailable","","Other platforms (Android) don't support monitor identification.",13,null],[4,"ControlFlow","","Returned by the user callback given to the `EventsLoop::run_forever` method.",null,null],[13,"Continue","","Continue looping and waiting for events.",14,null],[13,"Break","","Break from the event loop.",14,null],[4,"CreationError","","Error that can happen while creating a window or a headless renderer.",null,null],[13,"OsError","","",15,null],[13,"NotSupported","","TODO: remove this error",15,null],[4,"MouseCursor","","",null,null],[13,"Default","","The platform-dependent default cursor.",16,null],[13,"Crosshair","","A simple crosshair.",16,null],[13,"Hand","","A hand (often used to indicate links in web browsers).",16,null],[13,"Arrow","","Self explanatory.",16,null],[13,"Move","","Indicates something is to be moved.",16,null],[13,"Text","","Indicates text that may be selected or edited.",16,null],[13,"Wait","","Program busy indicator.",16,null],[13,"Help","","Help indicator (often rendered as a \"?\")",16,null],[13,"Progress","","Progress indicator. Shows that processing is being done. But in contrast with \"Wait\" the user may still interact with the program. Often rendered as a spinning beach ball, or an arrow with a watch or hourglass.",16,null],[13,"NotAllowed","","Cursor showing that something cannot be done.",16,null],[13,"ContextMenu","","",16,null],[13,"NoneCursor","","",16,null],[13,"Cell","","",16,null],[13,"VerticalText","","",16,null],[13,"Alias","","",16,null],[13,"Copy","","",16,null],[13,"NoDrop","","",16,null],[13,"Grab","","",16,null],[13,"Grabbing","","",16,null],[13,"AllScroll","","",16,null],[13,"ZoomIn","","",16,null],[13,"ZoomOut","","",16,null],[13,"EResize","","Indicate that some edge is to be moved. For example, the 'SeResize' cursor is used when the movement starts from the south-east corner of the box.",16,null],[13,"NResize","","",16,null],[13,"NeResize","","",16,null],[13,"NwResize","","",16,null],[13,"SResize","","",16,null],[13,"SeResize","","",16,null],[13,"SwResize","","",16,null],[13,"WResize","","",16,null],[13,"EwResize","","",16,null],[13,"NsResize","","",16,null],[13,"NeswResize","","",16,null],[13,"NwseResize","","",16,null],[13,"ColResize","","",16,null],[13,"RowResize","","",16,null],[4,"CursorState","","Describes how winit handles the cursor.",null,null],[13,"Normal","","Normal cursor behavior.",17,null],[13,"Hide","","The cursor will be invisible when over the window.",17,null],[13,"Grab","","Grabs the mouse cursor. The cursor's motion will be confined to this window and the window has exclusive access to further events regarding the cursor.",17,null],[5,"get_available_monitors","","Returns the list of all available monitors.",null,{"inputs":[],"output":{"name":"availablemonitorsiter"}}],[5,"get_primary_monitor","","Returns the primary monitor of the system.",null,{"inputs":[],"output":{"name":"monitorid"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"windowevent"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"deviceevent"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"keyboardinput"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",8,null],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"touchphase"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"touchphase"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"touch"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",9,null],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"elementstate"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"elementstate"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",10,null],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"mousebutton"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"mousescrolldelta"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"mousescrolldelta"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"mousescrolldelta"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",12,null],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"virtualkeycode"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"virtualkeycode"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"modifiersstate"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"modifiersstate"}}],[11,"new","","Initializes a new `WindowBuilder` with default values.",3,{"inputs":[],"output":{"name":"windowbuilder"}}],[11,"with_dimensions","","Requests the window to be of specific dimensions.",3,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_min_dimensions","","Sets a minimum dimension size for the window",3,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_max_dimensions","","Sets a maximum dimension size for the window",3,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_title","","Requests a specific title for the window.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"windowbuilder"}}],[11,"with_fullscreen","","Requests fullscreen mode.",3,{"inputs":[{"name":"self"},{"name":"monitorid"}],"output":{"name":"windowbuilder"}}],[11,"with_visibility","","Sets whether the window will be initially hidden or visible.",3,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_transparency","","Sets whether the background of the window should be transparent.",3,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_decorations","","Sets whether the window should have a border, a title bar, etc.",3,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_multitouch","","Enables multitouch",3,{"inputs":[{"name":"self"}],"output":{"name":"windowbuilder"}}],[11,"build","","Builds the window.",3,{"inputs":[{"name":"self"},{"name":"eventsloop"}],"output":{"generics":["window","creationerror"],"name":"result"}}],[11,"new","","Creates a new Window for platforms where this is appropriate.",18,{"inputs":[{"name":"eventsloop"}],"output":{"generics":["window","creationerror"],"name":"result"}}],[11,"set_title","","Modifies the title of the window.",18,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"show","","Shows the window if it was hidden.",18,{"inputs":[{"name":"self"}],"output":null}],[11,"hide","","Hides the window if it was visible.",18,{"inputs":[{"name":"self"}],"output":null}],[11,"get_position","","Returns the position of the top-left hand corner of the window relative to the  top-left hand corner of the desktop.",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_position","","Modifies the position of the window.",18,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_inner_size","","Returns the size in points of the client area of the window.",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_inner_size_points","","Returns the size in points of the client area of the window.",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_inner_size_pixels","","Returns the size in pixels of the client area of the window.",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_outer_size","","Returns the size in pixels of the window.",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_inner_size","","Modifies the inner size of the window.",18,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"platform_display","","DEPRECATED. Gets the native platform specific display for this window. This is typically only required when integrating with other libraries that need this information.",18,null],[11,"platform_window","","DEPRECATED. Gets the native platform specific window handle. This is typically only required when integrating with other libraries that need this information.",18,null],[11,"set_cursor","","Modifies the mouse cursor of the window. Has no effect on Android.",18,{"inputs":[{"name":"self"},{"name":"mousecursor"}],"output":null}],[11,"hidpi_factor","","Returns the ratio between the backing framebuffer resolution and the window size in screen pixels. This is typically one for a normal display and two for a retina display.",18,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",18,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"set_cursor_state","","Sets how winit handles the cursor. See the documentation of `CursorState` for details.",18,{"inputs":[{"name":"self"},{"name":"cursorstate"}],"output":{"generics":["string"],"name":"result"}}],[11,"id","","",18,{"inputs":[{"name":"self"}],"output":{"name":"windowid"}}],[11,"next","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["monitorid"],"name":"option"}}],[11,"size_hint","","",19,null],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"monitorid"}}],[11,"get_name","","Returns a human-readable name of the monitor.",20,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"option"}}],[11,"get_native_identifier","","Returns the native platform identifier for this monitor.",20,{"inputs":[{"name":"self"}],"output":{"name":"nativemonitorid"}}],[11,"get_dimensions","","Returns the number of pixels currently displayed on the monitor.",20,null],[0,"os","","Contains traits with platform-specific methods in them.",null,null],[0,"unix","winit::os","",null,null],[5,"get_x11_xconnection","winit::os::unix","",null,{"inputs":[],"output":{"generics":["arc"],"name":"option"}}],[0,"x11","","",null,null],[3,"MonitorId","winit::os::unix::x11","",null,null],[12,"0","","",21,null],[12,"1","","",21,null],[3,"Window","","",null,null],[12,"x","","",22,null],[3,"XWindow","","",null,null],[3,"WindowProxy","","",null,null],[3,"XConnection","","A connection to an X server.",null,null],[12,"xlib","","",23,null],[12,"xf86vmode","","",23,null],[12,"xcursor","","",23,null],[12,"xinput2","","",23,null],[12,"xlib_xcb","","",23,null],[12,"display","","",23,null],[12,"latest_error","","",23,null],[3,"XError","","Error triggered by xlib.",null,null],[12,"description","","",24,null],[12,"error_code","","",24,null],[12,"request_code","","",24,null],[12,"minor_code","","",24,null],[3,"EventsLoop","","",null,null],[3,"EventsLoopProxy","","",null,null],[3,"WindowId","","",null,null],[3,"DeviceId","","",null,null],[3,"Window2","","",null,null],[12,"window","","",25,null],[4,"XNotSupported","","Error returned if this system doesn't have XLib or can't create an X connection.",null,null],[13,"LibraryOpenError","","Failed to load one or several shared libraries.",26,null],[13,"XOpenDisplayFailed","","Connecting to the X server with `XOpenDisplay` failed.",26,null],[5,"get_available_monitors","","",null,{"inputs":[{"name":"arc"}],"output":{"generics":["monitorid"],"name":"vecdeque"}}],[5,"get_primary_monitor","","",null,{"inputs":[{"name":"arc"}],"output":{"name":"monitorid"}}],[0,"ffi","","",null,null],[3,"OpenError","winit::os::unix::x11::ffi","",null,null],[8,"WindowExt","winit::os::unix","Additional methods on `Window` that are specific to Unix.",null,null],[10,"get_xlib_window","","Returns a pointer to the `Window` object of xlib that is used by this window.",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_xlib_display","","Returns a pointer to the `Display` object of xlib that is used by this window.",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_xlib_screen_id","","",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_xlib_xconnection","","",27,{"inputs":[{"name":"self"}],"output":{"generics":["arc"],"name":"option"}}],[10,"send_xim_spot","","",27,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"}],"output":null}],[10,"get_xcb_connection","","This function returns the underlying `xcb_connection_t` of an xlib `Display`.",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_wayland_surface","","Returns a pointer to the `wl_surface` object of wayland that is used by this window.",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_wayland_display","","Returns a pointer to the `wl_display` object of wayland that is used by this window.",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"WindowBuilderExt","","Additional methods on `WindowBuilder` that are specific to Unix.",null,null],[10,"with_x11_visual","","",28,null],[10,"with_x11_screen","","",28,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"windowbuilder"}}],[11,"get_xlib_window","winit","",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_xlib_display","","",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_xlib_screen_id","","",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_xlib_xconnection","","",18,{"inputs":[{"name":"self"}],"output":{"generics":["arc"],"name":"option"}}],[11,"get_xcb_connection","","",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"send_xim_spot","","",18,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"}],"output":null}],[11,"get_wayland_surface","","",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_wayland_display","","",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"with_x11_visual","","",3,null],[11,"with_x11_screen","","",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"windowbuilder"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"nativemonitorid"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"nativemonitorid"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"nativemonitorid"}],"output":{"name":"bool"}}],[6,"ScanCode","","",null,null],[6,"AxisId","","Identifier for a specific analog axis on some device.",null,null],[6,"ButtonId","","Identifier for a specific button on some device.",null,null],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"windowid"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",29,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",29,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"le","","",29,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"gt","","",29,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"ge","","",29,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"cmp","","",29,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"ordering"}}],[11,"hash","","",29,null],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"deviceid"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",30,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",30,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"le","","",30,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"gt","","",30,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"ge","","",30,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"cmp","","",30,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"ordering"}}],[11,"hash","","",30,null],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"controlflow"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"controlflow"}],"output":{"name":"bool"}}],[11,"new","","Builds a new events loop.",31,{"inputs":[],"output":{"name":"eventsloop"}}],[11,"poll_events","","Fetches all the events that are pending, calls the callback function for each of them, and returns.",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"run_forever","","Runs forever until `interrupt()` is called. Whenever an event happens, calls the callback.",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"create_proxy","","Creates an `EventsLoopProxy` that can be used to wake up the `EventsLoop` from another thread.",31,{"inputs":[{"name":"self"}],"output":{"name":"eventsloopproxy"}}],[11,"wakeup","","Wake up the `EventsLoop` from which this proxy was created.",32,{"inputs":[{"name":"self"}],"output":{"generics":["eventsloopclosed"],"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"eventsloopclosed"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"eventsloopclosed"}],"output":{"name":"bool"}}],[11,"hash","","",33,null],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",33,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"windowbuilder"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"creationerror"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"description","","",15,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"mousecursor"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"mousecursor"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"cursorstate"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"cursorstate"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"windowattributes"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"windowattributes"}}],[11,"detail","winit::os::unix::x11::ffi","",34,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"kind","","",34,{"inputs":[{"name":"self"}],"output":{"name":"openerrorkind"}}],[11,"new","","",34,{"inputs":[{"name":"openerrorkind"},{"name":"string"}],"output":{"name":"openerror"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"description","","",34,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"openerror"}}],[11,"clone","winit::os::unix::x11","",21,{"inputs":[{"name":"self"}],"output":{"name":"monitorid"}}],[11,"get_name","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"option"}}],[11,"get_native_identifier","","",21,{"inputs":[{"name":"self"}],"output":{"name":"nativemonitorid"}}],[11,"get_dimensions","","",21,null],[11,"drop","","",35,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"windowproxy"}}],[11,"wakeup_event_loop","","",36,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","",22,{"inputs":[{"name":"eventsloop"},{"name":"windowattributes"},{"name":"platformspecificwindowbuilderattributes"}],"output":{"generics":["window","creationerror"],"name":"result"}}],[11,"set_title","","",22,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"set_decorations","","",22,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"show","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"hide","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"get_position","","",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_position","","",22,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_inner_size","","",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_outer_size","","",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_inner_size","","",22,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"create_window_proxy","","",22,{"inputs":[{"name":"self"}],"output":{"name":"windowproxy"}}],[11,"get_xlib_display","","",22,null],[11,"get_xlib_screen_id","","",22,null],[11,"get_xlib_xconnection","","",22,{"inputs":[{"name":"self"}],"output":{"generics":["xconnection"],"name":"arc"}}],[11,"platform_display","","",22,null],[11,"get_xlib_window","","",22,null],[11,"platform_window","","",22,null],[11,"get_xcb_connection","","",22,null],[11,"set_window_resize_callback","","",22,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[11,"set_cursor","","",22,{"inputs":[{"name":"self"},{"name":"mousecursor"}],"output":null}],[11,"set_cursor_state","","",22,{"inputs":[{"name":"self"},{"name":"cursorstate"}],"output":{"generics":["string"],"name":"result"}}],[11,"hidpi_factor","","",22,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"set_cursor_position","","",22,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"id","","",22,{"inputs":[{"name":"self"}],"output":{"name":"windowid"}}],[11,"new","","",23,{"inputs":[{"name":"option"}],"output":{"generics":["xconnection","xnotsupported"],"name":"result"}}],[11,"check_errors","","Checks whether an error has been triggered by the previous function calls.",23,{"inputs":[{"name":"self"}],"output":{"generics":["xerror"],"name":"result"}}],[11,"ignore_error","","Ignores any previous error.",23,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",23,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"xerror"}}],[11,"description","","",24,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"xnotsupported"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",26,{"inputs":[{"name":"openerror"}],"output":{"name":"xnotsupported"}}],[11,"description","","",26,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",26,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"new","","",37,{"inputs":[{"generics":["xconnection"],"name":"arc"}],"output":{"name":"eventsloop"}}],[11,"create_proxy","","",37,{"inputs":[{"name":"self"}],"output":{"name":"eventsloopproxy"}}],[11,"poll_events","","",37,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"run_forever","","",37,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"device_name","","",37,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"string"}}],[11,"wakeup","","",38,{"inputs":[{"name":"self"}],"output":{"generics":["eventsloopclosed"],"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"windowid"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",39,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",39,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"le","","",39,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"gt","","",39,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"ge","","",39,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"bool"}}],[11,"cmp","","",39,{"inputs":[{"name":"self"},{"name":"windowid"}],"output":{"name":"ordering"}}],[11,"hash","","",39,null],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"deviceid"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",40,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",40,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"le","","",40,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"gt","","",40,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"ge","","",40,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"cmp","","",40,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"ordering"}}],[11,"hash","","",40,null],[11,"deref","","",25,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"new","","",25,{"inputs":[{"name":"eventsloop"},{"name":"windowattributes"},{"name":"platformspecificwindowbuilderattributes"}],"output":{"generics":["creationerror"],"name":"result"}}],[11,"id","","",25,{"inputs":[{"name":"self"}],"output":{"name":"windowid"}}],[11,"send_xim_spot","","",25,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"}],"output":null}],[11,"drop","","",25,{"inputs":[{"name":"self"}],"output":null}]],"paths":[[3,"KeyboardInput"],[3,"Touch"],[3,"ModifiersState"],[3,"WindowBuilder"],[3,"WindowAttributes"],[4,"Event"],[4,"WindowEvent"],[4,"DeviceEvent"],[4,"TouchPhase"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[4,"NativeMonitorId"],[4,"ControlFlow"],[4,"CreationError"],[4,"MouseCursor"],[4,"CursorState"],[3,"Window"],[3,"AvailableMonitorsIter"],[3,"MonitorId"],[3,"MonitorId"],[3,"Window"],[3,"XConnection"],[3,"XError"],[3,"Window2"],[4,"XNotSupported"],[8,"WindowExt"],[8,"WindowBuilderExt"],[3,"WindowId"],[3,"DeviceId"],[3,"EventsLoop"],[3,"EventsLoopProxy"],[3,"EventsLoopClosed"],[3,"OpenError"],[3,"XWindow"],[3,"WindowProxy"],[3,"EventsLoop"],[3,"EventsLoopProxy"],[3,"WindowId"],[3,"DeviceId"]]};
searchIndex["x11_clipboard"] = {"doc":"","items":[[3,"Atoms","x11_clipboard","",null,null],[12,"primary","","",0,null],[12,"clipboard","","",0,null],[12,"property","","",0,null],[12,"targets","","",0,null],[12,"string","","",0,null],[12,"utf8_string","","",0,null],[12,"incr","","",0,null],[3,"Clipboard","","X11 Clipboard",null,null],[12,"getter","","",1,null],[12,"setter","","",1,null],[3,"Context","","",null,null],[12,"connection","","",2,null],[12,"window","","",2,null],[12,"atoms","","",2,null],[0,"error","","",null,null],[3,"Error","x11_clipboard::error","The Error type.",null,null],[12,"0","","The kind of the error.",3,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",4,null],[13,"Io","","",4,null],[13,"Utf8","","",4,null],[13,"Set","","",4,null],[13,"XcbConn","","",4,null],[13,"XcbGeneric","","",4,null],[13,"Lock","","",4,null],[13,"Timeout","","",4,null],[13,"SetOwner","","",4,null],[6,"Result","","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns some type that can be converted to `ErrorKind`, boxes the original error to store as the cause, then returns a new error containing the original error.",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",3,{"inputs":[{"name":"errorkind"},{"name":"state"}],"output":{"name":"error"}}],[11,"from_kind","","",3,null],[11,"with_chain","","",3,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[11,"kind","","",3,null],[11,"iter","","",3,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"chain_err","","",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"backtrace","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"extract_backtrace","","",3,{"inputs":[{"name":"error"}],"output":{"generics":["arc"],"name":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",3,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",3,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"error"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",3,{"inputs":[{"generics":["error"],"name":"box"},{"name":"k"}],"output":{"name":"error"}}],[11,"kind","","Returns the kind of the error.",3,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"iter","","Iterates over the error chain.",3,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",3,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"error"}}],[11,"description","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",3,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"generics":["atom"],"name":"senderror"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"connerror"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"genericerror"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"deref","","",3,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","A string describing the error kind.",4,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",4,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",4,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",4,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[17,"INCR_CHUNK_SIZE","x11_clipboard","",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"atoms"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",2,{"inputs":[{"generics":["str"],"name":"option"}],"output":{"name":"result"}}],[11,"get_atom","","",2,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["atom"],"name":"result"}}],[11,"new","","Create Clipboard.",1,{"inputs":[],"output":{"name":"result"}}],[11,"load","","load value.",1,{"inputs":[{"name":"self"},{"name":"atom"},{"name":"atom"},{"name":"atom"},{"name":"t"}],"output":{"generics":["vec"],"name":"result"}}],[11,"store","","store value.",1,{"inputs":[{"name":"self"},{"name":"atom"},{"name":"atom"},{"name":"t"}],"output":{"name":"result"}}]],"paths":[[3,"Atoms"],[3,"Clipboard"],[3,"Context"],[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"]]};
searchIndex["x11_dl"] = {"doc":"","items":[[0,"error","x11_dl","",null,null],[3,"OpenError","x11_dl::error","",null,null],[4,"OpenErrorKind","","",null,null],[13,"Library","","",0,null],[13,"Symbol","","",0,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"openerror"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"detail","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"kind","","",1,{"inputs":[{"name":"self"}],"output":{"name":"openerrorkind"}}],[11,"new","","",1,{"inputs":[{"name":"openerrorkind"},{"name":"string"}],"output":{"name":"openerror"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"openerrorkind"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"openerrorkind"}],"output":{"name":"bool"}}],[11,"as_str","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[0,"xlib","x11_dl","",null,null],[3,"Xlib","x11_dl::xlib","",null,null],[12,"XActivateScreenSaver","","",2,null],[12,"XAddConnectionWatch","","",2,null],[12,"XAddExtension","","",2,null],[12,"XAddHost","","",2,null],[12,"XAddHosts","","",2,null],[12,"XAddPixel","","",2,null],[12,"XAddToExtensionList","","",2,null],[12,"XAddToSaveSet","","",2,null],[12,"XAllocClassHint","","",2,null],[12,"XAllocColor","","",2,null],[12,"XAllocColorCells","","",2,null],[12,"XAllocColorPlanes","","",2,null],[12,"XAllocIconSize","","",2,null],[12,"XAllocNamedColor","","",2,null],[12,"XAllocSizeHints","","",2,null],[12,"XAllocStandardColormap","","",2,null],[12,"XAllocWMHints","","",2,null],[12,"XAllowEvents","","",2,null],[12,"XAllPlanes","","",2,null],[12,"XAutoRepeatOff","","",2,null],[12,"XAutoRepeatOn","","",2,null],[12,"XBaseFontNameListOfFontSet","","",2,null],[12,"XBell","","",2,null],[12,"XBitmapBitOrder","","",2,null],[12,"XBitmapPad","","",2,null],[12,"XBitmapUnit","","",2,null],[12,"XBlackPixel","","",2,null],[12,"XBlackPixelOfScreen","","",2,null],[12,"XCellsOfScreen","","",2,null],[12,"XChangeActivePointerGrab","","",2,null],[12,"XChangeGC","","",2,null],[12,"XChangeKeyboardControl","","",2,null],[12,"XChangeKeyboardMapping","","",2,null],[12,"XChangePointerControl","","",2,null],[12,"XChangeProperty","","",2,null],[12,"XChangeSaveSet","","",2,null],[12,"XChangeWindowAttributes","","",2,null],[12,"XCheckIfEvent","","",2,null],[12,"XCheckMaskEvent","","",2,null],[12,"XCheckTypedEvent","","",2,null],[12,"XCheckTypedWindowEvent","","",2,null],[12,"XCheckWindowEvent","","",2,null],[12,"XCirculateSubwindows","","",2,null],[12,"XCirculateSubwindowsDown","","",2,null],[12,"XCirculateSubwindowsUp","","",2,null],[12,"XClearArea","","",2,null],[12,"XClearWindow","","",2,null],[12,"XClipBox","","",2,null],[12,"XCloseDisplay","","",2,null],[12,"XCloseIM","","",2,null],[12,"XCloseOM","","",2,null],[12,"XcmsAddColorSpace","","",2,null],[12,"XcmsAddFunctionSet","","",2,null],[12,"XcmsAllocColor","","",2,null],[12,"XcmsAllocNamedColor","","",2,null],[12,"XcmsCCCOfColormap","","",2,null],[12,"XcmsCIELabClipab","","",2,null],[12,"XcmsCIELabClipL","","",2,null],[12,"XcmsCIELabClipLab","","",2,null],[12,"XcmsCIELabQueryMaxC","","",2,null],[12,"XcmsCIELabQueryMaxL","","",2,null],[12,"XcmsCIELabQueryMaxLC","","",2,null],[12,"XcmsCIELabQueryMinL","","",2,null],[12,"XcmsCIELabToCIEXYZ","","",2,null],[12,"XcmsCIELabWhiteShiftColors","","",2,null],[12,"XcmsCIELuvClipL","","",2,null],[12,"XcmsCIELuvClipLuv","","",2,null],[12,"XcmsCIELuvClipuv","","",2,null],[12,"XcmsCIELuvQueryMaxC","","",2,null],[12,"XcmsCIELuvQueryMaxL","","",2,null],[12,"XcmsCIELuvQueryMaxLC","","",2,null],[12,"XcmsCIELuvQueryMinL","","",2,null],[12,"XcmsCIELuvToCIEuvY","","",2,null],[12,"XcmsCIELuvWhiteShiftColors","","",2,null],[12,"XcmsCIEuvYToCIELuv","","",2,null],[12,"XcmsCIEuvYToCIEXYZ","","",2,null],[12,"XcmsCIEuvYToTekHVC","","",2,null],[12,"XcmsCIExyYToCIEXYZ","","",2,null],[12,"XcmsCIEXYZToCIELab","","",2,null],[12,"XcmsCIEXYZToCIEuvY","","",2,null],[12,"XcmsCIEXYZToCIExyY","","",2,null],[12,"XcmsCIEXYZToRGBi","","",2,null],[12,"XcmsClientWhitePointOfCCC","","",2,null],[12,"XcmsConvertColors","","",2,null],[12,"XcmsCreateCCC","","",2,null],[12,"XcmsDefaultCCC","","",2,null],[12,"XcmsDisplayOfCCC","","",2,null],[12,"XcmsFormatOfPrefix","","",2,null],[12,"XcmsFreeCCC","","",2,null],[12,"XcmsLookupColor","","",2,null],[12,"XcmsPrefixOfFormat","","",2,null],[12,"XcmsQueryBlack","","",2,null],[12,"XcmsQueryBlue","","",2,null],[12,"XcmsQueryColor","","",2,null],[12,"XcmsQueryColors","","",2,null],[12,"XcmsQueryGreen","","",2,null],[12,"XcmsQueryRed","","",2,null],[12,"XcmsQueryWhite","","",2,null],[12,"XcmsRGBiToCIEXYZ","","",2,null],[12,"XcmsRGBiToRGB","","",2,null],[12,"XcmsRGBToRGBi","","",2,null],[12,"XcmsScreenNumberOfCCC","","",2,null],[12,"XcmsScreenWhitePointOfCCC","","",2,null],[12,"XcmsSetCCCOfColormap","","",2,null],[12,"XcmsSetCompressionProc","","",2,null],[12,"XcmsSetWhiteAdjustProc","","",2,null],[12,"XcmsSetWhitePoint","","",2,null],[12,"XcmsStoreColor","","",2,null],[12,"XcmsStoreColors","","",2,null],[12,"XcmsTekHVCClipC","","",2,null],[12,"XcmsTekHVCClipV","","",2,null],[12,"XcmsTekHVCClipVC","","",2,null],[12,"XcmsTekHVCQueryMaxC","","",2,null],[12,"XcmsTekHVCQueryMaxV","","",2,null],[12,"XcmsTekHVCQueryMaxVC","","",2,null],[12,"XcmsTekHVCQueryMaxVSamples","","",2,null],[12,"XcmsTekHVCQueryMinV","","",2,null],[12,"XcmsTekHVCToCIEuvY","","",2,null],[12,"XcmsTekHVCWhiteShiftColors","","",2,null],[12,"XcmsVisualOfCCC","","",2,null],[12,"XConfigureWindow","","",2,null],[12,"XConnectionNumber","","",2,null],[12,"XContextDependentDrawing","","",2,null],[12,"XContextualDrawing","","",2,null],[12,"XConvertCase","","",2,null],[12,"XConvertSelection","","",2,null],[12,"XCopyArea","","",2,null],[12,"XCopyColormapAndFree","","",2,null],[12,"XCopyGC","","",2,null],[12,"XCopyPlane","","",2,null],[12,"XCreateBitmapFromData","","",2,null],[12,"XCreateColormap","","",2,null],[12,"XCreateFontCursor","","",2,null],[12,"XCreateFontSet","","",2,null],[12,"XCreateGC","","",2,null],[12,"XCreateGlyphCursor","","",2,null],[12,"XCreateImage","","",2,null],[12,"XCreatePixmap","","",2,null],[12,"XCreatePixmapCursor","","",2,null],[12,"XCreatePixmapFromBitmapData","","",2,null],[12,"XCreateRegion","","",2,null],[12,"XCreateSimpleWindow","","",2,null],[12,"XCreateWindow","","",2,null],[12,"XDefaultColormap","","",2,null],[12,"XDefaultColormapOfScreen","","",2,null],[12,"XDefaultDepth","","",2,null],[12,"XDefaultDepthOfScreen","","",2,null],[12,"XDefaultGC","","",2,null],[12,"XDefaultGCOfScreen","","",2,null],[12,"XDefaultRootWindow","","",2,null],[12,"XDefaultScreen","","",2,null],[12,"XDefaultScreenOfDisplay","","",2,null],[12,"XDefaultString","","",2,null],[12,"XDefaultVisual","","",2,null],[12,"XDefaultVisualOfScreen","","",2,null],[12,"XDefineCursor","","",2,null],[12,"XDeleteContext","","",2,null],[12,"XDeleteModifiermapEntry","","",2,null],[12,"XDeleteProperty","","",2,null],[12,"XDestroyIC","","",2,null],[12,"XDestroyImage","","",2,null],[12,"XDestroyOC","","",2,null],[12,"XDestroyRegion","","",2,null],[12,"XDestroySubwindows","","",2,null],[12,"XDestroyWindow","","",2,null],[12,"XDirectionalDependentDrawing","","",2,null],[12,"XDisableAccessControl","","",2,null],[12,"XDisplayCells","","",2,null],[12,"XDisplayHeight","","",2,null],[12,"XDisplayHeightMM","","",2,null],[12,"XDisplayKeycodes","","",2,null],[12,"XDisplayMotionBufferSize","","",2,null],[12,"XDisplayName","","",2,null],[12,"XDisplayOfIM","","",2,null],[12,"XDisplayOfOM","","",2,null],[12,"XDisplayOfScreen","","",2,null],[12,"XDisplayPlanes","","",2,null],[12,"XDisplayString","","",2,null],[12,"XDisplayWidth","","",2,null],[12,"XDisplayWidthMM","","",2,null],[12,"XDoesBackingStore","","",2,null],[12,"XDoesSaveUnders","","",2,null],[12,"XDrawArc","","",2,null],[12,"XDrawArcs","","",2,null],[12,"XDrawImageString","","",2,null],[12,"XDrawImageString16","","",2,null],[12,"XDrawLine","","",2,null],[12,"XDrawLines","","",2,null],[12,"XDrawPoint","","",2,null],[12,"XDrawPoints","","",2,null],[12,"XDrawRectangle","","",2,null],[12,"XDrawRectangles","","",2,null],[12,"XDrawSegments","","",2,null],[12,"XDrawString","","",2,null],[12,"XDrawString16","","",2,null],[12,"XDrawText","","",2,null],[12,"XDrawText16","","",2,null],[12,"XEHeadOfExtensionList","","",2,null],[12,"XEmptyRegion","","",2,null],[12,"XEnableAccessControl","","",2,null],[12,"XEqualRegion","","",2,null],[12,"XESetBeforeFlush","","",2,null],[12,"XESetCloseDisplay","","",2,null],[12,"XESetCopyEventCookie","","",2,null],[12,"XESetCopyGC","","",2,null],[12,"XESetCreateFont","","",2,null],[12,"XESetCreateGC","","",2,null],[12,"XESetError","","",2,null],[12,"XESetErrorString","","",2,null],[12,"XESetEventToWire","","",2,null],[12,"XESetFlushGC","","",2,null],[12,"XESetFreeFont","","",2,null],[12,"XESetFreeGC","","",2,null],[12,"XESetPrintErrorValues","","",2,null],[12,"XESetWireToError","","",2,null],[12,"XESetWireToEvent","","",2,null],[12,"XESetWireToEventCookie","","",2,null],[12,"XEventMaskOfScreen","","",2,null],[12,"XEventsQueued","","",2,null],[12,"XExtendedMaxRequestSize","","",2,null],[12,"XExtentsOfFontSet","","",2,null],[12,"XFetchBuffer","","",2,null],[12,"XFetchBytes","","",2,null],[12,"XFetchName","","",2,null],[12,"XFillArc","","",2,null],[12,"XFillArcs","","",2,null],[12,"XFillPolygon","","",2,null],[12,"XFillRectangle","","",2,null],[12,"XFillRectangles","","",2,null],[12,"XFilterEvent","","",2,null],[12,"XFindContext","","",2,null],[12,"XFindOnExtensionList","","",2,null],[12,"XFlush","","",2,null],[12,"XFlushGC","","",2,null],[12,"XFontsOfFontSet","","",2,null],[12,"XForceScreenSaver","","",2,null],[12,"XFree","","",2,null],[12,"XFreeColormap","","",2,null],[12,"XFreeColors","","",2,null],[12,"XFreeCursor","","",2,null],[12,"XFreeEventData","","",2,null],[12,"XFreeExtensionList","","",2,null],[12,"XFreeFont","","",2,null],[12,"XFreeFontInfo","","",2,null],[12,"XFreeFontNames","","",2,null],[12,"XFreeFontPath","","",2,null],[12,"XFreeFontSet","","",2,null],[12,"XFreeGC","","",2,null],[12,"XFreeModifiermap","","",2,null],[12,"XFreePixmap","","",2,null],[12,"XFreeStringList","","",2,null],[12,"XGContextFromGC","","",2,null],[12,"XGeometry","","",2,null],[12,"XGetAtomName","","",2,null],[12,"XGetAtomNames","","",2,null],[12,"XGetClassHint","","",2,null],[12,"XGetCommand","","",2,null],[12,"XGetDefault","","",2,null],[12,"XGetErrorDatabaseText","","",2,null],[12,"XGetErrorText","","",2,null],[12,"XGetEventData","","",2,null],[12,"XGetFontPath","","",2,null],[12,"XGetFontProperty","","",2,null],[12,"XGetGCValues","","",2,null],[12,"XGetGeometry","","",2,null],[12,"XGetIconName","","",2,null],[12,"XGetIconSizes","","",2,null],[12,"XGetImage","","",2,null],[12,"XGetInputFocus","","",2,null],[12,"XGetKeyboardControl","","",2,null],[12,"XGetKeyboardMapping","","",2,null],[12,"XGetModifierMapping","","",2,null],[12,"XGetMotionEvents","","",2,null],[12,"XGetNormalHints","","",2,null],[12,"XGetPixel","","",2,null],[12,"XGetPointerControl","","",2,null],[12,"XGetPointerMapping","","",2,null],[12,"XGetRGBColormaps","","",2,null],[12,"XGetScreenSaver","","",2,null],[12,"XGetSelectionOwner","","",2,null],[12,"XGetSizeHints","","",2,null],[12,"XGetStandardColormap","","",2,null],[12,"XGetSubImage","","",2,null],[12,"XGetTextProperty","","",2,null],[12,"XGetTransientForHint","","",2,null],[12,"XGetVisualInfo","","",2,null],[12,"XGetWindowAttributes","","",2,null],[12,"XGetWindowProperty","","",2,null],[12,"XGetWMClientMachine","","",2,null],[12,"XGetWMColormapWindows","","",2,null],[12,"XGetWMHints","","",2,null],[12,"XGetWMIconName","","",2,null],[12,"XGetWMName","","",2,null],[12,"XGetWMNormalHints","","",2,null],[12,"XGetWMProtocols","","",2,null],[12,"XGetWMSizeHints","","",2,null],[12,"XGetZoomHints","","",2,null],[12,"XGrabButton","","",2,null],[12,"XGrabKey","","",2,null],[12,"XGrabKeyboard","","",2,null],[12,"XGrabPointer","","",2,null],[12,"XGrabServer","","",2,null],[12,"XHeightMMOfScreen","","",2,null],[12,"XHeightOfScreen","","",2,null],[12,"XIconifyWindow","","",2,null],[12,"XIfEvent","","",2,null],[12,"XImageByteOrder","","",2,null],[12,"XIMOfIC","","",2,null],[12,"XInitExtension","","",2,null],[12,"XInitImage","","",2,null],[12,"XInitThreads","","",2,null],[12,"XInsertModifiermapEntry","","",2,null],[12,"XInstallColormap","","",2,null],[12,"XInternalConnectionNumbers","","",2,null],[12,"XInternAtom","","",2,null],[12,"XInternAtoms","","",2,null],[12,"XIntersectRegion","","",2,null],[12,"XkbAddDeviceLedInfo","","",2,null],[12,"XkbAddGeomColor","","",2,null],[12,"XkbAddGeomDoodad","","",2,null],[12,"XkbAddGeomKey","","",2,null],[12,"XkbAddGeomKeyAlias","","",2,null],[12,"XkbAddGeomOutline","","",2,null],[12,"XkbAddGeomOverlay","","",2,null],[12,"XkbAddGeomOverlayKey","","",2,null],[12,"XkbAddGeomOverlayRow","","",2,null],[12,"XkbAddGeomProperty","","",2,null],[12,"XkbAddGeomRow","","",2,null],[12,"XkbAddGeomSection","","",2,null],[12,"XkbAddGeomShape","","",2,null],[12,"XkbAddKeyType","","",2,null],[12,"XkbAllocClientMap","","",2,null],[12,"XkbAllocCompatMap","","",2,null],[12,"XkbAllocControls","","",2,null],[12,"XkbAllocDeviceInfo","","",2,null],[12,"XkbAllocGeomColors","","",2,null],[12,"XkbAllocGeomDoodads","","",2,null],[12,"XkbAllocGeometry","","",2,null],[12,"XkbAllocGeomKeyAliases","","",2,null],[12,"XkbAllocGeomKeys","","",2,null],[12,"XkbAllocGeomOutlines","","",2,null],[12,"XkbAllocGeomOverlayKeys","","",2,null],[12,"XkbAllocGeomOverlayRows","","",2,null],[12,"XkbAllocGeomOverlays","","",2,null],[12,"XkbAllocGeomPoints","","",2,null],[12,"XkbAllocGeomProps","","",2,null],[12,"XkbAllocGeomRows","","",2,null],[12,"XkbAllocGeomSectionDoodads","","",2,null],[12,"XkbAllocGeomSections","","",2,null],[12,"XkbAllocGeomShapes","","",2,null],[12,"XkbAllocIndicatorMaps","","",2,null],[12,"XkbAllocKeyboard","","",2,null],[12,"XkbAllocNames","","",2,null],[12,"XkbAllocServerMap","","",2,null],[12,"XkbApplyCompatMapToKey","","",2,null],[12,"XkbApplyVirtualModChanges","","",2,null],[12,"XkbBell","","",2,null],[12,"XkbBellEvent","","",2,null],[12,"XkbChangeDeviceInfo","","",2,null],[12,"XkbChangeEnabledControls","","",2,null],[12,"XkbChangeKeycodeRange","","",2,null],[12,"XkbChangeMap","","",2,null],[12,"XkbChangeNames","","",2,null],[12,"XkbChangeTypesOfKey","","",2,null],[12,"XkbComputeEffectiveMap","","",2,null],[12,"XkbComputeRowBounds","","",2,null],[12,"XkbComputeSectionBounds","","",2,null],[12,"XkbComputeShapeBounds","","",2,null],[12,"XkbComputeShapeTop","","",2,null],[12,"XkbCopyKeyType","","",2,null],[12,"XkbCopyKeyTypes","","",2,null],[12,"XkbDeviceBell","","",2,null],[12,"XkbDeviceBellEvent","","",2,null],[12,"XkbFindOverlayForKey","","",2,null],[12,"XkbForceBell","","",2,null],[12,"XkbForceDeviceBell","","",2,null],[12,"XkbFreeClientMap","","",2,null],[12,"XkbFreeCompatMap","","",2,null],[12,"XkbFreeComponentList","","",2,null],[12,"XkbFreeControls","","",2,null],[12,"XkbFreeDeviceInfo","","",2,null],[12,"XkbFreeGeomColors","","",2,null],[12,"XkbFreeGeomDoodads","","",2,null],[12,"XkbFreeGeometry","","",2,null],[12,"XkbFreeGeomKeyAliases","","",2,null],[12,"XkbFreeGeomKeys","","",2,null],[12,"XkbFreeGeomOutlines","","",2,null],[12,"XkbFreeGeomOverlayKeys","","",2,null],[12,"XkbFreeGeomOverlayRows","","",2,null],[12,"XkbFreeGeomOverlays","","",2,null],[12,"XkbFreeGeomPoints","","",2,null],[12,"XkbFreeGeomProperties","","",2,null],[12,"XkbFreeGeomRows","","",2,null],[12,"XkbFreeGeomSections","","",2,null],[12,"XkbFreeGeomShapes","","",2,null],[12,"XkbFreeIndicatorMaps","","",2,null],[12,"XkbFreeKeyboard","","",2,null],[12,"XkbFreeNames","","",2,null],[12,"XkbFreeServerMap","","",2,null],[12,"XkbGetAutoRepeatRate","","",2,null],[12,"XkbGetAutoResetControls","","",2,null],[12,"XkbGetCompatMap","","",2,null],[12,"XkbGetControls","","",2,null],[12,"XkbGetDetectableAutoRepeat","","",2,null],[12,"XkbGetDeviceButtonActions","","",2,null],[12,"XkbGetDeviceInfo","","",2,null],[12,"XkbGetDeviceInfoChanges","","",2,null],[12,"XkbGetDeviceLedInfo","","",2,null],[12,"XkbGetGeometry","","",2,null],[12,"XkbGetIndicatorMap","","",2,null],[12,"XkbGetIndicatorState","","",2,null],[12,"XkbGetKeyActions","","",2,null],[12,"XkbGetKeyBehaviors","","",2,null],[12,"XkbGetKeyboard","","",2,null],[12,"XkbGetKeyboardByName","","",2,null],[12,"XkbGetKeyExplicitComponents","","",2,null],[12,"XkbGetKeyModifierMap","","",2,null],[12,"XkbGetKeySyms","","",2,null],[12,"XkbGetKeyTypes","","",2,null],[12,"XkbGetKeyVirtualModMap","","",2,null],[12,"XkbGetMap","","",2,null],[12,"XkbGetMapChanges","","",2,null],[12,"XkbGetNamedDeviceIndicator","","",2,null],[12,"XkbGetNamedGeometry","","",2,null],[12,"XkbGetNamedIndicator","","",2,null],[12,"XkbGetNames","","",2,null],[12,"XkbGetPerClientControls","","",2,null],[12,"XkbGetState","","",2,null],[12,"XkbGetUpdatedMap","","",2,null],[12,"XkbGetVirtualMods","","",2,null],[12,"XkbGetXlibControls","","",2,null],[12,"XkbIgnoreExtension","","",2,null],[12,"XkbInitCanonicalKeyTypes","","",2,null],[12,"XkbKeycodeToKeysym","","",2,null],[12,"XkbKeysymToModifiers","","",2,null],[12,"XkbKeyTypesForCoreSymbols","","",2,null],[12,"XkbLatchGroup","","",2,null],[12,"XkbLatchModifiers","","",2,null],[12,"XkbLibraryVersion","","",2,null],[12,"XkbListComponents","","",2,null],[12,"XkbLockGroup","","",2,null],[12,"XkbLockModifiers","","",2,null],[12,"XkbLookupKeyBinding","","",2,null],[12,"XkbLookupKeySym","","",2,null],[12,"XkbNoteControlsChanges","","",2,null],[12,"XkbNoteDeviceChanges","","",2,null],[12,"XkbNoteMapChanges","","",2,null],[12,"XkbNoteNameChanges","","",2,null],[12,"XkbOpenDisplay","","",2,null],[12,"XkbQueryExtension","","",2,null],[12,"XkbRefreshKeyboardMapping","","",2,null],[12,"XkbResizeDeviceButtonActions","","",2,null],[12,"XkbResizeKeyActions","","",2,null],[12,"XkbResizeKeySyms","","",2,null],[12,"XkbResizeKeyType","","",2,null],[12,"XkbSelectEventDetails","","",2,null],[12,"XkbSelectEvents","","",2,null],[12,"XkbSetAtomFuncs","","",2,null],[12,"XkbSetAutoRepeatRate","","",2,null],[12,"XkbSetAutoResetControls","","",2,null],[12,"XkbSetCompatMap","","",2,null],[12,"XkbSetControls","","",2,null],[12,"XkbSetDebuggingFlags","","",2,null],[12,"XkbSetDetectableAutoRepeat","","",2,null],[12,"XkbSetDeviceButtonActions","","",2,null],[12,"XkbSetDeviceInfo","","",2,null],[12,"XkbSetDeviceLedInfo","","",2,null],[12,"XkbSetGeometry","","",2,null],[12,"XkbSetIgnoreLockMods","","",2,null],[12,"XkbSetIndicatorMap","","",2,null],[12,"XkbSetMap","","",2,null],[12,"XkbSetNamedDeviceIndicator","","",2,null],[12,"XkbSetNamedIndicator","","",2,null],[12,"XkbSetNames","","",2,null],[12,"XkbSetPerClientControls","","",2,null],[12,"XkbSetServerInternalMods","","",2,null],[12,"XkbSetXlibControls","","",2,null],[12,"XkbToControl","","",2,null],[12,"XkbTranslateKeyCode","","",2,null],[12,"XkbTranslateKeySym","","",2,null],[12,"XkbUpdateActionVirtualMods","","",2,null],[12,"XkbUpdateKeyTypeVirtualMods","","",2,null],[12,"XkbUpdateMapFromCore","","",2,null],[12,"XkbUseExtension","","",2,null],[12,"XkbVirtualModsToReal","","",2,null],[12,"XkbXlibControlsImplemented","","",2,null],[12,"XKeycodeToKeysym","","",2,null],[12,"XKeysymToKeycode","","",2,null],[12,"XKeysymToString","","",2,null],[12,"XKillClient","","",2,null],[12,"XLastKnownRequestProcessed","","",2,null],[12,"XListDepths","","",2,null],[12,"XListExtensions","","",2,null],[12,"XListFonts","","",2,null],[12,"XListFontsWithInfo","","",2,null],[12,"XListHosts","","",2,null],[12,"XListInstalledColormaps","","",2,null],[12,"XListPixmapFormats","","",2,null],[12,"XListProperties","","",2,null],[12,"XLoadFont","","",2,null],[12,"XLoadQueryFont","","",2,null],[12,"XLocaleOfFontSet","","",2,null],[12,"XLocaleOfIM","","",2,null],[12,"XLocaleOfOM","","",2,null],[12,"XLockDisplay","","",2,null],[12,"XLookupColor","","",2,null],[12,"XLookupKeysym","","",2,null],[12,"XLookupString","","",2,null],[12,"XLowerWindow","","",2,null],[12,"XMapRaised","","",2,null],[12,"XMapSubwindows","","",2,null],[12,"XMapWindow","","",2,null],[12,"XMaskEvent","","",2,null],[12,"XMatchVisualInfo","","",2,null],[12,"XMaxCmapsOfScreen","","",2,null],[12,"XMaxRequestSize","","",2,null],[12,"XmbDrawImageString","","",2,null],[12,"XmbDrawString","","",2,null],[12,"XmbDrawText","","",2,null],[12,"XmbLookupString","","",2,null],[12,"XmbResetIC","","",2,null],[12,"XmbSetWMProperties","","",2,null],[12,"XmbTextEscapement","","",2,null],[12,"XmbTextExtents","","",2,null],[12,"XmbTextListToTextProperty","","",2,null],[12,"XmbTextPerCharExtents","","",2,null],[12,"XmbTextPropertyToTextList","","",2,null],[12,"XMinCmapsOfScreen","","",2,null],[12,"XMoveResizeWindow","","",2,null],[12,"XMoveWindow","","",2,null],[12,"XNewModifiermap","","",2,null],[12,"XNextEvent","","",2,null],[12,"XNextRequest","","",2,null],[12,"XNoOp","","",2,null],[12,"XOffsetRegion","","",2,null],[12,"XOMOfOC","","",2,null],[12,"XOpenDisplay","","",2,null],[12,"XOpenIM","","",2,null],[12,"XOpenOM","","",2,null],[12,"XParseColor","","",2,null],[12,"XParseGeometry","","",2,null],[12,"XPeekEvent","","",2,null],[12,"XPeekIfEvent","","",2,null],[12,"XPending","","",2,null],[12,"Xpermalloc","","",2,null],[12,"XPlanesOfScreen","","",2,null],[12,"XPointInRegion","","",2,null],[12,"XPolygonRegion","","",2,null],[12,"XProcessInternalConnection","","",2,null],[12,"XProtocolRevision","","",2,null],[12,"XProtocolVersion","","",2,null],[12,"XPutBackEvent","","",2,null],[12,"XPutImage","","",2,null],[12,"XPutPixel","","",2,null],[12,"XQLength","","",2,null],[12,"XQueryBestCursor","","",2,null],[12,"XQueryBestSize","","",2,null],[12,"XQueryBestStipple","","",2,null],[12,"XQueryBestTile","","",2,null],[12,"XQueryColor","","",2,null],[12,"XQueryColors","","",2,null],[12,"XQueryExtension","","",2,null],[12,"XQueryFont","","",2,null],[12,"XQueryKeymap","","",2,null],[12,"XQueryPointer","","",2,null],[12,"XQueryTextExtents","","",2,null],[12,"XQueryTextExtents16","","",2,null],[12,"XQueryTree","","",2,null],[12,"XRaiseWindow","","",2,null],[12,"XReadBitmapFile","","",2,null],[12,"XReadBitmapFileData","","",2,null],[12,"XRebindKeysym","","",2,null],[12,"XRecolorCursor","","",2,null],[12,"XReconfigureWMWindow","","",2,null],[12,"XRectInRegion","","",2,null],[12,"XRefreshKeyboardMapping","","",2,null],[12,"XRegisterIMInstantiateCallback","","",2,null],[12,"XRemoveConnectionWatch","","",2,null],[12,"XRemoveFromSaveSet","","",2,null],[12,"XRemoveHost","","",2,null],[12,"XRemoveHosts","","",2,null],[12,"XReparentWindow","","",2,null],[12,"XResetScreenSaver","","",2,null],[12,"XResizeWindow","","",2,null],[12,"XResourceManagerString","","",2,null],[12,"XRestackWindows","","",2,null],[12,"XrmCombineDatabase","","",2,null],[12,"XrmCombineFileDatabase","","",2,null],[12,"XrmDestroyDatabase","","",2,null],[12,"XrmEnumerateDatabase","","",2,null],[12,"XrmGetDatabase","","",2,null],[12,"XrmGetFileDatabase","","",2,null],[12,"XrmGetResource","","",2,null],[12,"XrmGetStringDatabase","","",2,null],[12,"XrmInitialize","","",2,null],[12,"XrmLocaleOfDatabase","","",2,null],[12,"XrmMergeDatabases","","",2,null],[12,"XrmParseCommand","","",2,null],[12,"XrmPermStringToQuark","","",2,null],[12,"XrmPutFileDatabase","","",2,null],[12,"XrmPutLineResource","","",2,null],[12,"XrmPutResource","","",2,null],[12,"XrmPutStringResource","","",2,null],[12,"XrmQGetResource","","",2,null],[12,"XrmQGetSearchList","","",2,null],[12,"XrmQGetSearchResource","","",2,null],[12,"XrmQPutResource","","",2,null],[12,"XrmQPutStringResource","","",2,null],[12,"XrmQuarkToString","","",2,null],[12,"XrmSetDatabase","","",2,null],[12,"XrmStringToBindingQuarkList","","",2,null],[12,"XrmStringToQuark","","",2,null],[12,"XrmStringToQuarkList","","",2,null],[12,"XrmUniqueQuark","","",2,null],[12,"XRootWindow","","",2,null],[12,"XRootWindowOfScreen","","",2,null],[12,"XRotateBuffers","","",2,null],[12,"XRotateWindowProperties","","",2,null],[12,"XSaveContext","","",2,null],[12,"XScreenCount","","",2,null],[12,"XScreenNumberOfScreen","","",2,null],[12,"XScreenOfDisplay","","",2,null],[12,"XScreenResourceString","","",2,null],[12,"XSelectInput","","",2,null],[12,"XSendEvent","","",2,null],[12,"XServerVendor","","",2,null],[12,"XSetAccessControl","","",2,null],[12,"XSetAfterFunction","","",2,null],[12,"XSetArcMode","","",2,null],[12,"XSetAuthorization","","",2,null],[12,"XSetBackground","","",2,null],[12,"XSetClassHint","","",2,null],[12,"XSetClipMask","","",2,null],[12,"XSetClipOrigin","","",2,null],[12,"XSetClipRectangles","","",2,null],[12,"XSetCloseDownMode","","",2,null],[12,"XSetCommand","","",2,null],[12,"XSetDashes","","",2,null],[12,"XSetErrorHandler","","",2,null],[12,"XSetFillRule","","",2,null],[12,"XSetFillStyle","","",2,null],[12,"XSetFont","","",2,null],[12,"XSetFontPath","","",2,null],[12,"XSetForeground","","",2,null],[12,"XSetFunction","","",2,null],[12,"XSetGraphicsExposures","","",2,null],[12,"XSetICFocus","","",2,null],[12,"XSetIconName","","",2,null],[12,"XSetIconSizes","","",2,null],[12,"XSetInputFocus","","",2,null],[12,"XSetIOErrorHandler","","",2,null],[12,"XSetLineAttributes","","",2,null],[12,"XSetLocaleModifiers","","",2,null],[12,"XSetModifierMapping","","",2,null],[12,"XSetNormalHints","","",2,null],[12,"XSetPlaneMask","","",2,null],[12,"XSetPointerMapping","","",2,null],[12,"XSetRegion","","",2,null],[12,"XSetRGBColormaps","","",2,null],[12,"XSetScreenSaver","","",2,null],[12,"XSetSelectionOwner","","",2,null],[12,"XSetSizeHints","","",2,null],[12,"XSetStandardColormap","","",2,null],[12,"XSetStandardProperties","","",2,null],[12,"XSetState","","",2,null],[12,"XSetStipple","","",2,null],[12,"XSetSubwindowMode","","",2,null],[12,"XSetTextProperty","","",2,null],[12,"XSetTile","","",2,null],[12,"XSetTransientForHint","","",2,null],[12,"XSetTSOrigin","","",2,null],[12,"XSetWindowBackground","","",2,null],[12,"XSetWindowBackgroundPixmap","","",2,null],[12,"XSetWindowBorder","","",2,null],[12,"XSetWindowBorderPixmap","","",2,null],[12,"XSetWindowBorderWidth","","",2,null],[12,"XSetWindowColormap","","",2,null],[12,"XSetWMClientMachine","","",2,null],[12,"XSetWMColormapWindows","","",2,null],[12,"XSetWMHints","","",2,null],[12,"XSetWMIconName","","",2,null],[12,"XSetWMName","","",2,null],[12,"XSetWMNormalHints","","",2,null],[12,"XSetWMProperties","","",2,null],[12,"XSetWMProtocols","","",2,null],[12,"XSetWMSizeHints","","",2,null],[12,"XSetZoomHints","","",2,null],[12,"XShrinkRegion","","",2,null],[12,"XStoreBuffer","","",2,null],[12,"XStoreBytes","","",2,null],[12,"XStoreColor","","",2,null],[12,"XStoreColors","","",2,null],[12,"XStoreName","","",2,null],[12,"XStoreNamedColor","","",2,null],[12,"XStringListToTextProperty","","",2,null],[12,"XStringToKeysym","","",2,null],[12,"XSubImage","","",2,null],[12,"XSubtractRegion","","",2,null],[12,"XSupportsLocale","","",2,null],[12,"XSync","","",2,null],[12,"XSynchronize","","",2,null],[12,"XTextExtents","","",2,null],[12,"XTextExtents16","","",2,null],[12,"XTextPropertyToStringList","","",2,null],[12,"XTextWidth","","",2,null],[12,"XTextWidth16","","",2,null],[12,"XTranslateCoordinates","","",2,null],[12,"XUndefineCursor","","",2,null],[12,"XUngrabButton","","",2,null],[12,"XUngrabKey","","",2,null],[12,"XUngrabKeyboard","","",2,null],[12,"XUngrabPointer","","",2,null],[12,"XUngrabServer","","",2,null],[12,"XUninstallColormap","","",2,null],[12,"XUnionRectWithRegion","","",2,null],[12,"XUnionRegion","","",2,null],[12,"XUnloadFont","","",2,null],[12,"XUnlockDisplay","","",2,null],[12,"XUnmapSubwindows","","",2,null],[12,"XUnmapWindow","","",2,null],[12,"XUnregisterIMInstantiateCallback","","",2,null],[12,"XUnsetICFocus","","",2,null],[12,"Xutf8DrawImageString","","",2,null],[12,"Xutf8DrawString","","",2,null],[12,"Xutf8DrawText","","",2,null],[12,"Xutf8LookupString","","",2,null],[12,"Xutf8ResetIC","","",2,null],[12,"Xutf8SetWMProperties","","",2,null],[12,"Xutf8TextEscapement","","",2,null],[12,"Xutf8TextExtents","","",2,null],[12,"Xutf8TextListToTextProperty","","",2,null],[12,"Xutf8TextPerCharExtents","","",2,null],[12,"Xutf8TextPropertyToTextList","","",2,null],[12,"XVendorRelease","","",2,null],[12,"XVisualIDFromVisual","","",2,null],[12,"XWarpPointer","","",2,null],[12,"XwcDrawImageString","","",2,null],[12,"XwcDrawString","","",2,null],[12,"XwcDrawText","","",2,null],[12,"XwcFreeStringList","","",2,null],[12,"XwcLookupString","","",2,null],[12,"XwcResetIC","","",2,null],[12,"XwcTextEscapement","","",2,null],[12,"XwcTextExtents","","",2,null],[12,"XwcTextListToTextProperty","","",2,null],[12,"XwcTextPerCharExtents","","",2,null],[12,"XwcTextPropertyToTextList","","",2,null],[12,"XWhitePixel","","",2,null],[12,"XWhitePixelOfScreen","","",2,null],[12,"XWidthMMOfScreen","","",2,null],[12,"XWidthOfScreen","","",2,null],[12,"XWindowEvent","","",2,null],[12,"XWithdrawWindow","","",2,null],[12,"XWMGeometry","","",2,null],[12,"XWriteBitmapFile","","",2,null],[12,"XXorRegion","","",2,null],[12,"XCreateIC","","",2,null],[12,"XCreateOC","","",2,null],[12,"XGetICValues","","",2,null],[12,"XGetIMValues","","",2,null],[12,"XGetOCValues","","",2,null],[12,"XGetOMValues","","",2,null],[12,"XSetICValues","","",2,null],[12,"XSetIMValues","","",2,null],[12,"XSetOCValues","","",2,null],[12,"XSetOMValues","","",2,null],[12,"XVaCreateNestedList","","",2,null],[3,"_XcmsCCC","","",null,null],[3,"XcmsColor","","",null,null],[3,"_XcmsColorSpace","","",null,null],[3,"_XcmsFunctionSet","","",null,null],[3,"_XkbAction","","",null,null],[3,"_XkbBounds","","",null,null],[3,"_XkbChanges","","",null,null],[3,"_XkbClientMapRec","","",null,null],[3,"_XkbColor","","",null,null],[3,"_XkbComponentList","","",null,null],[3,"_XkbComponentNames","","",null,null],[3,"_XkbControls","","",null,null],[3,"_XkbControlsChanges","","",null,null],[3,"_XkbControlsNotify","","",null,null],[3,"_XkbDeviceChanges","","",null,null],[3,"_XkbDeviceInfo","","",null,null],[3,"_XkbDeviceLedInfo","","",null,null],[3,"_XkbDoodad","","",null,null],[3,"_XkbExtensionDeviceNotify","","",null,null],[3,"_XkbGeometry","","",null,null],[3,"_XkbGeometrySizes","","",null,null],[3,"_XkbIndicatorMapRec","","",null,null],[3,"_XkbKey","","",null,null],[3,"_XkbKeyType","","",null,null],[3,"_XkbMapChanges","","",null,null],[3,"_XkbMods","","",null,null],[3,"_XkbNameChanges","","",null,null],[3,"_XkbNamesNotify","","",null,null],[3,"_XkbOutline","","",null,null],[3,"_XkbOverlay","","",null,null],[3,"_XkbOverlayKey","","",null,null],[3,"_XkbOverlayRow","","",null,null],[3,"_XkbProperty","","",null,null],[3,"_XkbRow","","",null,null],[3,"_XkbSection","","",null,null],[3,"_XkbServerMapRec","","",null,null],[3,"_XkbShape","","",null,null],[3,"_XkbStateRec","","",null,null],[3,"_XkbSymInterpretRec","","",null,null],[3,"XAnyEvent","","",null,null],[12,"type_","","",3,null],[12,"serial","","",3,null],[12,"send_event","","",3,null],[12,"display","","",3,null],[12,"window","","",3,null],[3,"XButtonEvent","","",null,null],[12,"type_","","",4,null],[12,"serial","","",4,null],[12,"send_event","","",4,null],[12,"display","","",4,null],[12,"window","","",4,null],[12,"root","","",4,null],[12,"subwindow","","",4,null],[12,"time","","",4,null],[12,"x","","",4,null],[12,"y","","",4,null],[12,"x_root","","",4,null],[12,"y_root","","",4,null],[12,"state","","",4,null],[12,"button","","",4,null],[12,"same_screen","","",4,null],[3,"XCirculateEvent","","",null,null],[12,"type_","","",5,null],[12,"serial","","",5,null],[12,"send_event","","",5,null],[12,"display","","",5,null],[12,"event","","",5,null],[12,"window","","",5,null],[12,"place","","",5,null],[3,"XCirculateRequestEvent","","",null,null],[12,"type_","","",6,null],[12,"serial","","",6,null],[12,"send_event","","",6,null],[12,"display","","",6,null],[12,"parent","","",6,null],[12,"window","","",6,null],[12,"place","","",6,null],[3,"XClientMessageEvent","","",null,null],[12,"type_","","",7,null],[12,"serial","","",7,null],[12,"send_event","","",7,null],[12,"display","","",7,null],[12,"window","","",7,null],[12,"message_type","","",7,null],[12,"format","","",7,null],[12,"data","","",7,null],[3,"XColormapEvent","","",null,null],[12,"type_","","",8,null],[12,"serial","","",8,null],[12,"send_event","","",8,null],[12,"display","","",8,null],[12,"window","","",8,null],[12,"colormap","","",8,null],[12,"new","","",8,null],[12,"state","","",8,null],[3,"XConfigureEvent","","",null,null],[12,"type_","","",9,null],[12,"serial","","",9,null],[12,"send_event","","",9,null],[12,"display","","",9,null],[12,"event","","",9,null],[12,"window","","",9,null],[12,"x","","",9,null],[12,"y","","",9,null],[12,"width","","",9,null],[12,"height","","",9,null],[12,"border_width","","",9,null],[12,"above","","",9,null],[12,"override_redirect","","",9,null],[3,"XConfigureRequestEvent","","",null,null],[12,"type_","","",10,null],[12,"serial","","",10,null],[12,"send_event","","",10,null],[12,"display","","",10,null],[12,"parent","","",10,null],[12,"window","","",10,null],[12,"x","","",10,null],[12,"y","","",10,null],[12,"width","","",10,null],[12,"height","","",10,null],[12,"border_width","","",10,null],[12,"above","","",10,null],[12,"detail","","",10,null],[12,"value_mask","","",10,null],[3,"XCreateWindowEvent","","",null,null],[12,"type_","","",11,null],[12,"serial","","",11,null],[12,"send_event","","",11,null],[12,"display","","",11,null],[12,"parent","","",11,null],[12,"window","","",11,null],[12,"x","","",11,null],[12,"y","","",11,null],[12,"width","","",11,null],[12,"height","","",11,null],[12,"border_width","","",11,null],[12,"override_redirect","","",11,null],[3,"XCrossingEvent","","",null,null],[12,"type_","","",12,null],[12,"serial","","",12,null],[12,"send_event","","",12,null],[12,"display","","",12,null],[12,"window","","",12,null],[12,"root","","",12,null],[12,"subwindow","","",12,null],[12,"time","","",12,null],[12,"x","","",12,null],[12,"y","","",12,null],[12,"x_root","","",12,null],[12,"y_root","","",12,null],[12,"mode","","",12,null],[12,"detail","","",12,null],[12,"same_screen","","",12,null],[12,"focus","","",12,null],[12,"state","","",12,null],[3,"XDestroyWindowEvent","","",null,null],[12,"type_","","",13,null],[12,"serial","","",13,null],[12,"send_event","","",13,null],[12,"display","","",13,null],[12,"event","","",13,null],[12,"window","","",13,null],[3,"XErrorEvent","","",null,null],[12,"type_","","",14,null],[12,"display","","",14,null],[12,"resourceid","","",14,null],[12,"serial","","",14,null],[12,"error_code","","",14,null],[12,"request_code","","",14,null],[12,"minor_code","","",14,null],[3,"XExposeEvent","","",null,null],[12,"type_","","",15,null],[12,"serial","","",15,null],[12,"send_event","","",15,null],[12,"display","","",15,null],[12,"window","","",15,null],[12,"x","","",15,null],[12,"y","","",15,null],[12,"width","","",15,null],[12,"height","","",15,null],[12,"count","","",15,null],[3,"XFocusChangeEvent","","",null,null],[12,"type_","","",16,null],[12,"serial","","",16,null],[12,"send_event","","",16,null],[12,"display","","",16,null],[12,"window","","",16,null],[12,"mode","","",16,null],[12,"detail","","",16,null],[3,"XGraphicsExposeEvent","","",null,null],[12,"type_","","",17,null],[12,"serial","","",17,null],[12,"send_event","","",17,null],[12,"display","","",17,null],[12,"drawable","","",17,null],[12,"x","","",17,null],[12,"y","","",17,null],[12,"width","","",17,null],[12,"height","","",17,null],[12,"count","","",17,null],[12,"major_code","","",17,null],[12,"minor_code","","",17,null],[3,"XGravityEvent","","",null,null],[12,"type_","","",18,null],[12,"serial","","",18,null],[12,"send_event","","",18,null],[12,"display","","",18,null],[12,"event","","",18,null],[12,"window","","",18,null],[12,"x","","",18,null],[12,"y","","",18,null],[3,"XKeyEvent","","",null,null],[12,"type_","","",19,null],[12,"serial","","",19,null],[12,"send_event","","",19,null],[12,"display","","",19,null],[12,"window","","",19,null],[12,"root","","",19,null],[12,"subwindow","","",19,null],[12,"time","","",19,null],[12,"x","","",19,null],[12,"y","","",19,null],[12,"x_root","","",19,null],[12,"y_root","","",19,null],[12,"state","","",19,null],[12,"keycode","","",19,null],[12,"same_screen","","",19,null],[3,"XKeymapEvent","","",null,null],[12,"type_","","",20,null],[12,"serial","","",20,null],[12,"send_event","","",20,null],[12,"display","","",20,null],[12,"window","","",20,null],[12,"key_vector","","",20,null],[3,"XMapEvent","","",null,null],[12,"type_","","",21,null],[12,"serial","","",21,null],[12,"send_event","","",21,null],[12,"display","","",21,null],[12,"event","","",21,null],[12,"window","","",21,null],[12,"override_redirect","","",21,null],[3,"XMappingEvent","","",null,null],[12,"type_","","",22,null],[12,"serial","","",22,null],[12,"send_event","","",22,null],[12,"display","","",22,null],[12,"event","","",22,null],[12,"request","","",22,null],[12,"first_keycode","","",22,null],[12,"count","","",22,null],[3,"XMapRequestEvent","","",null,null],[12,"type_","","",23,null],[12,"serial","","",23,null],[12,"send_event","","",23,null],[12,"display","","",23,null],[12,"parent","","",23,null],[12,"window","","",23,null],[3,"XMotionEvent","","",null,null],[12,"type_","","",24,null],[12,"serial","","",24,null],[12,"send_event","","",24,null],[12,"display","","",24,null],[12,"window","","",24,null],[12,"root","","",24,null],[12,"subwindow","","",24,null],[12,"time","","",24,null],[12,"x","","",24,null],[12,"y","","",24,null],[12,"x_root","","",24,null],[12,"y_root","","",24,null],[12,"state","","",24,null],[12,"is_hint","","",24,null],[12,"same_screen","","",24,null],[3,"XNoExposeEvent","","",null,null],[12,"type_","","",25,null],[12,"serial","","",25,null],[12,"send_event","","",25,null],[12,"display","","",25,null],[12,"drawable","","",25,null],[12,"major_code","","",25,null],[12,"minor_code","","",25,null],[3,"XPropertyEvent","","",null,null],[12,"type_","","",26,null],[12,"serial","","",26,null],[12,"send_event","","",26,null],[12,"display","","",26,null],[12,"window","","",26,null],[12,"atom","","",26,null],[12,"time","","",26,null],[12,"state","","",26,null],[3,"XReparentEvent","","",null,null],[12,"type_","","",27,null],[12,"serial","","",27,null],[12,"send_event","","",27,null],[12,"display","","",27,null],[12,"event","","",27,null],[12,"window","","",27,null],[12,"parent","","",27,null],[12,"x","","",27,null],[12,"y","","",27,null],[12,"override_redirect","","",27,null],[3,"XResizeRequestEvent","","",null,null],[12,"type_","","",28,null],[12,"serial","","",28,null],[12,"send_event","","",28,null],[12,"display","","",28,null],[12,"window","","",28,null],[12,"width","","",28,null],[12,"height","","",28,null],[3,"XSelectionClearEvent","","",null,null],[12,"type_","","",29,null],[12,"serial","","",29,null],[12,"send_event","","",29,null],[12,"display","","",29,null],[12,"window","","",29,null],[12,"selection","","",29,null],[12,"time","","",29,null],[3,"XSelectionEvent","","",null,null],[12,"type_","","",30,null],[12,"serial","","",30,null],[12,"send_event","","",30,null],[12,"display","","",30,null],[12,"requestor","","",30,null],[12,"selection","","",30,null],[12,"target","","",30,null],[12,"property","","",30,null],[12,"time","","",30,null],[3,"XSelectionRequestEvent","","",null,null],[12,"type_","","",31,null],[12,"serial","","",31,null],[12,"send_event","","",31,null],[12,"display","","",31,null],[12,"owner","","",31,null],[12,"requestor","","",31,null],[12,"selection","","",31,null],[12,"target","","",31,null],[12,"property","","",31,null],[12,"time","","",31,null],[3,"XUnmapEvent","","",null,null],[12,"type_","","",32,null],[12,"serial","","",32,null],[12,"send_event","","",32,null],[12,"display","","",32,null],[12,"event","","",32,null],[12,"window","","",32,null],[12,"from_configure","","",32,null],[3,"XVisibilityEvent","","",null,null],[12,"type_","","",33,null],[12,"serial","","",33,null],[12,"send_event","","",33,null],[12,"display","","",33,null],[12,"window","","",33,null],[12,"state","","",33,null],[3,"_XkbCompatMapRec","","",null,null],[12,"sym_interpret","","",34,null],[12,"groups","","",34,null],[12,"num_si","","",34,null],[12,"size_si","","",34,null],[3,"_XkbDesc","","",null,null],[12,"dpy","","",35,null],[12,"flags","","",35,null],[12,"device_spec","","",35,null],[12,"min_key_code","","",35,null],[12,"max_key_code","","",35,null],[12,"ctrls","","",35,null],[12,"server","","",35,null],[12,"map","","",35,null],[12,"indicators","","",35,null],[12,"names","","",35,null],[12,"compat","","",35,null],[12,"geom","","",35,null],[3,"_XkbIndicatorRec","","",null,null],[12,"phys_indicators","","",36,null],[12,"maps","","",36,null],[3,"_XkbKeyAliasRec","","",null,null],[12,"real","","",37,null],[12,"alias","","",37,null],[3,"_XkbKeyNameRec","","",null,null],[12,"name","","",38,null],[3,"_XkbNamesRec","","",null,null],[12,"keycodes","","",39,null],[12,"geometry","","",39,null],[12,"symbols","","",39,null],[12,"types","","",39,null],[12,"compat","","",39,null],[12,"vmods","","",39,null],[12,"indicators","","",39,null],[12,"groups","","",39,null],[12,"keys","","",39,null],[12,"key_aliases","","",39,null],[12,"radio_groups","","",39,null],[12,"phys_symbols","","",39,null],[12,"num_keys","","",39,null],[12,"num_key_aliases","","",39,null],[12,"num_rg","","",39,null],[3,"XkbAnyEvent","","",null,null],[12,"type_","","",40,null],[12,"serial","","",40,null],[12,"send_event","","",40,null],[12,"display","","",40,null],[12,"time","","",40,null],[12,"xkb_type","","",40,null],[12,"device","","",40,null],[3,"XkbNewKeyboardNotifyEvent","","",null,null],[12,"type_","","",41,null],[12,"serial","","",41,null],[12,"send_event","","",41,null],[12,"display","","",41,null],[12,"time","","",41,null],[12,"xkb_type","","",41,null],[12,"device","","",41,null],[12,"old_device","","",41,null],[12,"min_key_code","","",41,null],[12,"max_key_code","","",41,null],[12,"old_min_key_code","","",41,null],[12,"old_max_key_code","","",41,null],[12,"changed","","",41,null],[12,"req_major","","",41,null],[12,"req_minor","","",41,null],[3,"_XkbMapNotifyEvent","","",null,null],[12,"type_","","",42,null],[12,"serial","","",42,null],[12,"send_event","","",42,null],[12,"display","","",42,null],[12,"time","","",42,null],[12,"xkb_type","","",42,null],[12,"device","","",42,null],[12,"changed","","",42,null],[12,"flags","","",42,null],[12,"first_type","","",42,null],[12,"num_types","","",42,null],[12,"min_key_code","","",42,null],[12,"max_key_code","","",42,null],[12,"first_key_sym","","",42,null],[12,"first_key_act","","",42,null],[12,"first_key_bahavior","","",42,null],[12,"first_key_explicit","","",42,null],[12,"first_modmap_key","","",42,null],[12,"first_vmodmap_key","","",42,null],[12,"num_key_syms","","",42,null],[12,"num_key_acts","","",42,null],[12,"num_key_behaviors","","",42,null],[12,"num_key_explicit","","",42,null],[12,"num_modmap_keys","","",42,null],[12,"num_vmodmap_keys","","",42,null],[12,"vmods","","",42,null],[3,"XkbStateNotifyEvent","","",null,null],[12,"type_","","",43,null],[12,"serial","","",43,null],[12,"send_event","","",43,null],[12,"display","","",43,null],[12,"time","","",43,null],[12,"xkb_type","","",43,null],[12,"device","","",43,null],[12,"changed","","",43,null],[12,"group","","",43,null],[12,"base_group","","",43,null],[12,"latched_group","","",43,null],[12,"locked_group","","",43,null],[12,"mods","","",43,null],[12,"base_mods","","",43,null],[12,"latched_mods","","",43,null],[12,"locked_mods","","",43,null],[12,"compat_state","","",43,null],[12,"grab_mods","","",43,null],[12,"compat_grab_mods","","",43,null],[12,"lookup_mods","","",43,null],[12,"compat_lookup_mods","","",43,null],[12,"ptr_buttons","","",43,null],[12,"keycode","","",43,null],[12,"event_type","","",43,null],[12,"req_major","","",43,null],[12,"req_minor","","",43,null],[3,"_XkbControlsNotifyEvent","","",null,null],[12,"type_","","",44,null],[12,"serial","","",44,null],[12,"send_event","","",44,null],[12,"display","","",44,null],[12,"time","","",44,null],[12,"xkb_type","","",44,null],[12,"device","","",44,null],[12,"changed_ctrls","","",44,null],[12,"enabled_ctrls","","",44,null],[12,"enabled_ctrl_changes","","",44,null],[12,"num_groups","","",44,null],[12,"keycode","","",44,null],[12,"event_type","","",44,null],[12,"req_major","","",44,null],[12,"req_minor","","",44,null],[3,"XkbIndicatorNotifyEvent","","",null,null],[12,"type_","","",45,null],[12,"serial","","",45,null],[12,"send_event","","",45,null],[12,"display","","",45,null],[12,"time","","",45,null],[12,"xkb_type","","",45,null],[12,"device","","",45,null],[12,"changed","","",45,null],[12,"state","","",45,null],[3,"_XkbNamesNotifyEvent","","",null,null],[12,"type_","","",46,null],[12,"serial","","",46,null],[12,"send_event","","",46,null],[12,"display","","",46,null],[12,"time","","",46,null],[12,"xkb_type","","",46,null],[12,"device","","",46,null],[12,"changed","","",46,null],[12,"first_type","","",46,null],[12,"num_types","","",46,null],[12,"first_lvl","","",46,null],[12,"num_lvls","","",46,null],[12,"num_aliases","","",46,null],[12,"num_radio_groups","","",46,null],[12,"changed_vmods","","",46,null],[12,"changed_groups","","",46,null],[12,"changed_indicators","","",46,null],[12,"first_key","","",46,null],[12,"num_keys","","",46,null],[3,"XkbCompatMapNotifyEvent","","",null,null],[12,"type_","","",47,null],[12,"serial","","",47,null],[12,"send_event","","",47,null],[12,"display","","",47,null],[12,"time","","",47,null],[12,"xkb_type","","",47,null],[12,"device","","",47,null],[12,"changed_groups","","",47,null],[12,"first_si","","",47,null],[12,"num_si","","",47,null],[12,"num_total_si","","",47,null],[3,"XkbBellNotifyEvent","","",null,null],[12,"type_","","",48,null],[12,"serial","","",48,null],[12,"send_event","","",48,null],[12,"display","","",48,null],[12,"time","","",48,null],[12,"xkb_type","","",48,null],[12,"device","","",48,null],[12,"percent","","",48,null],[12,"pitch","","",48,null],[12,"duration","","",48,null],[12,"bell_class","","",48,null],[12,"bell_id","","",48,null],[12,"name","","",48,null],[12,"window","","",48,null],[12,"event_only","","",48,null],[3,"XkbActionMessageEvent","","",null,null],[12,"type_","","",49,null],[12,"serial","","",49,null],[12,"send_event","","",49,null],[12,"display","","",49,null],[12,"time","","",49,null],[12,"xkb_type","","",49,null],[12,"device","","",49,null],[12,"keycode","","",49,null],[12,"press","","",49,null],[12,"key_event_follows","","",49,null],[12,"group","","",49,null],[12,"mods","","",49,null],[12,"message","","",49,null],[3,"XkbAccessXNotifyEvent","","",null,null],[12,"type_","","",50,null],[12,"serial","","",50,null],[12,"send_event","","",50,null],[12,"display","","",50,null],[12,"time","","",50,null],[12,"xkb_type","","",50,null],[12,"device","","",50,null],[12,"detail","","",50,null],[12,"keycode","","",50,null],[12,"sk_delay","","",50,null],[12,"debounce_delay","","",50,null],[3,"_XkbExtensionDeviceNotifyEvent","","",null,null],[12,"type_","","",51,null],[12,"serial","","",51,null],[12,"send_event","","",51,null],[12,"display","","",51,null],[12,"time","","",51,null],[12,"xkb_type","","",51,null],[12,"device","","",51,null],[12,"reason","","",51,null],[12,"supported","","",51,null],[12,"unsupported","","",51,null],[12,"first_btn","","",51,null],[12,"num_btns","","",51,null],[12,"leds_defined","","",51,null],[12,"led_state","","",51,null],[12,"led_class","","",51,null],[12,"led_id","","",51,null],[3,"XkbEvent","","",null,null],[3,"Depth","","",null,null],[12,"depth","","",52,null],[12,"nvisuals","","",52,null],[12,"visuals","","",52,null],[3,"Screen","","",null,null],[12,"ext_data","","",53,null],[12,"display","","",53,null],[12,"root","","",53,null],[12,"width","","",53,null],[12,"height","","",53,null],[12,"mwidth","","",53,null],[12,"mheight","","",53,null],[12,"ndepths","","",53,null],[12,"depths","","",53,null],[12,"root_depth","","",53,null],[12,"root_visual","","",53,null],[12,"default_gc","","",53,null],[12,"cmap","","",53,null],[12,"white_pixel","","",53,null],[12,"black_pixel","","",53,null],[12,"max_maps","","",53,null],[12,"min_maps","","",53,null],[12,"backing_store","","",53,null],[12,"save_unders","","",53,null],[12,"root_input_mask","","",53,null],[3,"ScreenFormat","","",null,null],[12,"ext_data","","",54,null],[12,"depth","","",54,null],[12,"bits_per_pixel","","",54,null],[12,"scanline_pad","","",54,null],[3,"Visual","","",null,null],[12,"ext_data","","",55,null],[12,"visualid","","",55,null],[12,"class","","",55,null],[12,"red_mask","","",55,null],[12,"green_mask","","",55,null],[12,"blue_mask","","",55,null],[12,"bits_per_rgb","","",55,null],[12,"map_entries","","",55,null],[3,"XArc","","",null,null],[12,"x","","",56,null],[12,"y","","",56,null],[12,"width","","",56,null],[12,"height","","",56,null],[12,"angle1","","",56,null],[12,"angle2","","",56,null],[3,"XChar2b","","",null,null],[12,"byte1","","",57,null],[12,"byte2","","",57,null],[3,"XCharStruct","","",null,null],[12,"lbearing","","",58,null],[12,"rbearing","","",58,null],[12,"width","","",58,null],[12,"ascent","","",58,null],[12,"descent","","",58,null],[12,"attributes","","",58,null],[3,"XClassHint","","",null,null],[12,"res_name","","",59,null],[12,"res_class","","",59,null],[3,"XColor","","",null,null],[12,"pixel","","",60,null],[12,"red","","",60,null],[12,"green","","",60,null],[12,"blue","","",60,null],[12,"flags","","",60,null],[12,"pad","","",60,null],[3,"XComposeStatus","","",null,null],[12,"compose_ptr","","",61,null],[12,"chars_matched","","",61,null],[3,"XExtCodes","","",null,null],[12,"extension","","",62,null],[12,"major_opcode","","",62,null],[12,"first_event","","",62,null],[12,"first_error","","",62,null],[3,"XExtData","","",null,null],[12,"number","","",63,null],[12,"next","","",63,null],[12,"free_private","","",63,null],[12,"private_data","","",63,null],[3,"XFontProp","","",null,null],[12,"name","","",64,null],[12,"card32","","",64,null],[3,"XFontSetExtents","","",null,null],[12,"max_ink_extent","","",65,null],[12,"max_logical_extent","","",65,null],[3,"XFontStruct","","",null,null],[12,"ext_data","","",66,null],[12,"fid","","",66,null],[12,"direction","","",66,null],[12,"min_char_or_byte2","","",66,null],[12,"max_char_or_byte2","","",66,null],[12,"min_byte1","","",66,null],[12,"max_byte1","","",66,null],[12,"all_chars_exist","","",66,null],[12,"default_char","","",66,null],[12,"n_properties","","",66,null],[12,"properties","","",66,null],[12,"min_bounds","","",66,null],[12,"max_bounds","","",66,null],[12,"per_char","","",66,null],[12,"ascent","","",66,null],[12,"descent","","",66,null],[3,"XGCValues","","",null,null],[12,"function","","",67,null],[12,"plane_mask","","",67,null],[12,"foreground","","",67,null],[12,"background","","",67,null],[12,"line_width","","",67,null],[12,"line_style","","",67,null],[12,"cap_style","","",67,null],[12,"join_style","","",67,null],[12,"fill_style","","",67,null],[12,"fill_rule","","",67,null],[12,"arc_mode","","",67,null],[12,"tile","","",67,null],[12,"stipple","","",67,null],[12,"ts_x_origin","","",67,null],[12,"ts_y_origin","","",67,null],[12,"font","","",67,null],[12,"subwindow_mode","","",67,null],[12,"graphics_exposures","","",67,null],[12,"clip_x_origin","","",67,null],[12,"clip_y_origin","","",67,null],[12,"clip_mask","","",67,null],[12,"dash_offset","","",67,null],[12,"dashes","","",67,null],[3,"XGenericEventCookie","","",null,null],[12,"type_","","",68,null],[12,"serial","","",68,null],[12,"send_event","","",68,null],[12,"display","","",68,null],[12,"extension","","",68,null],[12,"evtype","","",68,null],[12,"cookie","","",68,null],[12,"data","","",68,null],[3,"XHostAddress","","",null,null],[12,"family","","",69,null],[12,"length","","",69,null],[12,"address","","",69,null],[3,"XIconSize","","",null,null],[12,"min_width","","",70,null],[12,"min_height","","",70,null],[12,"max_width","","",70,null],[12,"max_height","","",70,null],[12,"width_inc","","",70,null],[12,"height_inc","","",70,null],[3,"XImage","","",null,null],[12,"width","","",71,null],[12,"height","","",71,null],[12,"xoffset","","",71,null],[12,"format","","",71,null],[12,"data","","",71,null],[12,"byte_order","","",71,null],[12,"bitmap_unit","","",71,null],[12,"bitmap_bit_order","","",71,null],[12,"bitmap_pad","","",71,null],[12,"depth","","",71,null],[12,"bytes_per_line","","",71,null],[12,"bits_per_pixel","","",71,null],[12,"red_mask","","",71,null],[12,"green_mask","","",71,null],[12,"blue_mask","","",71,null],[12,"obdata","","",71,null],[12,"funcs","","",71,null],[3,"XKeyboardControl","","",null,null],[12,"key_click_percent","","",72,null],[12,"bell_percent","","",72,null],[12,"bell_pitch","","",72,null],[12,"bell_duration","","",72,null],[12,"led","","",72,null],[12,"led_mode","","",72,null],[12,"key","","",72,null],[12,"auto_repeat_mode","","",72,null],[3,"XKeyboardState","","",null,null],[12,"key_click_percent","","",73,null],[12,"bell_percent","","",73,null],[12,"bell_pitch","","",73,null],[12,"bell_duration","","",73,null],[12,"led_mask","","",73,null],[12,"global_auto_repeat","","",73,null],[12,"auto_repeats","","",73,null],[3,"XmbTextItem","","",null,null],[12,"chars","","",74,null],[12,"nchars","","",74,null],[12,"delta","","",74,null],[12,"font_set","","",74,null],[3,"XModifierKeymap","","",null,null],[12,"max_keypermod","","",75,null],[12,"modifiermap","","",75,null],[3,"XOMCharSetList","","",null,null],[12,"charset_count","","",76,null],[12,"charset_list","","",76,null],[3,"XPixmapFormatValues","","",null,null],[12,"depth","","",77,null],[12,"bits_per_pixel","","",77,null],[12,"scanline_pad","","",77,null],[3,"XPoint","","",null,null],[12,"x","","",78,null],[12,"y","","",78,null],[3,"XRectangle","","",null,null],[12,"x","","",79,null],[12,"y","","",79,null],[12,"width","","",79,null],[12,"height","","",79,null],[3,"XrmOptionDescRec","","",null,null],[12,"option","","",80,null],[12,"specifier","","",80,null],[12,"argKind","","",80,null],[12,"value","","",80,null],[3,"XrmValue","","",null,null],[12,"size","","",81,null],[12,"addr","","",81,null],[3,"XSegment","","",null,null],[12,"x1","","",82,null],[12,"y1","","",82,null],[12,"x2","","",82,null],[12,"y2","","",82,null],[3,"XSetWindowAttributes","","",null,null],[12,"background_pixmap","","",83,null],[12,"background_pixel","","",83,null],[12,"border_pixmap","","",83,null],[12,"border_pixel","","",83,null],[12,"bit_gravity","","",83,null],[12,"win_gravity","","",83,null],[12,"backing_store","","",83,null],[12,"backing_planes","","",83,null],[12,"backing_pixel","","",83,null],[12,"save_under","","",83,null],[12,"event_mask","","",83,null],[12,"do_not_propagate_mask","","",83,null],[12,"override_redirect","","",83,null],[12,"colormap","","",83,null],[12,"cursor","","",83,null],[3,"XSizeHints","","",null,null],[12,"flags","","",84,null],[12,"x","","",84,null],[12,"y","","",84,null],[12,"width","","",84,null],[12,"height","","",84,null],[12,"min_width","","",84,null],[12,"min_height","","",84,null],[12,"max_width","","",84,null],[12,"max_height","","",84,null],[12,"width_inc","","",84,null],[12,"height_inc","","",84,null],[12,"min_aspect","","",84,null],[12,"max_aspect","","",84,null],[12,"base_width","","",84,null],[12,"base_height","","",84,null],[12,"win_gravity","","",84,null],[3,"XStandardColormap","","",null,null],[12,"colormap","","",85,null],[12,"red_max","","",85,null],[12,"red_mult","","",85,null],[12,"green_max","","",85,null],[12,"green_mult","","",85,null],[12,"blue_max","","",85,null],[12,"blue_mult","","",85,null],[12,"base_pixel","","",85,null],[12,"visualid","","",85,null],[12,"killid","","",85,null],[3,"XTextItem","","",null,null],[12,"chars","","",86,null],[12,"nchars","","",86,null],[12,"delta","","",86,null],[12,"font","","",86,null],[3,"XTextItem16","","",null,null],[12,"chars","","",87,null],[12,"nchars","","",87,null],[12,"delta","","",87,null],[12,"font","","",87,null],[3,"XTextProperty","","",null,null],[12,"value","","",88,null],[12,"encoding","","",88,null],[12,"format","","",88,null],[12,"nitems","","",88,null],[3,"XTimeCoord","","",null,null],[12,"time","","",89,null],[12,"x","","",89,null],[12,"y","","",89,null],[3,"XVisualInfo","","",null,null],[12,"visual","","",90,null],[12,"visualid","","",90,null],[12,"screen","","",90,null],[12,"depth","","",90,null],[12,"class","","",90,null],[12,"red_mask","","",90,null],[12,"green_mask","","",90,null],[12,"blue_mask","","",90,null],[12,"colormap_size","","",90,null],[12,"bits_per_rgb","","",90,null],[3,"XwcTextItem","","",null,null],[12,"chars","","",91,null],[12,"nchars","","",91,null],[12,"delta","","",91,null],[12,"font_set","","",91,null],[3,"XWindowAttributes","","",null,null],[12,"x","","",92,null],[12,"y","","",92,null],[12,"width","","",92,null],[12,"height","","",92,null],[12,"border_width","","",92,null],[12,"depth","","",92,null],[12,"visual","","",92,null],[12,"root","","",92,null],[12,"class","","",92,null],[12,"bit_gravity","","",92,null],[12,"win_gravity","","",92,null],[12,"backing_store","","",92,null],[12,"backing_planes","","",92,null],[12,"backing_pixel","","",92,null],[12,"save_under","","",92,null],[12,"colormap","","",92,null],[12,"map_installed","","",92,null],[12,"map_state","","",92,null],[12,"all_event_masks","","",92,null],[12,"your_event_mask","","",92,null],[12,"do_not_propagate_mask","","",92,null],[12,"override_redirect","","",92,null],[12,"screen","","",92,null],[3,"XWindowChanges","","",null,null],[12,"x","","",93,null],[12,"y","","",93,null],[12,"width","","",93,null],[12,"height","","",93,null],[12,"border_width","","",93,null],[12,"sibling","","",93,null],[12,"stack_mode","","",93,null],[3,"XWMHints","","",null,null],[12,"flags","","",94,null],[12,"input","","",94,null],[12,"initial_state","","",94,null],[12,"icon_pixmap","","",94,null],[12,"icon_window","","",94,null],[12,"icon_x","","",94,null],[12,"icon_y","","",94,null],[12,"icon_mask","","",94,null],[12,"window_group","","",94,null],[3,"AspectRatio","","",null,null],[12,"x","","",95,null],[12,"y","","",95,null],[3,"ClientMessageData","","",null,null],[3,"ImageFns","","",null,null],[12,"create_image","","",96,null],[12,"destroy_image","","",96,null],[12,"get_pixel","","",96,null],[12,"put_pixel","","",96,null],[12,"sub_image","","",96,null],[12,"add_pixel","","",96,null],[19,"XEvent","","",null,null],[12,"type_","","",97,null],[12,"any","","",97,null],[12,"button","","",97,null],[12,"circulate","","",97,null],[12,"circulate_request","","",97,null],[12,"client_message","","",97,null],[12,"colormap","","",97,null],[12,"configure","","",97,null],[12,"configure_request","","",97,null],[12,"create_window","","",97,null],[12,"crossing","","",97,null],[12,"destroy_window","","",97,null],[12,"error","","",97,null],[12,"expose","","",97,null],[12,"focus_change","","",97,null],[12,"generic_event_cookie","","",97,null],[12,"graphics_expose","","",97,null],[12,"gravity","","",97,null],[12,"key","","",97,null],[12,"keymap","","",97,null],[12,"map","","",97,null],[12,"mapping","","",97,null],[12,"map_request","","",97,null],[12,"motion","","",97,null],[12,"no_expose","","",97,null],[12,"property","","",97,null],[12,"reparent","","",97,null],[12,"resize_request","","",97,null],[12,"selection_clear","","",97,null],[12,"selection","","",97,null],[12,"selection_request","","",97,null],[12,"unmap","","",97,null],[12,"visibility","","",97,null],[12,"pad","","",97,null],[12,"xf86vm_notify","","",97,null],[12,"xrr_screen_change_notify","","",97,null],[12,"xrr_notify","","",97,null],[12,"xrr_output_change_notify","","",97,null],[12,"xrr_crtc_change_notify","","",97,null],[12,"xrr_output_property_notify","","",97,null],[12,"xrr_provider_change_notify","","",97,null],[12,"xrr_provider_property_notify","","",97,null],[12,"xrr_resource_change_notify","","",97,null],[12,"xss_notify","","",97,null],[4,"_XDisplay","","",null,null],[4,"xError","","",null,null],[4,"xEvent","","",null,null],[4,"_XGC","","",null,null],[4,"_XIC","","",null,null],[4,"_XIM","","",null,null],[4,"_XRegion","","",null,null],[4,"_XOC","","",null,null],[4,"_XOM","","",null,null],[4,"_XrmHashBucketRec","","",null,null],[4,"XkbKbdDpyStateRec","","",null,null],[0,"xkb","","",null,null],[6,"Atom","","",null,null],[6,"Bool","","",null,null],[6,"Colormap","","",null,null],[6,"Cursor","","",null,null],[6,"Drawable","","",null,null],[6,"Font","","",null,null],[6,"GContext","","",null,null],[6,"KeyCode","","",null,null],[6,"KeySym","","",null,null],[6,"Mask","","",null,null],[6,"Pixmap","","",null,null],[6,"Status","","",null,null],[6,"Time","","",null,null],[6,"VisualID","","",null,null],[6,"Window","","",null,null],[6,"XID","","",null,null],[6,"XPointer","","",null,null],[6,"XEDataObject","","",null,null],[6,"Display","","",null,null],[6,"GC","","",null,null],[6,"Region","","",null,null],[6,"XcmsCCC","","",null,null],[6,"XcmsColorSpace","","",null,null],[6,"XcmsFunctionSet","","",null,null],[6,"XContext","","",null,null],[6,"XFontSet","","",null,null],[6,"XIC","","",null,null],[6,"XIM","","",null,null],[6,"XkbAction","","",null,null],[6,"XkbBoundsPtr","","",null,null],[6,"XkbChangesPtr","","",null,null],[6,"XkbClientMapPtr","","",null,null],[6,"XkbColorPtr","","",null,null],[6,"XkbCompatMapPtr","","",null,null],[6,"XkbComponentListPtr","","",null,null],[6,"XkbComponentNamesPtr","","",null,null],[6,"XkbControlsChangesPtr","","",null,null],[6,"XkbControlsNotifyEvent","","",null,null],[6,"XkbControlsPtr","","",null,null],[6,"XkbDescPtr","","",null,null],[6,"XkbDeviceChangesPtr","","",null,null],[6,"XkbDeviceInfoPtr","","",null,null],[6,"XkbDeviceLedInfoPtr","","",null,null],[6,"XkbDoodadPtr","","",null,null],[6,"XkbExtensionDeviceNotifyEvent","","",null,null],[6,"XkbGeometryPtr","","",null,null],[6,"XkbGeometrySizesPtr","","",null,null],[6,"XkbIndicatorMapPtr","","",null,null],[6,"XkbIndicatorMapRec","","",null,null],[6,"XkbIndicatorPtr","","",null,null],[6,"XkbKeyTypePtr","","",null,null],[6,"XkbMapChangesPtr","","",null,null],[6,"XkbMapNotifyEvent","","",null,null],[6,"XkbModsPtr","","",null,null],[6,"XkbModsRec","","",null,null],[6,"XkbNameChangesPtr","","",null,null],[6,"XkbNamesNotifyEvent","","",null,null],[6,"XkbNamesPtr","","",null,null],[6,"XkbKeyAliasPtr","","",null,null],[6,"XkbKeyNamePtr","","",null,null],[6,"XkbKeyPtr","","",null,null],[6,"XkbOutlinePtr","","",null,null],[6,"XkbOverlayKeyPtr","","",null,null],[6,"XkbOverlayPtr","","",null,null],[6,"XkbOverlayRowPtr","","",null,null],[6,"XkbPropertyPtr","","",null,null],[6,"XkbRowPtr","","",null,null],[6,"XkbSectionPtr","","",null,null],[6,"XkbServerMapPtr","","",null,null],[6,"XkbShapePtr","","",null,null],[6,"XkbStatePtr","","",null,null],[6,"XkbSymInterpretPtr","","",null,null],[6,"XOM","","",null,null],[6,"XrmDatabase","","",null,null],[6,"XrmOptionDescList","","",null,null],[6,"XConnectionWatchProc","","",null,null],[6,"XICCEncodingStyle","","",null,null],[6,"XOrientation","","",null,null],[6,"XrmBinding","","",null,null],[6,"XrmOptionKind","","",null,null],[6,"XButtonPressedEvent","","",null,null],[6,"XButtonReleasedEvent","","",null,null],[6,"XEnterWindowEvent","","",null,null],[6,"XLeaveWindowEvent","","",null,null],[6,"XFocusInEvent","","",null,null],[6,"XFocusOutEvent","","",null,null],[6,"XKeyPressedEvent","","",null,null],[6,"XKeyReleasedEvent","","",null,null],[6,"XPointerMovedEvent","","",null,null],[6,"XkbKbdDpyStatePtr","","",null,null],[17,"AllocNone","","",null,null],[17,"AllocAll","","",null,null],[17,"XkbKeyNameLength","","",null,null],[17,"XkbNumIndicators","","",null,null],[17,"XkbNumKbdGroups","","",null,null],[17,"XkbNumVirtualMods","","",null,null],[17,"XA_PRIMARY","","",null,null],[17,"XA_SECONDARY","","",null,null],[17,"XA_ARC","","",null,null],[17,"XA_ATOM","","",null,null],[17,"XA_BITMAP","","",null,null],[17,"XA_CARDINAL","","",null,null],[17,"XA_COLORMAP","","",null,null],[17,"XA_CURSOR","","",null,null],[17,"XA_CUT_BUFFER0","","",null,null],[17,"XA_CUT_BUFFER1","","",null,null],[17,"XA_CUT_BUFFER2","","",null,null],[17,"XA_CUT_BUFFER3","","",null,null],[17,"XA_CUT_BUFFER4","","",null,null],[17,"XA_CUT_BUFFER5","","",null,null],[17,"XA_CUT_BUFFER6","","",null,null],[17,"XA_CUT_BUFFER7","","",null,null],[17,"XA_DRAWABLE","","",null,null],[17,"XA_FONT","","",null,null],[17,"XA_INTEGER","","",null,null],[17,"XA_PIXMAP","","",null,null],[17,"XA_POINT","","",null,null],[17,"XA_RECTANGLE","","",null,null],[17,"XA_RESOURCE_MANAGER","","",null,null],[17,"XA_RGB_COLOR_MAP","","",null,null],[17,"XA_RGB_BEST_MAP","","",null,null],[17,"XA_RGB_BLUE_MAP","","",null,null],[17,"XA_RGB_DEFAULT_MAP","","",null,null],[17,"XA_RGB_GRAY_MAP","","",null,null],[17,"XA_RGB_GREEN_MAP","","",null,null],[17,"XA_RGB_RED_MAP","","",null,null],[17,"XA_STRING","","",null,null],[17,"XA_VISUALID","","",null,null],[17,"XA_WINDOW","","",null,null],[17,"XA_WM_COMMAND","","",null,null],[17,"XA_WM_HINTS","","",null,null],[17,"XA_WM_CLIENT_MACHINE","","",null,null],[17,"XA_WM_ICON_NAME","","",null,null],[17,"XA_WM_ICON_SIZE","","",null,null],[17,"XA_WM_NAME","","",null,null],[17,"XA_WM_NORMAL_HINTS","","",null,null],[17,"XA_WM_SIZE_HINTS","","",null,null],[17,"XA_WM_ZOOM_HINTS","","",null,null],[17,"XA_MIN_SPACE","","",null,null],[17,"XA_NORM_SPACE","","",null,null],[17,"XA_MAX_SPACE","","",null,null],[17,"XA_END_SPACE","","",null,null],[17,"XA_SUPERSCRIPT_X","","",null,null],[17,"XA_SUPERSCRIPT_Y","","",null,null],[17,"XA_SUBSCRIPT_X","","",null,null],[17,"XA_SUBSCRIPT_Y","","",null,null],[17,"XA_UNDERLINE_POSITION","","",null,null],[17,"XA_UNDERLINE_THICKNESS","","",null,null],[17,"XA_STRIKEOUT_ASCENT","","",null,null],[17,"XA_STRIKEOUT_DESCENT","","",null,null],[17,"XA_ITALIC_ANGLE","","",null,null],[17,"XA_X_HEIGHT","","",null,null],[17,"XA_QUAD_WIDTH","","",null,null],[17,"XA_WEIGHT","","",null,null],[17,"XA_POINT_SIZE","","",null,null],[17,"XA_RESOLUTION","","",null,null],[17,"XA_COPYRIGHT","","",null,null],[17,"XA_NOTICE","","",null,null],[17,"XA_FONT_NAME","","",null,null],[17,"XA_FAMILY_NAME","","",null,null],[17,"XA_FULL_NAME","","",null,null],[17,"XA_CAP_HEIGHT","","",null,null],[17,"XA_WM_CLASS","","",null,null],[17,"XA_WM_TRANSIENT_FOR","","",null,null],[17,"False","","",null,null],[17,"True","","",null,null],[17,"Unsorted","","",null,null],[17,"YSorted","","",null,null],[17,"YXSorted","","",null,null],[17,"YXBanded","","",null,null],[17,"DoRed","","",null,null],[17,"DoGreen","","",null,null],[17,"DoBlue","","",null,null],[17,"Success","","",null,null],[17,"BadRequest","","",null,null],[17,"BadValue","","",null,null],[17,"BadWindow","","",null,null],[17,"BadPixmap","","",null,null],[17,"BadAtom","","",null,null],[17,"BadCursor","","",null,null],[17,"BadFont","","",null,null],[17,"BadMatch","","",null,null],[17,"BadDrawable","","",null,null],[17,"BadAccess","","",null,null],[17,"BadAlloc","","",null,null],[17,"BadColor","","",null,null],[17,"BadGC","","",null,null],[17,"BadIDChoice","","",null,null],[17,"BadName","","",null,null],[17,"BadLength","","",null,null],[17,"BadImplementation","","",null,null],[17,"FirstExtensionError","","",null,null],[17,"LastExtensionError","","",null,null],[17,"KeyPress","","",null,null],[17,"KeyRelease","","",null,null],[17,"ButtonPress","","",null,null],[17,"ButtonRelease","","",null,null],[17,"MotionNotify","","",null,null],[17,"EnterNotify","","",null,null],[17,"LeaveNotify","","",null,null],[17,"FocusIn","","",null,null],[17,"FocusOut","","",null,null],[17,"KeymapNotify","","",null,null],[17,"Expose","","",null,null],[17,"GraphicsExpose","","",null,null],[17,"NoExpose","","",null,null],[17,"VisibilityNotify","","",null,null],[17,"CreateNotify","","",null,null],[17,"DestroyNotify","","",null,null],[17,"UnmapNotify","","",null,null],[17,"MapNotify","","",null,null],[17,"MapRequest","","",null,null],[17,"ReparentNotify","","",null,null],[17,"ConfigureNotify","","",null,null],[17,"ConfigureRequest","","",null,null],[17,"GravityNotify","","",null,null],[17,"ResizeRequest","","",null,null],[17,"CirculateNotify","","",null,null],[17,"CirculateRequest","","",null,null],[17,"PropertyNotify","","",null,null],[17,"SelectionClear","","",null,null],[17,"SelectionRequest","","",null,null],[17,"SelectionNotify","","",null,null],[17,"ColormapNotify","","",null,null],[17,"ClientMessage","","",null,null],[17,"MappingNotify","","",null,null],[17,"GenericEvent","","",null,null],[17,"LASTEvent","","",null,null],[17,"NoEventMask","","",null,null],[17,"KeyPressMask","","",null,null],[17,"KeyReleaseMask","","",null,null],[17,"ButtonPressMask","","",null,null],[17,"ButtonReleaseMask","","",null,null],[17,"EnterWindowMask","","",null,null],[17,"LeaveWindowMask","","",null,null],[17,"PointerMotionMask","","",null,null],[17,"PointerMotionHintMask","","",null,null],[17,"Button1MotionMask","","",null,null],[17,"Button2MotionMask","","",null,null],[17,"Button3MotionMask","","",null,null],[17,"Button4MotionMask","","",null,null],[17,"Button5MotionMask","","",null,null],[17,"ButtonMotionMask","","",null,null],[17,"KeymapStateMask","","",null,null],[17,"ExposureMask","","",null,null],[17,"VisibilityChangeMask","","",null,null],[17,"StructureNotifyMask","","",null,null],[17,"ResizeRedirectMask","","",null,null],[17,"SubstructureNotifyMask","","",null,null],[17,"SubstructureRedirectMask","","",null,null],[17,"FocusChangeMask","","",null,null],[17,"PropertyChangeMask","","",null,null],[17,"ColormapChangeMask","","",null,null],[17,"OwnerGrabButtonMask","","",null,null],[17,"PropModeReplace","","",null,null],[17,"PropModePrepend","","",null,null],[17,"PropModeAppend","","",null,null],[17,"ShiftMapIndex","","",null,null],[17,"LockMapIndex","","",null,null],[17,"ControlMapIndex","","",null,null],[17,"Mod1MapIndex","","",null,null],[17,"Mod2MapIndex","","",null,null],[17,"Mod3MapIndex","","",null,null],[17,"Mod4MapIndex","","",null,null],[17,"Mod5MapIndex","","",null,null],[17,"Button1Mask","","",null,null],[17,"Button2Mask","","",null,null],[17,"Button3Mask","","",null,null],[17,"Button4Mask","","",null,null],[17,"Button5Mask","","",null,null],[17,"AnyModifier","","",null,null],[17,"NotifyNormal","","",null,null],[17,"NotifyGrab","","",null,null],[17,"NotifyUngrab","","",null,null],[17,"NotifyWhileGrabbed","","",null,null],[17,"NotifyHint","","",null,null],[17,"NotifyAncestor","","",null,null],[17,"NotifyVirtual","","",null,null],[17,"NotifyInferior","","",null,null],[17,"NotifyNonlinear","","",null,null],[17,"NotifyNonlinearVirtual","","",null,null],[17,"NotifyPointer","","",null,null],[17,"NotifyPointerRoot","","",null,null],[17,"NotifyDetailNone","","",null,null],[17,"VisibilityUnobscured","","",null,null],[17,"VisibilityPartiallyObscured","","",null,null],[17,"VisibilityFullyObscured","","",null,null],[17,"PlaceOnTop","","",null,null],[17,"PlaceOnBottom","","",null,null],[17,"FamilyInternet","","",null,null],[17,"FamilyDECnet","","",null,null],[17,"FamilyChaos","","",null,null],[17,"FamilyInternet6","","",null,null],[17,"FamilyServerInterpreted","","",null,null],[17,"PropertyNewValue","","",null,null],[17,"PropertyDelete","","",null,null],[17,"ColormapUninstalled","","",null,null],[17,"ColormapInstalled","","",null,null],[17,"GrabModeSync","","",null,null],[17,"GrabModeAsync","","",null,null],[17,"GrabSuccess","","",null,null],[17,"AlreadyGrabbed","","",null,null],[17,"GrabInvalidTime","","",null,null],[17,"GrabNotViewable","","",null,null],[17,"GrabFrozen","","",null,null],[17,"AsyncPointer","","",null,null],[17,"SyncPointer","","",null,null],[17,"ReplayPointer","","",null,null],[17,"AsyncKeyboard","","",null,null],[17,"SyncKeyboard","","",null,null],[17,"ReplayKeyboard","","",null,null],[17,"AsyncBoth","","",null,null],[17,"SyncBoth","","",null,null],[17,"RevertToNone","","",null,null],[17,"RevertToPointerRoot","","",null,null],[17,"RevertToParent","","",null,null],[17,"CWX","","",null,null],[17,"CWY","","",null,null],[17,"CWWidth","","",null,null],[17,"CWHeight","","",null,null],[17,"CWBorderWidth","","",null,null],[17,"CWSibling","","",null,null],[17,"CWStackMode","","",null,null],[17,"ForgetGravity","","",null,null],[17,"UnmapGravity","","",null,null],[17,"NorthWestGravity","","",null,null],[17,"NorthGravity","","",null,null],[17,"NorthEastGravity","","",null,null],[17,"WestGravity","","",null,null],[17,"CenterGravity","","",null,null],[17,"EastGravity","","",null,null],[17,"SouthWestGravity","","",null,null],[17,"SouthGravity","","",null,null],[17,"SouthEastGravity","","",null,null],[17,"StaticGravity","","",null,null],[17,"XYBitmap","","",null,null],[17,"XYPixmap","","",null,null],[17,"ZPixmap","","",null,null],[17,"NotUseful","","",null,null],[17,"WhenMapped","","",null,null],[17,"Always","","",null,null],[17,"IsUnmapped","","",null,null],[17,"IsUnviewable","","",null,null],[17,"IsViewable","","",null,null],[17,"ShiftMask","","",null,null],[17,"LockMask","","",null,null],[17,"ControlMask","","",null,null],[17,"Mod1Mask","","",null,null],[17,"Mod2Mask","","",null,null],[17,"Mod3Mask","","",null,null],[17,"Mod4Mask","","",null,null],[17,"Mod5Mask","","",null,null],[17,"Button1","","",null,null],[17,"Button2","","",null,null],[17,"Button3","","",null,null],[17,"Button4","","",null,null],[17,"Button5","","",null,null],[17,"USPosition","","",null,null],[17,"USSize","","",null,null],[17,"PPosition","","",null,null],[17,"PSize","","",null,null],[17,"PMinSize","","",null,null],[17,"PMaxSize","","",null,null],[17,"PResizeInc","","",null,null],[17,"PAspect","","",null,null],[17,"PBaseSize","","",null,null],[17,"PWinGravity","","",null,null],[17,"PAllHints","","",null,null],[17,"SetModeInsert","","",null,null],[17,"SetModeDelete","","",null,null],[17,"DestroyAll","","",null,null],[17,"RetainPermanent","","",null,null],[17,"RetainTemporary","","",null,null],[17,"Above","","",null,null],[17,"Below","","",null,null],[17,"TopIf","","",null,null],[17,"BottomIf","","",null,null],[17,"Opposite","","",null,null],[17,"RaiseLowest","","",null,null],[17,"LowerHighest","","",null,null],[17,"GXclear","","",null,null],[17,"GXand","","",null,null],[17,"GXandReverse","","",null,null],[17,"GXcopy","","",null,null],[17,"GXandInverted","","",null,null],[17,"GXnoop","","",null,null],[17,"GXxor","","",null,null],[17,"GXor","","",null,null],[17,"GXnor","","",null,null],[17,"GXequiv","","",null,null],[17,"GXinvert","","",null,null],[17,"GXorReverse","","",null,null],[17,"GXcopyInverted","","",null,null],[17,"GXorInverted","","",null,null],[17,"GXnand","","",null,null],[17,"GXset","","",null,null],[17,"LineSolid","","",null,null],[17,"LineOnOffDash","","",null,null],[17,"LineDoubleDash","","",null,null],[17,"CapNotLast","","",null,null],[17,"CapButt","","",null,null],[17,"CapRound","","",null,null],[17,"CapProjecting","","",null,null],[17,"JoinMiter","","",null,null],[17,"JoinRound","","",null,null],[17,"JoinBevel","","",null,null],[17,"FillSolid","","",null,null],[17,"FillTiled","","",null,null],[17,"FillStippled","","",null,null],[17,"FillOpaqueStippled","","",null,null],[17,"EvenOddRule","","",null,null],[17,"WindingRule","","",null,null],[17,"ClipByChildren","","",null,null],[17,"IncludeInferiors","","",null,null],[17,"CoordModeOrigin","","",null,null],[17,"CoordModePrevious","","",null,null],[17,"Complex","","",null,null],[17,"Nonconvex","","",null,null],[17,"Convex","","",null,null],[17,"ArcChord","","",null,null],[17,"ArcPieSlice","","",null,null],[17,"GCFunction","","",null,null],[17,"GCPlaneMask","","",null,null],[17,"GCForeground","","",null,null],[17,"GCBackground","","",null,null],[17,"GCLineWidth","","",null,null],[17,"GCLineStyle","","",null,null],[17,"GCCapStyle","","",null,null],[17,"GCJoinStyle","","",null,null],[17,"GCFillStyle","","",null,null],[17,"GCFillRule","","",null,null],[17,"GCTile","","",null,null],[17,"GCStipple","","",null,null],[17,"GCTileStipXOrigin","","",null,null],[17,"GCTileStipYOrigin","","",null,null],[17,"GCFont","","",null,null],[17,"GCSubwindowMode","","",null,null],[17,"GCGraphicsExposures","","",null,null],[17,"GCClipXOrigin","","",null,null],[17,"GCClipYOrigin","","",null,null],[17,"GCClipMask","","",null,null],[17,"GCDashOffset","","",null,null],[17,"GCDashList","","",null,null],[17,"GCArcMode","","",null,null],[17,"GCLastBit","","",null,null],[17,"FontLeftToRight","","",null,null],[17,"FontRightToLeft","","",null,null],[17,"FontChange","","",null,null],[17,"CursorShape","","",null,null],[17,"TileShape","","",null,null],[17,"StippleShape","","",null,null],[17,"AutoRepeatModeOff","","",null,null],[17,"AutoRepeatModeOn","","",null,null],[17,"AutoRepeatModeDefault","","",null,null],[17,"LedModeOff","","",null,null],[17,"LedModeOn","","",null,null],[17,"KBKeyClickPercent","","",null,null],[17,"KBBellPercent","","",null,null],[17,"KBBellPitch","","",null,null],[17,"KBBellDuration","","",null,null],[17,"KBLed","","",null,null],[17,"KBLedMode","","",null,null],[17,"KBKey","","",null,null],[17,"KBAutoRepeatMode","","",null,null],[17,"MappingSuccess","","",null,null],[17,"MappingBusy","","",null,null],[17,"MappingFailed","","",null,null],[17,"MappingModifier","","",null,null],[17,"MappingKeyboard","","",null,null],[17,"MappingPointer","","",null,null],[17,"DontPreferBlanking","","",null,null],[17,"PreferBlanking","","",null,null],[17,"DefaultBlanking","","",null,null],[17,"DisableScreenSaver","","",null,null],[17,"DisableScreenInterval","","",null,null],[17,"DontAllowExposures","","",null,null],[17,"AllowExposures","","",null,null],[17,"DefaultExposures","","",null,null],[17,"ScreenSaverReset","","",null,null],[17,"ScreenSaverActive","","",null,null],[17,"HostInsert","","",null,null],[17,"HostDelete","","",null,null],[17,"EnableAccess","","",null,null],[17,"DisableAccess","","",null,null],[17,"StaticGray","","",null,null],[17,"GrayScale","","",null,null],[17,"StaticColor","","",null,null],[17,"PseudoColor","","",null,null],[17,"TrueColor","","",null,null],[17,"DirectColor","","",null,null],[17,"VisualNoMask","","",null,null],[17,"VisualIDMask","","",null,null],[17,"VisualScreenMask","","",null,null],[17,"VisualDepthMask","","",null,null],[17,"VisualClassMask","","",null,null],[17,"VisualRedMaskMask","","",null,null],[17,"VisualGreenMaskMask","","",null,null],[17,"VisualBlueMaskMask","","",null,null],[17,"VisualColormapSizeMask","","",null,null],[17,"VisualBitsPerRGBMask","","",null,null],[17,"VisualAllMask","","",null,null],[17,"CWBackPixmap","","",null,null],[17,"CWBackPixel","","",null,null],[17,"CWBorderPixmap","","",null,null],[17,"CWBorderPixel","","",null,null],[17,"CWBitGravity","","",null,null],[17,"CWWinGravity","","",null,null],[17,"CWBackingStore","","",null,null],[17,"CWBackingPlanes","","",null,null],[17,"CWBackingPixel","","",null,null],[17,"CWOverrideRedirect","","",null,null],[17,"CWSaveUnder","","",null,null],[17,"CWEventMask","","",null,null],[17,"CWDontPropagate","","",null,null],[17,"CWColormap","","",null,null],[17,"CWCursor","","",null,null],[17,"InputOutput","","",null,null],[17,"InputOnly","","",null,null],[17,"XIMPreeditArea","","",null,null],[17,"XIMPreeditCallbacks","","",null,null],[17,"XIMPreeditPosition","","",null,null],[17,"XIMPreeditNothing","","",null,null],[17,"XIMPreeditNone","","",null,null],[17,"XIMStatusArea","","",null,null],[17,"XIMStatusCallbacks","","",null,null],[17,"XIMStatusNothing","","",null,null],[17,"XIMStatusNone","","",null,null],[17,"LSBFirst","","",null,null],[17,"MSBFirst","","",null,null],[17,"ParentRelative","","",null,null],[17,"CopyFromParent","","",null,null],[17,"PointerWindow","","",null,null],[17,"InputFocus","","",null,null],[17,"PointerRoot","","",null,null],[17,"AnyPropertyType","","",null,null],[17,"AnyKey","","",null,null],[17,"AnyButton","","",null,null],[17,"AllTemporary","","",null,null],[17,"CurrentTime","","",null,null],[17,"NoSymbol","","",null,null],[17,"X_PROTOCOL","","",null,null],[17,"X_PROTOCOL_REVISION","","",null,null],[17,"XNVaNestedList","","",null,null],[17,"XNQueryInputStyle","","",null,null],[17,"XNClientWindow","","",null,null],[17,"XNInputStyle","","",null,null],[17,"XNFocusWindow","","",null,null],[17,"XNResourceName","","",null,null],[17,"XNResourceClass","","",null,null],[17,"XNGeometryCallback","","",null,null],[17,"XNDestroyCallback","","",null,null],[17,"XNFilterEvents","","",null,null],[17,"XNPreeditStartCallback","","",null,null],[17,"XNPreeditDoneCallback","","",null,null],[17,"XNPreeditDrawCallback","","",null,null],[17,"XNPreeditCaretCallback","","",null,null],[17,"XNPreeditStateNotifyCallback","","",null,null],[17,"XNPreeditAttributes","","",null,null],[17,"XNStatusStartCallback","","",null,null],[17,"XNStatusDoneCallback","","",null,null],[17,"XNStatusDrawCallback","","",null,null],[17,"XNStatusAttributes","","",null,null],[17,"XNArea","","",null,null],[17,"XNAreaNeeded","","",null,null],[17,"XNSpotLocation","","",null,null],[17,"XNColormap","","",null,null],[17,"XNStdColormap","","",null,null],[17,"XNForeground","","",null,null],[17,"XNBackground","","",null,null],[17,"XNBackgroundPixmap","","",null,null],[17,"XNFontSet","","",null,null],[17,"XNLineSpace","","",null,null],[17,"XNCursor","","",null,null],[17,"XNVaNestedList_0","","",null,null],[17,"XNQueryInputStyle_0","","",null,null],[17,"XNClientWindow_0","","",null,null],[17,"XNInputStyle_0","","",null,null],[17,"XNFocusWindow_0","","",null,null],[17,"XNResourceName_0","","",null,null],[17,"XNResourceClass_0","","",null,null],[17,"XNGeometryCallback_0","","",null,null],[17,"XNDestroyCallback_0","","",null,null],[17,"XNFilterEvents_0","","",null,null],[17,"XNPreeditStartCallback_0","","",null,null],[17,"XNPreeditDoneCallback_0","","",null,null],[17,"XNPreeditDrawCallback_0","","",null,null],[17,"XNPreeditCaretCallback_0","","",null,null],[17,"XNPreeditStateNotifyCallback_0","","",null,null],[17,"XNPreeditAttributes_0","","",null,null],[17,"XNStatusStartCallback_0","","",null,null],[17,"XNStatusDoneCallback_0","","",null,null],[17,"XNStatusDrawCallback_0","","",null,null],[17,"XNStatusAttributes_0","","",null,null],[17,"XNArea_0","","",null,null],[17,"XNAreaNeeded_0","","",null,null],[17,"XNSpotLocation_0","","",null,null],[17,"XNColormap_0","","",null,null],[17,"XNStdColormap_0","","",null,null],[17,"XNForeground_0","","",null,null],[17,"XNBackground_0","","",null,null],[17,"XNBackgroundPixmap_0","","",null,null],[17,"XNFontSet_0","","",null,null],[17,"XNLineSpace_0","","",null,null],[17,"XNCursor_0","","",null,null],[17,"XNQueryIMValuesList","","",null,null],[17,"XNQueryICValuesList","","",null,null],[17,"XNVisiblePosition","","",null,null],[17,"XNR6PreeditCallback","","",null,null],[17,"XNStringConversionCallback","","",null,null],[17,"XNStringConversion","","",null,null],[17,"XNResetState","","",null,null],[17,"XNHotKey","","",null,null],[17,"XNHotKeyState","","",null,null],[17,"XNPreeditState","","",null,null],[17,"XNSeparatorofNestedList","","",null,null],[17,"XNQueryIMValuesList_0","","",null,null],[17,"XNQueryICValuesList_0","","",null,null],[17,"XNVisiblePosition_0","","",null,null],[17,"XNR6PreeditCallback_0","","",null,null],[17,"XNStringConversionCallback_0","","",null,null],[17,"XNStringConversion_0","","",null,null],[17,"XNResetState_0","","",null,null],[17,"XNHotKey_0","","",null,null],[17,"XNHotKeyState_0","","",null,null],[17,"XNPreeditState_0","","",null,null],[17,"XNSeparatorofNestedList_0","","",null,null],[17,"XBufferOverflow","","",null,null],[17,"XLookupNone","","",null,null],[17,"XLookupChars","","",null,null],[17,"XLookupKeySym","","",null,null],[17,"XLookupBoth","","",null,null],[17,"XkbActionMessageLength","","",null,null],[17,"XkbOD_Success","","",null,null],[17,"XkbOD_BadLibraryVersion","","",null,null],[17,"XkbOD_ConnectionRefused","","",null,null],[17,"XkbOD_NonXkbServer","","",null,null],[17,"XkbOD_BadServerVersion","","",null,null],[17,"XkbLC_ForceLatinLookup","","",null,null],[17,"XkbLC_ConsumeLookupMods","","",null,null],[17,"XkbLC_AlwaysConsumeShiftAndLock","","",null,null],[17,"XkbLC_IgnoreNewKeyboards","","",null,null],[17,"XkbLC_ControlFallback","","",null,null],[17,"XkbLC_ConsumeKeysOnComposeFail","","",null,null],[17,"XkbLC_ComposeLED","","",null,null],[17,"XkbLC_BeepOnComposeFail","","",null,null],[17,"XkbLC_AllComposeControls","","",null,null],[17,"XkbLC_AllControls","","",null,null],[17,"XkbNewKeyboardNotify","","",null,null],[17,"XkbMapNotify","","",null,null],[17,"XkbStateNotify","","",null,null],[17,"XkbControlsNotify","","",null,null],[17,"XkbIndicatorStateNotify","","",null,null],[17,"XkbIndicatorMapNotify","","",null,null],[17,"XkbNamesNotify","","",null,null],[17,"XkbCompatMapNotify","","",null,null],[17,"XkbBellNotify","","",null,null],[17,"XkbActionMessage","","",null,null],[17,"XkbAccessXNotify","","",null,null],[17,"XkbExtensionDeviceNotify","","",null,null],[17,"XkbNewKeyboardNotifyMask","","",null,null],[17,"XkbMapNotifyMask","","",null,null],[17,"XkbStateNotifyMask","","",null,null],[17,"XkbControlsNotifyMask","","",null,null],[17,"XkbIndicatorStateNotifyMask","","",null,null],[17,"XkbIndicatorMapNotifyMask","","",null,null],[17,"XkbNamesNotifyMask","","",null,null],[17,"XkbCompatMapNotifyMask","","",null,null],[17,"XkbBellNotifyMask","","",null,null],[17,"XkbActionMessageMask","","",null,null],[17,"XkbAccessXNotifyMask","","",null,null],[17,"XkbExtensionDeviceNotifyMask","","",null,null],[17,"XkbAllEventsMask","","",null,null],[17,"NoValue","","",null,null],[17,"XValue","","",null,null],[17,"YValue","","",null,null],[17,"WidthValue","","",null,null],[17,"HeightValue","","",null,null],[17,"AllValues","","",null,null],[17,"XNegative","","",null,null],[17,"YNegative","","",null,null],[17,"InputHint","","",null,null],[17,"StateHint","","",null,null],[17,"IconPixmapHint","","",null,null],[17,"IconWindowHint","","",null,null],[17,"IconPositionHint","","",null,null],[17,"IconMaskHint","","",null,null],[17,"WindowGroupHint","","",null,null],[17,"AllHints","","",null,null],[17,"XUrgencyHint","","",null,null],[17,"XStringStyle","","",null,null],[17,"XCompoundTextStyle","","",null,null],[17,"XTextStyle","","",null,null],[17,"XStdICCTextStyle","","",null,null],[17,"XUTF8StringStyle","","",null,null],[11,"open","","",2,{"inputs":[],"output":{"generics":["xlib","openerror"],"name":"result"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xevent"}}],[11,"get_type","","",97,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xanyevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xanyevent"}}],[11,"from","","",97,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",3,{"inputs":[{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"from","","",3,{"inputs":[{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xbuttonevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xbuttonevent"}}],[11,"from","","",97,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",4,{"inputs":[{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"from","","",4,{"inputs":[{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xcirculateevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xcirculateevent"}}],[11,"from","","",97,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",5,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"from","","",5,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xcirculaterequestevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xcirculaterequestevent"}}],[11,"from","","",97,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",6,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"from","","",6,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xclientmessageevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xclientmessageevent"}}],[11,"from","","",97,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",7,{"inputs":[{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"from","","",7,{"inputs":[{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xcolormapevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xcolormapevent"}}],[11,"from","","",97,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",8,{"inputs":[{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"from","","",8,{"inputs":[{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xconfigureevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xconfigureevent"}}],[11,"from","","",97,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",9,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"from","","",9,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xconfigurerequestevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xconfigurerequestevent"}}],[11,"from","","",97,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",10,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"from","","",10,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xcreatewindowevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xcreatewindowevent"}}],[11,"from","","",97,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",11,{"inputs":[{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"from","","",11,{"inputs":[{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xcrossingevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xcrossingevent"}}],[11,"from","","",97,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",12,{"inputs":[{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"from","","",12,{"inputs":[{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xdestroywindowevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xdestroywindowevent"}}],[11,"from","","",97,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",13,{"inputs":[{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"from","","",13,{"inputs":[{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xerrorevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xerrorevent"}}],[11,"from","","",97,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",14,{"inputs":[{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"from","","",14,{"inputs":[{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xexposeevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xexposeevent"}}],[11,"from","","",97,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",15,{"inputs":[{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"from","","",15,{"inputs":[{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xfocuschangeevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xfocuschangeevent"}}],[11,"from","","",97,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",16,{"inputs":[{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"from","","",16,{"inputs":[{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xgenericeventcookie"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xgenericeventcookie"}}],[11,"from","","",97,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xevent"}}],[11,"from","","",68,{"inputs":[{"name":"xevent"}],"output":{"name":"xgenericeventcookie"}}],[11,"from","","",68,{"inputs":[{"name":"xevent"}],"output":{"name":"xgenericeventcookie"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"from","","",97,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",17,{"inputs":[{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"from","","",17,{"inputs":[{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xgravityevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xgravityevent"}}],[11,"from","","",97,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",18,{"inputs":[{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"from","","",18,{"inputs":[{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xkeyevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xkeyevent"}}],[11,"from","","",97,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",19,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"from","","",19,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xkeymapevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xkeymapevent"}}],[11,"from","","",97,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",20,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"from","","",20,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xmapevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xmapevent"}}],[11,"from","","",97,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",21,{"inputs":[{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"from","","",21,{"inputs":[{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xmappingevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xmappingevent"}}],[11,"from","","",97,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xmaprequestevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xmaprequestevent"}}],[11,"from","","",97,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",23,{"inputs":[{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"from","","",23,{"inputs":[{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xmotionevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xmotionevent"}}],[11,"from","","",97,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",24,{"inputs":[{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"from","","",24,{"inputs":[{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xnoexposeevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xnoexposeevent"}}],[11,"from","","",97,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",25,{"inputs":[{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"from","","",25,{"inputs":[{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xpropertyevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xpropertyevent"}}],[11,"from","","",97,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",26,{"inputs":[{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"from","","",26,{"inputs":[{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xreparentevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xreparentevent"}}],[11,"from","","",97,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",27,{"inputs":[{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"from","","",27,{"inputs":[{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xresizerequestevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xresizerequestevent"}}],[11,"from","","",97,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",28,{"inputs":[{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"from","","",28,{"inputs":[{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xselectionclearevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xselectionclearevent"}}],[11,"from","","",97,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",29,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"from","","",29,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xselectionevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xselectionevent"}}],[11,"from","","",97,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",30,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"from","","",30,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xselectionrequestevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xselectionrequestevent"}}],[11,"from","","",97,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",31,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"from","","",31,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xunmapevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xunmapevent"}}],[11,"from","","",97,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",32,{"inputs":[{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"from","","",32,{"inputs":[{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xvisibilityevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xvisibilityevent"}}],[11,"from","","",97,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"from","","",33,{"inputs":[{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"from","","",33,{"inputs":[{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"xanyevent"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"xanyevent"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"xanyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"xbuttonevent"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"xbuttonevent"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"xbuttonevent"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"xcirculateevent"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"xcirculateevent"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"xcirculateevent"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"xcirculaterequestevent"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"xcirculaterequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"xcirculaterequestevent"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"xclientmessageevent"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"xclientmessageevent"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"xclientmessageevent"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"xcolormapevent"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"xcolormapevent"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"xcolormapevent"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"xconfigureevent"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"xconfigureevent"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"xconfigureevent"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"xconfigurerequestevent"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"xconfigurerequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"xconfigurerequestevent"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"xcreatewindowevent"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"xcreatewindowevent"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"xcreatewindowevent"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"xcrossingevent"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"xcrossingevent"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"xcrossingevent"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"xdestroywindowevent"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"xdestroywindowevent"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"xdestroywindowevent"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"xerrorevent"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"xerrorevent"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"xerrorevent"}],"output":{"name":"bool"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"xexposeevent"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"xexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"xexposeevent"}],"output":{"name":"bool"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"xfocuschangeevent"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"xfocuschangeevent"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"xfocuschangeevent"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"xgraphicsexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"xgraphicsexposeevent"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"xgravityevent"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"xgravityevent"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"xgravityevent"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"xkeyevent"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"xkeyevent"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"self"},{"name":"xkeyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"xkeymapevent"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"xkeymapevent"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"xkeymapevent"}],"output":{"name":"bool"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"xmapevent"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"xmapevent"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"xmapevent"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"xmappingevent"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"xmappingevent"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"xmappingevent"}],"output":{"name":"bool"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"xmaprequestevent"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"xmaprequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"self"},{"name":"xmaprequestevent"}],"output":{"name":"bool"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"xmotionevent"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"xmotionevent"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"xmotionevent"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"xnoexposeevent"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"xnoexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"xnoexposeevent"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"xpropertyevent"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"xpropertyevent"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"xpropertyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"xreparentevent"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"xreparentevent"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"xreparentevent"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"xresizerequestevent"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"xresizerequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"xresizerequestevent"}],"output":{"name":"bool"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"xselectionclearevent"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"xselectionclearevent"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"xselectionclearevent"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"xselectionevent"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"xselectionevent"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"xselectionevent"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"xselectionrequestevent"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"xselectionrequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"xselectionrequestevent"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"xunmapevent"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"xunmapevent"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"xunmapevent"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"xvisibilityevent"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"xvisibilityevent"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"xvisibilityevent"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"_xkbdesc"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"_xkbdesc"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"self"},{"name":"_xkbdesc"}],"output":{"name":"bool"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"_xkbkeyaliasrec"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"_xkbkeyaliasrec"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"self"},{"name":"_xkbkeyaliasrec"}],"output":{"name":"bool"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"_xkbkeynamerec"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"_xkbkeynamerec"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"self"},{"name":"_xkbkeynamerec"}],"output":{"name":"bool"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"_xkbnamesrec"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"_xkbnamesrec"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"_xkbnamesrec"}],"output":{"name":"bool"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"xkbanyevent"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"xkbanyevent"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"xkbanyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"xkbnewkeyboardnotifyevent"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"xkbnewkeyboardnotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"self"},{"name":"xkbnewkeyboardnotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"_xkbmapnotifyevent"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"_xkbmapnotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"self"},{"name":"_xkbmapnotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"xkbstatenotifyevent"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"xkbstatenotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"xkbstatenotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"_xkbcontrolsnotifyevent"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"_xkbcontrolsnotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"_xkbcontrolsnotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"xkbindicatornotifyevent"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"xkbindicatornotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"self"},{"name":"xkbindicatornotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"_xkbnamesnotifyevent"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"_xkbnamesnotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"self"},{"name":"_xkbnamesnotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"xkbcompatmapnotifyevent"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"xkbcompatmapnotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"self"},{"name":"xkbcompatmapnotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"xkbbellnotifyevent"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"xkbbellnotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"self"},{"name":"xkbbellnotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"xkbactionmessageevent"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"xkbactionmessageevent"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"self"},{"name":"xkbactionmessageevent"}],"output":{"name":"bool"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"xkbaccessxnotifyevent"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"xkbaccessxnotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"self"},{"name":"xkbaccessxnotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"_xkbextensiondevicenotifyevent"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"_xkbextensiondevicenotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"self"},{"name":"_xkbextensiondevicenotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"xkbevent"}}],[11,"eq","","",98,{"inputs":[{"name":"self"},{"name":"xkbevent"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"self"},{"name":"xkbevent"}],"output":{"name":"bool"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"depth"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"self"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"screen"}}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"screen"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"self"},{"name":"screen"}],"output":{"name":"bool"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"screenformat"}}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"screenformat"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"self"},{"name":"screenformat"}],"output":{"name":"bool"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"visual"}}],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"visual"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"self"},{"name":"visual"}],"output":{"name":"bool"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"xarc"}}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"xarc"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"self"},{"name":"xarc"}],"output":{"name":"bool"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"xchar2b"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"xchar2b"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"self"},{"name":"xchar2b"}],"output":{"name":"bool"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"xcharstruct"}}],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"xcharstruct"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"self"},{"name":"xcharstruct"}],"output":{"name":"bool"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"xclasshint"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"xclasshint"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"self"},{"name":"xclasshint"}],"output":{"name":"bool"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"xcolor"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"xcolor"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"self"},{"name":"xcolor"}],"output":{"name":"bool"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"xcomposestatus"}}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"xcomposestatus"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"self"},{"name":"xcomposestatus"}],"output":{"name":"bool"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"xextcodes"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"xextcodes"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"self"},{"name":"xextcodes"}],"output":{"name":"bool"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"xfontprop"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"xfontprop"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"self"},{"name":"xfontprop"}],"output":{"name":"bool"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"xfontsetextents"}}],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"xfontsetextents"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"self"},{"name":"xfontsetextents"}],"output":{"name":"bool"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"xfontstruct"}}],[11,"eq","","",66,{"inputs":[{"name":"self"},{"name":"xfontstruct"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"self"},{"name":"xfontstruct"}],"output":{"name":"bool"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"xgcvalues"}}],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"xgcvalues"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"self"},{"name":"xgcvalues"}],"output":{"name":"bool"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"xgenericeventcookie"}}],[11,"eq","","",68,{"inputs":[{"name":"self"},{"name":"xgenericeventcookie"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"self"},{"name":"xgenericeventcookie"}],"output":{"name":"bool"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"xhostaddress"}}],[11,"eq","","",69,{"inputs":[{"name":"self"},{"name":"xhostaddress"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"self"},{"name":"xhostaddress"}],"output":{"name":"bool"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"xiconsize"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"xiconsize"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"self"},{"name":"xiconsize"}],"output":{"name":"bool"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"ximage"}}],[11,"eq","","",71,{"inputs":[{"name":"self"},{"name":"ximage"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"self"},{"name":"ximage"}],"output":{"name":"bool"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"xkeyboardcontrol"}}],[11,"eq","","",72,{"inputs":[{"name":"self"},{"name":"xkeyboardcontrol"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"self"},{"name":"xkeyboardcontrol"}],"output":{"name":"bool"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"xkeyboardstate"}}],[11,"eq","","",73,{"inputs":[{"name":"self"},{"name":"xkeyboardstate"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"self"},{"name":"xkeyboardstate"}],"output":{"name":"bool"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"xmbtextitem"}}],[11,"eq","","",74,{"inputs":[{"name":"self"},{"name":"xmbtextitem"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"self"},{"name":"xmbtextitem"}],"output":{"name":"bool"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"xmodifierkeymap"}}],[11,"eq","","",75,{"inputs":[{"name":"self"},{"name":"xmodifierkeymap"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"self"},{"name":"xmodifierkeymap"}],"output":{"name":"bool"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"xomcharsetlist"}}],[11,"eq","","",76,{"inputs":[{"name":"self"},{"name":"xomcharsetlist"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"self"},{"name":"xomcharsetlist"}],"output":{"name":"bool"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"xpixmapformatvalues"}}],[11,"eq","","",77,{"inputs":[{"name":"self"},{"name":"xpixmapformatvalues"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"self"},{"name":"xpixmapformatvalues"}],"output":{"name":"bool"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"xpoint"}}],[11,"eq","","",78,{"inputs":[{"name":"self"},{"name":"xpoint"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"self"},{"name":"xpoint"}],"output":{"name":"bool"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"xrectangle"}}],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"xrectangle"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"self"},{"name":"xrectangle"}],"output":{"name":"bool"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"xrmoptiondescrec"}}],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"xrmoptiondescrec"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"self"},{"name":"xrmoptiondescrec"}],"output":{"name":"bool"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"xrmvalue"}}],[11,"eq","","",81,{"inputs":[{"name":"self"},{"name":"xrmvalue"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"self"},{"name":"xrmvalue"}],"output":{"name":"bool"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"xsegment"}}],[11,"eq","","",82,{"inputs":[{"name":"self"},{"name":"xsegment"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"self"},{"name":"xsegment"}],"output":{"name":"bool"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"xsetwindowattributes"}}],[11,"eq","","",83,{"inputs":[{"name":"self"},{"name":"xsetwindowattributes"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"self"},{"name":"xsetwindowattributes"}],"output":{"name":"bool"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"xsizehints"}}],[11,"eq","","",84,{"inputs":[{"name":"self"},{"name":"xsizehints"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"self"},{"name":"xsizehints"}],"output":{"name":"bool"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"xstandardcolormap"}}],[11,"eq","","",85,{"inputs":[{"name":"self"},{"name":"xstandardcolormap"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"self"},{"name":"xstandardcolormap"}],"output":{"name":"bool"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"xtextitem"}}],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"xtextitem"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"self"},{"name":"xtextitem"}],"output":{"name":"bool"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"xtextitem16"}}],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"xtextitem16"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"self"},{"name":"xtextitem16"}],"output":{"name":"bool"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"xtextproperty"}}],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"xtextproperty"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"self"},{"name":"xtextproperty"}],"output":{"name":"bool"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"xtimecoord"}}],[11,"eq","","",89,{"inputs":[{"name":"self"},{"name":"xtimecoord"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"self"},{"name":"xtimecoord"}],"output":{"name":"bool"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"xvisualinfo"}}],[11,"eq","","",90,{"inputs":[{"name":"self"},{"name":"xvisualinfo"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"self"},{"name":"xvisualinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"xwctextitem"}}],[11,"eq","","",91,{"inputs":[{"name":"self"},{"name":"xwctextitem"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"self"},{"name":"xwctextitem"}],"output":{"name":"bool"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"xwindowattributes"}}],[11,"eq","","",92,{"inputs":[{"name":"self"},{"name":"xwindowattributes"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"self"},{"name":"xwindowattributes"}],"output":{"name":"bool"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"xwindowchanges"}}],[11,"eq","","",93,{"inputs":[{"name":"self"},{"name":"xwindowchanges"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"self"},{"name":"xwindowchanges"}],"output":{"name":"bool"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"xwmhints"}}],[11,"eq","","",94,{"inputs":[{"name":"self"},{"name":"xwmhints"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"self"},{"name":"xwmhints"}],"output":{"name":"bool"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"aspectratio"}}],[11,"eq","","",95,{"inputs":[{"name":"self"},{"name":"aspectratio"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"self"},{"name":"aspectratio"}],"output":{"name":"bool"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"clientmessagedata"}}],[11,"default","","",99,{"inputs":[],"output":{"name":"clientmessagedata"}}],[11,"eq","","",99,{"inputs":[{"name":"self"},{"name":"clientmessagedata"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"self"},{"name":"clientmessagedata"}],"output":{"name":"bool"}}],[11,"as_bytes","","",99,null],[11,"as_bytes_mut","","",99,null],[11,"as_longs","","",99,null],[11,"as_longs_mut","","",99,null],[11,"as_shorts","","",99,null],[11,"as_shorts_mut","","",99,null],[11,"get_byte","","",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"c_char"}}],[11,"get_long","","",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"c_long"}}],[11,"get_short","","",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"c_short"}}],[11,"new","","",99,{"inputs":[],"output":{"name":"clientmessagedata"}}],[11,"set_byte","","",99,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"c_char"}],"output":null}],[11,"set_long","","",99,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"c_long"}],"output":null}],[11,"set_short","","",99,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"c_short"}],"output":null}],[11,"as_mut","","",99,null],[11,"as_ref","","",99,null],[11,"from","","",99,null],[11,"as_mut","","",99,null],[11,"as_ref","","",99,null],[11,"from","","",99,null],[11,"as_mut","","",99,null],[11,"as_ref","","",99,null],[11,"from","","",99,null],[11,"as_mut","","",99,null],[11,"as_ref","","",99,null],[11,"from","","",99,null],[11,"as_mut","","",99,null],[11,"as_ref","","",99,null],[11,"from","","",99,null],[11,"as_mut","","",99,null],[11,"as_ref","","",99,null],[11,"from","","",99,null],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"imagefns"}}],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"imagefns"}],"output":{"name":"bool"}}],[0,"dpms","x11_dl","",null,null],[3,"Xext","x11_dl::dpms","",null,null],[12,"DPMSQueryExtension","","",100,null],[12,"DPMSGetVersion","","",100,null],[12,"DPMSCapable","","",100,null],[12,"DPMSSetTimeouts","","",100,null],[12,"DPMSGetTimeouts","","",100,null],[12,"DPMSEnable","","",100,null],[12,"DPMSDisable","","",100,null],[12,"DPMSForceLevel","","",100,null],[12,"DPMSInfo","","",100,null],[17,"DPMSMajorVersion","","",null,null],[17,"DPMSMinorVersion","","",null,null],[17,"DPMSExtensionName","","",null,null],[17,"DPMSModeOn","","",null,null],[17,"DPMSModeStandby","","",null,null],[17,"DPMSModeSuspend","","",null,null],[17,"DPMSModeOff","","",null,null],[11,"open","","",100,{"inputs":[],"output":{"generics":["xext","openerror"],"name":"result"}}],[0,"glx","x11_dl","",null,null],[3,"Glx","x11_dl::glx","",null,null],[12,"glXChooseFBConfig","","",101,null],[12,"glXChooseVisual","","",101,null],[12,"glXCopyContext","","",101,null],[12,"glXCreateContext","","",101,null],[12,"glXCreateGLXPixmap","","",101,null],[12,"glXCreateNewContext","","",101,null],[12,"glXCreatePbuffer","","",101,null],[12,"glXCreatePixmap","","",101,null],[12,"glXCreateWindow","","",101,null],[12,"glXDestroyContext","","",101,null],[12,"glXDestroyGLXPixmap","","",101,null],[12,"glXDestroyPbuffer","","",101,null],[12,"glXDestroyPixmap","","",101,null],[12,"glXDestroyWindow","","",101,null],[12,"glXGetClientString","","",101,null],[12,"glXGetConfig","","",101,null],[12,"glXGetCurrentContext","","",101,null],[12,"glXGetCurrentDisplay","","",101,null],[12,"glXGetCurrentDrawable","","",101,null],[12,"glXGetCurrentReadDrawable","","",101,null],[12,"glXGetFBConfigAttrib","","",101,null],[12,"glXGetFBConfigs","","",101,null],[12,"glXGetProcAddress","","",101,null],[12,"glXGetProcAddressARB","","",101,null],[12,"glXGetSelectedEvent","","",101,null],[12,"glXGetVisualFromFBConfig","","",101,null],[12,"glXIsDirect","","",101,null],[12,"glXMakeContextCurrent","","",101,null],[12,"glXMakeCurrent","","",101,null],[12,"glXQueryContext","","",101,null],[12,"glXQueryDrawable","","",101,null],[12,"glXQueryExtension","","",101,null],[12,"glXQueryExtensionsString","","",101,null],[12,"glXQueryServerString","","",101,null],[12,"glXQueryVersion","","",101,null],[12,"glXSelectEvent","","",101,null],[12,"glXSwapBuffers","","",101,null],[12,"glXUseXFont","","",101,null],[12,"glXWaitGL","","",101,null],[12,"glXWaitX","","",101,null],[3,"__GLXcontextRec","","",null,null],[3,"__GLXFBConfigRec","","",null,null],[0,"arb","","",null,null],[17,"GLX_CONTEXT_MAJOR_VERSION_ARB","x11_dl::glx::arb","",null,null],[17,"GLX_CONTEXT_MINOR_VERSION_ARB","","",null,null],[17,"GLX_CONTEXT_FLAGS_ARB","","",null,null],[17,"GLX_CONTEXT_PROFILE_MASK_ARB","","",null,null],[17,"GLX_CONTEXT_DEBUG_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_CORE_PROFILE_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB","","",null,null],[0,"ext","x11_dl::glx","",null,null],[17,"GLX_SWAP_INTERVAL_EXT","x11_dl::glx::ext","",null,null],[17,"GLX_MAX_SWAP_INTERVAL_EXT","","",null,null],[6,"GLXContext","x11_dl::glx","",null,null],[6,"GLXContextID","","",null,null],[6,"GLXDrawable","","",null,null],[6,"GLXFBConfig","","",null,null],[6,"GLXFBConfigID","","",null,null],[6,"GLXPbuffer","","",null,null],[6,"GLXPixmap","","",null,null],[6,"GLXWindow","","",null,null],[17,"GLX_SLOW_CONFIG","","",null,null],[17,"GLX_NON_CONFORMANT_CONFIG","","",null,null],[17,"GLX_WINDOW_BIT","","",null,null],[17,"GLX_PIXMAP_BIT","","",null,null],[17,"GLX_PBUFFER_BIT","","",null,null],[17,"GLX_USE_GL","","",null,null],[17,"GLX_BUFFER_SIZE","","",null,null],[17,"GLX_LEVEL","","",null,null],[17,"GLX_RGBA","","",null,null],[17,"GLX_DOUBLEBUFFER","","",null,null],[17,"GLX_STEREO","","",null,null],[17,"GLX_AUX_BUFFERS","","",null,null],[17,"GLX_RED_SIZE","","",null,null],[17,"GLX_GREEN_SIZE","","",null,null],[17,"GLX_BLUE_SIZE","","",null,null],[17,"GLX_ALPHA_SIZE","","",null,null],[17,"GLX_DEPTH_SIZE","","",null,null],[17,"GLX_STENCIL_SIZE","","",null,null],[17,"GLX_ACCUM_RED_SIZE","","",null,null],[17,"GLX_ACCUM_GREEN_SIZE","","",null,null],[17,"GLX_ACCUM_BLUE_SIZE","","",null,null],[17,"GLX_ACCUM_ALPHA_SIZE","","",null,null],[17,"GLX_CONFIG_CAVEAT","","",null,null],[17,"GLX_X_VISUAL_TYPE","","",null,null],[17,"GLX_TRANSPARENT_TYPE","","",null,null],[17,"GLX_TRANSPARENT_INDEX_VALUE","","",null,null],[17,"GLX_TRANSPARENT_RED_VALUE","","",null,null],[17,"GLX_TRANSPARENT_GREEN_VALUE","","",null,null],[17,"GLX_TRANSPARENT_BLUE_VALUE","","",null,null],[17,"GLX_TRANSPARENT_ALPHA_VALUE","","",null,null],[17,"GLX_VISUAL_ID","","",null,null],[17,"GLX_SCREEN","","",null,null],[17,"GLX_DRAWABLE_TYPE","","",null,null],[17,"GLX_RENDER_TYPE","","",null,null],[17,"GLX_X_RENDERABLE","","",null,null],[17,"GLX_FBCONFIG_ID","","",null,null],[17,"GLX_MAX_PBUFFER_WIDTH","","",null,null],[17,"GLX_MAX_PBUFFER_HEIGHT","","",null,null],[17,"GLX_MAX_PBUFFER_PIXELS","","",null,null],[17,"GLX_SAMPLE_BUFFERS","","",null,null],[17,"GLX_SAMPLES","","",null,null],[17,"GLX_DONT_CARE","","",null,null],[17,"GLX_NONE","","",null,null],[17,"GLX_RGBA_BIT","","",null,null],[17,"GLX_COLOR_INDEX_BIT","","",null,null],[17,"GLX_TRANSPARENT_RGB","","",null,null],[17,"GLX_TRANSPARENT_INDEX","","",null,null],[17,"GLX_TRUE_COLOR","","",null,null],[17,"GLX_DIRECT_COLOR","","",null,null],[17,"GLX_PSEUDO_COLOR","","",null,null],[17,"GLX_STATIC_COLOR","","",null,null],[17,"GLX_GRAY_SCALE","","",null,null],[17,"GLX_STATIC_GRAY","","",null,null],[17,"GLX_BAD_SCREEN","","",null,null],[17,"GLX_BAD_ATTRIBUTE","","",null,null],[17,"GLX_NO_EXTENSION","","",null,null],[17,"GLX_BAD_VISUAL","","",null,null],[17,"GLX_BAD_CONTEXT","","",null,null],[17,"GLX_BAD_VALUE","","",null,null],[17,"GLX_BAD_ENUM","","",null,null],[17,"GLX_VENDOR","","",null,null],[17,"GLX_VERSION","","",null,null],[17,"GLX_EXTENSIONS","","",null,null],[17,"GLX_FRONT_LEFT_BUFFER_BIT","","",null,null],[17,"GLX_FRONT_RIGHT_BUFFER_BIT","","",null,null],[17,"GLX_BACK_LEFT_BUFFER_BIT","","",null,null],[17,"GLX_BACK_RIGHT_BUFFER_BIT","","",null,null],[17,"GLX_AUX_BUFFERS_BIT","","",null,null],[17,"GLX_DEPTH_BUFFER_BIT","","",null,null],[17,"GLX_STENCIL_BUFFER_BIT","","",null,null],[17,"GLX_ACCUM_BUFFER_BIT","","",null,null],[17,"GLX_RGBA_TYPE","","",null,null],[17,"GLX_COLOR_INDEX_TYPE","","",null,null],[17,"GLX_PRESERVED_CONTENTS","","",null,null],[17,"GLX_LARGEST_PBUFFER","","",null,null],[17,"GLX_WIDTH","","",null,null],[17,"GLX_HEIGHT","","",null,null],[17,"GLX_PBUFFER_HEIGHT","","",null,null],[17,"GLX_PBUFFER_WIDTH","","",null,null],[17,"GLX_EVENT_MASK","","",null,null],[17,"GLX_PBUFFER_CLOBBER_MASK","","",null,null],[17,"GLX_DAMAGED","","",null,null],[17,"GLX_SAVED","","",null,null],[17,"GLX_WINDOW","","",null,null],[17,"GLX_PBUFFER","","",null,null],[11,"open","","",101,{"inputs":[],"output":{"generics":["glx","openerror"],"name":"result"}}],[0,"keysym","x11_dl","",null,null],[17,"XK_BackSpace","x11_dl::keysym","",null,null],[17,"XK_Tab","","",null,null],[17,"XK_Linefeed","","",null,null],[17,"XK_Clear","","",null,null],[17,"XK_Return","","",null,null],[17,"XK_Pause","","",null,null],[17,"XK_Scroll_Lock","","",null,null],[17,"XK_Sys_Req","","",null,null],[17,"XK_Escape","","",null,null],[17,"XK_Delete","","",null,null],[17,"XK_Multi_key","","",null,null],[17,"XK_Kanji","","",null,null],[17,"XK_Muhenkan","","",null,null],[17,"XK_Henkan_Mode","","",null,null],[17,"XK_Henkan","","",null,null],[17,"XK_Romaji","","",null,null],[17,"XK_Hiragana","","",null,null],[17,"XK_Katakana","","",null,null],[17,"XK_Hiragana_Katakana","","",null,null],[17,"XK_Zenkaku","","",null,null],[17,"XK_Hankaku","","",null,null],[17,"XK_Zenkaku_Hankaku","","",null,null],[17,"XK_Touroku","","",null,null],[17,"XK_Massyo","","",null,null],[17,"XK_Kana_Lock","","",null,null],[17,"XK_Kana_Shift","","",null,null],[17,"XK_Eisu_Shift","","",null,null],[17,"XK_Eisu_toggle","","",null,null],[17,"XK_Home","","",null,null],[17,"XK_Left","","",null,null],[17,"XK_Up","","",null,null],[17,"XK_Right","","",null,null],[17,"XK_Down","","",null,null],[17,"XK_Prior","","",null,null],[17,"XK_Page_Up","","",null,null],[17,"XK_Next","","",null,null],[17,"XK_Page_Down","","",null,null],[17,"XK_End","","",null,null],[17,"XK_Begin","","",null,null],[17,"XK_Win_L","","",null,null],[17,"XK_Win_R","","",null,null],[17,"XK_App","","",null,null],[17,"XK_Select","","",null,null],[17,"XK_Print","","",null,null],[17,"XK_Execute","","",null,null],[17,"XK_Insert","","",null,null],[17,"XK_Undo","","",null,null],[17,"XK_Redo","","",null,null],[17,"XK_Menu","","",null,null],[17,"XK_Find","","",null,null],[17,"XK_Cancel","","",null,null],[17,"XK_Help","","",null,null],[17,"XK_Break","","",null,null],[17,"XK_Mode_switch","","",null,null],[17,"XK_script_switch","","",null,null],[17,"XK_Num_Lock","","",null,null],[17,"XK_KP_Space","","",null,null],[17,"XK_KP_Tab","","",null,null],[17,"XK_KP_Enter","","",null,null],[17,"XK_KP_F1","","",null,null],[17,"XK_KP_F2","","",null,null],[17,"XK_KP_F3","","",null,null],[17,"XK_KP_F4","","",null,null],[17,"XK_KP_Home","","",null,null],[17,"XK_KP_Left","","",null,null],[17,"XK_KP_Up","","",null,null],[17,"XK_KP_Right","","",null,null],[17,"XK_KP_Down","","",null,null],[17,"XK_KP_Prior","","",null,null],[17,"XK_KP_Page_Up","","",null,null],[17,"XK_KP_Next","","",null,null],[17,"XK_KP_Page_Down","","",null,null],[17,"XK_KP_End","","",null,null],[17,"XK_KP_Begin","","",null,null],[17,"XK_KP_Insert","","",null,null],[17,"XK_KP_Delete","","",null,null],[17,"XK_KP_Equal","","",null,null],[17,"XK_KP_Multiply","","",null,null],[17,"XK_KP_Add","","",null,null],[17,"XK_KP_Separator","","",null,null],[17,"XK_KP_Subtract","","",null,null],[17,"XK_KP_Decimal","","",null,null],[17,"XK_KP_Divide","","",null,null],[17,"XK_KP_0","","",null,null],[17,"XK_KP_1","","",null,null],[17,"XK_KP_2","","",null,null],[17,"XK_KP_3","","",null,null],[17,"XK_KP_4","","",null,null],[17,"XK_KP_5","","",null,null],[17,"XK_KP_6","","",null,null],[17,"XK_KP_7","","",null,null],[17,"XK_KP_8","","",null,null],[17,"XK_KP_9","","",null,null],[17,"XK_F1","","",null,null],[17,"XK_F2","","",null,null],[17,"XK_F3","","",null,null],[17,"XK_F4","","",null,null],[17,"XK_F5","","",null,null],[17,"XK_F6","","",null,null],[17,"XK_F7","","",null,null],[17,"XK_F8","","",null,null],[17,"XK_F9","","",null,null],[17,"XK_F10","","",null,null],[17,"XK_F11","","",null,null],[17,"XK_L1","","",null,null],[17,"XK_F12","","",null,null],[17,"XK_L2","","",null,null],[17,"XK_F13","","",null,null],[17,"XK_L3","","",null,null],[17,"XK_F14","","",null,null],[17,"XK_L4","","",null,null],[17,"XK_F15","","",null,null],[17,"XK_L5","","",null,null],[17,"XK_F16","","",null,null],[17,"XK_L6","","",null,null],[17,"XK_F17","","",null,null],[17,"XK_L7","","",null,null],[17,"XK_F18","","",null,null],[17,"XK_L8","","",null,null],[17,"XK_F19","","",null,null],[17,"XK_L9","","",null,null],[17,"XK_F20","","",null,null],[17,"XK_L10","","",null,null],[17,"XK_F21","","",null,null],[17,"XK_R1","","",null,null],[17,"XK_F22","","",null,null],[17,"XK_R2","","",null,null],[17,"XK_F23","","",null,null],[17,"XK_R3","","",null,null],[17,"XK_F24","","",null,null],[17,"XK_R4","","",null,null],[17,"XK_F25","","",null,null],[17,"XK_R5","","",null,null],[17,"XK_F26","","",null,null],[17,"XK_R6","","",null,null],[17,"XK_F27","","",null,null],[17,"XK_R7","","",null,null],[17,"XK_F28","","",null,null],[17,"XK_R8","","",null,null],[17,"XK_F29","","",null,null],[17,"XK_R9","","",null,null],[17,"XK_F30","","",null,null],[17,"XK_R10","","",null,null],[17,"XK_F31","","",null,null],[17,"XK_R11","","",null,null],[17,"XK_F32","","",null,null],[17,"XK_R12","","",null,null],[17,"XK_F33","","",null,null],[17,"XK_R13","","",null,null],[17,"XK_F34","","",null,null],[17,"XK_R14","","",null,null],[17,"XK_F35","","",null,null],[17,"XK_R15","","",null,null],[17,"XK_Shift_L","","",null,null],[17,"XK_Shift_R","","",null,null],[17,"XK_Control_L","","",null,null],[17,"XK_Control_R","","",null,null],[17,"XK_Caps_Lock","","",null,null],[17,"XK_Shift_Lock","","",null,null],[17,"XK_Meta_L","","",null,null],[17,"XK_Meta_R","","",null,null],[17,"XK_Alt_L","","",null,null],[17,"XK_Alt_R","","",null,null],[17,"XK_Super_L","","",null,null],[17,"XK_Super_R","","",null,null],[17,"XK_Hyper_L","","",null,null],[17,"XK_Hyper_R","","",null,null],[17,"XK_space","","",null,null],[17,"XK_exclam","","",null,null],[17,"XK_quotedbl","","",null,null],[17,"XK_numbersign","","",null,null],[17,"XK_dollar","","",null,null],[17,"XK_percent","","",null,null],[17,"XK_ampersand","","",null,null],[17,"XK_apostrophe","","",null,null],[17,"XK_quoteright","","",null,null],[17,"XK_parenleft","","",null,null],[17,"XK_parenright","","",null,null],[17,"XK_asterisk","","",null,null],[17,"XK_plus","","",null,null],[17,"XK_comma","","",null,null],[17,"XK_minus","","",null,null],[17,"XK_period","","",null,null],[17,"XK_slash","","",null,null],[17,"XK_0","","",null,null],[17,"XK_1","","",null,null],[17,"XK_2","","",null,null],[17,"XK_3","","",null,null],[17,"XK_4","","",null,null],[17,"XK_5","","",null,null],[17,"XK_6","","",null,null],[17,"XK_7","","",null,null],[17,"XK_8","","",null,null],[17,"XK_9","","",null,null],[17,"XK_colon","","",null,null],[17,"XK_semicolon","","",null,null],[17,"XK_less","","",null,null],[17,"XK_equal","","",null,null],[17,"XK_greater","","",null,null],[17,"XK_question","","",null,null],[17,"XK_at","","",null,null],[17,"XK_A","","",null,null],[17,"XK_B","","",null,null],[17,"XK_C","","",null,null],[17,"XK_D","","",null,null],[17,"XK_E","","",null,null],[17,"XK_F","","",null,null],[17,"XK_G","","",null,null],[17,"XK_H","","",null,null],[17,"XK_I","","",null,null],[17,"XK_J","","",null,null],[17,"XK_K","","",null,null],[17,"XK_L","","",null,null],[17,"XK_M","","",null,null],[17,"XK_N","","",null,null],[17,"XK_O","","",null,null],[17,"XK_P","","",null,null],[17,"XK_Q","","",null,null],[17,"XK_R","","",null,null],[17,"XK_S","","",null,null],[17,"XK_T","","",null,null],[17,"XK_U","","",null,null],[17,"XK_V","","",null,null],[17,"XK_W","","",null,null],[17,"XK_X","","",null,null],[17,"XK_Y","","",null,null],[17,"XK_Z","","",null,null],[17,"XK_bracketleft","","",null,null],[17,"XK_backslash","","",null,null],[17,"XK_bracketright","","",null,null],[17,"XK_asciicircum","","",null,null],[17,"XK_underscore","","",null,null],[17,"XK_grave","","",null,null],[17,"XK_quoteleft","","",null,null],[17,"XK_a","","",null,null],[17,"XK_b","","",null,null],[17,"XK_c","","",null,null],[17,"XK_d","","",null,null],[17,"XK_e","","",null,null],[17,"XK_f","","",null,null],[17,"XK_g","","",null,null],[17,"XK_h","","",null,null],[17,"XK_i","","",null,null],[17,"XK_j","","",null,null],[17,"XK_k","","",null,null],[17,"XK_l","","",null,null],[17,"XK_m","","",null,null],[17,"XK_n","","",null,null],[17,"XK_o","","",null,null],[17,"XK_p","","",null,null],[17,"XK_q","","",null,null],[17,"XK_r","","",null,null],[17,"XK_s","","",null,null],[17,"XK_t","","",null,null],[17,"XK_u","","",null,null],[17,"XK_v","","",null,null],[17,"XK_w","","",null,null],[17,"XK_x","","",null,null],[17,"XK_y","","",null,null],[17,"XK_z","","",null,null],[17,"XK_braceleft","","",null,null],[17,"XK_bar","","",null,null],[17,"XK_braceright","","",null,null],[17,"XK_asciitilde","","",null,null],[17,"XK_nobreakspace","","",null,null],[17,"XK_exclamdown","","",null,null],[17,"XK_cent","","",null,null],[17,"XK_sterling","","",null,null],[17,"XK_currency","","",null,null],[17,"XK_yen","","",null,null],[17,"XK_brokenbar","","",null,null],[17,"XK_section","","",null,null],[17,"XK_diaeresis","","",null,null],[17,"XK_copyright","","",null,null],[17,"XK_ordfeminine","","",null,null],[17,"XK_guillemotleft","","",null,null],[17,"XK_notsign","","",null,null],[17,"XK_hyphen","","",null,null],[17,"XK_registered","","",null,null],[17,"XK_macron","","",null,null],[17,"XK_degree","","",null,null],[17,"XK_plusminus","","",null,null],[17,"XK_twosuperior","","",null,null],[17,"XK_threesuperior","","",null,null],[17,"XK_acute","","",null,null],[17,"XK_mu","","",null,null],[17,"XK_paragraph","","",null,null],[17,"XK_periodcentered","","",null,null],[17,"XK_cedilla","","",null,null],[17,"XK_onesuperior","","",null,null],[17,"XK_masculine","","",null,null],[17,"XK_guillemotright","","",null,null],[17,"XK_onequarter","","",null,null],[17,"XK_onehalf","","",null,null],[17,"XK_threequarters","","",null,null],[17,"XK_questiondown","","",null,null],[17,"XK_Agrave","","",null,null],[17,"XK_Aacute","","",null,null],[17,"XK_Acircumflex","","",null,null],[17,"XK_Atilde","","",null,null],[17,"XK_Adiaeresis","","",null,null],[17,"XK_Aring","","",null,null],[17,"XK_AE","","",null,null],[17,"XK_Ccedilla","","",null,null],[17,"XK_Egrave","","",null,null],[17,"XK_Eacute","","",null,null],[17,"XK_Ecircumflex","","",null,null],[17,"XK_Ediaeresis","","",null,null],[17,"XK_Igrave","","",null,null],[17,"XK_Iacute","","",null,null],[17,"XK_Icircumflex","","",null,null],[17,"XK_Idiaeresis","","",null,null],[17,"XK_ETH","","",null,null],[17,"XK_Eth","","",null,null],[17,"XK_Ntilde","","",null,null],[17,"XK_Ograve","","",null,null],[17,"XK_Oacute","","",null,null],[17,"XK_Ocircumflex","","",null,null],[17,"XK_Otilde","","",null,null],[17,"XK_Odiaeresis","","",null,null],[17,"XK_multiply","","",null,null],[17,"XK_Ooblique","","",null,null],[17,"XK_Ugrave","","",null,null],[17,"XK_Uacute","","",null,null],[17,"XK_Ucircumflex","","",null,null],[17,"XK_Udiaeresis","","",null,null],[17,"XK_Yacute","","",null,null],[17,"XK_THORN","","",null,null],[17,"XK_Thorn","","",null,null],[17,"XK_ssharp","","",null,null],[17,"XK_agrave","","",null,null],[17,"XK_aacute","","",null,null],[17,"XK_acircumflex","","",null,null],[17,"XK_atilde","","",null,null],[17,"XK_adiaeresis","","",null,null],[17,"XK_aring","","",null,null],[17,"XK_ae","","",null,null],[17,"XK_ccedilla","","",null,null],[17,"XK_egrave","","",null,null],[17,"XK_eacute","","",null,null],[17,"XK_ecircumflex","","",null,null],[17,"XK_ediaeresis","","",null,null],[17,"XK_igrave","","",null,null],[17,"XK_iacute","","",null,null],[17,"XK_icircumflex","","",null,null],[17,"XK_idiaeresis","","",null,null],[17,"XK_eth","","",null,null],[17,"XK_ntilde","","",null,null],[17,"XK_ograve","","",null,null],[17,"XK_oacute","","",null,null],[17,"XK_ocircumflex","","",null,null],[17,"XK_otilde","","",null,null],[17,"XK_odiaeresis","","",null,null],[17,"XK_division","","",null,null],[17,"XK_oslash","","",null,null],[17,"XK_ugrave","","",null,null],[17,"XK_uacute","","",null,null],[17,"XK_ucircumflex","","",null,null],[17,"XK_udiaeresis","","",null,null],[17,"XK_yacute","","",null,null],[17,"XK_thorn","","",null,null],[17,"XK_ydiaeresis","","",null,null],[17,"XK_Aogonek","","",null,null],[17,"XK_breve","","",null,null],[17,"XK_Lstroke","","",null,null],[17,"XK_Lcaron","","",null,null],[17,"XK_Sacute","","",null,null],[17,"XK_Scaron","","",null,null],[17,"XK_Scedilla","","",null,null],[17,"XK_Tcaron","","",null,null],[17,"XK_Zacute","","",null,null],[17,"XK_Zcaron","","",null,null],[17,"XK_Zabovedot","","",null,null],[17,"XK_aogonek","","",null,null],[17,"XK_ogonek","","",null,null],[17,"XK_lstroke","","",null,null],[17,"XK_lcaron","","",null,null],[17,"XK_sacute","","",null,null],[17,"XK_caron","","",null,null],[17,"XK_scaron","","",null,null],[17,"XK_scedilla","","",null,null],[17,"XK_tcaron","","",null,null],[17,"XK_zacute","","",null,null],[17,"XK_doubleacute","","",null,null],[17,"XK_zcaron","","",null,null],[17,"XK_zabovedot","","",null,null],[17,"XK_Racute","","",null,null],[17,"XK_Abreve","","",null,null],[17,"XK_Lacute","","",null,null],[17,"XK_Cacute","","",null,null],[17,"XK_Ccaron","","",null,null],[17,"XK_Eogonek","","",null,null],[17,"XK_Ecaron","","",null,null],[17,"XK_Dcaron","","",null,null],[17,"XK_Dstroke","","",null,null],[17,"XK_Nacute","","",null,null],[17,"XK_Ncaron","","",null,null],[17,"XK_Odoubleacute","","",null,null],[17,"XK_Rcaron","","",null,null],[17,"XK_Uring","","",null,null],[17,"XK_Udoubleacute","","",null,null],[17,"XK_Tcedilla","","",null,null],[17,"XK_racute","","",null,null],[17,"XK_abreve","","",null,null],[17,"XK_lacute","","",null,null],[17,"XK_cacute","","",null,null],[17,"XK_ccaron","","",null,null],[17,"XK_eogonek","","",null,null],[17,"XK_ecaron","","",null,null],[17,"XK_dcaron","","",null,null],[17,"XK_dstroke","","",null,null],[17,"XK_nacute","","",null,null],[17,"XK_ncaron","","",null,null],[17,"XK_odoubleacute","","",null,null],[17,"XK_udoubleacute","","",null,null],[17,"XK_rcaron","","",null,null],[17,"XK_uring","","",null,null],[17,"XK_tcedilla","","",null,null],[17,"XK_abovedot","","",null,null],[17,"XK_Hstroke","","",null,null],[17,"XK_Hcircumflex","","",null,null],[17,"XK_Iabovedot","","",null,null],[17,"XK_Gbreve","","",null,null],[17,"XK_Jcircumflex","","",null,null],[17,"XK_hstroke","","",null,null],[17,"XK_hcircumflex","","",null,null],[17,"XK_idotless","","",null,null],[17,"XK_gbreve","","",null,null],[17,"XK_jcircumflex","","",null,null],[17,"XK_Cabovedot","","",null,null],[17,"XK_Ccircumflex","","",null,null],[17,"XK_Gabovedot","","",null,null],[17,"XK_Gcircumflex","","",null,null],[17,"XK_Ubreve","","",null,null],[17,"XK_Scircumflex","","",null,null],[17,"XK_cabovedot","","",null,null],[17,"XK_ccircumflex","","",null,null],[17,"XK_gabovedot","","",null,null],[17,"XK_gcircumflex","","",null,null],[17,"XK_ubreve","","",null,null],[17,"XK_scircumflex","","",null,null],[17,"XK_kra","","",null,null],[17,"XK_kappa","","",null,null],[17,"XK_Rcedilla","","",null,null],[17,"XK_Itilde","","",null,null],[17,"XK_Lcedilla","","",null,null],[17,"XK_Emacron","","",null,null],[17,"XK_Gcedilla","","",null,null],[17,"XK_Tslash","","",null,null],[17,"XK_rcedilla","","",null,null],[17,"XK_itilde","","",null,null],[17,"XK_lcedilla","","",null,null],[17,"XK_emacron","","",null,null],[17,"XK_gcedilla","","",null,null],[17,"XK_tslash","","",null,null],[17,"XK_ENG","","",null,null],[17,"XK_eng","","",null,null],[17,"XK_Amacron","","",null,null],[17,"XK_Iogonek","","",null,null],[17,"XK_Eabovedot","","",null,null],[17,"XK_Imacron","","",null,null],[17,"XK_Ncedilla","","",null,null],[17,"XK_Omacron","","",null,null],[17,"XK_Kcedilla","","",null,null],[17,"XK_Uogonek","","",null,null],[17,"XK_Utilde","","",null,null],[17,"XK_Umacron","","",null,null],[17,"XK_amacron","","",null,null],[17,"XK_iogonek","","",null,null],[17,"XK_eabovedot","","",null,null],[17,"XK_imacron","","",null,null],[17,"XK_ncedilla","","",null,null],[17,"XK_omacron","","",null,null],[17,"XK_kcedilla","","",null,null],[17,"XK_uogonek","","",null,null],[17,"XK_utilde","","",null,null],[17,"XK_umacron","","",null,null],[17,"XK_overline","","",null,null],[17,"XK_kana_fullstop","","",null,null],[17,"XK_kana_openingbracket","","",null,null],[17,"XK_kana_closingbracket","","",null,null],[17,"XK_kana_comma","","",null,null],[17,"XK_kana_conjunctive","","",null,null],[17,"XK_kana_middledot","","",null,null],[17,"XK_kana_WO","","",null,null],[17,"XK_kana_a","","",null,null],[17,"XK_kana_i","","",null,null],[17,"XK_kana_u","","",null,null],[17,"XK_kana_e","","",null,null],[17,"XK_kana_o","","",null,null],[17,"XK_kana_ya","","",null,null],[17,"XK_kana_yu","","",null,null],[17,"XK_kana_yo","","",null,null],[17,"XK_kana_tsu","","",null,null],[17,"XK_kana_tu","","",null,null],[17,"XK_prolongedsound","","",null,null],[17,"XK_kana_A","","",null,null],[17,"XK_kana_I","","",null,null],[17,"XK_kana_U","","",null,null],[17,"XK_kana_E","","",null,null],[17,"XK_kana_O","","",null,null],[17,"XK_kana_KA","","",null,null],[17,"XK_kana_KI","","",null,null],[17,"XK_kana_KU","","",null,null],[17,"XK_kana_KE","","",null,null],[17,"XK_kana_KO","","",null,null],[17,"XK_kana_SA","","",null,null],[17,"XK_kana_SHI","","",null,null],[17,"XK_kana_SU","","",null,null],[17,"XK_kana_SE","","",null,null],[17,"XK_kana_SO","","",null,null],[17,"XK_kana_TA","","",null,null],[17,"XK_kana_CHI","","",null,null],[17,"XK_kana_TI","","",null,null],[17,"XK_kana_TSU","","",null,null],[17,"XK_kana_TU","","",null,null],[17,"XK_kana_TE","","",null,null],[17,"XK_kana_TO","","",null,null],[17,"XK_kana_NA","","",null,null],[17,"XK_kana_NI","","",null,null],[17,"XK_kana_NU","","",null,null],[17,"XK_kana_NE","","",null,null],[17,"XK_kana_NO","","",null,null],[17,"XK_kana_HA","","",null,null],[17,"XK_kana_HI","","",null,null],[17,"XK_kana_FU","","",null,null],[17,"XK_kana_HU","","",null,null],[17,"XK_kana_HE","","",null,null],[17,"XK_kana_HO","","",null,null],[17,"XK_kana_MA","","",null,null],[17,"XK_kana_MI","","",null,null],[17,"XK_kana_MU","","",null,null],[17,"XK_kana_ME","","",null,null],[17,"XK_kana_MO","","",null,null],[17,"XK_kana_YA","","",null,null],[17,"XK_kana_YU","","",null,null],[17,"XK_kana_YO","","",null,null],[17,"XK_kana_RA","","",null,null],[17,"XK_kana_RI","","",null,null],[17,"XK_kana_RU","","",null,null],[17,"XK_kana_RE","","",null,null],[17,"XK_kana_RO","","",null,null],[17,"XK_kana_WA","","",null,null],[17,"XK_kana_N","","",null,null],[17,"XK_voicedsound","","",null,null],[17,"XK_semivoicedsound","","",null,null],[17,"XK_kana_switch","","",null,null],[17,"XK_Arabic_comma","","",null,null],[17,"XK_Arabic_semicolon","","",null,null],[17,"XK_Arabic_question_mark","","",null,null],[17,"XK_Arabic_hamza","","",null,null],[17,"XK_Arabic_maddaonalef","","",null,null],[17,"XK_Arabic_hamzaonalef","","",null,null],[17,"XK_Arabic_hamzaonwaw","","",null,null],[17,"XK_Arabic_hamzaunderalef","","",null,null],[17,"XK_Arabic_hamzaonyeh","","",null,null],[17,"XK_Arabic_alef","","",null,null],[17,"XK_Arabic_beh","","",null,null],[17,"XK_Arabic_tehmarbuta","","",null,null],[17,"XK_Arabic_teh","","",null,null],[17,"XK_Arabic_theh","","",null,null],[17,"XK_Arabic_jeem","","",null,null],[17,"XK_Arabic_hah","","",null,null],[17,"XK_Arabic_khah","","",null,null],[17,"XK_Arabic_dal","","",null,null],[17,"XK_Arabic_thal","","",null,null],[17,"XK_Arabic_ra","","",null,null],[17,"XK_Arabic_zain","","",null,null],[17,"XK_Arabic_seen","","",null,null],[17,"XK_Arabic_sheen","","",null,null],[17,"XK_Arabic_sad","","",null,null],[17,"XK_Arabic_dad","","",null,null],[17,"XK_Arabic_tah","","",null,null],[17,"XK_Arabic_zah","","",null,null],[17,"XK_Arabic_ain","","",null,null],[17,"XK_Arabic_ghain","","",null,null],[17,"XK_Arabic_tatweel","","",null,null],[17,"XK_Arabic_feh","","",null,null],[17,"XK_Arabic_qaf","","",null,null],[17,"XK_Arabic_kaf","","",null,null],[17,"XK_Arabic_lam","","",null,null],[17,"XK_Arabic_meem","","",null,null],[17,"XK_Arabic_noon","","",null,null],[17,"XK_Arabic_ha","","",null,null],[17,"XK_Arabic_heh","","",null,null],[17,"XK_Arabic_waw","","",null,null],[17,"XK_Arabic_alefmaksura","","",null,null],[17,"XK_Arabic_yeh","","",null,null],[17,"XK_Arabic_fathatan","","",null,null],[17,"XK_Arabic_dammatan","","",null,null],[17,"XK_Arabic_kasratan","","",null,null],[17,"XK_Arabic_fatha","","",null,null],[17,"XK_Arabic_damma","","",null,null],[17,"XK_Arabic_kasra","","",null,null],[17,"XK_Arabic_shadda","","",null,null],[17,"XK_Arabic_sukun","","",null,null],[17,"XK_Arabic_switch","","",null,null],[17,"XK_Serbian_dje","","",null,null],[17,"XK_Macedonia_gje","","",null,null],[17,"XK_Cyrillic_io","","",null,null],[17,"XK_Ukrainian_ie","","",null,null],[17,"XK_Ukranian_je","","",null,null],[17,"XK_Macedonia_dse","","",null,null],[17,"XK_Ukrainian_i","","",null,null],[17,"XK_Ukranian_i","","",null,null],[17,"XK_Ukrainian_yi","","",null,null],[17,"XK_Ukranian_yi","","",null,null],[17,"XK_Cyrillic_je","","",null,null],[17,"XK_Serbian_je","","",null,null],[17,"XK_Cyrillic_lje","","",null,null],[17,"XK_Serbian_lje","","",null,null],[17,"XK_Cyrillic_nje","","",null,null],[17,"XK_Serbian_nje","","",null,null],[17,"XK_Serbian_tshe","","",null,null],[17,"XK_Macedonia_kje","","",null,null],[17,"XK_Byelorussian_shortu","","",null,null],[17,"XK_Cyrillic_dzhe","","",null,null],[17,"XK_Serbian_dze","","",null,null],[17,"XK_numerosign","","",null,null],[17,"XK_Serbian_DJE","","",null,null],[17,"XK_Macedonia_GJE","","",null,null],[17,"XK_Cyrillic_IO","","",null,null],[17,"XK_Ukrainian_IE","","",null,null],[17,"XK_Ukranian_JE","","",null,null],[17,"XK_Macedonia_DSE","","",null,null],[17,"XK_Ukrainian_I","","",null,null],[17,"XK_Ukranian_I","","",null,null],[17,"XK_Ukrainian_YI","","",null,null],[17,"XK_Ukranian_YI","","",null,null],[17,"XK_Cyrillic_JE","","",null,null],[17,"XK_Serbian_JE","","",null,null],[17,"XK_Cyrillic_LJE","","",null,null],[17,"XK_Serbian_LJE","","",null,null],[17,"XK_Cyrillic_NJE","","",null,null],[17,"XK_Serbian_NJE","","",null,null],[17,"XK_Serbian_TSHE","","",null,null],[17,"XK_Macedonia_KJE","","",null,null],[17,"XK_Byelorussian_SHORTU","","",null,null],[17,"XK_Cyrillic_DZHE","","",null,null],[17,"XK_Serbian_DZE","","",null,null],[17,"XK_Cyrillic_yu","","",null,null],[17,"XK_Cyrillic_a","","",null,null],[17,"XK_Cyrillic_be","","",null,null],[17,"XK_Cyrillic_tse","","",null,null],[17,"XK_Cyrillic_de","","",null,null],[17,"XK_Cyrillic_ie","","",null,null],[17,"XK_Cyrillic_ef","","",null,null],[17,"XK_Cyrillic_ghe","","",null,null],[17,"XK_Cyrillic_ha","","",null,null],[17,"XK_Cyrillic_i","","",null,null],[17,"XK_Cyrillic_shorti","","",null,null],[17,"XK_Cyrillic_ka","","",null,null],[17,"XK_Cyrillic_el","","",null,null],[17,"XK_Cyrillic_em","","",null,null],[17,"XK_Cyrillic_en","","",null,null],[17,"XK_Cyrillic_o","","",null,null],[17,"XK_Cyrillic_pe","","",null,null],[17,"XK_Cyrillic_ya","","",null,null],[17,"XK_Cyrillic_er","","",null,null],[17,"XK_Cyrillic_es","","",null,null],[17,"XK_Cyrillic_te","","",null,null],[17,"XK_Cyrillic_u","","",null,null],[17,"XK_Cyrillic_zhe","","",null,null],[17,"XK_Cyrillic_ve","","",null,null],[17,"XK_Cyrillic_softsign","","",null,null],[17,"XK_Cyrillic_yeru","","",null,null],[17,"XK_Cyrillic_ze","","",null,null],[17,"XK_Cyrillic_sha","","",null,null],[17,"XK_Cyrillic_e","","",null,null],[17,"XK_Cyrillic_shcha","","",null,null],[17,"XK_Cyrillic_che","","",null,null],[17,"XK_Cyrillic_hardsign","","",null,null],[17,"XK_Cyrillic_YU","","",null,null],[17,"XK_Cyrillic_A","","",null,null],[17,"XK_Cyrillic_BE","","",null,null],[17,"XK_Cyrillic_TSE","","",null,null],[17,"XK_Cyrillic_DE","","",null,null],[17,"XK_Cyrillic_IE","","",null,null],[17,"XK_Cyrillic_EF","","",null,null],[17,"XK_Cyrillic_GHE","","",null,null],[17,"XK_Cyrillic_HA","","",null,null],[17,"XK_Cyrillic_I","","",null,null],[17,"XK_Cyrillic_SHORTI","","",null,null],[17,"XK_Cyrillic_KA","","",null,null],[17,"XK_Cyrillic_EL","","",null,null],[17,"XK_Cyrillic_EM","","",null,null],[17,"XK_Cyrillic_EN","","",null,null],[17,"XK_Cyrillic_O","","",null,null],[17,"XK_Cyrillic_PE","","",null,null],[17,"XK_Cyrillic_YA","","",null,null],[17,"XK_Cyrillic_ER","","",null,null],[17,"XK_Cyrillic_ES","","",null,null],[17,"XK_Cyrillic_TE","","",null,null],[17,"XK_Cyrillic_U","","",null,null],[17,"XK_Cyrillic_ZHE","","",null,null],[17,"XK_Cyrillic_VE","","",null,null],[17,"XK_Cyrillic_SOFTSIGN","","",null,null],[17,"XK_Cyrillic_YERU","","",null,null],[17,"XK_Cyrillic_ZE","","",null,null],[17,"XK_Cyrillic_SHA","","",null,null],[17,"XK_Cyrillic_E","","",null,null],[17,"XK_Cyrillic_SHCHA","","",null,null],[17,"XK_Cyrillic_CHE","","",null,null],[17,"XK_Cyrillic_HARDSIGN","","",null,null],[17,"XK_Greek_ALPHAaccent","","",null,null],[17,"XK_Greek_EPSILONaccent","","",null,null],[17,"XK_Greek_ETAaccent","","",null,null],[17,"XK_Greek_IOTAaccent","","",null,null],[17,"XK_Greek_IOTAdiaeresis","","",null,null],[17,"XK_Greek_OMICRONaccent","","",null,null],[17,"XK_Greek_UPSILONaccent","","",null,null],[17,"XK_Greek_UPSILONdieresis","","",null,null],[17,"XK_Greek_OMEGAaccent","","",null,null],[17,"XK_Greek_accentdieresis","","",null,null],[17,"XK_Greek_horizbar","","",null,null],[17,"XK_Greek_alphaaccent","","",null,null],[17,"XK_Greek_epsilonaccent","","",null,null],[17,"XK_Greek_etaaccent","","",null,null],[17,"XK_Greek_iotaaccent","","",null,null],[17,"XK_Greek_iotadieresis","","",null,null],[17,"XK_Greek_iotaaccentdieresis","","",null,null],[17,"XK_Greek_omicronaccent","","",null,null],[17,"XK_Greek_upsilonaccent","","",null,null],[17,"XK_Greek_upsilondieresis","","",null,null],[17,"XK_Greek_upsilonaccentdieresis","","",null,null],[17,"XK_Greek_omegaaccent","","",null,null],[17,"XK_Greek_ALPHA","","",null,null],[17,"XK_Greek_BETA","","",null,null],[17,"XK_Greek_GAMMA","","",null,null],[17,"XK_Greek_DELTA","","",null,null],[17,"XK_Greek_EPSILON","","",null,null],[17,"XK_Greek_ZETA","","",null,null],[17,"XK_Greek_ETA","","",null,null],[17,"XK_Greek_THETA","","",null,null],[17,"XK_Greek_IOTA","","",null,null],[17,"XK_Greek_KAPPA","","",null,null],[17,"XK_Greek_LAMDA","","",null,null],[17,"XK_Greek_LAMBDA","","",null,null],[17,"XK_Greek_MU","","",null,null],[17,"XK_Greek_NU","","",null,null],[17,"XK_Greek_XI","","",null,null],[17,"XK_Greek_OMICRON","","",null,null],[17,"XK_Greek_PI","","",null,null],[17,"XK_Greek_RHO","","",null,null],[17,"XK_Greek_SIGMA","","",null,null],[17,"XK_Greek_TAU","","",null,null],[17,"XK_Greek_UPSILON","","",null,null],[17,"XK_Greek_PHI","","",null,null],[17,"XK_Greek_CHI","","",null,null],[17,"XK_Greek_PSI","","",null,null],[17,"XK_Greek_OMEGA","","",null,null],[17,"XK_Greek_alpha","","",null,null],[17,"XK_Greek_beta","","",null,null],[17,"XK_Greek_gamma","","",null,null],[17,"XK_Greek_delta","","",null,null],[17,"XK_Greek_epsilon","","",null,null],[17,"XK_Greek_zeta","","",null,null],[17,"XK_Greek_eta","","",null,null],[17,"XK_Greek_theta","","",null,null],[17,"XK_Greek_iota","","",null,null],[17,"XK_Greek_kappa","","",null,null],[17,"XK_Greek_lamda","","",null,null],[17,"XK_Greek_lambda","","",null,null],[17,"XK_Greek_mu","","",null,null],[17,"XK_Greek_nu","","",null,null],[17,"XK_Greek_xi","","",null,null],[17,"XK_Greek_omicron","","",null,null],[17,"XK_Greek_pi","","",null,null],[17,"XK_Greek_rho","","",null,null],[17,"XK_Greek_sigma","","",null,null],[17,"XK_Greek_finalsmallsigma","","",null,null],[17,"XK_Greek_tau","","",null,null],[17,"XK_Greek_upsilon","","",null,null],[17,"XK_Greek_phi","","",null,null],[17,"XK_Greek_chi","","",null,null],[17,"XK_Greek_psi","","",null,null],[17,"XK_Greek_omega","","",null,null],[17,"XK_Greek_switch","","",null,null],[17,"XK_leftradical","","",null,null],[17,"XK_topleftradical","","",null,null],[17,"XK_horizconnector","","",null,null],[17,"XK_topintegral","","",null,null],[17,"XK_botintegral","","",null,null],[17,"XK_vertconnector","","",null,null],[17,"XK_topleftsqbracket","","",null,null],[17,"XK_botleftsqbracket","","",null,null],[17,"XK_toprightsqbracket","","",null,null],[17,"XK_botrightsqbracket","","",null,null],[17,"XK_topleftparens","","",null,null],[17,"XK_botleftparens","","",null,null],[17,"XK_toprightparens","","",null,null],[17,"XK_botrightparens","","",null,null],[17,"XK_leftmiddlecurlybrace","","",null,null],[17,"XK_rightmiddlecurlybrace","","",null,null],[17,"XK_topleftsummation","","",null,null],[17,"XK_botleftsummation","","",null,null],[17,"XK_topvertsummationconnector","","",null,null],[17,"XK_botvertsummationconnector","","",null,null],[17,"XK_toprightsummation","","",null,null],[17,"XK_botrightsummation","","",null,null],[17,"XK_rightmiddlesummation","","",null,null],[17,"XK_lessthanequal","","",null,null],[17,"XK_notequal","","",null,null],[17,"XK_greaterthanequal","","",null,null],[17,"XK_integral","","",null,null],[17,"XK_therefore","","",null,null],[17,"XK_variation","","",null,null],[17,"XK_infinity","","",null,null],[17,"XK_nabla","","",null,null],[17,"XK_approximate","","",null,null],[17,"XK_similarequal","","",null,null],[17,"XK_ifonlyif","","",null,null],[17,"XK_implies","","",null,null],[17,"XK_identical","","",null,null],[17,"XK_radical","","",null,null],[17,"XK_includedin","","",null,null],[17,"XK_includes","","",null,null],[17,"XK_intersection","","",null,null],[17,"XK_union","","",null,null],[17,"XK_logicaland","","",null,null],[17,"XK_logicalor","","",null,null],[17,"XK_partialderivative","","",null,null],[17,"XK_function","","",null,null],[17,"XK_leftarrow","","",null,null],[17,"XK_uparrow","","",null,null],[17,"XK_rightarrow","","",null,null],[17,"XK_downarrow","","",null,null],[17,"XK_blank","","",null,null],[17,"XK_soliddiamond","","",null,null],[17,"XK_checkerboard","","",null,null],[17,"XK_ht","","",null,null],[17,"XK_ff","","",null,null],[17,"XK_cr","","",null,null],[17,"XK_lf","","",null,null],[17,"XK_nl","","",null,null],[17,"XK_vt","","",null,null],[17,"XK_lowrightcorner","","",null,null],[17,"XK_uprightcorner","","",null,null],[17,"XK_upleftcorner","","",null,null],[17,"XK_lowleftcorner","","",null,null],[17,"XK_crossinglines","","",null,null],[17,"XK_horizlinescan1","","",null,null],[17,"XK_horizlinescan3","","",null,null],[17,"XK_horizlinescan5","","",null,null],[17,"XK_horizlinescan7","","",null,null],[17,"XK_horizlinescan9","","",null,null],[17,"XK_leftt","","",null,null],[17,"XK_rightt","","",null,null],[17,"XK_bott","","",null,null],[17,"XK_topt","","",null,null],[17,"XK_vertbar","","",null,null],[17,"XK_emspace","","",null,null],[17,"XK_enspace","","",null,null],[17,"XK_em3space","","",null,null],[17,"XK_em4space","","",null,null],[17,"XK_digitspace","","",null,null],[17,"XK_punctspace","","",null,null],[17,"XK_thinspace","","",null,null],[17,"XK_hairspace","","",null,null],[17,"XK_emdash","","",null,null],[17,"XK_endash","","",null,null],[17,"XK_signifblank","","",null,null],[17,"XK_ellipsis","","",null,null],[17,"XK_doubbaselinedot","","",null,null],[17,"XK_onethird","","",null,null],[17,"XK_twothirds","","",null,null],[17,"XK_onefifth","","",null,null],[17,"XK_twofifths","","",null,null],[17,"XK_threefifths","","",null,null],[17,"XK_fourfifths","","",null,null],[17,"XK_onesixth","","",null,null],[17,"XK_fivesixths","","",null,null],[17,"XK_careof","","",null,null],[17,"XK_figdash","","",null,null],[17,"XK_leftanglebracket","","",null,null],[17,"XK_decimalpoint","","",null,null],[17,"XK_rightanglebracket","","",null,null],[17,"XK_marker","","",null,null],[17,"XK_oneeighth","","",null,null],[17,"XK_threeeighths","","",null,null],[17,"XK_fiveeighths","","",null,null],[17,"XK_seveneighths","","",null,null],[17,"XK_trademark","","",null,null],[17,"XK_signaturemark","","",null,null],[17,"XK_trademarkincircle","","",null,null],[17,"XK_leftopentriangle","","",null,null],[17,"XK_rightopentriangle","","",null,null],[17,"XK_emopencircle","","",null,null],[17,"XK_emopenrectangle","","",null,null],[17,"XK_leftsinglequotemark","","",null,null],[17,"XK_rightsinglequotemark","","",null,null],[17,"XK_leftdoublequotemark","","",null,null],[17,"XK_rightdoublequotemark","","",null,null],[17,"XK_prescription","","",null,null],[17,"XK_minutes","","",null,null],[17,"XK_seconds","","",null,null],[17,"XK_latincross","","",null,null],[17,"XK_hexagram","","",null,null],[17,"XK_filledrectbullet","","",null,null],[17,"XK_filledlefttribullet","","",null,null],[17,"XK_filledrighttribullet","","",null,null],[17,"XK_emfilledcircle","","",null,null],[17,"XK_emfilledrect","","",null,null],[17,"XK_enopencircbullet","","",null,null],[17,"XK_enopensquarebullet","","",null,null],[17,"XK_openrectbullet","","",null,null],[17,"XK_opentribulletup","","",null,null],[17,"XK_opentribulletdown","","",null,null],[17,"XK_openstar","","",null,null],[17,"XK_enfilledcircbullet","","",null,null],[17,"XK_enfilledsqbullet","","",null,null],[17,"XK_filledtribulletup","","",null,null],[17,"XK_filledtribulletdown","","",null,null],[17,"XK_leftpointer","","",null,null],[17,"XK_rightpointer","","",null,null],[17,"XK_club","","",null,null],[17,"XK_diamond","","",null,null],[17,"XK_heart","","",null,null],[17,"XK_maltesecross","","",null,null],[17,"XK_dagger","","",null,null],[17,"XK_doubledagger","","",null,null],[17,"XK_checkmark","","",null,null],[17,"XK_ballotcross","","",null,null],[17,"XK_musicalsharp","","",null,null],[17,"XK_musicalflat","","",null,null],[17,"XK_malesymbol","","",null,null],[17,"XK_femalesymbol","","",null,null],[17,"XK_telephone","","",null,null],[17,"XK_telephonerecorder","","",null,null],[17,"XK_phonographcopyright","","",null,null],[17,"XK_caret","","",null,null],[17,"XK_singlelowquotemark","","",null,null],[17,"XK_doublelowquotemark","","",null,null],[17,"XK_cursor","","",null,null],[17,"XK_leftcaret","","",null,null],[17,"XK_rightcaret","","",null,null],[17,"XK_downcaret","","",null,null],[17,"XK_upcaret","","",null,null],[17,"XK_overbar","","",null,null],[17,"XK_downtack","","",null,null],[17,"XK_upshoe","","",null,null],[17,"XK_downstile","","",null,null],[17,"XK_underbar","","",null,null],[17,"XK_jot","","",null,null],[17,"XK_quad","","",null,null],[17,"XK_uptack","","",null,null],[17,"XK_circle","","",null,null],[17,"XK_upstile","","",null,null],[17,"XK_downshoe","","",null,null],[17,"XK_rightshoe","","",null,null],[17,"XK_leftshoe","","",null,null],[17,"XK_lefttack","","",null,null],[17,"XK_righttack","","",null,null],[17,"XK_hebrew_doublelowline","","",null,null],[17,"XK_hebrew_aleph","","",null,null],[17,"XK_hebrew_bet","","",null,null],[17,"XK_hebrew_beth","","",null,null],[17,"XK_hebrew_gimel","","",null,null],[17,"XK_hebrew_gimmel","","",null,null],[17,"XK_hebrew_dalet","","",null,null],[17,"XK_hebrew_daleth","","",null,null],[17,"XK_hebrew_he","","",null,null],[17,"XK_hebrew_waw","","",null,null],[17,"XK_hebrew_zain","","",null,null],[17,"XK_hebrew_zayin","","",null,null],[17,"XK_hebrew_chet","","",null,null],[17,"XK_hebrew_het","","",null,null],[17,"XK_hebrew_tet","","",null,null],[17,"XK_hebrew_teth","","",null,null],[17,"XK_hebrew_yod","","",null,null],[17,"XK_hebrew_finalkaph","","",null,null],[17,"XK_hebrew_kaph","","",null,null],[17,"XK_hebrew_lamed","","",null,null],[17,"XK_hebrew_finalmem","","",null,null],[17,"XK_hebrew_mem","","",null,null],[17,"XK_hebrew_finalnun","","",null,null],[17,"XK_hebrew_nun","","",null,null],[17,"XK_hebrew_samech","","",null,null],[17,"XK_hebrew_samekh","","",null,null],[17,"XK_hebrew_ayin","","",null,null],[17,"XK_hebrew_finalpe","","",null,null],[17,"XK_hebrew_pe","","",null,null],[17,"XK_hebrew_finalzade","","",null,null],[17,"XK_hebrew_finalzadi","","",null,null],[17,"XK_hebrew_zade","","",null,null],[17,"XK_hebrew_zadi","","",null,null],[17,"XK_hebrew_qoph","","",null,null],[17,"XK_hebrew_kuf","","",null,null],[17,"XK_hebrew_resh","","",null,null],[17,"XK_hebrew_shin","","",null,null],[17,"XK_hebrew_taw","","",null,null],[17,"XK_hebrew_taf","","",null,null],[17,"XK_Hebrew_switch","","",null,null],[17,"XF86XK_ModeLock","","",null,null],[17,"XF86XK_MonBrightnessUp","","",null,null],[17,"XF86XK_MonBrightnessDown","","",null,null],[17,"XF86XK_KbdLightOnOff","","",null,null],[17,"XF86XK_KbdBrightnessUp","","",null,null],[17,"XF86XK_KbdBrightnessDown","","",null,null],[17,"XF86XK_Standby","","",null,null],[17,"XF86XK_AudioLowerVolume","","",null,null],[17,"XF86XK_AudioMute","","",null,null],[17,"XF86XK_AudioRaiseVolume","","",null,null],[17,"XF86XK_AudioPlay","","",null,null],[17,"XF86XK_AudioStop","","",null,null],[17,"XF86XK_AudioPrev","","",null,null],[17,"XF86XK_AudioNext","","",null,null],[17,"XF86XK_HomePage","","",null,null],[17,"XF86XK_Mail","","",null,null],[17,"XF86XK_Start","","",null,null],[17,"XF86XK_Search","","",null,null],[17,"XF86XK_AudioRecord","","",null,null],[17,"XF86XK_Calculator","","",null,null],[17,"XF86XK_Memo","","",null,null],[17,"XF86XK_ToDoList","","",null,null],[17,"XF86XK_Calendar","","",null,null],[17,"XF86XK_PowerDown","","",null,null],[17,"XF86XK_ContrastAdjust","","",null,null],[17,"XF86XK_RockerUp","","",null,null],[17,"XF86XK_RockerDown","","",null,null],[17,"XF86XK_RockerEnter","","",null,null],[17,"XF86XK_Back","","",null,null],[17,"XF86XK_Forward","","",null,null],[17,"XF86XK_Stop","","",null,null],[17,"XF86XK_Refresh","","",null,null],[17,"XF86XK_PowerOff","","",null,null],[17,"XF86XK_WakeUp","","",null,null],[17,"XF86XK_Eject","","",null,null],[17,"XF86XK_ScreenSaver","","",null,null],[17,"XF86XK_WWW","","",null,null],[17,"XF86XK_Sleep","","",null,null],[17,"XF86XK_Favorites","","",null,null],[17,"XF86XK_AudioPause","","",null,null],[17,"XF86XK_AudioMedia","","",null,null],[17,"XF86XK_MyComputer","","",null,null],[17,"XF86XK_VendorHome","","",null,null],[17,"XF86XK_LightBulb","","",null,null],[17,"XF86XK_Shop","","",null,null],[17,"XF86XK_History","","",null,null],[17,"XF86XK_OpenURL","","",null,null],[17,"XF86XK_AddFavorite","","",null,null],[17,"XF86XK_HotLinks","","",null,null],[17,"XF86XK_BrightnessAdjust","","",null,null],[17,"XF86XK_Finance","","",null,null],[17,"XF86XK_Community","","",null,null],[17,"XF86XK_AudioRewind","","",null,null],[17,"XF86XK_BackForward","","",null,null],[17,"XF86XK_Launch0","","",null,null],[17,"XF86XK_Launch1","","",null,null],[17,"XF86XK_Launch2","","",null,null],[17,"XF86XK_Launch3","","",null,null],[17,"XF86XK_Launch4","","",null,null],[17,"XF86XK_Launch5","","",null,null],[17,"XF86XK_Launch6","","",null,null],[17,"XF86XK_Launch7","","",null,null],[17,"XF86XK_Launch8","","",null,null],[17,"XF86XK_Launch9","","",null,null],[17,"XF86XK_LaunchA","","",null,null],[17,"XF86XK_LaunchB","","",null,null],[17,"XF86XK_LaunchC","","",null,null],[17,"XF86XK_LaunchD","","",null,null],[17,"XF86XK_LaunchE","","",null,null],[17,"XF86XK_LaunchF","","",null,null],[17,"XF86XK_ApplicationLeft","","",null,null],[17,"XF86XK_ApplicationRight","","",null,null],[17,"XF86XK_Book","","",null,null],[17,"XF86XK_CD","","",null,null],[17,"XF86XK_Calculater","","",null,null],[17,"XF86XK_Clear","","",null,null],[17,"XF86XK_Close","","",null,null],[17,"XF86XK_Copy","","",null,null],[17,"XF86XK_Cut","","",null,null],[17,"XF86XK_Display","","",null,null],[17,"XF86XK_DOS","","",null,null],[17,"XF86XK_Documents","","",null,null],[17,"XF86XK_Excel","","",null,null],[17,"XF86XK_Explorer","","",null,null],[17,"XF86XK_Game","","",null,null],[17,"XF86XK_Go","","",null,null],[17,"XF86XK_iTouch","","",null,null],[17,"XF86XK_LogOff","","",null,null],[17,"XF86XK_Market","","",null,null],[17,"XF86XK_Meeting","","",null,null],[17,"XF86XK_MenuKB","","",null,null],[17,"XF86XK_MenuPB","","",null,null],[17,"XF86XK_MySites","","",null,null],[17,"XF86XK_New","","",null,null],[17,"XF86XK_News","","",null,null],[17,"XF86XK_OfficeHome","","",null,null],[17,"XF86XK_Open","","",null,null],[17,"XF86XK_Option","","",null,null],[17,"XF86XK_Paste","","",null,null],[17,"XF86XK_Phone","","",null,null],[17,"XF86XK_Q","","",null,null],[17,"XF86XK_Reply","","",null,null],[17,"XF86XK_Reload","","",null,null],[17,"XF86XK_RotateWindows","","",null,null],[17,"XF86XK_RotationPB","","",null,null],[17,"XF86XK_RotationKB","","",null,null],[17,"XF86XK_Save","","",null,null],[17,"XF86XK_ScrollUp","","",null,null],[17,"XF86XK_ScrollDown","","",null,null],[17,"XF86XK_ScrollClick","","",null,null],[17,"XF86XK_Send","","",null,null],[17,"XF86XK_Spell","","",null,null],[17,"XF86XK_SplitScreen","","",null,null],[17,"XF86XK_Support","","",null,null],[17,"XF86XK_TaskPane","","",null,null],[17,"XF86XK_Terminal","","",null,null],[17,"XF86XK_Tools","","",null,null],[17,"XF86XK_Travel","","",null,null],[17,"XF86XK_UserPB","","",null,null],[17,"XF86XK_User1KB","","",null,null],[17,"XF86XK_User2KB","","",null,null],[17,"XF86XK_Video","","",null,null],[17,"XF86XK_WheelButton","","",null,null],[17,"XF86XK_Word","","",null,null],[17,"XF86XK_Xfer","","",null,null],[17,"XF86XK_ZoomIn","","",null,null],[17,"XF86XK_ZoomOut","","",null,null],[17,"XF86XK_Away","","",null,null],[17,"XF86XK_Messenger","","",null,null],[17,"XF86XK_WebCam","","",null,null],[17,"XF86XK_MailForward","","",null,null],[17,"XF86XK_Pictures","","",null,null],[17,"XF86XK_Music","","",null,null],[17,"XF86XK_Battery","","",null,null],[17,"XF86XK_Bluetooth","","",null,null],[17,"XF86XK_WLAN","","",null,null],[17,"XF86XK_UWB","","",null,null],[17,"XF86XK_AudioForward","","",null,null],[17,"XF86XK_AudioRepeat","","",null,null],[17,"XF86XK_AudioRandomPlay","","",null,null],[17,"XF86XK_Subtitle","","",null,null],[17,"XF86XK_AudioCycleTrack","","",null,null],[17,"XF86XK_CycleAngle","","",null,null],[17,"XF86XK_FrameBack","","",null,null],[17,"XF86XK_FrameForward","","",null,null],[17,"XF86XK_Time","","",null,null],[17,"XF86XK_Select","","",null,null],[17,"XF86XK_View","","",null,null],[17,"XF86XK_TopMenu","","",null,null],[17,"XF86XK_Red","","",null,null],[17,"XF86XK_Green","","",null,null],[17,"XF86XK_Yellow","","",null,null],[17,"XF86XK_Blue","","",null,null],[17,"XF86XK_Suspend","","",null,null],[17,"XF86XK_Hibernate","","",null,null],[17,"XF86XK_TouchpadToggle","","",null,null],[17,"XF86XK_TouchpadOn","","",null,null],[17,"XF86XK_TouchpadOff","","",null,null],[17,"XF86XK_AudioMicMute","","",null,null],[17,"XF86XK_Switch_VT_1","","",null,null],[17,"XF86XK_Switch_VT_2","","",null,null],[17,"XF86XK_Switch_VT_3","","",null,null],[17,"XF86XK_Switch_VT_4","","",null,null],[17,"XF86XK_Switch_VT_5","","",null,null],[17,"XF86XK_Switch_VT_6","","",null,null],[17,"XF86XK_Switch_VT_7","","",null,null],[17,"XF86XK_Switch_VT_8","","",null,null],[17,"XF86XK_Switch_VT_9","","",null,null],[17,"XF86XK_Switch_VT_10","","",null,null],[17,"XF86XK_Switch_VT_11","","",null,null],[17,"XF86XK_Switch_VT_12","","",null,null],[17,"XF86XK_Ungrab","","",null,null],[17,"XF86XK_ClearGrab","","",null,null],[17,"XF86XK_Next_VMode","","",null,null],[17,"XF86XK_Prev_VMode","","",null,null],[17,"XF86XK_LogWindowTree","","",null,null],[17,"XF86XK_LogGrabInfo","","",null,null],[17,"XK_ISO_Lock","","",null,null],[17,"XK_ISO_Level2_Latch","","",null,null],[17,"XK_ISO_Level3_Shift","","",null,null],[17,"XK_ISO_Level3_Latch","","",null,null],[17,"XK_ISO_Level3_Lock","","",null,null],[17,"XK_ISO_Level5_Shift","","",null,null],[17,"XK_ISO_Level5_Latch","","",null,null],[17,"XK_ISO_Level5_Lock","","",null,null],[17,"XK_ISO_Group_Shift","","",null,null],[17,"XK_ISO_Group_Latch","","",null,null],[17,"XK_ISO_Group_Lock","","",null,null],[17,"XK_ISO_Next_Group","","",null,null],[17,"XK_ISO_Next_Group_Lock","","",null,null],[17,"XK_ISO_Prev_Group","","",null,null],[17,"XK_ISO_Prev_Group_Lock","","",null,null],[17,"XK_ISO_First_Group","","",null,null],[17,"XK_ISO_First_Group_Lock","","",null,null],[17,"XK_ISO_Last_Group","","",null,null],[17,"XK_ISO_Last_Group_Lock","","",null,null],[17,"XK_ISO_Left_Tab","","",null,null],[17,"XK_ISO_Move_Line_Up","","",null,null],[17,"XK_ISO_Move_Line_Down","","",null,null],[17,"XK_ISO_Partial_Line_Up","","",null,null],[17,"XK_ISO_Partial_Line_Down","","",null,null],[17,"XK_ISO_Partial_Space_Left","","",null,null],[17,"XK_ISO_Partial_Space_Right","","",null,null],[17,"XK_ISO_Set_Margin_Left","","",null,null],[17,"XK_ISO_Set_Margin_Right","","",null,null],[17,"XK_ISO_Release_Margin_Left","","",null,null],[17,"XK_ISO_Release_Margin_Right","","",null,null],[17,"XK_ISO_Release_Both_Margins","","",null,null],[17,"XK_ISO_Fast_Cursor_Left","","",null,null],[17,"XK_ISO_Fast_Cursor_Right","","",null,null],[17,"XK_ISO_Fast_Cursor_Up","","",null,null],[17,"XK_ISO_Fast_Cursor_Down","","",null,null],[17,"XK_ISO_Continuous_Underline","","",null,null],[17,"XK_ISO_Discontinuous_Underline","","",null,null],[17,"XK_ISO_Emphasize","","",null,null],[17,"XK_ISO_Center_Object","","",null,null],[17,"XK_ISO_Enter","","",null,null],[17,"XK_dead_grave","","",null,null],[17,"XK_dead_acute","","",null,null],[17,"XK_dead_circumflex","","",null,null],[17,"XK_dead_tilde","","",null,null],[17,"XK_dead_perispomeni","","",null,null],[17,"XK_dead_macron","","",null,null],[17,"XK_dead_breve","","",null,null],[17,"XK_dead_abovedot","","",null,null],[17,"XK_dead_diaeresis","","",null,null],[17,"XK_dead_abovering","","",null,null],[17,"XK_dead_doubleacute","","",null,null],[17,"XK_dead_caron","","",null,null],[17,"XK_dead_cedilla","","",null,null],[17,"XK_dead_ogonek","","",null,null],[17,"XK_dead_iota","","",null,null],[17,"XK_dead_voiced_sound","","",null,null],[17,"XK_dead_semivoiced_sound","","",null,null],[17,"XK_dead_belowdot","","",null,null],[17,"XK_dead_hook","","",null,null],[17,"XK_dead_horn","","",null,null],[17,"XK_dead_stroke","","",null,null],[17,"XK_dead_abovecomma","","",null,null],[17,"XK_dead_psili","","",null,null],[17,"XK_dead_abovereversedcomma","","",null,null],[17,"XK_dead_dasia","","",null,null],[17,"XK_dead_doublegrave","","",null,null],[17,"XK_dead_belowring","","",null,null],[17,"XK_dead_belowmacron","","",null,null],[17,"XK_dead_belowcircumflex","","",null,null],[17,"XK_dead_belowtilde","","",null,null],[17,"XK_dead_belowbreve","","",null,null],[17,"XK_dead_belowdiaeresis","","",null,null],[17,"XK_dead_invertedbreve","","",null,null],[17,"XK_dead_belowcomma","","",null,null],[17,"XK_dead_currency","","",null,null],[17,"XK_dead_lowline","","",null,null],[17,"XK_dead_aboveverticalline","","",null,null],[17,"XK_dead_belowverticalline","","",null,null],[17,"XK_dead_longsolidusoverlay","","",null,null],[17,"XK_dead_a","","",null,null],[17,"XK_dead_A","","",null,null],[17,"XK_dead_e","","",null,null],[17,"XK_dead_E","","",null,null],[17,"XK_dead_i","","",null,null],[17,"XK_dead_I","","",null,null],[17,"XK_dead_o","","",null,null],[17,"XK_dead_O","","",null,null],[17,"XK_dead_u","","",null,null],[17,"XK_dead_U","","",null,null],[17,"XK_dead_small_schwa","","",null,null],[17,"XK_dead_capital_schwa","","",null,null],[17,"XK_dead_greek","","",null,null],[17,"XK_First_Virtual_Screen","","",null,null],[17,"XK_Prev_Virtual_Screen","","",null,null],[17,"XK_Next_Virtual_Screen","","",null,null],[17,"XK_Last_Virtual_Screen","","",null,null],[17,"XK_Terminate_Server","","",null,null],[17,"XK_AccessX_Enable","","",null,null],[17,"XK_AccessX_Feedback_Enable","","",null,null],[17,"XK_RepeatKeys_Enable","","",null,null],[17,"XK_SlowKeys_Enable","","",null,null],[17,"XK_BounceKeys_Enable","","",null,null],[17,"XK_StickyKeys_Enable","","",null,null],[17,"XK_MouseKeys_Enable","","",null,null],[17,"XK_MouseKeys_Accel_Enable","","",null,null],[17,"XK_Overlay1_Enable","","",null,null],[17,"XK_Overlay2_Enable","","",null,null],[17,"XK_AudibleBell_Enable","","",null,null],[17,"XK_Pointer_Left","","",null,null],[17,"XK_Pointer_Right","","",null,null],[17,"XK_Pointer_Up","","",null,null],[17,"XK_Pointer_Down","","",null,null],[17,"XK_Pointer_UpLeft","","",null,null],[17,"XK_Pointer_UpRight","","",null,null],[17,"XK_Pointer_DownLeft","","",null,null],[17,"XK_Pointer_DownRight","","",null,null],[17,"XK_Pointer_Button_Dflt","","",null,null],[17,"XK_Pointer_Button1","","",null,null],[17,"XK_Pointer_Button2","","",null,null],[17,"XK_Pointer_Button3","","",null,null],[17,"XK_Pointer_Button4","","",null,null],[17,"XK_Pointer_Button5","","",null,null],[17,"XK_Pointer_DblClick_Dflt","","",null,null],[17,"XK_Pointer_DblClick1","","",null,null],[17,"XK_Pointer_DblClick2","","",null,null],[17,"XK_Pointer_DblClick3","","",null,null],[17,"XK_Pointer_DblClick4","","",null,null],[17,"XK_Pointer_DblClick5","","",null,null],[17,"XK_Pointer_Drag_Dflt","","",null,null],[17,"XK_Pointer_Drag1","","",null,null],[17,"XK_Pointer_Drag2","","",null,null],[17,"XK_Pointer_Drag3","","",null,null],[17,"XK_Pointer_Drag4","","",null,null],[17,"XK_Pointer_Drag5","","",null,null],[17,"XK_Pointer_EnableKeys","","",null,null],[17,"XK_Pointer_Accelerate","","",null,null],[17,"XK_Pointer_DfltBtnNext","","",null,null],[17,"XK_Pointer_DfltBtnPrev","","",null,null],[17,"XK_ch","","",null,null],[17,"XK_Ch","","",null,null],[17,"XK_CH","","",null,null],[17,"XK_c_h","","",null,null],[17,"XK_C_h","","",null,null],[17,"XK_C_H","","",null,null],[0,"xcursor","x11_dl","",null,null],[3,"Xcursor","x11_dl::xcursor","",null,null],[12,"XcursorAnimateCreate","","",102,null],[12,"XcursorAnimateDestroy","","",102,null],[12,"XcursorAnimateNext","","",102,null],[12,"XcursorCommentCreate","","",102,null],[12,"XcursorCommentDestroy","","",102,null],[12,"XcursorCommentsCreate","","",102,null],[12,"XcursorCommentsDestroy","","",102,null],[12,"XcursorCursorsCreate","","",102,null],[12,"XcursorCursorsDestroy","","",102,null],[12,"XcursorFileLoad","","",102,null],[12,"XcursorFileLoadAllImages","","",102,null],[12,"XcursorFileLoadImage","","",102,null],[12,"XcursorFileLoadImages","","",102,null],[12,"XcursorFilenameLoad","","",102,null],[12,"XcursorFilenameLoadAllImages","","",102,null],[12,"XcursorFilenameLoadCursor","","",102,null],[12,"XcursorFilenameLoadCursors","","",102,null],[12,"XcursorFilenameLoadImage","","",102,null],[12,"XcursorFilenameLoadImages","","",102,null],[12,"XcursorFilenameSave","","",102,null],[12,"XcursorFilenameSaveImages","","",102,null],[12,"XcursorFileSave","","",102,null],[12,"XcursorFileSaveImages","","",102,null],[12,"XcursorGetDefaultSize","","",102,null],[12,"XcursorGetTheme","","",102,null],[12,"XcursorGetThemeCore","","",102,null],[12,"XcursorImageCreate","","",102,null],[12,"XcursorImageDestroy","","",102,null],[12,"XcursorImageHash","","",102,null],[12,"XcursorImageLoadCursor","","",102,null],[12,"XcursorImagesCreate","","",102,null],[12,"XcursorImagesDestroy","","",102,null],[12,"XcursorImagesLoadCursor","","",102,null],[12,"XcursorImagesLoadCursors","","",102,null],[12,"XcursorImagesSetName","","",102,null],[12,"XcursorLibraryLoadCursor","","",102,null],[12,"XcursorLibraryLoadCursors","","",102,null],[12,"XcursorLibraryLoadImage","","",102,null],[12,"XcursorLibraryLoadImages","","",102,null],[12,"XcursorLibraryPath","","",102,null],[12,"XcursorLibraryShape","","",102,null],[12,"XcursorNoticeCreateBitmap","","",102,null],[12,"XcursorNoticePutBitmap","","",102,null],[12,"XcursorSetDefaultSize","","",102,null],[12,"XcursorSetTheme","","",102,null],[12,"XcursorSetThemeCore","","",102,null],[12,"XcursorShapeLoadCursor","","",102,null],[12,"XcursorShapeLoadCursors","","",102,null],[12,"XcursorShapeLoadImage","","",102,null],[12,"XcursorShapeLoadImages","","",102,null],[12,"XcursorSupportsAnim","","",102,null],[12,"XcursorSupportsARGB","","",102,null],[12,"XcursorTryShapeBitmapCursor","","",102,null],[12,"XcursorTryShapeCursor","","",102,null],[12,"XcursorXcFileLoad","","",102,null],[12,"XcursorXcFileLoadAllImages","","",102,null],[12,"XcursorXcFileLoadImage","","",102,null],[12,"XcursorXcFileLoadImages","","",102,null],[12,"XcursorXcFileSave","","",102,null],[3,"_XcursorAnimate","","",null,null],[12,"cursors","","",103,null],[12,"sequence","","",103,null],[3,"_XcursorChunkHeader","","",null,null],[12,"header","","",104,null],[12,"type_","","",104,null],[12,"subtype","","",104,null],[12,"version","","",104,null],[3,"_XcursorComment","","",null,null],[12,"version","","",105,null],[12,"comment_type","","",105,null],[12,"comment","","",105,null],[3,"_XcursorComments","","",null,null],[12,"ncomment","","",106,null],[12,"comments","","",106,null],[3,"_XcursorCursors","","",null,null],[12,"dpy","","",107,null],[12,"ref_","","",107,null],[12,"ncursor","","",107,null],[12,"cursors","","",107,null],[3,"_XcursorFile","","",null,null],[12,"closure","","",108,null],[12,"read","","",108,null],[12,"write","","",108,null],[12,"seek","","",108,null],[3,"_XcursorFileHeader","","",null,null],[12,"magic","","",109,null],[12,"header","","",109,null],[12,"version","","",109,null],[12,"ntoc","","",109,null],[12,"tocs","","",109,null],[3,"_XcursorFileToc","","",null,null],[12,"type_","","",110,null],[12,"subtype","","",110,null],[12,"position","","",110,null],[3,"_XcursorImage","","",null,null],[12,"version","","",111,null],[12,"size","","",111,null],[12,"width","","",111,null],[12,"height","","",111,null],[12,"xhot","","",111,null],[12,"yhot","","",111,null],[12,"delay","","",111,null],[12,"pixels","","",111,null],[3,"_XcursorImages","","",null,null],[12,"nimage","","",112,null],[12,"images","","",112,null],[12,"name","","",112,null],[6,"XcursorBool","","",null,null],[6,"XcursorDim","","",null,null],[6,"XcursorPixel","","",null,null],[6,"XcursorUInt","","",null,null],[6,"XcursorAnimate","","",null,null],[6,"XcursorChunkHeader","","",null,null],[6,"XcursorComment","","",null,null],[6,"XcursorComments","","",null,null],[6,"XcursorCursors","","",null,null],[6,"XcursorFile","","",null,null],[6,"XcursorFileHeader","","",null,null],[6,"XcursorFileToc","","",null,null],[6,"XcursorImage","","",null,null],[6,"XcursorImages","","",null,null],[11,"open","","",102,{"inputs":[],"output":{"generics":["xcursor","openerror"],"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"_xcursoranimate"}}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",104,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorchunkheader"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorcomment"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorcomments"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorcursors"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorfile"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorfileheader"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorfiletoc"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorimage"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",112,{"inputs":[{"name":"self"}],"output":{"name":"_xcursorimages"}}],[0,"xf86vmode","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xf86vmode","",null,null],[12,"XF86VidModeAddModeLine","","",113,null],[12,"XF86VidModeDeleteModeLine","","",113,null],[12,"XF86VidModeGetAllModeLines","","",113,null],[12,"XF86VidModeGetDotClocks","","",113,null],[12,"XF86VidModeGetGamma","","",113,null],[12,"XF86VidModeGetGammaRamp","","",113,null],[12,"XF86VidModeGetGammaRampSize","","",113,null],[12,"XF86VidModeGetModeLine","","",113,null],[12,"XF86VidModeGetMonitor","","",113,null],[12,"XF86VidModeGetPermissions","","",113,null],[12,"XF86VidModeGetViewPort","","",113,null],[12,"XF86VidModeLockModeSwitch","","",113,null],[12,"XF86VidModeModModeLine","","",113,null],[12,"XF86VidModeQueryExtension","","",113,null],[12,"XF86VidModeQueryVersion","","",113,null],[12,"XF86VidModeSetClientVersion","","",113,null],[12,"XF86VidModeSetGamma","","",113,null],[12,"XF86VidModeSetGammaRamp","","",113,null],[12,"XF86VidModeSetViewPort","","",113,null],[12,"XF86VidModeSwitchMode","","",113,null],[12,"XF86VidModeSwitchToMode","","",113,null],[12,"XF86VidModeValidateModeLine","","",113,null],[3,"XF86VidModeGamma","","",null,null],[12,"red","","",114,null],[12,"green","","",114,null],[12,"blue","","",114,null],[3,"XF86VidModeModeInfo","","",null,null],[12,"dotclock","","",115,null],[12,"hdisplay","","",115,null],[12,"hsyncstart","","",115,null],[12,"hsyncend","","",115,null],[12,"htotal","","",115,null],[12,"hskew","","",115,null],[12,"vdisplay","","",115,null],[12,"vsyncstart","","",115,null],[12,"vsyncend","","",115,null],[12,"vtotal","","",115,null],[12,"flags","","",115,null],[12,"privsize","","",115,null],[12,"private","","",115,null],[3,"XF86VidModeModeLine","","",null,null],[12,"hdisplay","","",116,null],[12,"hsyncstart","","",116,null],[12,"hsyncend","","",116,null],[12,"htotal","","",116,null],[12,"hskew","","",116,null],[12,"vdisplay","","",116,null],[12,"vsyncstart","","",116,null],[12,"vsyncend","","",116,null],[12,"vtotal","","",116,null],[12,"flags","","",116,null],[12,"privsize","","",116,null],[12,"private","","",116,null],[3,"XF86VidModeMonitor","","",null,null],[12,"vendor","","",117,null],[12,"model","","",117,null],[12,"EMPTY","","",117,null],[12,"nhsync","","",117,null],[12,"hsync","","",117,null],[12,"nvsync","","",117,null],[12,"vsync","","",117,null],[3,"XF86VidModeSyncRange","","",null,null],[12,"hi","","",118,null],[12,"lo","","",118,null],[3,"XF86VidModeNotifyEvent","","",null,null],[12,"type_","","",119,null],[12,"serial","","",119,null],[12,"send_event","","",119,null],[12,"display","","",119,null],[12,"root","","",119,null],[12,"state","","",119,null],[12,"kind","","",119,null],[12,"forced","","",119,null],[12,"time","","",119,null],[11,"open","","",113,{"inputs":[],"output":{"generics":["xf86vmode","openerror"],"name":"result"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"self"}],"output":{"name":"xf86vidmodegamma"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",115,{"inputs":[{"name":"self"}],"output":{"name":"xf86vidmodemodeinfo"}}],[11,"eq","","",115,{"inputs":[{"name":"self"},{"name":"xf86vidmodemodeinfo"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"self"},{"name":"xf86vidmodemodeinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",116,{"inputs":[{"name":"self"}],"output":{"name":"xf86vidmodemodeline"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",117,{"inputs":[{"name":"self"}],"output":{"name":"xf86vidmodemonitor"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"xf86vidmodesyncrange"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",119,{"inputs":[{"name":"self"}],"output":{"name":"xf86vidmodenotifyevent"}}],[11,"as_mut","x11_dl::xlib","",97,{"inputs":[{"name":"self"}],"output":{"name":"xf86vidmodenotifyevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xf86vidmodenotifyevent"}}],[11,"from","","",97,{"inputs":[{"name":"xf86vidmodenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xf86vidmodenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","x11_dl::xf86vmode","",119,{"inputs":[{"name":"xevent"}],"output":{"name":"xf86vidmodenotifyevent"}}],[11,"from","","",119,{"inputs":[{"name":"xevent"}],"output":{"name":"xf86vidmodenotifyevent"}}],[0,"xfixes","x11_dl","",null,null],[6,"PointerBarrier","x11_dl::xfixes","",null,null],[0,"xft","x11_dl","",null,null],[3,"Xft","x11_dl::xft","",null,null],[12,"XftCharExists","","",120,null],[12,"XftCharFontSpecRender","","",120,null],[12,"XftCharIndex","","",120,null],[12,"XftCharSpecRender","","",120,null],[12,"XftColorAllocName","","",120,null],[12,"XftColorAllocValue","","",120,null],[12,"XftColorFree","","",120,null],[12,"XftDefaultHasRender","","",120,null],[12,"XftDefaultSet","","",120,null],[12,"XftDefaultSubstitute","","",120,null],[12,"XftDrawChange","","",120,null],[12,"XftDrawCharFontSpec","","",120,null],[12,"XftDrawCharSpec","","",120,null],[12,"XftDrawColormap","","",120,null],[12,"XftDrawCreate","","",120,null],[12,"XftDrawCreateAlpha","","",120,null],[12,"XftDrawCreateBitmap","","",120,null],[12,"XftDrawDestroy","","",120,null],[12,"XftDrawDisplay","","",120,null],[12,"XftDrawDrawable","","",120,null],[12,"XftDrawGlyphFontSpec","","",120,null],[12,"XftDrawGlyphs","","",120,null],[12,"XftDrawGlyphSpec","","",120,null],[12,"XftDrawPicture","","",120,null],[12,"XftDrawRect","","",120,null],[12,"XftDrawSetClip","","",120,null],[12,"XftDrawSetClipRectangles","","",120,null],[12,"XftDrawSetSubwindowMode","","",120,null],[12,"XftDrawSrcPicture","","",120,null],[12,"XftDrawString16","","",120,null],[12,"XftDrawString32","","",120,null],[12,"XftDrawString8","","",120,null],[12,"XftDrawStringUtf16","","",120,null],[12,"XftDrawStringUtf8","","",120,null],[12,"XftDrawVisual","","",120,null],[12,"XftFontCheckGlyph","","",120,null],[12,"XftFontClose","","",120,null],[12,"XftFontCopy","","",120,null],[12,"XftFontInfoCreate","","",120,null],[12,"XftFontInfoDestroy","","",120,null],[12,"XftFontInfoEqual","","",120,null],[12,"XftFontInfoHash","","",120,null],[12,"XftFontLoadGlyphs","","",120,null],[12,"XftFontMatch","","",120,null],[12,"XftFontOpenInfo","","",120,null],[12,"XftFontOpenName","","",120,null],[12,"XftFontOpenPattern","","",120,null],[12,"XftFontOpenXlfd","","",120,null],[12,"XftFontUnloadGlyphs","","",120,null],[12,"XftGetVersion","","",120,null],[12,"XftGlyphExtents","","",120,null],[12,"XftGlyphFontSpecRender","","",120,null],[12,"XftGlyphRender","","",120,null],[12,"XftGlyphSpecRender","","",120,null],[12,"XftInit","","",120,null],[12,"XftInitFtLibrary","","",120,null],[12,"XftLockFace","","",120,null],[12,"XftNameParse","","",120,null],[12,"XftNameUnparse","","",120,null],[12,"XftTextExtents16","","",120,null],[12,"XftTextExtents32","","",120,null],[12,"XftTextExtents8","","",120,null],[12,"XftTextExtentsUtf16","","",120,null],[12,"XftTextExtentsUtf8","","",120,null],[12,"XftTextRender16","","",120,null],[12,"XftTextRender16BE","","",120,null],[12,"XftTextRender16LE","","",120,null],[12,"XftTextRender32","","",120,null],[12,"XftTextRender32BE","","",120,null],[12,"XftTextRender32LE","","",120,null],[12,"XftTextRender8","","",120,null],[12,"XftTextRenderUtf16","","",120,null],[12,"XftTextRenderUtf8","","",120,null],[12,"XftUnlockFace","","",120,null],[12,"XftXlfdParse","","",120,null],[12,"XftFontOpen","","",120,null],[12,"XftListFonts","","",120,null],[3,"XftFont","","",null,null],[12,"ascent","","",121,null],[12,"descent","","",121,null],[12,"height","","",121,null],[12,"max_advance_width","","",121,null],[12,"charset","","",121,null],[12,"pattern","","",121,null],[3,"XftColor","","",null,null],[12,"pixel","","",122,null],[12,"color","","",122,null],[3,"XftCharSpec","","",null,null],[12,"ucs4","","",123,null],[12,"x","","",123,null],[12,"y","","",123,null],[3,"XftCharFontSpec","","",null,null],[12,"font","","",124,null],[12,"ucs4","","",124,null],[12,"x","","",124,null],[12,"y","","",124,null],[3,"XftFontSet","","",null,null],[12,"nfont","","",125,null],[12,"sfont","","",125,null],[12,"fonts","","",125,null],[3,"XftGlyphSpec","","",null,null],[12,"glyph","","",126,null],[12,"x","","",126,null],[12,"y","","",126,null],[3,"XftGlyphFontSpec","","",null,null],[12,"font","","",127,null],[12,"glyph","","",127,null],[12,"x","","",127,null],[12,"y","","",127,null],[4,"FT_FaceRec","","",null,null],[4,"FcCharSet","","",null,null],[4,"FcPattern","","",null,null],[4,"FcEndian","","",null,null],[13,"Big","","",128,null],[13,"Little","","",128,null],[4,"FcResult","","",null,null],[13,"Match","","",129,null],[13,"NoMatch","","",129,null],[13,"TypeMismatch","","",129,null],[13,"NoId","","",129,null],[13,"OutOfMemory","","",129,null],[4,"XftFontInfo","","",null,null],[4,"XftDraw","","",null,null],[4,"XftPattern","","",null,null],[6,"FT_UInt","","",null,null],[6,"FcChar32","","",null,null],[17,"XFT_FAMILY","","",null,null],[17,"XFT_STYLE","","",null,null],[17,"XFT_SLANT","","",null,null],[17,"XFT_WEIGHT","","",null,null],[17,"XFT_SIZE","","",null,null],[17,"XFT_PIXEL_SIZE","","",null,null],[17,"XFT_SPACING","","",null,null],[17,"XFT_FOUNDRY","","",null,null],[17,"XFT_ANTIALIAS","","",null,null],[17,"XFT_SLANT_ROMAN","","",null,null],[17,"XFT_SLANT_ITALIC","","",null,null],[17,"XFT_SLANT_OBLIQUE","","",null,null],[17,"XftTypeVoid","","",null,null],[17,"XftTypeInteger","","",null,null],[17,"XftTypeDouble","","",null,null],[17,"XftTypeString","","",null,null],[17,"XftTypeBool","","",null,null],[17,"XftTypeMatrix","","",null,null],[11,"open","","",120,{"inputs":[],"output":{"generics":["xft","openerror"],"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",121,{"inputs":[{"name":"self"}],"output":{"name":"xftfont"}}],[11,"eq","","",121,{"inputs":[{"name":"self"},{"name":"xftfont"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"self"},{"name":"xftfont"}],"output":{"name":"bool"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",122,{"inputs":[{"name":"self"}],"output":{"name":"xftcolor"}}],[11,"eq","","",122,{"inputs":[{"name":"self"},{"name":"xftcolor"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"self"},{"name":"xftcolor"}],"output":{"name":"bool"}}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",123,{"inputs":[{"name":"self"}],"output":{"name":"xftcharspec"}}],[11,"eq","","",123,{"inputs":[{"name":"self"},{"name":"xftcharspec"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"self"},{"name":"xftcharspec"}],"output":{"name":"bool"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",124,{"inputs":[{"name":"self"}],"output":{"name":"xftcharfontspec"}}],[11,"eq","","",124,{"inputs":[{"name":"self"},{"name":"xftcharfontspec"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"self"},{"name":"xftcharfontspec"}],"output":{"name":"bool"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",125,{"inputs":[{"name":"self"}],"output":{"name":"xftfontset"}}],[11,"eq","","",125,{"inputs":[{"name":"self"},{"name":"xftfontset"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"self"},{"name":"xftfontset"}],"output":{"name":"bool"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",126,{"inputs":[{"name":"self"}],"output":{"name":"xftglyphspec"}}],[11,"eq","","",126,{"inputs":[{"name":"self"},{"name":"xftglyphspec"}],"output":{"name":"bool"}}],[11,"ne","","",126,{"inputs":[{"name":"self"},{"name":"xftglyphspec"}],"output":{"name":"bool"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",127,{"inputs":[{"name":"self"}],"output":{"name":"xftglyphfontspec"}}],[11,"eq","","",127,{"inputs":[{"name":"self"},{"name":"xftglyphfontspec"}],"output":{"name":"bool"}}],[11,"ne","","",127,{"inputs":[{"name":"self"},{"name":"xftglyphfontspec"}],"output":{"name":"bool"}}],[0,"xinerama","x11_dl","",null,null],[3,"Xlib","x11_dl::xinerama","",null,null],[12,"XineramaIsActive","","",130,null],[12,"XineramaQueryExtension","","",130,null],[12,"XineramaQueryScreens","","",130,null],[12,"XineramaQueryVersion","","",130,null],[12,"XPanoramiXAllocInfo","","",130,null],[12,"XPanoramiXGetScreenCount","","",130,null],[12,"XPanoramiXGetScreenSize","","",130,null],[12,"XPanoramiXGetState","","",130,null],[12,"XPanoramiXQueryExtension","","",130,null],[12,"XPanoramiXQueryVersion","","",130,null],[3,"XineramaScreenInfo","","",null,null],[12,"screen_number","","",131,null],[12,"x_org","","",131,null],[12,"y_org","","",131,null],[12,"width","","",131,null],[12,"height","","",131,null],[3,"XPanoramiXInfo","","",null,null],[12,"window","","",132,null],[12,"screen","","",132,null],[12,"State","","",132,null],[12,"width","","",132,null],[12,"height","","",132,null],[12,"ScreenCount","","",132,null],[12,"eventMask","","",132,null],[11,"open","","",130,{"inputs":[],"output":{"generics":["xlib","openerror"],"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"self"}],"output":{"name":"xineramascreeninfo"}}],[11,"eq","","",131,{"inputs":[{"name":"self"},{"name":"xineramascreeninfo"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"self"},{"name":"xineramascreeninfo"}],"output":{"name":"bool"}}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",132,{"inputs":[{"name":"self"}],"output":{"name":"xpanoramixinfo"}}],[11,"eq","","",132,{"inputs":[{"name":"self"},{"name":"xpanoramixinfo"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"self"},{"name":"xpanoramixinfo"}],"output":{"name":"bool"}}],[0,"xinput","x11_dl","",null,null],[3,"XInput","x11_dl::xinput","",null,null],[12,"XAllowDeviceEvents","","",133,null],[12,"XChangeDeviceControl","","",133,null],[12,"XChangeDeviceDontPropagateList","","",133,null],[12,"XChangeDeviceKeyMapping","","",133,null],[12,"XChangeDeviceProperty","","",133,null],[12,"XChangeFeedbackControl","","",133,null],[12,"XChangeKeyboardDevice","","",133,null],[12,"XChangePointerDevice","","",133,null],[12,"XCloseDevice","","",133,null],[12,"XDeleteDeviceProperty","","",133,null],[12,"XDeviceBell","","",133,null],[12,"XFreeDeviceControl","","",133,null],[12,"XFreeDeviceList","","",133,null],[12,"XFreeDeviceMotionEvents","","",133,null],[12,"XFreeDeviceState","","",133,null],[12,"XFreeFeedbackList","","",133,null],[12,"XGetDeviceButtonMapping","","",133,null],[12,"XGetDeviceControl","","",133,null],[12,"XGetDeviceDontPropagateList","","",133,null],[12,"XGetDeviceFocus","","",133,null],[12,"XGetDeviceKeyMapping","","",133,null],[12,"XGetDeviceModifierMapping","","",133,null],[12,"XGetDeviceMotionEvents","","",133,null],[12,"XGetDeviceProperty","","",133,null],[12,"XGetExtensionVersion","","",133,null],[12,"XGetFeedbackControl","","",133,null],[12,"XGetSelectedExtensionEvents","","",133,null],[12,"XGrabDevice","","",133,null],[12,"XGrabDeviceButton","","",133,null],[12,"XGrabDeviceKey","","",133,null],[12,"XListDeviceProperties","","",133,null],[12,"XListInputDevices","","",133,null],[12,"XOpenDevice","","",133,null],[12,"XQueryDeviceState","","",133,null],[12,"XSelectExtensionEvent","","",133,null],[12,"XSendExtensionEvent","","",133,null],[12,"XSetDeviceButtonMapping","","",133,null],[12,"XSetDeviceFocus","","",133,null],[12,"XSetDeviceMode","","",133,null],[12,"XSetDeviceModifierMapping","","",133,null],[12,"XSetDeviceValuators","","",133,null],[12,"XUngrabDevice","","",133,null],[12,"XUngrabDeviceButton","","",133,null],[12,"XUngrabDeviceKey","","",133,null],[3,"XDevice","","",null,null],[12,"device_id","","",134,null],[12,"num_classes","","",134,null],[12,"classes","","",134,null],[3,"XDeviceControl","","",null,null],[12,"control","","",135,null],[12,"length","","",135,null],[3,"XDeviceInfo","","",null,null],[12,"id","","",136,null],[12,"type_","","",136,null],[12,"name","","",136,null],[12,"num_classes","","",136,null],[12,"use_","","",136,null],[12,"inputclassinfo","","",136,null],[3,"XDeviceState","","",null,null],[12,"device_id","","",137,null],[12,"num_classes","","",137,null],[12,"data","","",137,null],[3,"XDeviceTimeCoord","","",null,null],[12,"time","","",138,null],[12,"data","","",138,null],[3,"XExtensionVersion","","",null,null],[12,"present","","",139,null],[12,"major_version","","",139,null],[12,"minor_version","","",139,null],[3,"XFeedbackControl","","",null,null],[12,"class","","",140,null],[12,"length","","",140,null],[12,"id","","",140,null],[3,"XFeedbackState","","",null,null],[12,"class","","",141,null],[12,"length","","",141,null],[12,"id","","",141,null],[3,"XInputClass","","",null,null],[12,"class","","",142,null],[12,"length","","",142,null],[3,"XInputClassInfo","","",null,null],[12,"input_class","","",143,null],[12,"event_type_base","","",143,null],[4,"_XAnyClassinfo","","",null,null],[6,"XAnyClassPtr","","",null,null],[11,"open","","",133,{"inputs":[],"output":{"generics":["xinput","openerror"],"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"self"}],"output":{"name":"xdevice"}}],[11,"eq","","",134,{"inputs":[{"name":"self"},{"name":"xdevice"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"self"},{"name":"xdevice"}],"output":{"name":"bool"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",135,{"inputs":[{"name":"self"}],"output":{"name":"xdevicecontrol"}}],[11,"eq","","",135,{"inputs":[{"name":"self"},{"name":"xdevicecontrol"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"self"},{"name":"xdevicecontrol"}],"output":{"name":"bool"}}],[11,"fmt","","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",136,{"inputs":[{"name":"self"}],"output":{"name":"xdeviceinfo"}}],[11,"eq","","",136,{"inputs":[{"name":"self"},{"name":"xdeviceinfo"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"self"},{"name":"xdeviceinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",137,{"inputs":[{"name":"self"}],"output":{"name":"xdevicestate"}}],[11,"eq","","",137,{"inputs":[{"name":"self"},{"name":"xdevicestate"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"self"},{"name":"xdevicestate"}],"output":{"name":"bool"}}],[11,"fmt","","",138,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",138,{"inputs":[{"name":"self"}],"output":{"name":"xdevicetimecoord"}}],[11,"eq","","",138,{"inputs":[{"name":"self"},{"name":"xdevicetimecoord"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"self"},{"name":"xdevicetimecoord"}],"output":{"name":"bool"}}],[11,"fmt","","",139,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",139,{"inputs":[{"name":"self"}],"output":{"name":"xextensionversion"}}],[11,"eq","","",139,{"inputs":[{"name":"self"},{"name":"xextensionversion"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"self"},{"name":"xextensionversion"}],"output":{"name":"bool"}}],[11,"fmt","","",140,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",140,{"inputs":[{"name":"self"}],"output":{"name":"xfeedbackcontrol"}}],[11,"eq","","",140,{"inputs":[{"name":"self"},{"name":"xfeedbackcontrol"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"self"},{"name":"xfeedbackcontrol"}],"output":{"name":"bool"}}],[11,"fmt","","",141,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",141,{"inputs":[{"name":"self"}],"output":{"name":"xfeedbackstate"}}],[11,"eq","","",141,{"inputs":[{"name":"self"},{"name":"xfeedbackstate"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"self"},{"name":"xfeedbackstate"}],"output":{"name":"bool"}}],[11,"fmt","","",142,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",142,{"inputs":[{"name":"self"}],"output":{"name":"xinputclass"}}],[11,"eq","","",142,{"inputs":[{"name":"self"},{"name":"xinputclass"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"self"},{"name":"xinputclass"}],"output":{"name":"bool"}}],[11,"fmt","","",143,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",143,{"inputs":[{"name":"self"}],"output":{"name":"xinputclassinfo"}}],[11,"eq","","",143,{"inputs":[{"name":"self"},{"name":"xinputclassinfo"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"self"},{"name":"xinputclassinfo"}],"output":{"name":"bool"}}],[0,"xinput2","x11_dl","",null,null],[3,"XInput2","x11_dl::xinput2","",null,null],[12,"XIAllowEvents","","",144,null],[12,"XIAllowTouchEvents","","",144,null],[12,"XIBarrierReleasePointer","","",144,null],[12,"XIBarrierReleasePointers","","",144,null],[12,"XIChangeHierarchy","","",144,null],[12,"XIChangeProperty","","",144,null],[12,"XIDefineCursor","","",144,null],[12,"XIDeleteProperty","","",144,null],[12,"XIFreeDeviceInfo","","",144,null],[12,"XIGetClientPointer","","",144,null],[12,"XIGetFocus","","",144,null],[12,"XIGetProperty","","",144,null],[12,"XIGetSelectedEvents","","",144,null],[12,"XIGrabButton","","",144,null],[12,"XIGrabDevice","","",144,null],[12,"XIGrabEnter","","",144,null],[12,"XIGrabFocusIn","","",144,null],[12,"XIGrabKeycode","","",144,null],[12,"XIGrabTouchBegin","","",144,null],[12,"XIListProperties","","",144,null],[12,"XIQueryDevice","","",144,null],[12,"XIQueryPointer","","",144,null],[12,"XIQueryVersion","","",144,null],[12,"XISelectEvents","","",144,null],[12,"XISetClientPointer","","",144,null],[12,"XISetFocus","","",144,null],[12,"XIUndefineCursor","","",144,null],[12,"XIUngrabButton","","",144,null],[12,"XIUngrabDevice","","",144,null],[12,"XIUngrabEnter","","",144,null],[12,"XIUngrabFocusIn","","",144,null],[12,"XIUngrabKeycode","","",144,null],[12,"XIUngrabTouchBegin","","",144,null],[12,"XIWarpPointer","","",144,null],[3,"XIAddMasterInfo","","",null,null],[12,"_type","","",145,null],[12,"name","","",145,null],[12,"send_core","","",145,null],[12,"enable","","",145,null],[3,"XIRemoveMasterInfo","","",null,null],[12,"_type","","",146,null],[12,"deviceid","","",146,null],[12,"return_mode","","",146,null],[12,"return_pointer","","",146,null],[12,"return_keyboard","","",146,null],[3,"XIAttachSlaveInfo","","",null,null],[12,"_type","","",147,null],[12,"deviceid","","",147,null],[12,"new_master","","",147,null],[3,"XIDetachSlaveInfo","","",null,null],[12,"_type","","",148,null],[12,"deviceid","","",148,null],[3,"XIAnyHierarchyChangeInfo","","",null,null],[12,"_bindgen_data_","","",149,null],[3,"XIModifierState","","",null,null],[12,"base","","",150,null],[12,"latched","","",150,null],[12,"locked","","",150,null],[12,"effective","","",150,null],[3,"XIButtonState","","",null,null],[12,"mask_len","","",151,null],[12,"mask","","",151,null],[3,"XIValuatorState","","",null,null],[12,"mask_len","","",152,null],[12,"mask","","",152,null],[12,"values","","",152,null],[3,"XIEventMask","","",null,null],[12,"deviceid","","",153,null],[12,"mask_len","","",153,null],[12,"mask","","",153,null],[3,"XIAnyClassInfo","","",null,null],[12,"_type","","",154,null],[12,"sourceid","","",154,null],[3,"XIButtonClassInfo","","",null,null],[12,"_type","","",155,null],[12,"sourceid","","",155,null],[12,"num_buttons","","",155,null],[12,"labels","","",155,null],[12,"state","","",155,null],[3,"XIKeyClassInfo","","",null,null],[12,"_type","","",156,null],[12,"sourceid","","",156,null],[12,"num_keycodes","","",156,null],[12,"keycodes","","",156,null],[3,"XIValuatorClassInfo","","",null,null],[12,"_type","","",157,null],[12,"sourceid","","",157,null],[12,"number","","",157,null],[12,"label","","",157,null],[12,"min","","",157,null],[12,"max","","",157,null],[12,"value","","",157,null],[12,"resolution","","",157,null],[12,"mode","","",157,null],[3,"XIScrollClassInfo","","",null,null],[12,"_type","","",158,null],[12,"sourceid","","",158,null],[12,"number","","",158,null],[12,"scroll_type","","",158,null],[12,"increment","","",158,null],[12,"flags","","",158,null],[3,"XITouchClassInfo","","",null,null],[12,"_type","","",159,null],[12,"sourceid","","",159,null],[12,"mode","","",159,null],[12,"num_touches","","",159,null],[3,"XIDeviceInfo","","",null,null],[12,"deviceid","","",160,null],[12,"name","","",160,null],[12,"_use","","",160,null],[12,"attachment","","",160,null],[12,"enabled","","",160,null],[12,"num_classes","","",160,null],[12,"classes","","",160,null],[3,"XIGrabModifiers","","",null,null],[12,"modifiers","","",161,null],[12,"status","","",161,null],[3,"XIBarrierReleasePointerInfo","","",null,null],[12,"deviceid","","",162,null],[12,"barrier","","",162,null],[12,"eventid","","",162,null],[3,"XIEvent","","",null,null],[12,"_type","","",163,null],[12,"serial","","",163,null],[12,"send_event","","",163,null],[12,"display","","",163,null],[12,"extension","","",163,null],[12,"evtype","","",163,null],[12,"time","","",163,null],[3,"XIHierarchyInfo","","",null,null],[12,"deviceid","","",164,null],[12,"attachment","","",164,null],[12,"_use","","",164,null],[12,"enabled","","",164,null],[12,"flags","","",164,null],[3,"XIHierarchyEvent","","",null,null],[12,"_type","","",165,null],[12,"serial","","",165,null],[12,"send_event","","",165,null],[12,"display","","",165,null],[12,"extension","","",165,null],[12,"evtype","","",165,null],[12,"time","","",165,null],[12,"flags","","",165,null],[12,"num_info","","",165,null],[12,"info","","",165,null],[3,"XIDeviceChangedEvent","","",null,null],[12,"_type","","",166,null],[12,"serial","","",166,null],[12,"send_event","","",166,null],[12,"display","","",166,null],[12,"extension","","",166,null],[12,"evtype","","",166,null],[12,"time","","",166,null],[12,"deviceid","","",166,null],[12,"sourceid","","",166,null],[12,"reason","","",166,null],[12,"num_classes","","",166,null],[12,"classes","","",166,null],[3,"XIDeviceEvent","","",null,null],[12,"_type","","",167,null],[12,"serial","","",167,null],[12,"send_event","","",167,null],[12,"display","","",167,null],[12,"extension","","",167,null],[12,"evtype","","",167,null],[12,"time","","",167,null],[12,"deviceid","","",167,null],[12,"sourceid","","",167,null],[12,"detail","","",167,null],[12,"root","","",167,null],[12,"event","","",167,null],[12,"child","","",167,null],[12,"root_x","","",167,null],[12,"root_y","","",167,null],[12,"event_x","","",167,null],[12,"event_y","","",167,null],[12,"flags","","",167,null],[12,"buttons","","",167,null],[12,"valuators","","",167,null],[12,"mods","","",167,null],[12,"group","","",167,null],[3,"XIRawEvent","","",null,null],[12,"_type","","",168,null],[12,"serial","","",168,null],[12,"send_event","","",168,null],[12,"display","","",168,null],[12,"extension","","",168,null],[12,"evtype","","",168,null],[12,"time","","",168,null],[12,"deviceid","","",168,null],[12,"sourceid","","",168,null],[12,"detail","","",168,null],[12,"flags","","",168,null],[12,"valuators","","",168,null],[12,"raw_values","","",168,null],[3,"XIEnterEvent","","",null,null],[12,"_type","","",169,null],[12,"serial","","",169,null],[12,"send_event","","",169,null],[12,"display","","",169,null],[12,"extension","","",169,null],[12,"evtype","","",169,null],[12,"time","","",169,null],[12,"deviceid","","",169,null],[12,"sourceid","","",169,null],[12,"detail","","",169,null],[12,"root","","",169,null],[12,"event","","",169,null],[12,"child","","",169,null],[12,"root_x","","",169,null],[12,"root_y","","",169,null],[12,"event_x","","",169,null],[12,"event_y","","",169,null],[12,"mode","","",169,null],[12,"focus","","",169,null],[12,"same_screen","","",169,null],[12,"buttons","","",169,null],[12,"mods","","",169,null],[12,"group","","",169,null],[3,"XIPropertyEvent","","",null,null],[12,"_type","","",170,null],[12,"serial","","",170,null],[12,"send_event","","",170,null],[12,"display","","",170,null],[12,"extension","","",170,null],[12,"evtype","","",170,null],[12,"time","","",170,null],[12,"deviceid","","",170,null],[12,"property","","",170,null],[12,"what","","",170,null],[3,"XITouchOwnershipEvent","","",null,null],[12,"_type","","",171,null],[12,"serial","","",171,null],[12,"send_event","","",171,null],[12,"display","","",171,null],[12,"extension","","",171,null],[12,"evtype","","",171,null],[12,"time","","",171,null],[12,"deviceid","","",171,null],[12,"sourceid","","",171,null],[12,"touchid","","",171,null],[12,"root","","",171,null],[12,"event","","",171,null],[12,"child","","",171,null],[12,"flags","","",171,null],[3,"XIBarrierEvent","","",null,null],[12,"_type","","",172,null],[12,"serial","","",172,null],[12,"send_event","","",172,null],[12,"display","","",172,null],[12,"extension","","",172,null],[12,"evtype","","",172,null],[12,"time","","",172,null],[12,"deviceid","","",172,null],[12,"sourceid","","",172,null],[12,"event","","",172,null],[12,"root","","",172,null],[12,"root_x","","",172,null],[12,"root_y","","",172,null],[12,"dx","","",172,null],[12,"dy","","",172,null],[12,"dtime","","",172,null],[12,"flags","","",172,null],[12,"barrier","","",172,null],[12,"eventid","","",172,null],[5,"XISetMask","","",null,null],[5,"XIClearMask","","",null,null],[5,"XIMaskIsSet","","",null,null],[6,"XIGroupState","","",null,null],[6,"BarrierEventID","","",null,null],[6,"XILeaveEvent","","",null,null],[6,"XIFocusInEvent","","",null,null],[6,"XIFocusOutEvent","","",null,null],[17,"XInput_2_0","","",null,null],[17,"XI_2_Major","","",null,null],[17,"XI_2_Minor","","",null,null],[17,"XIPropertyDeleted","","",null,null],[17,"XIPropertyCreated","","",null,null],[17,"XIPropertyModified","","",null,null],[17,"XIPropModeReplace","","",null,null],[17,"XIPropModePrepend","","",null,null],[17,"XIPropModeAppend","","",null,null],[17,"XINotifyNormal","","",null,null],[17,"XINotifyGrab","","",null,null],[17,"XINotifyUngrab","","",null,null],[17,"XINotifyWhileGrabbed","","",null,null],[17,"XINotifyPassiveGrab","","",null,null],[17,"XINotifyPassiveUngrab","","",null,null],[17,"XINotifyAncestor","","",null,null],[17,"XINotifyVirtual","","",null,null],[17,"XINotifyInferior","","",null,null],[17,"XINotifyNonlinear","","",null,null],[17,"XINotifyNonlinearVirtual","","",null,null],[17,"XINotifyPointer","","",null,null],[17,"XINotifyPointerRoot","","",null,null],[17,"XINotifyDetailNone","","",null,null],[17,"XIGrabModeSync","","",null,null],[17,"XIGrabModeAsync","","",null,null],[17,"XIGrabModeTouch","","",null,null],[17,"XIGrabSuccess","","",null,null],[17,"XIAlreadyGrabbed","","",null,null],[17,"XIGrabInvalidTime","","",null,null],[17,"XIGrabNotViewable","","",null,null],[17,"XIGrabFrozen","","",null,null],[17,"XIGrabtypeButton","","",null,null],[17,"XIGrabtypeKeycode","","",null,null],[17,"XIGrabtypeEnter","","",null,null],[17,"XIGrabtypeFocusIn","","",null,null],[17,"XIGrabtypeTouchBegin","","",null,null],[17,"XIAnyButton","","",null,null],[17,"XIAnyKeycode","","",null,null],[17,"XIAsyncDevice","","",null,null],[17,"XISyncDevice","","",null,null],[17,"XIReplayDevice","","",null,null],[17,"XIAsyncPairedDevice","","",null,null],[17,"XIAsyncPair","","",null,null],[17,"XISyncPair","","",null,null],[17,"XIAcceptTouch","","",null,null],[17,"XIRejectTouch","","",null,null],[17,"XISlaveSwitch","","",null,null],[17,"XIDeviceChange","","",null,null],[17,"XIMasterAdded","","",null,null],[17,"XIMasterRemoved","","",null,null],[17,"XISlaveAdded","","",null,null],[17,"XISlaveRemoved","","",null,null],[17,"XISlaveAttached","","",null,null],[17,"XISlaveDetached","","",null,null],[17,"XIDeviceEnabled","","",null,null],[17,"XIDeviceDisabled","","",null,null],[17,"XIAddMaster","","",null,null],[17,"XIRemoveMaster","","",null,null],[17,"XIAttachSlave","","",null,null],[17,"XIDetachSlave","","",null,null],[17,"XIAttachToMaster","","",null,null],[17,"XIFloating","","",null,null],[17,"XIModeRelative","","",null,null],[17,"XIModeAbsolute","","",null,null],[17,"XIMasterPointer","","",null,null],[17,"XIMasterKeyboard","","",null,null],[17,"XISlavePointer","","",null,null],[17,"XISlaveKeyboard","","",null,null],[17,"XIFloatingSlave","","",null,null],[17,"XIKeyClass","","",null,null],[17,"XIButtonClass","","",null,null],[17,"XIValuatorClass","","",null,null],[17,"XIScrollClass","","",null,null],[17,"XITouchClass","","",null,null],[17,"XIScrollTypeVertical","","",null,null],[17,"XIScrollTypeHorizontal","","",null,null],[17,"XIScrollFlagNoEmulation","","",null,null],[17,"XIScrollFlagPreferred","","",null,null],[17,"XIKeyRepeat","","",null,null],[17,"XIPointerEmulated","","",null,null],[17,"XITouchPendingEnd","","",null,null],[17,"XITouchEmulatingPointer","","",null,null],[17,"XIBarrierPointerReleased","","",null,null],[17,"XIBarrierDeviceIsGrabbed","","",null,null],[17,"XIDirectTouch","","",null,null],[17,"XIDependentTouch","","",null,null],[17,"XIAllDevices","","",null,null],[17,"XIAllMasterDevices","","",null,null],[17,"XI_DeviceChanged","","",null,null],[17,"XI_KeyPress","","",null,null],[17,"XI_KeyRelease","","",null,null],[17,"XI_ButtonPress","","",null,null],[17,"XI_ButtonRelease","","",null,null],[17,"XI_Motion","","",null,null],[17,"XI_Enter","","",null,null],[17,"XI_Leave","","",null,null],[17,"XI_FocusIn","","",null,null],[17,"XI_FocusOut","","",null,null],[17,"XI_HierarchyChanged","","",null,null],[17,"XI_PropertyEvent","","",null,null],[17,"XI_RawKeyPress","","",null,null],[17,"XI_RawKeyRelease","","",null,null],[17,"XI_RawButtonPress","","",null,null],[17,"XI_RawButtonRelease","","",null,null],[17,"XI_RawMotion","","",null,null],[17,"XI_TouchBegin","","",null,null],[17,"XI_TouchUpdate","","",null,null],[17,"XI_TouchEnd","","",null,null],[17,"XI_TouchOwnership","","",null,null],[17,"XI_RawTouchBegin","","",null,null],[17,"XI_RawTouchUpdate","","",null,null],[17,"XI_RawTouchEnd","","",null,null],[17,"XI_BarrierHit","","",null,null],[17,"XI_BarrierLeave","","",null,null],[17,"XI_LASTEVENT","","",null,null],[17,"XI_DeviceChangedMask","","",null,null],[17,"XI_KeyPressMask","","",null,null],[17,"XI_KeyReleaseMask","","",null,null],[17,"XI_ButtonPressMask","","",null,null],[17,"XI_ButtonReleaseMask","","",null,null],[17,"XI_MotionMask","","",null,null],[17,"XI_EnterMask","","",null,null],[17,"XI_LeaveMask","","",null,null],[17,"XI_FocusInMask","","",null,null],[17,"XI_FocusOutMask","","",null,null],[17,"XI_HierarchyChangedMask","","",null,null],[17,"XI_PropertyEventMask","","",null,null],[17,"XI_RawKeyPressMask","","",null,null],[17,"XI_RawKeyReleaseMask","","",null,null],[17,"XI_RawButtonPressMask","","",null,null],[17,"XI_RawButtonReleaseMask","","",null,null],[17,"XI_RawMotionMask","","",null,null],[17,"XI_TouchBeginMask","","",null,null],[17,"XI_TouchEndMask","","",null,null],[17,"XI_TouchOwnershipChangedMask","","",null,null],[17,"XI_TouchUpdateMask","","",null,null],[17,"XI_RawTouchBeginMask","","",null,null],[17,"XI_RawTouchEndMask","","",null,null],[17,"XI_RawTouchUpdateMask","","",null,null],[17,"XI_BarrierHitMask","","",null,null],[17,"XI_BarrierLeaveMask","","",null,null],[11,"open","","",144,{"inputs":[],"output":{"generics":["xinput2","openerror"],"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",145,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",145,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",146,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",146,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",146,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",147,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",147,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",147,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",148,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",148,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",148,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",149,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"_type","","",149,null],[11,"add","","",149,null],[11,"remove","","",149,null],[11,"attach","","",149,null],[11,"detach","","",149,null],[11,"clone","","",149,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",149,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",150,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",150,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",150,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",151,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",151,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",151,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",152,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",152,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",152,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",153,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",153,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",153,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",154,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",154,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",154,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",155,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",155,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",155,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",156,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",156,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",156,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",157,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",157,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",157,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",158,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",158,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",158,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",159,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",159,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",159,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",160,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",160,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",160,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",161,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",161,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",161,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",162,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",162,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",162,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",163,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",163,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",163,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",164,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",164,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",164,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",165,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",165,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",165,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",166,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",166,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",166,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",167,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",167,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",167,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",168,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",168,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",168,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",169,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",169,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",169,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",170,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",170,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",170,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",171,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",171,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",171,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",172,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",172,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",172,{"inputs":[],"output":{"name":"self"}}],[0,"xmd","x11_dl","",null,null],[6,"INT8","x11_dl::xmd","",null,null],[6,"INT16","","",null,null],[6,"INT32","","",null,null],[6,"INT64","","",null,null],[6,"CARD8","","",null,null],[6,"CARD16","","",null,null],[6,"CARD32","","",null,null],[6,"CARD64","","",null,null],[6,"BYTE","","",null,null],[6,"BOOL","","",null,null],[0,"xmu","x11_dl","",null,null],[3,"Xmu","x11_dl::xmu","",null,null],[12,"XmuAddCloseDisplayHook","","",173,null],[12,"XmuAddInitializer","","",173,null],[12,"XmuAllStandardColormaps","","",173,null],[12,"XmuAppendSegment","","",173,null],[12,"XmuAreaAnd","","",173,null],[12,"XmuAreaCopy","","",173,null],[12,"XmuAreaDup","","",173,null],[12,"XmuAreaNot","","",173,null],[12,"XmuAreaOrXor","","",173,null],[12,"XmuCallInitializers","","",173,null],[12,"XmuClientWindow","","",173,null],[12,"XmuCompareISOLatin1","","",173,null],[12,"XmuConvertStandardSelection","","",173,null],[12,"XmuCopyISOLatin1Lowered","","",173,null],[12,"XmuCopyISOLatin1Uppered","","",173,null],[12,"XmuCreateColormap","","",173,null],[12,"XmuCreatePixmapFromBitmap","","",173,null],[12,"XmuCreateStippledPixmap","","",173,null],[12,"XmuCursorNameToIndex","","",173,null],[12,"XmuCvtBackingStoreToString","","",173,null],[12,"XmuCvtFunctionToCallback","","",173,null],[12,"XmuCvtGravityToString","","",173,null],[12,"XmuCvtJustifyToString","","",173,null],[12,"XmuCvtLongToString","","",173,null],[12,"XmuCvtOrientationToString","","",173,null],[12,"XmuCvtShapeStyleToString","","",173,null],[12,"XmuCvtStringToBackingStore","","",173,null],[12,"XmuCvtStringToBitmap","","",173,null],[12,"XmuCvtStringToColorCursor","","",173,null],[12,"XmuCvtStringToCursor","","",173,null],[12,"XmuCvtStringToGravity","","",173,null],[12,"XmuCvtStringToJustify","","",173,null],[12,"XmuCvtStringToLong","","",173,null],[12,"XmuCvtStringToOrientation","","",173,null],[12,"XmuCvtStringToShapeStyle","","",173,null],[12,"XmuCvtStringToWidget","","",173,null],[12,"XmuCvtWidgetToString","","",173,null],[12,"XmuDeleteStandardColormap","","",173,null],[12,"XmuDestroyScanlineList","","",173,null],[12,"XmuDestroySegmentList","","",173,null],[12,"XmuDistinguishableColors","","",173,null],[12,"XmuDistinguishablePixels","","",173,null],[12,"XmuDQAddDisplay","","",173,null],[12,"XmuDQCreate","","",173,null],[12,"XmuDQDestroy","","",173,null],[12,"XmuDQLookupDisplay","","",173,null],[12,"XmuDQRemoveDisplay","","",173,null],[12,"XmuDrawLogo","","",173,null],[12,"XmuDrawRoundedRectangle","","",173,null],[12,"XmuFillRoundedRectangle","","",173,null],[12,"XmuGetAtomName","","",173,null],[12,"XmuGetColormapAllocation","","",173,null],[12,"XmuGetHostname","","",173,null],[12,"XmuInternAtom","","",173,null],[12,"XmuInternStrings","","",173,null],[12,"XmuLocateBitmapFile","","",173,null],[12,"XmuLocatePixmapFile","","",173,null],[12,"XmuLookupAPL","","",173,null],[12,"XmuLookupArabic","","",173,null],[12,"XmuLookupCloseDisplayHook","","",173,null],[12,"XmuLookupCyrillic","","",173,null],[12,"XmuLookupGreek","","",173,null],[12,"XmuLookupHebrew","","",173,null],[12,"XmuLookupJISX0201","","",173,null],[12,"XmuLookupKana","","",173,null],[12,"XmuLookupLatin1","","",173,null],[12,"XmuLookupLatin2","","",173,null],[12,"XmuLookupLatin3","","",173,null],[12,"XmuLookupLatin4","","",173,null],[12,"XmuLookupStandardColormap","","",173,null],[12,"XmuLookupString","","",173,null],[12,"XmuMakeAtom","","",173,null],[12,"XmuNameOfAtom","","",173,null],[12,"XmuNCopyISOLatin1Lowered","","",173,null],[12,"XmuNCopyISOLatin1Uppered","","",173,null],[12,"XmuNewArea","","",173,null],[12,"XmuNewCvtStringToWidget","","",173,null],[12,"XmuNewScanline","","",173,null],[12,"XmuNewSegment","","",173,null],[12,"XmuOptimizeArea","","",173,null],[12,"XmuOptimizeScanline","","",173,null],[12,"XmuPrintDefaultErrorMessage","","",173,null],[12,"XmuReadBitmapData","","",173,null],[12,"XmuReadBitmapDataFromFile","","",173,null],[12,"XmuRegisterExternalAgent","","",173,null],[12,"XmuReleaseStippledPixmap","","",173,null],[12,"XmuRemoveCloseDisplayHook","","",173,null],[12,"XmuReshapeWidget","","",173,null],[12,"XmuScanlineAnd","","",173,null],[12,"XmuScanlineAndSegment","","",173,null],[12,"XmuScanlineCopy","","",173,null],[12,"XmuScanlineEqu","","",173,null],[12,"XmuScanlineNot","","",173,null],[12,"XmuScanlineOr","","",173,null],[12,"XmuScanlineOrSegment","","",173,null],[12,"XmuScanlineXor","","",173,null],[12,"XmuScanlineXorSegment","","",173,null],[12,"XmuScreenOfWindow","","",173,null],[12,"XmuSimpleErrorHandler","","",173,null],[12,"XmuStandardColormap","","",173,null],[12,"XmuUpdateMapHints","","",173,null],[12,"XmuValidArea","","",173,null],[12,"XmuValidScanline","","",173,null],[12,"XmuVisualStandardColormaps","","",173,null],[12,"XmuWnCountOwnedResources","","",173,null],[12,"XmuWnFetchResources","","",173,null],[12,"XmuWnInitializeNodes","","",173,null],[12,"XmuWnNameToNode","","",173,null],[12,"XmuSnprintf","","",173,null],[12,"_XA_ATOM_PAIR","","",173,null],[12,"_XA_CHARACTER_POSITION","","",173,null],[12,"_XA_CLASS","","",173,null],[12,"_XA_CLIENT_WINDOW","","",173,null],[12,"_XA_CLIPBOARD","","",173,null],[12,"_XA_COMPOUND_TEXT","","",173,null],[12,"_XA_DECNET_ADDRESS","","",173,null],[12,"_XA_DELETE","","",173,null],[12,"_XA_FILENAME","","",173,null],[12,"_XA_HOSTNAME","","",173,null],[12,"_XA_IP_ADDRESS","","",173,null],[12,"_XA_LENGTH","","",173,null],[12,"_XA_LIST_LENGTH","","",173,null],[12,"_XA_NAME","","",173,null],[12,"_XA_NET_ADDRESS","","",173,null],[12,"_XA_NULL","","",173,null],[12,"_XA_OWNER_OS","","",173,null],[12,"_XA_SPAN","","",173,null],[12,"_XA_TARGETS","","",173,null],[12,"_XA_TEXT","","",173,null],[12,"_XA_TIMESTAMP","","",173,null],[12,"_XA_USER","","",173,null],[12,"_XA_UTF8_STRING","","",173,null],[3,"_AtomRec","","",null,null],[3,"_XmuArea","","",null,null],[3,"_XmuDisplayQueue","","",null,null],[3,"_XmuDisplayQueueEntry","","",null,null],[3,"_XmuScanline","","",null,null],[3,"_XmuSegment","","",null,null],[3,"_XmuWidgetNode","","",null,null],[6,"AtomPtr","","",null,null],[6,"XmuArea","","",null,null],[6,"XmuDisplayQueue","","",null,null],[6,"XmuDisplayQueueEntry","","",null,null],[6,"XmuScanline","","",null,null],[6,"XmuSegment","","",null,null],[6,"XmuWidgetNode","","",null,null],[11,"open","","",173,{"inputs":[],"output":{"generics":["xmu","openerror"],"name":"result"}}],[0,"xrecord","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xrecord","",null,null],[12,"XRecordAllocRange","","",174,null],[12,"XRecordCreateContext","","",174,null],[12,"XRecordDisableContext","","",174,null],[12,"XRecordEnableContext","","",174,null],[12,"XRecordEnableContextAsync","","",174,null],[12,"XRecordFreeContext","","",174,null],[12,"XRecordFreeData","","",174,null],[12,"XRecordFreeState","","",174,null],[12,"XRecordGetContext","","",174,null],[12,"XRecordIdBaseMask","","",174,null],[12,"XRecordProcessReplies","","",174,null],[12,"XRecordQueryVersion","","",174,null],[12,"XRecordRegisterClients","","",174,null],[12,"XRecordUnregisterClients","","",174,null],[3,"XRecordClientInfo","","",null,null],[12,"client","","",175,null],[12,"nranges","","",175,null],[12,"ranges","","",175,null],[3,"XRecordExtRange","","",null,null],[12,"ext_major","","",176,null],[12,"ext_minor","","",176,null],[3,"XRecordInterceptData","","",null,null],[12,"id_base","","",177,null],[12,"server_time","","",177,null],[12,"client_seq","","",177,null],[12,"category","","",177,null],[12,"client_swapped","","",177,null],[12,"data","","",177,null],[12,"data_len","","",177,null],[3,"XRecordRange","","",null,null],[12,"core_requests","","",178,null],[12,"core_replies","","",178,null],[12,"ext_requests","","",178,null],[12,"ext_replies","","",178,null],[12,"delivered_events","","",178,null],[12,"device_events","","",178,null],[12,"errors","","",178,null],[12,"client_started","","",178,null],[12,"client_died","","",178,null],[3,"XRecordRange8","","",null,null],[12,"first","","",179,null],[12,"last","","",179,null],[3,"XRecordRange16","","",null,null],[12,"first","","",180,null],[12,"last","","",180,null],[3,"XRecordState","","",null,null],[12,"enabled","","",181,null],[12,"datum_flags","","",181,null],[12,"nclients","","",181,null],[12,"client_info","","",181,null],[6,"XRecordClientSpec","","",null,null],[6,"XRecordContext","","",null,null],[17,"XRecordFromServerTime","","",null,null],[17,"XRecordFromClientTime","","",null,null],[17,"XRecordFromClientSequence","","",null,null],[17,"XRecordCurrentClients","","",null,null],[17,"XRecordFutureClients","","",null,null],[17,"XRecordAllClients","","",null,null],[17,"XRecordFromServer","","",null,null],[17,"XRecordFromClient","","",null,null],[17,"XRecordClientStarted","","",null,null],[17,"XRecordClientDied","","",null,null],[17,"XRecordStartOfData","","",null,null],[17,"XRecordEndOfData","","",null,null],[11,"open","","",174,{"inputs":[],"output":{"generics":["xf86vmode","openerror"],"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",175,{"inputs":[{"name":"self"}],"output":{"name":"xrecordclientinfo"}}],[11,"eq","","",175,{"inputs":[{"name":"self"},{"name":"xrecordclientinfo"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"self"},{"name":"xrecordclientinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",176,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",176,{"inputs":[{"name":"self"}],"output":{"name":"xrecordextrange"}}],[11,"eq","","",176,{"inputs":[{"name":"self"},{"name":"xrecordextrange"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"self"},{"name":"xrecordextrange"}],"output":{"name":"bool"}}],[11,"fmt","","",177,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",177,{"inputs":[{"name":"self"}],"output":{"name":"xrecordinterceptdata"}}],[11,"eq","","",177,{"inputs":[{"name":"self"},{"name":"xrecordinterceptdata"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"self"},{"name":"xrecordinterceptdata"}],"output":{"name":"bool"}}],[11,"fmt","","",178,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",178,{"inputs":[{"name":"self"}],"output":{"name":"xrecordrange"}}],[11,"eq","","",178,{"inputs":[{"name":"self"},{"name":"xrecordrange"}],"output":{"name":"bool"}}],[11,"ne","","",178,{"inputs":[{"name":"self"},{"name":"xrecordrange"}],"output":{"name":"bool"}}],[11,"fmt","","",179,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",179,{"inputs":[{"name":"self"}],"output":{"name":"xrecordrange8"}}],[11,"eq","","",179,{"inputs":[{"name":"self"},{"name":"xrecordrange8"}],"output":{"name":"bool"}}],[11,"ne","","",179,{"inputs":[{"name":"self"},{"name":"xrecordrange8"}],"output":{"name":"bool"}}],[11,"fmt","","",180,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",180,{"inputs":[{"name":"self"}],"output":{"name":"xrecordrange16"}}],[11,"eq","","",180,{"inputs":[{"name":"self"},{"name":"xrecordrange16"}],"output":{"name":"bool"}}],[11,"ne","","",180,{"inputs":[{"name":"self"},{"name":"xrecordrange16"}],"output":{"name":"bool"}}],[11,"fmt","","",181,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",181,{"inputs":[{"name":"self"}],"output":{"name":"xrecordstate"}}],[11,"eq","","",181,{"inputs":[{"name":"self"},{"name":"xrecordstate"}],"output":{"name":"bool"}}],[11,"ne","","",181,{"inputs":[{"name":"self"},{"name":"xrecordstate"}],"output":{"name":"bool"}}],[0,"xrender","x11_dl","",null,null],[3,"Xrender","x11_dl::xrender","",null,null],[12,"XRenderAddGlyphs","","",182,null],[12,"XRenderAddTraps","","",182,null],[12,"XRenderChangePicture","","",182,null],[12,"XRenderComposite","","",182,null],[12,"XRenderCompositeDoublePoly","","",182,null],[12,"XRenderCompositeString16","","",182,null],[12,"XRenderCompositeString32","","",182,null],[12,"XRenderCompositeString8","","",182,null],[12,"XRenderCompositeText16","","",182,null],[12,"XRenderCompositeText32","","",182,null],[12,"XRenderCompositeText8","","",182,null],[12,"XRenderCompositeTrapezoids","","",182,null],[12,"XRenderCompositeTriangles","","",182,null],[12,"XRenderCompositeTriFan","","",182,null],[12,"XRenderCompositeTriStrip","","",182,null],[12,"XRenderCreateAnimCursor","","",182,null],[12,"XRenderCreateConicalGradient","","",182,null],[12,"XRenderCreateCursor","","",182,null],[12,"XRenderCreateGlyphSet","","",182,null],[12,"XRenderCreateLinearGradient","","",182,null],[12,"XRenderCreatePicture","","",182,null],[12,"XRenderCreateRadialGradient","","",182,null],[12,"XRenderCreateSolidFill","","",182,null],[12,"XRenderFillRectangle","","",182,null],[12,"XRenderFillRectangles","","",182,null],[12,"XRenderFindFormat","","",182,null],[12,"XRenderFindStandardFormat","","",182,null],[12,"XRenderFindVisualFormat","","",182,null],[12,"XRenderFreeGlyphs","","",182,null],[12,"XRenderFreeGlyphSet","","",182,null],[12,"XRenderFreePicture","","",182,null],[12,"XRenderParseColor","","",182,null],[12,"XRenderQueryExtension","","",182,null],[12,"XRenderQueryFilters","","",182,null],[12,"XRenderQueryFormats","","",182,null],[12,"XRenderQueryPictIndexValues","","",182,null],[12,"XRenderQuerySubpixelOrder","","",182,null],[12,"XRenderQueryVersion","","",182,null],[12,"XRenderReferenceGlyphSet","","",182,null],[12,"XRenderSetPictureClipRectangles","","",182,null],[12,"XRenderSetPictureClipRegion","","",182,null],[12,"XRenderSetPictureFilter","","",182,null],[12,"XRenderSetPictureTransform","","",182,null],[12,"XRenderSetSubpixelOrder","","",182,null],[3,"_XAnimCursor","","",null,null],[12,"cursor","","",183,null],[12,"delay","","",183,null],[3,"_XCircle","","",null,null],[12,"x","","",184,null],[12,"y","","",184,null],[12,"radius","","",184,null],[3,"_XConicalGradient","","",null,null],[12,"center","","",185,null],[12,"angle","","",185,null],[3,"_XFilters","","",null,null],[12,"nfilter","","",186,null],[12,"filter","","",186,null],[12,"nalias","","",186,null],[12,"alias","","",186,null],[3,"_XGlyphElt8","","",null,null],[12,"glyphset","","",187,null],[12,"chars","","",187,null],[12,"nchars","","",187,null],[12,"xOff","","",187,null],[12,"yOff","","",187,null],[3,"_XGlyphElt16","","",null,null],[12,"glyphset","","",188,null],[12,"chars","","",188,null],[12,"nchars","","",188,null],[12,"xOff","","",188,null],[12,"yOff","","",188,null],[3,"_XGlyphElt32","","",null,null],[12,"glyphset","","",189,null],[12,"chars","","",189,null],[12,"nchars","","",189,null],[12,"xOff","","",189,null],[12,"yOff","","",189,null],[3,"_XGlyphInfo","","",null,null],[12,"width","","",190,null],[12,"height","","",190,null],[12,"x","","",190,null],[12,"y","","",190,null],[12,"xOff","","",190,null],[12,"yOff","","",190,null],[3,"_XIndexValue","","",null,null],[12,"pixel","","",191,null],[12,"red","","",191,null],[12,"green","","",191,null],[12,"blue","","",191,null],[12,"alpha","","",191,null],[3,"_XLinearGradient","","",null,null],[12,"p1","","",192,null],[12,"p2","","",192,null],[3,"_XLineFixed","","",null,null],[12,"p1","","",193,null],[12,"p2","","",193,null],[3,"_XPointDouble","","",null,null],[12,"x","","",194,null],[12,"y","","",194,null],[3,"_XPointFixed","","",null,null],[12,"x","","",195,null],[12,"y","","",195,null],[3,"_XRadialGradient","","",null,null],[12,"inner","","",196,null],[12,"outer","","",196,null],[3,"XRenderColor","","",null,null],[12,"red","","",197,null],[12,"green","","",197,null],[12,"blue","","",197,null],[12,"alpha","","",197,null],[3,"XRenderDirectFormat","","",null,null],[12,"red","","",198,null],[12,"redMask","","",198,null],[12,"green","","",198,null],[12,"greenMask","","",198,null],[12,"blue","","",198,null],[12,"blueMask","","",198,null],[12,"alpha","","",198,null],[12,"alphaMask","","",198,null],[3,"XRenderPictFormat","","",null,null],[12,"id","","",199,null],[12,"type_","","",199,null],[12,"depth","","",199,null],[12,"direct","","",199,null],[12,"colormap","","",199,null],[3,"_XRenderPictureAttributes","","",null,null],[12,"repeat","","",200,null],[12,"alpha_map","","",200,null],[12,"alpha_x_origin","","",200,null],[12,"alpha_y_origin","","",200,null],[12,"clip_x_origin","","",200,null],[12,"clip_y_origin","","",200,null],[12,"clip_mask","","",200,null],[12,"graphics_exposures","","",200,null],[12,"subwindow_mode","","",200,null],[12,"poly_edge","","",200,null],[12,"poly_mode","","",200,null],[12,"dither","","",200,null],[12,"component_alpha","","",200,null],[3,"_XSpanFix","","",null,null],[12,"left","","",201,null],[12,"right","","",201,null],[12,"y","","",201,null],[3,"_XTrap","","",null,null],[12,"top","","",202,null],[12,"bottom","","",202,null],[3,"_XTrapezoid","","",null,null],[12,"top","","",203,null],[12,"bottom","","",203,null],[12,"left","","",203,null],[12,"right","","",203,null],[3,"_XTriangle","","",null,null],[12,"p1","","",204,null],[12,"p2","","",204,null],[12,"p3","","",204,null],[3,"_XTransform","","",null,null],[12,"matrix","","",205,null],[6,"Glyph","","",null,null],[6,"GlyphSet","","",null,null],[6,"PictFormat","","",null,null],[6,"Picture","","",null,null],[6,"XDouble","","",null,null],[6,"XFixed","","",null,null],[6,"XAnimCursor","","",null,null],[6,"XCircle","","",null,null],[6,"XConicalGradient","","",null,null],[6,"XFilters","","",null,null],[6,"XGlyphElt8","","",null,null],[6,"XGlyphElt16","","",null,null],[6,"XGlyphElt32","","",null,null],[6,"XGlyphInfo","","",null,null],[6,"XIndexValue","","",null,null],[6,"XLinearGradient","","",null,null],[6,"XLineFixed","","",null,null],[6,"XPointDouble","","",null,null],[6,"XPointFixed","","",null,null],[6,"XRadialGradient","","",null,null],[6,"XRenderPictureAttributes","","",null,null],[6,"XSpanFix","","",null,null],[6,"XTrap","","",null,null],[6,"XTrapezoid","","",null,null],[6,"XTriangle","","",null,null],[6,"XTransform","","",null,null],[17,"PictFormatID","","",null,null],[17,"PictFormatType","","",null,null],[17,"PictFormatDepth","","",null,null],[17,"PictFormatRed","","",null,null],[17,"PictFormatRedMask","","",null,null],[17,"PictFormatGreen","","",null,null],[17,"PictFormatGreenMask","","",null,null],[17,"PictFormatBlue","","",null,null],[17,"PictFormatBlueMask","","",null,null],[17,"PictFormatAlpha","","",null,null],[17,"PictFormatAlphaMask","","",null,null],[17,"PictFormatColormap","","",null,null],[17,"BadPictFormat","","",null,null],[17,"BadPicture","","",null,null],[17,"BadPictOp","","",null,null],[17,"BadGlyphSet","","",null,null],[17,"BadGlyph","","",null,null],[17,"RenderNumberErrors","","",null,null],[17,"PictTypeIndexed","","",null,null],[17,"PictTypeDirect","","",null,null],[17,"PictOpMinimum","","",null,null],[17,"PictOpClear","","",null,null],[17,"PictOpSrc","","",null,null],[17,"PictOpDst","","",null,null],[17,"PictOpOver","","",null,null],[17,"PictOpOverReverse","","",null,null],[17,"PictOpIn","","",null,null],[17,"PictOpInReverse","","",null,null],[17,"PictOpOut","","",null,null],[17,"PictOpOutReverse","","",null,null],[17,"PictOpAtop","","",null,null],[17,"PictOpAtopReverse","","",null,null],[17,"PictOpXor","","",null,null],[17,"PictOpAdd","","",null,null],[17,"PictOpSaturate","","",null,null],[17,"PictOpMaximum","","",null,null],[17,"PictOpDisjointMinimum","","",null,null],[17,"PictOpDisjointClear","","",null,null],[17,"PictOpDisjointSrc","","",null,null],[17,"PictOpDisjointDst","","",null,null],[17,"PictOpDisjointOver","","",null,null],[17,"PictOpDisjointOverReverse","","",null,null],[17,"PictOpDisjointIn","","",null,null],[17,"PictOpDisjointInReverse","","",null,null],[17,"PictOpDisjointOut","","",null,null],[17,"PictOpDisjointOutReverse","","",null,null],[17,"PictOpDisjointAtop","","",null,null],[17,"PictOpDisjointAtopReverse","","",null,null],[17,"PictOpDisjointXor","","",null,null],[17,"PictOpDisjointMaximum","","",null,null],[17,"PictOpConjointMinimum","","",null,null],[17,"PictOpConjointClear","","",null,null],[17,"PictOpConjointSrc","","",null,null],[17,"PictOpConjointDst","","",null,null],[17,"PictOpConjointOver","","",null,null],[17,"PictOpConjointOverReverse","","",null,null],[17,"PictOpConjointIn","","",null,null],[17,"PictOpConjointInReverse","","",null,null],[17,"PictOpConjointOut","","",null,null],[17,"PictOpConjointOutReverse","","",null,null],[17,"PictOpConjointAtop","","",null,null],[17,"PictOpConjointAtopReverse","","",null,null],[17,"PictOpConjointXor","","",null,null],[17,"PictOpConjointMaximum","","",null,null],[17,"PictOpBlendMinimum","","",null,null],[17,"PictOpMultiply","","",null,null],[17,"PictOpScreen","","",null,null],[17,"PictOpOverlay","","",null,null],[17,"PictOpDarken","","",null,null],[17,"PictOpLighten","","",null,null],[17,"PictOpColorDodge","","",null,null],[17,"PictOpColorBurn","","",null,null],[17,"PictOpHardLight","","",null,null],[17,"PictOpSoftLight","","",null,null],[17,"PictOpDifference","","",null,null],[17,"PictOpExclusion","","",null,null],[17,"PictOpHSLHue","","",null,null],[17,"PictOpHSLSaturation","","",null,null],[17,"PictOpHSLColor","","",null,null],[17,"PictOpHSLLuminosity","","",null,null],[17,"PictOpBlendMaximum","","",null,null],[17,"PolyEdgeSharp","","",null,null],[17,"PolyEdgeSmooth","","",null,null],[17,"PolyModePrecise","","",null,null],[17,"PolyModeImprecise","","",null,null],[17,"CPRepeat","","",null,null],[17,"CPAlphaMap","","",null,null],[17,"CPAlphaXOrigin","","",null,null],[17,"CPAlphaYOrigin","","",null,null],[17,"CPClipXOrigin","","",null,null],[17,"CPClipYOrigin","","",null,null],[17,"CPClipMask","","",null,null],[17,"CPGraphicsExposure","","",null,null],[17,"CPSubwindowMode","","",null,null],[17,"CPPolyEdge","","",null,null],[17,"CPPolyMode","","",null,null],[17,"CPDither","","",null,null],[17,"CPComponentAlpha","","",null,null],[17,"CPLastBit","","",null,null],[17,"FilterNearest","","",null,null],[17,"FilterBilinear","","",null,null],[17,"FilterConvolution","","",null,null],[17,"FilterFast","","",null,null],[17,"FilterGood","","",null,null],[17,"FilterBest","","",null,null],[17,"SubPixelUnknown","","",null,null],[17,"SubPixelHorizontalRGB","","",null,null],[17,"SubPixelHorizontalBGR","","",null,null],[17,"SubPixelVerticalRGB","","",null,null],[17,"SubPixelVerticalBGR","","",null,null],[17,"SubPixelNone","","",null,null],[17,"RepeatNone","","",null,null],[17,"RepeatNormal","","",null,null],[17,"RepeatPad","","",null,null],[17,"RepeatReflect","","",null,null],[11,"open","","",182,{"inputs":[],"output":{"generics":["xrender","openerror"],"name":"result"}}],[11,"fmt","","",183,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",183,{"inputs":[{"name":"self"}],"output":{"name":"_xanimcursor"}}],[11,"eq","","",183,{"inputs":[{"name":"self"},{"name":"_xanimcursor"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"self"},{"name":"_xanimcursor"}],"output":{"name":"bool"}}],[11,"fmt","","",184,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",184,{"inputs":[{"name":"self"}],"output":{"name":"_xcircle"}}],[11,"eq","","",184,{"inputs":[{"name":"self"},{"name":"_xcircle"}],"output":{"name":"bool"}}],[11,"ne","","",184,{"inputs":[{"name":"self"},{"name":"_xcircle"}],"output":{"name":"bool"}}],[11,"fmt","","",185,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",185,{"inputs":[{"name":"self"}],"output":{"name":"_xconicalgradient"}}],[11,"eq","","",185,{"inputs":[{"name":"self"},{"name":"_xconicalgradient"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"self"},{"name":"_xconicalgradient"}],"output":{"name":"bool"}}],[11,"fmt","","",186,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",186,{"inputs":[{"name":"self"}],"output":{"name":"_xfilters"}}],[11,"eq","","",186,{"inputs":[{"name":"self"},{"name":"_xfilters"}],"output":{"name":"bool"}}],[11,"ne","","",186,{"inputs":[{"name":"self"},{"name":"_xfilters"}],"output":{"name":"bool"}}],[11,"fmt","","",187,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",187,{"inputs":[{"name":"self"}],"output":{"name":"_xglyphelt8"}}],[11,"eq","","",187,{"inputs":[{"name":"self"},{"name":"_xglyphelt8"}],"output":{"name":"bool"}}],[11,"ne","","",187,{"inputs":[{"name":"self"},{"name":"_xglyphelt8"}],"output":{"name":"bool"}}],[11,"fmt","","",188,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",188,{"inputs":[{"name":"self"}],"output":{"name":"_xglyphelt16"}}],[11,"eq","","",188,{"inputs":[{"name":"self"},{"name":"_xglyphelt16"}],"output":{"name":"bool"}}],[11,"ne","","",188,{"inputs":[{"name":"self"},{"name":"_xglyphelt16"}],"output":{"name":"bool"}}],[11,"fmt","","",189,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",189,{"inputs":[{"name":"self"}],"output":{"name":"_xglyphelt32"}}],[11,"eq","","",189,{"inputs":[{"name":"self"},{"name":"_xglyphelt32"}],"output":{"name":"bool"}}],[11,"ne","","",189,{"inputs":[{"name":"self"},{"name":"_xglyphelt32"}],"output":{"name":"bool"}}],[11,"fmt","","",190,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",190,{"inputs":[{"name":"self"}],"output":{"name":"_xglyphinfo"}}],[11,"eq","","",190,{"inputs":[{"name":"self"},{"name":"_xglyphinfo"}],"output":{"name":"bool"}}],[11,"ne","","",190,{"inputs":[{"name":"self"},{"name":"_xglyphinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",191,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",191,{"inputs":[{"name":"self"}],"output":{"name":"_xindexvalue"}}],[11,"eq","","",191,{"inputs":[{"name":"self"},{"name":"_xindexvalue"}],"output":{"name":"bool"}}],[11,"ne","","",191,{"inputs":[{"name":"self"},{"name":"_xindexvalue"}],"output":{"name":"bool"}}],[11,"fmt","","",192,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",192,{"inputs":[{"name":"self"}],"output":{"name":"_xlineargradient"}}],[11,"eq","","",192,{"inputs":[{"name":"self"},{"name":"_xlineargradient"}],"output":{"name":"bool"}}],[11,"ne","","",192,{"inputs":[{"name":"self"},{"name":"_xlineargradient"}],"output":{"name":"bool"}}],[11,"fmt","","",193,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",193,{"inputs":[{"name":"self"}],"output":{"name":"_xlinefixed"}}],[11,"eq","","",193,{"inputs":[{"name":"self"},{"name":"_xlinefixed"}],"output":{"name":"bool"}}],[11,"ne","","",193,{"inputs":[{"name":"self"},{"name":"_xlinefixed"}],"output":{"name":"bool"}}],[11,"fmt","","",194,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",194,{"inputs":[{"name":"self"}],"output":{"name":"_xpointdouble"}}],[11,"eq","","",194,{"inputs":[{"name":"self"},{"name":"_xpointdouble"}],"output":{"name":"bool"}}],[11,"ne","","",194,{"inputs":[{"name":"self"},{"name":"_xpointdouble"}],"output":{"name":"bool"}}],[11,"fmt","","",195,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",195,{"inputs":[{"name":"self"}],"output":{"name":"_xpointfixed"}}],[11,"eq","","",195,{"inputs":[{"name":"self"},{"name":"_xpointfixed"}],"output":{"name":"bool"}}],[11,"ne","","",195,{"inputs":[{"name":"self"},{"name":"_xpointfixed"}],"output":{"name":"bool"}}],[11,"fmt","","",196,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",196,{"inputs":[{"name":"self"}],"output":{"name":"_xradialgradient"}}],[11,"eq","","",196,{"inputs":[{"name":"self"},{"name":"_xradialgradient"}],"output":{"name":"bool"}}],[11,"ne","","",196,{"inputs":[{"name":"self"},{"name":"_xradialgradient"}],"output":{"name":"bool"}}],[11,"fmt","","",197,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",197,{"inputs":[{"name":"self"}],"output":{"name":"xrendercolor"}}],[11,"eq","","",197,{"inputs":[{"name":"self"},{"name":"xrendercolor"}],"output":{"name":"bool"}}],[11,"ne","","",197,{"inputs":[{"name":"self"},{"name":"xrendercolor"}],"output":{"name":"bool"}}],[11,"fmt","","",198,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",198,{"inputs":[{"name":"self"}],"output":{"name":"xrenderdirectformat"}}],[11,"eq","","",198,{"inputs":[{"name":"self"},{"name":"xrenderdirectformat"}],"output":{"name":"bool"}}],[11,"ne","","",198,{"inputs":[{"name":"self"},{"name":"xrenderdirectformat"}],"output":{"name":"bool"}}],[11,"fmt","","",199,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",199,{"inputs":[{"name":"self"}],"output":{"name":"xrenderpictformat"}}],[11,"eq","","",199,{"inputs":[{"name":"self"},{"name":"xrenderpictformat"}],"output":{"name":"bool"}}],[11,"ne","","",199,{"inputs":[{"name":"self"},{"name":"xrenderpictformat"}],"output":{"name":"bool"}}],[11,"fmt","","",200,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",200,{"inputs":[{"name":"self"}],"output":{"name":"_xrenderpictureattributes"}}],[11,"eq","","",200,{"inputs":[{"name":"self"},{"name":"_xrenderpictureattributes"}],"output":{"name":"bool"}}],[11,"ne","","",200,{"inputs":[{"name":"self"},{"name":"_xrenderpictureattributes"}],"output":{"name":"bool"}}],[11,"fmt","","",201,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",201,{"inputs":[{"name":"self"}],"output":{"name":"_xspanfix"}}],[11,"eq","","",201,{"inputs":[{"name":"self"},{"name":"_xspanfix"}],"output":{"name":"bool"}}],[11,"ne","","",201,{"inputs":[{"name":"self"},{"name":"_xspanfix"}],"output":{"name":"bool"}}],[11,"fmt","","",202,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",202,{"inputs":[{"name":"self"}],"output":{"name":"_xtrap"}}],[11,"eq","","",202,{"inputs":[{"name":"self"},{"name":"_xtrap"}],"output":{"name":"bool"}}],[11,"ne","","",202,{"inputs":[{"name":"self"},{"name":"_xtrap"}],"output":{"name":"bool"}}],[11,"fmt","","",203,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",203,{"inputs":[{"name":"self"}],"output":{"name":"_xtrapezoid"}}],[11,"eq","","",203,{"inputs":[{"name":"self"},{"name":"_xtrapezoid"}],"output":{"name":"bool"}}],[11,"ne","","",203,{"inputs":[{"name":"self"},{"name":"_xtrapezoid"}],"output":{"name":"bool"}}],[11,"fmt","","",204,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",204,{"inputs":[{"name":"self"}],"output":{"name":"_xtriangle"}}],[11,"eq","","",204,{"inputs":[{"name":"self"},{"name":"_xtriangle"}],"output":{"name":"bool"}}],[11,"ne","","",204,{"inputs":[{"name":"self"},{"name":"_xtriangle"}],"output":{"name":"bool"}}],[11,"fmt","","",205,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",205,{"inputs":[{"name":"self"}],"output":{"name":"_xtransform"}}],[11,"eq","","",205,{"inputs":[{"name":"self"},{"name":"_xtransform"}],"output":{"name":"bool"}}],[11,"ne","","",205,{"inputs":[{"name":"self"},{"name":"_xtransform"}],"output":{"name":"bool"}}],[0,"xss","x11_dl","",null,null],[3,"Xss","x11_dl::xss","",null,null],[12,"XScreenSaverQueryExtension","","",206,null],[12,"XScreenSaverQueryVersion","","",206,null],[12,"XScreenSaverAllocInfo","","",206,null],[12,"XScreenSaverQueryInfo","","",206,null],[12,"XScreenSaverSelectInput","","",206,null],[12,"XScreenSaverSetAttributes","","",206,null],[12,"XScreenSaverUnsetAttributes","","",206,null],[12,"XScreenSaverRegister","","",206,null],[12,"XScreenSaverUnregister","","",206,null],[12,"XScreenSaverGetRegistered","","",206,null],[12,"XScreenSaverSuspend","","",206,null],[3,"XScreenSaverInfo","","",null,null],[12,"window","","",207,null],[12,"state","","",207,null],[12,"kind","","",207,null],[12,"til_or_since","","",207,null],[12,"idle","","",207,null],[12,"eventMask","","",207,null],[3,"XScreenSaverNotifyEvent","","",null,null],[12,"type_","","",208,null],[12,"serial","","",208,null],[12,"send_event","","",208,null],[12,"display","","",208,null],[12,"window","","",208,null],[12,"root","","",208,null],[12,"state","","",208,null],[12,"kind","","",208,null],[12,"forced","","",208,null],[12,"time","","",208,null],[17,"ScreenSaverName","","",null,null],[17,"ScreenSaverPropertyName","","",null,null],[17,"ScreenSaverNotifyMask","","",null,null],[17,"ScreenSaverCycleMask","","",null,null],[17,"ScreenSaverMajorVersion","","",null,null],[17,"ScreenSaverMinorVersion","","",null,null],[17,"ScreenSaverOff","","",null,null],[17,"ScreenSaverOn","","",null,null],[17,"ScreenSaverCycle","","",null,null],[17,"ScreenSaverDisabled","","",null,null],[17,"ScreenSaverBlanked","","",null,null],[17,"ScreenSaverInternal","","",null,null],[17,"ScreenSaverExternal","","",null,null],[17,"ScreenSaverNotify","","",null,null],[17,"ScreenSaverNumberEvents","","",null,null],[11,"open","","",206,{"inputs":[],"output":{"generics":["xss","openerror"],"name":"result"}}],[11,"fmt","","",207,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",207,{"inputs":[{"name":"self"}],"output":{"name":"xscreensaverinfo"}}],[11,"eq","","",207,{"inputs":[{"name":"self"},{"name":"xscreensaverinfo"}],"output":{"name":"bool"}}],[11,"ne","","",207,{"inputs":[{"name":"self"},{"name":"xscreensaverinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",208,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",208,{"inputs":[{"name":"self"}],"output":{"name":"xscreensavernotifyevent"}}],[11,"eq","","",208,{"inputs":[{"name":"self"},{"name":"xscreensavernotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",208,{"inputs":[{"name":"self"},{"name":"xscreensavernotifyevent"}],"output":{"name":"bool"}}],[11,"as_mut","x11_dl::xlib","",97,{"inputs":[{"name":"self"}],"output":{"name":"xscreensavernotifyevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xscreensavernotifyevent"}}],[11,"from","","",97,{"inputs":[{"name":"xscreensavernotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xscreensavernotifyevent"}],"output":{"name":"xevent"}}],[11,"from","x11_dl::xss","",208,{"inputs":[{"name":"xevent"}],"output":{"name":"xscreensavernotifyevent"}}],[11,"from","","",208,{"inputs":[{"name":"xevent"}],"output":{"name":"xscreensavernotifyevent"}}],[0,"xt","x11_dl","",null,null],[3,"Xt","x11_dl::xt","",null,null],[12,"XtAddActions","","",209,null],[12,"XtAddCallback","","",209,null],[12,"XtAddCallbacks","","",209,null],[12,"XtAddConverter","","",209,null],[12,"XtAddEventHandler","","",209,null],[12,"XtAddExposureToRegion","","",209,null],[12,"XtAddGrab","","",209,null],[12,"XtAddInput","","",209,null],[12,"XtAddRawEventHandler","","",209,null],[12,"XtAddSignal","","",209,null],[12,"XtAddTimeOut","","",209,null],[12,"XtAddWorkProc","","",209,null],[12,"XtAllocateGC","","",209,null],[12,"XtAppAddActionHook","","",209,null],[12,"XtAppAddActions","","",209,null],[12,"XtAppAddBlockHook","","",209,null],[12,"XtAppAddConverter","","",209,null],[12,"XtAppAddInput","","",209,null],[12,"XtAppAddSignal","","",209,null],[12,"XtAppAddTimeOut","","",209,null],[12,"XtAppAddWorkProc","","",209,null],[12,"XtAppCreateShell","","",209,null],[12,"XtAppError","","",209,null],[12,"XtAppErrorMsg","","",209,null],[12,"XtAppGetErrorDatabase","","",209,null],[12,"XtAppGetErrorDatabaseText","","",209,null],[12,"XtAppGetExitFlag","","",209,null],[12,"XtAppGetSelectionTimeout","","",209,null],[12,"XtAppInitialize","","",209,null],[12,"XtAppLock","","",209,null],[12,"XtAppMainLoop","","",209,null],[12,"XtAppNextEvent","","",209,null],[12,"XtAppPeekEvent","","",209,null],[12,"XtAppPending","","",209,null],[12,"XtAppProcessEvent","","",209,null],[12,"XtAppReleaseCacheRefs","","",209,null],[12,"XtAppSetErrorHandler","","",209,null],[12,"XtAppSetErrorMsgHandler","","",209,null],[12,"XtAppSetExitFlag","","",209,null],[12,"XtAppSetFallbackResources","","",209,null],[12,"XtAppSetSelectionTimeout","","",209,null],[12,"XtAppSetTypeConverter","","",209,null],[12,"XtAppSetWarningHandler","","",209,null],[12,"XtAppSetWarningMsgHandler","","",209,null],[12,"XtAppUnlock","","",209,null],[12,"XtAppWarning","","",209,null],[12,"XtAppWarningMsg","","",209,null],[12,"XtAugmentTranslations","","",209,null],[12,"XtBuildEventMask","","",209,null],[12,"XtCallAcceptFocus","","",209,null],[12,"XtCallActionProc","","",209,null],[12,"XtCallbackExclusive","","",209,null],[12,"XtCallbackNone","","",209,null],[12,"XtCallbackNonexclusive","","",209,null],[12,"XtCallbackPopdown","","",209,null],[12,"XtCallbackReleaseCacheRef","","",209,null],[12,"XtCallbackReleaseCacheRefList","","",209,null],[12,"XtCallCallbackList","","",209,null],[12,"XtCallCallbacks","","",209,null],[12,"XtCallConverter","","",209,null],[12,"XtCalloc","","",209,null],[12,"XtCancelSelectionRequest","","",209,null],[12,"XtChangeManagedSet","","",209,null],[12,"XtClass","","",209,null],[12,"XtCloseDisplay","","",209,null],[12,"XtConfigureWidget","","",209,null],[12,"XtConvert","","",209,null],[12,"XtConvertAndStore","","",209,null],[12,"XtConvertCase","","",209,null],[12,"XtCreateApplicationContext","","",209,null],[12,"XtCreateApplicationShell","","",209,null],[12,"XtCreateManagedWidget","","",209,null],[12,"XtCreatePopupShell","","",209,null],[12,"XtCreateSelectionRequest","","",209,null],[12,"XtCreateWidget","","",209,null],[12,"XtCreateWindow","","",209,null],[12,"XtCvtColorToPixel","","",209,null],[12,"XtCvtIntToBool","","",209,null],[12,"XtCvtIntToBoolean","","",209,null],[12,"XtCvtIntToColor","","",209,null],[12,"XtCvtIntToFloat","","",209,null],[12,"XtCvtIntToFont","","",209,null],[12,"XtCvtIntToPixel","","",209,null],[12,"XtCvtIntToPixmap","","",209,null],[12,"XtCvtIntToShort","","",209,null],[12,"XtCvtIntToUnsignedChar","","",209,null],[12,"XtCvtStringToAcceleratorTable","","",209,null],[12,"XtCvtStringToAtom","","",209,null],[12,"XtCvtStringToBool","","",209,null],[12,"XtCvtStringToBoolean","","",209,null],[12,"XtCvtStringToCommandArgArray","","",209,null],[12,"XtCvtStringToCursor","","",209,null],[12,"XtCvtStringToDimension","","",209,null],[12,"XtCvtStringToDirectoryString","","",209,null],[12,"XtCvtStringToDisplay","","",209,null],[12,"XtCvtStringToFile","","",209,null],[12,"XtCvtStringToFloat","","",209,null],[12,"XtCvtStringToFont","","",209,null],[12,"XtCvtStringToFontSet","","",209,null],[12,"XtCvtStringToFontStruct","","",209,null],[12,"XtCvtStringToGravity","","",209,null],[12,"XtCvtStringToInitialState","","",209,null],[12,"XtCvtStringToInt","","",209,null],[12,"XtCvtStringToPixel","","",209,null],[12,"XtCvtStringToRestartStyle","","",209,null],[12,"XtCvtStringToShort","","",209,null],[12,"XtCvtStringToTranslationTable","","",209,null],[12,"XtCvtStringToUnsignedChar","","",209,null],[12,"XtCvtStringToVisual","","",209,null],[12,"XtDatabase","","",209,null],[12,"XtDestroyApplicationContext","","",209,null],[12,"XtDestroyGC","","",209,null],[12,"XtDestroyWidget","","",209,null],[12,"XtDirectConvert","","",209,null],[12,"XtDisownSelection","","",209,null],[12,"XtDispatchEvent","","",209,null],[12,"XtDispatchEventToWidget","","",209,null],[12,"XtDisplay","","",209,null],[12,"XtDisplayInitialize","","",209,null],[12,"XtDisplayOfObject","","",209,null],[12,"XtDisplayStringConversionWarning","","",209,null],[12,"XtDisplayToApplicationContext","","",209,null],[12,"XtError","","",209,null],[12,"XtErrorMsg","","",209,null],[12,"XtFindFile","","",209,null],[12,"XtFree","","",209,null],[12,"XtGetActionKeysym","","",209,null],[12,"XtGetActionList","","",209,null],[12,"XtGetApplicationNameAndClass","","",209,null],[12,"XtGetApplicationResources","","",209,null],[12,"XtGetClassExtension","","",209,null],[12,"XtGetConstraintResourceList","","",209,null],[12,"XtGetDisplays","","",209,null],[12,"XtGetErrorDatabase","","",209,null],[12,"XtGetErrorDatabaseText","","",209,null],[12,"XtGetGC","","",209,null],[12,"XtGetKeyboardFocusWidget","","",209,null],[12,"XtGetKeysymTable","","",209,null],[12,"XtGetMultiClickTime","","",209,null],[12,"XtGetResourceList","","",209,null],[12,"XtGetSelectionParameters","","",209,null],[12,"XtGetSelectionRequest","","",209,null],[12,"XtGetSelectionTimeout","","",209,null],[12,"XtGetSelectionValue","","",209,null],[12,"XtGetSelectionValueIncremental","","",209,null],[12,"XtGetSelectionValues","","",209,null],[12,"XtGetSelectionValuesIncremental","","",209,null],[12,"XtGetSubresources","","",209,null],[12,"XtGetSubvalues","","",209,null],[12,"XtGetValues","","",209,null],[12,"XtGrabButton","","",209,null],[12,"XtGrabKey","","",209,null],[12,"XtGrabKeyboard","","",209,null],[12,"XtGrabPointer","","",209,null],[12,"XtHasCallbacks","","",209,null],[12,"XtHooksOfDisplay","","",209,null],[12,"XtInitialize","","",209,null],[12,"XtInitializeWidgetClass","","",209,null],[12,"XtInsertEventHandler","","",209,null],[12,"XtInsertEventTypeHandler","","",209,null],[12,"XtInsertRawEventHandler","","",209,null],[12,"XtInstallAccelerators","","",209,null],[12,"XtInstallAllAccelerators","","",209,null],[12,"XtIsApplicationShell","","",209,null],[12,"XtIsComposite","","",209,null],[12,"XtIsConstraint","","",209,null],[12,"XtIsManaged","","",209,null],[12,"XtIsObject","","",209,null],[12,"XtIsOverrideShell","","",209,null],[12,"XtIsRealized","","",209,null],[12,"XtIsRectObj","","",209,null],[12,"XtIsSensitive","","",209,null],[12,"XtIsSessionShell","","",209,null],[12,"XtIsShell","","",209,null],[12,"XtIsSubclass","","",209,null],[12,"XtIsTopLevelShell","","",209,null],[12,"XtIsTransientShell","","",209,null],[12,"XtIsVendorShell","","",209,null],[12,"XtIsWidget","","",209,null],[12,"XtIsWMShell","","",209,null],[12,"XtKeysymToKeycodeList","","",209,null],[12,"XtLastEventProcessed","","",209,null],[12,"XtLastTimestampProcessed","","",209,null],[12,"XtMainLoop","","",209,null],[12,"XtMakeGeometryRequest","","",209,null],[12,"XtMakeResizeRequest","","",209,null],[12,"XtMalloc","","",209,null],[12,"XtManageChild","","",209,null],[12,"XtManageChildren","","",209,null],[12,"XtMapWidget","","",209,null],[12,"XtMenuPopupAction","","",209,null],[12,"XtMergeArgLists","","",209,null],[12,"XtMoveWidget","","",209,null],[12,"XtName","","",209,null],[12,"XtNameToWidget","","",209,null],[12,"XtNewString","","",209,null],[12,"XtNextEvent","","",209,null],[12,"XtNoticeSignal","","",209,null],[12,"XtOpenApplication","","",209,null],[12,"XtOpenDisplay","","",209,null],[12,"XtOverrideTranslations","","",209,null],[12,"XtOwnSelection","","",209,null],[12,"XtOwnSelectionIncremental","","",209,null],[12,"XtParent","","",209,null],[12,"XtParseAcceleratorTable","","",209,null],[12,"XtParseTranslationTable","","",209,null],[12,"XtPeekEvent","","",209,null],[12,"XtPending","","",209,null],[12,"XtPopdown","","",209,null],[12,"XtPopup","","",209,null],[12,"XtPopupSpringLoaded","","",209,null],[12,"XtProcessEvent","","",209,null],[12,"XtProcessLock","","",209,null],[12,"XtProcessUnlock","","",209,null],[12,"XtQueryGeometry","","",209,null],[12,"XtRealizeWidget","","",209,null],[12,"XtRealloc","","",209,null],[12,"XtRegisterCaseConverter","","",209,null],[12,"XtRegisterDrawable","","",209,null],[12,"XtRegisterExtensionSelector","","",209,null],[12,"XtRegisterGrabAction","","",209,null],[12,"XtReleaseGC","","",209,null],[12,"XtReleasePropertyAtom","","",209,null],[12,"XtRemoveActionHook","","",209,null],[12,"XtRemoveAllCallbacks","","",209,null],[12,"XtRemoveBlockHook","","",209,null],[12,"XtRemoveCallback","","",209,null],[12,"XtRemoveCallbacks","","",209,null],[12,"XtRemoveEventHandler","","",209,null],[12,"XtRemoveEventTypeHandler","","",209,null],[12,"XtRemoveGrab","","",209,null],[12,"XtRemoveInput","","",209,null],[12,"XtRemoveRawEventHandler","","",209,null],[12,"XtRemoveSignal","","",209,null],[12,"XtRemoveTimeOut","","",209,null],[12,"XtRemoveWorkProc","","",209,null],[12,"XtReservePropertyAtom","","",209,null],[12,"XtResizeWidget","","",209,null],[12,"XtResizeWindow","","",209,null],[12,"XtResolvePathname","","",209,null],[12,"XtScreen","","",209,null],[12,"XtScreenDatabase","","",209,null],[12,"XtScreenOfObject","","",209,null],[12,"XtSendSelectionRequest","","",209,null],[12,"XtSessionGetToken","","",209,null],[12,"XtSessionReturnToken","","",209,null],[12,"XtSetErrorHandler","","",209,null],[12,"XtSetErrorMsgHandler","","",209,null],[12,"XtSetEventDispatcher","","",209,null],[12,"XtSetKeyboardFocus","","",209,null],[12,"XtSetKeyTranslator","","",209,null],[12,"XtSetLanguageProc","","",209,null],[12,"XtSetMappedWhenManaged","","",209,null],[12,"XtSetMultiClickTime","","",209,null],[12,"XtSetSelectionParameters","","",209,null],[12,"XtSetSelectionTimeout","","",209,null],[12,"XtSetSensitive","","",209,null],[12,"XtSetSubvalues","","",209,null],[12,"XtSetTypeConverter","","",209,null],[12,"XtSetValues","","",209,null],[12,"XtSetWarningHandler","","",209,null],[12,"XtSetWarningMsgHandler","","",209,null],[12,"XtSetWMColormapWindows","","",209,null],[12,"XtStringConversionWarning","","",209,null],[12,"XtSuperclass","","",209,null],[12,"XtToolkitInitialize","","",209,null],[12,"XtToolkitThreadInitialize","","",209,null],[12,"XtTranslateCoords","","",209,null],[12,"XtTranslateKey","","",209,null],[12,"XtTranslateKeycode","","",209,null],[12,"XtUngrabButton","","",209,null],[12,"XtUngrabKey","","",209,null],[12,"XtUngrabKeyboard","","",209,null],[12,"XtUngrabPointer","","",209,null],[12,"XtUninstallTranslations","","",209,null],[12,"XtUnmanageChild","","",209,null],[12,"XtUnmanageChildren","","",209,null],[12,"XtUnmapWidget","","",209,null],[12,"XtUnrealizeWidget","","",209,null],[12,"XtUnregisterDrawable","","",209,null],[12,"XtWarning","","",209,null],[12,"XtWarningMsg","","",209,null],[12,"XtWidgetToApplicationContext","","",209,null],[12,"XtWindow","","",209,null],[12,"XtWindowOfObject","","",209,null],[12,"XtWindowToWidget","","",209,null],[12,"XtAsprintf","","",209,null],[12,"XtVaAppCreateShell","","",209,null],[12,"XtVaAppInitialize","","",209,null],[12,"XtVaCreateArgsList","","",209,null],[12,"XtVaCreateManagedWidget","","",209,null],[12,"XtVaCreatePopupShell","","",209,null],[12,"XtVaCreateWidget","","",209,null],[12,"XtVaGetApplicationResources","","",209,null],[12,"XtVaGetSubresources","","",209,null],[12,"XtVaGetSubvalues","","",209,null],[12,"XtVaGetValues","","",209,null],[12,"XtVaOpenApplication","","",209,null],[12,"XtVaSetSubvalues","","",209,null],[12,"XtVaSetValues","","",209,null],[3,"Arg","","",null,null],[3,"SubstitutionRec","","",null,null],[3,"_TranslationData","","",null,null],[3,"_WidgetClassRec","","",null,null],[3,"_WidgetRec","","",null,null],[3,"_XtActionsRec","","",null,null],[3,"_XtAppStruct","","",null,null],[3,"_XtCallbackRec","","",null,null],[3,"_XtCheckpointTokenRec","","",null,null],[3,"XtConvertArgRec","","",null,null],[3,"_XtResource","","",null,null],[3,"XtWidgetGeometry","","",null,null],[6,"XtCallbackStatus","","",null,null],[6,"XtGeometryResult","","",null,null],[6,"XtGrabKind","","",null,null],[6,"XtListPosition","","",null,null],[6,"ArgList","","",null,null],[6,"Substitution","","",null,null],[6,"Widget","","",null,null],[6,"WidgetClass","","",null,null],[6,"XtAccelerators","","",null,null],[6,"XtActionList","","",null,null],[6,"XtActionsRec","","",null,null],[6,"XtAppContext","","",null,null],[6,"XtCallbackList","","",null,null],[6,"XtCallbackRec","","",null,null],[6,"XtCheckpointToken","","",null,null],[6,"XtCheckpointTokenRec","","",null,null],[6,"XtConvertArgList","","",null,null],[6,"XtResource","","",null,null],[6,"XtResourceList","","",null,null],[6,"XtTranslations","","",null,null],[11,"open","","",209,{"inputs":[],"output":{"generics":["xt","openerror"],"name":"result"}}],[0,"xtest","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xtest","",null,null],[12,"XTestCompareCurrentCursorWithWindow","","",210,null],[12,"XTestCompareCursorWithWindow","","",210,null],[12,"XTestDiscard","","",210,null],[12,"XTestFakeButtonEvent","","",210,null],[12,"XTestFakeDeviceButtonEvent","","",210,null],[12,"XTestFakeDeviceKeyEvent","","",210,null],[12,"XTestFakeDeviceMotionEvent","","",210,null],[12,"XTestFakeKeyEvent","","",210,null],[12,"XTestFakeMotionEvent","","",210,null],[12,"XTestFakeProximityEvent","","",210,null],[12,"XTestFakeRelativeMotionEvent","","",210,null],[12,"XTestGrabControl","","",210,null],[12,"XTestQueryExtension","","",210,null],[12,"XTestSetGContextOfGC","","",210,null],[12,"XTestSetVisualIDOfVisual","","",210,null],[11,"open","","",210,{"inputs":[],"output":{"generics":["xf86vmode","openerror"],"name":"result"}}],[0,"xlib_xcb","x11_dl","",null,null],[3,"Xlib_xcb","x11_dl::xlib_xcb","",null,null],[12,"XGetXCBConnection","","",211,null],[6,"xcb_connection_t","","",null,null],[11,"open","","",211,{"inputs":[],"output":{"generics":["xlib_xcb","openerror"],"name":"result"}}],[0,"xrandr","x11_dl","",null,null],[3,"Xrandr","x11_dl::xrandr","",null,null],[12,"XRRAddOutputMode","","",212,null],[12,"XRRAllocGamma","","",212,null],[12,"XRRAllocModeInfo","","",212,null],[12,"XRRAllocateMonitor","","",212,null],[12,"XRRChangeOutputProperty","","",212,null],[12,"XRRChangeProviderProperty","","",212,null],[12,"XRRConfigCurrentConfiguration","","",212,null],[12,"XRRConfigCurrentRate","","",212,null],[12,"XRRConfigRates","","",212,null],[12,"XRRConfigRotations","","",212,null],[12,"XRRConfigSizes","","",212,null],[12,"XRRConfigTimes","","",212,null],[12,"XRRConfigureOutputProperty","","",212,null],[12,"XRRConfigureProviderProperty","","",212,null],[12,"XRRCreateMode","","",212,null],[12,"XRRDeleteMonitor","","",212,null],[12,"XRRDeleteOutputMode","","",212,null],[12,"XRRDeleteOutputProperty","","",212,null],[12,"XRRDeleteProviderProperty","","",212,null],[12,"XRRDestroyMode","","",212,null],[12,"XRRFreeCrtcInfo","","",212,null],[12,"XRRFreeGamma","","",212,null],[12,"XRRFreeModeInfo","","",212,null],[12,"XRRFreeMonitors","","",212,null],[12,"XRRFreeOutputInfo","","",212,null],[12,"XRRFreePanning","","",212,null],[12,"XRRFreeProviderInfo","","",212,null],[12,"XRRFreeProviderResources","","",212,null],[12,"XRRFreeScreenConfigInfo","","",212,null],[12,"XRRFreeScreenResources","","",212,null],[12,"XRRGetCrtcGamma","","",212,null],[12,"XRRGetCrtcGammaSize","","",212,null],[12,"XRRGetCrtcInfo","","",212,null],[12,"XRRGetCrtcTransform","","",212,null],[12,"XRRGetMonitors","","",212,null],[12,"XRRGetOutputInfo","","",212,null],[12,"XRRGetOutputPrimary","","",212,null],[12,"XRRGetOutputProperty","","",212,null],[12,"XRRGetPanning","","",212,null],[12,"XRRGetProviderInfo","","",212,null],[12,"XRRGetProviderProperty","","",212,null],[12,"XRRGetProviderResources","","",212,null],[12,"XRRGetScreenInfo","","",212,null],[12,"XRRGetScreenResources","","",212,null],[12,"XRRGetScreenResourcesCurrent","","",212,null],[12,"XRRGetScreenSizeRange","","",212,null],[12,"XRRListOutputProperties","","",212,null],[12,"XRRListProviderProperties","","",212,null],[12,"XRRQueryExtension","","",212,null],[12,"XRRQueryOutputProperty","","",212,null],[12,"XRRQueryProviderProperty","","",212,null],[12,"XRRQueryVersion","","",212,null],[12,"XRRRates","","",212,null],[12,"XRRRootToScreen","","",212,null],[12,"XRRRotations","","",212,null],[12,"XRRSelectInput","","",212,null],[12,"XRRSetCrtcConfig","","",212,null],[12,"XRRSetCrtcGamma","","",212,null],[12,"XRRSetCrtcTransform","","",212,null],[12,"XRRSetMonitor","","",212,null],[12,"XRRSetOutputPrimary","","",212,null],[12,"XRRSetPanning","","",212,null],[12,"XRRSetProviderOffloadSink","","",212,null],[12,"XRRSetProviderOutputSource","","",212,null],[12,"XRRSetScreenConfig","","",212,null],[12,"XRRSetScreenConfigAndRate","","",212,null],[12,"XRRSetScreenSize","","",212,null],[12,"XRRSizes","","",212,null],[12,"XRRTimes","","",212,null],[12,"XRRUpdateConfiguration","","",212,null],[3,"XRRScreenSize","","",null,null],[12,"width","","",213,null],[12,"height","","",213,null],[12,"mwidth","","",213,null],[12,"mheight","","",213,null],[3,"XRRScreenConfiguration","","",null,null],[3,"XRRModeInfo","","",null,null],[12,"id","","",214,null],[12,"width","","",214,null],[12,"height","","",214,null],[12,"dotClock","","",214,null],[12,"hSyncStart","","",214,null],[12,"hSyncEnd","","",214,null],[12,"hTotal","","",214,null],[12,"hSkew","","",214,null],[12,"vSyncStart","","",214,null],[12,"vSyncEnd","","",214,null],[12,"vTotal","","",214,null],[12,"name","","",214,null],[12,"nameLength","","",214,null],[12,"modeFlags","","",214,null],[3,"XRRScreenResources","","",null,null],[12,"timestamp","","",215,null],[12,"configTimestamp","","",215,null],[12,"ncrtc","","",215,null],[12,"crtcs","","",215,null],[12,"noutput","","",215,null],[12,"outputs","","",215,null],[12,"nmode","","",215,null],[12,"modes","","",215,null],[3,"XRROutputInfo","","",null,null],[12,"timestamp","","",216,null],[12,"crtc","","",216,null],[12,"name","","",216,null],[12,"nameLen","","",216,null],[12,"mm_width","","",216,null],[12,"mm_height","","",216,null],[12,"connection","","",216,null],[12,"subpixel_order","","",216,null],[12,"ncrtc","","",216,null],[12,"crtcs","","",216,null],[12,"nclone","","",216,null],[12,"clones","","",216,null],[12,"nmode","","",216,null],[12,"npreferred","","",216,null],[12,"modes","","",216,null],[3,"XRRPropertyInfo","","",null,null],[12,"pending","","",217,null],[12,"range","","",217,null],[12,"immutable","","",217,null],[12,"num_values","","",217,null],[12,"values","","",217,null],[3,"XRRCrtcInfo","","",null,null],[12,"timestamp","","",218,null],[12,"x","","",218,null],[12,"y","","",218,null],[12,"width","","",218,null],[12,"height","","",218,null],[12,"mode","","",218,null],[12,"rotation","","",218,null],[12,"noutput","","",218,null],[12,"outputs","","",218,null],[12,"rotations","","",218,null],[12,"npossible","","",218,null],[12,"possible","","",218,null],[3,"XRRCrtcGamma","","",null,null],[12,"size","","",219,null],[12,"red","","",219,null],[12,"green","","",219,null],[12,"blue","","",219,null],[3,"XRRCrtcTransformAttributes","","",null,null],[12,"pendingTransform","","",220,null],[12,"pendingFilter","","",220,null],[12,"pendingNparams","","",220,null],[12,"pendingParams","","",220,null],[12,"currentTransform","","",220,null],[12,"currentFilter","","",220,null],[12,"currentNparams","","",220,null],[12,"currentParams","","",220,null],[3,"XRRPanning","","",null,null],[12,"timestamp","","",221,null],[12,"left","","",221,null],[12,"top","","",221,null],[12,"width","","",221,null],[12,"height","","",221,null],[12,"track_left","","",221,null],[12,"track_top","","",221,null],[12,"track_width","","",221,null],[12,"track_height","","",221,null],[12,"border_left","","",221,null],[12,"border_top","","",221,null],[12,"border_right","","",221,null],[12,"border_bottom","","",221,null],[3,"XRRProviderResources","","",null,null],[12,"timestamp","","",222,null],[12,"nproviders","","",222,null],[12,"providers","","",222,null],[3,"XRRProviderInfo","","",null,null],[12,"capabilities","","",223,null],[12,"ncrtcs","","",223,null],[12,"crtcs","","",223,null],[12,"noutputs","","",223,null],[12,"outputs","","",223,null],[12,"name","","",223,null],[12,"nassociatedproviders","","",223,null],[12,"associated_providers","","",223,null],[12,"associated_capability","","",223,null],[12,"nameLen","","",223,null],[3,"XRRMonitorInfo","","",null,null],[12,"name","","",224,null],[12,"primary","","",224,null],[12,"automatic","","",224,null],[12,"noutput","","",224,null],[12,"x","","",224,null],[12,"y","","",224,null],[12,"width","","",224,null],[12,"height","","",224,null],[12,"mwidth","","",224,null],[12,"mheight","","",224,null],[12,"outputs","","",224,null],[3,"XRRScreenChangeNotifyEvent","","",null,null],[12,"type_","","",225,null],[12,"serial","","",225,null],[12,"send_event","","",225,null],[12,"display","","",225,null],[12,"window","","",225,null],[12,"root","","",225,null],[12,"timestamp","","",225,null],[12,"config_timestamp","","",225,null],[12,"size_index","","",225,null],[12,"subpixel_order","","",225,null],[12,"rotation","","",225,null],[12,"width","","",225,null],[12,"height","","",225,null],[12,"mwidth","","",225,null],[12,"mheight","","",225,null],[3,"XRRNotifyEvent","","",null,null],[12,"type_","","",226,null],[12,"serial","","",226,null],[12,"send_event","","",226,null],[12,"display","","",226,null],[12,"window","","",226,null],[12,"subtype","","",226,null],[3,"XRROutputChangeNotifyEvent","","",null,null],[12,"type_","","",227,null],[12,"serial","","",227,null],[12,"send_event","","",227,null],[12,"display","","",227,null],[12,"window","","",227,null],[12,"subtype","","",227,null],[12,"output","","",227,null],[12,"crtc","","",227,null],[12,"mode","","",227,null],[12,"rotation","","",227,null],[12,"connection","","",227,null],[12,"subpixel_order","","",227,null],[3,"XRRCrtcChangeNotifyEvent","","",null,null],[12,"type_","","",228,null],[12,"serial","","",228,null],[12,"send_event","","",228,null],[12,"display","","",228,null],[12,"window","","",228,null],[12,"subtype","","",228,null],[12,"crtc","","",228,null],[12,"mode","","",228,null],[12,"rotation","","",228,null],[12,"x","","",228,null],[12,"y","","",228,null],[12,"width","","",228,null],[12,"height","","",228,null],[3,"XRROutputPropertyNotifyEvent","","",null,null],[12,"type_","","",229,null],[12,"serial","","",229,null],[12,"send_event","","",229,null],[12,"display","","",229,null],[12,"window","","",229,null],[12,"subtype","","",229,null],[12,"output","","",229,null],[12,"property","","",229,null],[12,"timestamp","","",229,null],[12,"state","","",229,null],[3,"XRRProviderChangeNotifyEvent","","",null,null],[12,"type_","","",230,null],[12,"serial","","",230,null],[12,"send_event","","",230,null],[12,"display","","",230,null],[12,"window","","",230,null],[12,"subtype","","",230,null],[12,"provider","","",230,null],[12,"timestamp","","",230,null],[12,"current_role","","",230,null],[3,"XRRProviderPropertyNotifyEvent","","",null,null],[12,"type_","","",231,null],[12,"serial","","",231,null],[12,"send_event","","",231,null],[12,"display","","",231,null],[12,"window","","",231,null],[12,"subtype","","",231,null],[12,"provider","","",231,null],[12,"property","","",231,null],[12,"timestamp","","",231,null],[12,"state","","",231,null],[3,"XRRResourceChangeNotifyEvent","","",null,null],[12,"type_","","",232,null],[12,"serial","","",232,null],[12,"send_event","","",232,null],[12,"display","","",232,null],[12,"window","","",232,null],[12,"subtype","","",232,null],[12,"timestamp","","",232,null],[3,"Xrandr_2_2_0","","",null,null],[12,"XRRAddOutputMode","","",233,null],[12,"XRRAllocGamma","","",233,null],[12,"XRRAllocModeInfo","","",233,null],[12,"XRRChangeOutputProperty","","",233,null],[12,"XRRChangeProviderProperty","","",233,null],[12,"XRRConfigCurrentConfiguration","","",233,null],[12,"XRRConfigCurrentRate","","",233,null],[12,"XRRConfigRates","","",233,null],[12,"XRRConfigRotations","","",233,null],[12,"XRRConfigSizes","","",233,null],[12,"XRRConfigTimes","","",233,null],[12,"XRRConfigureOutputProperty","","",233,null],[12,"XRRConfigureProviderProperty","","",233,null],[12,"XRRCreateMode","","",233,null],[12,"XRRDeleteOutputMode","","",233,null],[12,"XRRDeleteOutputProperty","","",233,null],[12,"XRRDeleteProviderProperty","","",233,null],[12,"XRRDestroyMode","","",233,null],[12,"XRRFreeCrtcInfo","","",233,null],[12,"XRRFreeGamma","","",233,null],[12,"XRRFreeModeInfo","","",233,null],[12,"XRRFreeOutputInfo","","",233,null],[12,"XRRFreePanning","","",233,null],[12,"XRRFreeProviderInfo","","",233,null],[12,"XRRFreeProviderResources","","",233,null],[12,"XRRFreeScreenConfigInfo","","",233,null],[12,"XRRFreeScreenResources","","",233,null],[12,"XRRGetCrtcGamma","","",233,null],[12,"XRRGetCrtcGammaSize","","",233,null],[12,"XRRGetCrtcInfo","","",233,null],[12,"XRRGetCrtcTransform","","",233,null],[12,"XRRGetOutputInfo","","",233,null],[12,"XRRGetOutputPrimary","","",233,null],[12,"XRRGetOutputProperty","","",233,null],[12,"XRRGetPanning","","",233,null],[12,"XRRGetProviderInfo","","",233,null],[12,"XRRGetProviderProperty","","",233,null],[12,"XRRGetProviderResources","","",233,null],[12,"XRRGetScreenInfo","","",233,null],[12,"XRRGetScreenResources","","",233,null],[12,"XRRGetScreenResourcesCurrent","","",233,null],[12,"XRRGetScreenSizeRange","","",233,null],[12,"XRRListOutputProperties","","",233,null],[12,"XRRListProviderProperties","","",233,null],[12,"XRRQueryExtension","","",233,null],[12,"XRRQueryOutputProperty","","",233,null],[12,"XRRQueryProviderProperty","","",233,null],[12,"XRRQueryVersion","","",233,null],[12,"XRRRates","","",233,null],[12,"XRRRootToScreen","","",233,null],[12,"XRRRotations","","",233,null],[12,"XRRSelectInput","","",233,null],[12,"XRRSetCrtcConfig","","",233,null],[12,"XRRSetCrtcGamma","","",233,null],[12,"XRRSetCrtcTransform","","",233,null],[12,"XRRSetOutputPrimary","","",233,null],[12,"XRRSetPanning","","",233,null],[12,"XRRSetProviderOffloadSink","","",233,null],[12,"XRRSetProviderOutputSource","","",233,null],[12,"XRRSetScreenConfig","","",233,null],[12,"XRRSetScreenConfigAndRate","","",233,null],[12,"XRRSetScreenSize","","",233,null],[12,"XRRSizes","","",233,null],[12,"XRRTimes","","",233,null],[12,"XRRUpdateConfiguration","","",233,null],[6,"Connection","","",null,null],[6,"Rotation","","",null,null],[6,"SizeID","","",null,null],[6,"SubpixelOrder","","",null,null],[6,"RROutput","","",null,null],[6,"RRCrtc","","",null,null],[6,"RRMode","","",null,null],[6,"RRProvider","","",null,null],[6,"XRRModeFlags","","",null,null],[17,"RANDR_NAME","","",null,null],[17,"RANDR_MAJOR","","",null,null],[17,"RANDR_MINOR","","",null,null],[17,"RRNumberErrors","","",null,null],[17,"RRNumberEvents","","",null,null],[17,"RRNumberRequests","","",null,null],[17,"X_RRQueryVersion","","",null,null],[17,"X_RROldGetScreenInfo","","",null,null],[17,"X_RRSetScreenConfig","","",null,null],[17,"X_RROldScreenChangeSelectInput","","",null,null],[17,"X_RRSelectInput","","",null,null],[17,"X_RRGetScreenInfo","","",null,null],[17,"X_RRGetScreenSizeRange","","",null,null],[17,"X_RRSetScreenSize","","",null,null],[17,"X_RRGetScreenResources","","",null,null],[17,"X_RRGetOutputInfo","","",null,null],[17,"X_RRListOutputProperties","","",null,null],[17,"X_RRQueryOutputProperty","","",null,null],[17,"X_RRConfigureOutputProperty","","",null,null],[17,"X_RRChangeOutputProperty","","",null,null],[17,"X_RRDeleteOutputProperty","","",null,null],[17,"X_RRGetOutputProperty","","",null,null],[17,"X_RRCreateMode","","",null,null],[17,"X_RRDestroyMode","","",null,null],[17,"X_RRAddOutputMode","","",null,null],[17,"X_RRDeleteOutputMode","","",null,null],[17,"X_RRGetCrtcInfo","","",null,null],[17,"X_RRSetCrtcConfig","","",null,null],[17,"X_RRGetCrtcGammaSize","","",null,null],[17,"X_RRGetCrtcGamma","","",null,null],[17,"X_RRSetCrtcGamma","","",null,null],[17,"X_RRGetScreenResourcesCurrent","","",null,null],[17,"X_RRSetCrtcTransform","","",null,null],[17,"X_RRGetCrtcTransform","","",null,null],[17,"X_RRGetPanning","","",null,null],[17,"X_RRSetPanning","","",null,null],[17,"X_RRSetOutputPrimary","","",null,null],[17,"X_RRGetOutputPrimary","","",null,null],[17,"X_RRGetProviders","","",null,null],[17,"X_RRGetProviderInfo","","",null,null],[17,"X_RRSetProviderOffloadSink","","",null,null],[17,"X_RRSetProviderOutputSource","","",null,null],[17,"X_RRListProviderProperties","","",null,null],[17,"X_RRQueryProviderProperty","","",null,null],[17,"X_RRConfigureProviderProperty","","",null,null],[17,"X_RRChangeProviderProperty","","",null,null],[17,"X_RRDeleteProviderProperty","","",null,null],[17,"X_RRGetProviderProperty","","",null,null],[17,"X_RRGetMonitors","","",null,null],[17,"X_RRSetMonitor","","",null,null],[17,"X_RRDeleteMonitor","","",null,null],[17,"RRTransformUnit","","",null,null],[17,"RRTransformScaleUp","","",null,null],[17,"RRTransformScaleDown","","",null,null],[17,"RRTransformProjective","","",null,null],[17,"RRScreenChangeNotifyMask","","",null,null],[17,"RRCrtcChangeNotifyMask","","",null,null],[17,"RROutputChangeNotifyMask","","",null,null],[17,"RROutputPropertyNotifyMask","","",null,null],[17,"RRProviderChangeNotifyMask","","",null,null],[17,"RRProviderPropertyNotifyMask","","",null,null],[17,"RRResourceChangeNotifyMask","","",null,null],[17,"RRScreenChangeNotify","","",null,null],[17,"RRNotify","","",null,null],[17,"RRNotify_CrtcChange","","",null,null],[17,"RRNotify_OutputChange","","",null,null],[17,"RRNotify_OutputProperty","","",null,null],[17,"RRNotify_ProviderChange","","",null,null],[17,"RRNotify_ProviderProperty","","",null,null],[17,"RRNotify_ResourceChange","","",null,null],[17,"RR_Rotate_0","","",null,null],[17,"RR_Rotate_90","","",null,null],[17,"RR_Rotate_180","","",null,null],[17,"RR_Rotate_270","","",null,null],[17,"RR_Reflect_X","","",null,null],[17,"RR_Reflect_Y","","",null,null],[17,"RRSetConfigSuccess","","",null,null],[17,"RRSetConfigInvalidConfigTime","","",null,null],[17,"RRSetConfigInvalidTime","","",null,null],[17,"RRSetConfigFailed","","",null,null],[17,"RR_HSyncPositive","","",null,null],[17,"RR_HSyncNegative","","",null,null],[17,"RR_VSyncPositive","","",null,null],[17,"RR_VSyncNegative","","",null,null],[17,"RR_Interlace","","",null,null],[17,"RR_DoubleScan","","",null,null],[17,"RR_CSync","","",null,null],[17,"RR_CSyncPositive","","",null,null],[17,"RR_CSyncNegative","","",null,null],[17,"RR_HSkewPresent","","",null,null],[17,"RR_BCast","","",null,null],[17,"RR_PixelMultiplex","","",null,null],[17,"RR_DoubleClock","","",null,null],[17,"RR_ClockDivideBy2","","",null,null],[17,"RR_Connected","","",null,null],[17,"RR_Disconnected","","",null,null],[17,"RR_UnknownConnection","","",null,null],[17,"BadRROutput","","",null,null],[17,"BadRRCrtc","","",null,null],[17,"BadRRMode","","",null,null],[17,"BadRRProvider","","",null,null],[17,"RR_PROPERTY_BACKLIGHT","","",null,null],[17,"RR_PROPERTY_RANDR_EDID","","",null,null],[17,"RR_PROPERTY_SIGNAL_FORMAT","","",null,null],[17,"RR_PROPERTY_SIGNAL_PROPERTIES","","",null,null],[17,"RR_PROPERTY_CONNECTOR_TYPE","","",null,null],[17,"RR_PROPERTY_CONNECTOR_NUMBER","","",null,null],[17,"RR_PROPERTY_COMPATIBILITY_LIST","","",null,null],[17,"RR_PROPERTY_CLONE_LIST","","",null,null],[17,"RR_PROPERTY_BORDER","","",null,null],[17,"RR_PROPERTY_BORDER_DIMENSIONS","","",null,null],[17,"RR_PROPERTY_GUID","","",null,null],[17,"RR_PROPERTY_RANDR_TILE","","",null,null],[17,"RR_Capability_None","","",null,null],[17,"RR_Capability_SourceOutput","","",null,null],[17,"RR_Capability_SinkOutput","","",null,null],[17,"RR_Capability_SourceOffload","","",null,null],[17,"RR_Capability_SinkOffload","","",null,null],[11,"open","","",212,{"inputs":[],"output":{"generics":["xrandr","openerror"],"name":"result"}}],[11,"fmt","","",213,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",213,{"inputs":[{"name":"self"}],"output":{"name":"xrrscreensize"}}],[11,"eq","","",213,{"inputs":[{"name":"self"},{"name":"xrrscreensize"}],"output":{"name":"bool"}}],[11,"ne","","",213,{"inputs":[{"name":"self"},{"name":"xrrscreensize"}],"output":{"name":"bool"}}],[11,"fmt","","",214,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",214,{"inputs":[{"name":"self"}],"output":{"name":"xrrmodeinfo"}}],[11,"eq","","",214,{"inputs":[{"name":"self"},{"name":"xrrmodeinfo"}],"output":{"name":"bool"}}],[11,"ne","","",214,{"inputs":[{"name":"self"},{"name":"xrrmodeinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",215,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",215,{"inputs":[{"name":"self"}],"output":{"name":"xrrscreenresources"}}],[11,"eq","","",215,{"inputs":[{"name":"self"},{"name":"xrrscreenresources"}],"output":{"name":"bool"}}],[11,"ne","","",215,{"inputs":[{"name":"self"},{"name":"xrrscreenresources"}],"output":{"name":"bool"}}],[11,"fmt","","",216,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",216,{"inputs":[{"name":"self"}],"output":{"name":"xrroutputinfo"}}],[11,"eq","","",216,{"inputs":[{"name":"self"},{"name":"xrroutputinfo"}],"output":{"name":"bool"}}],[11,"ne","","",216,{"inputs":[{"name":"self"},{"name":"xrroutputinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",217,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",217,{"inputs":[{"name":"self"}],"output":{"name":"xrrpropertyinfo"}}],[11,"eq","","",217,{"inputs":[{"name":"self"},{"name":"xrrpropertyinfo"}],"output":{"name":"bool"}}],[11,"ne","","",217,{"inputs":[{"name":"self"},{"name":"xrrpropertyinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",218,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",218,{"inputs":[{"name":"self"}],"output":{"name":"xrrcrtcinfo"}}],[11,"eq","","",218,{"inputs":[{"name":"self"},{"name":"xrrcrtcinfo"}],"output":{"name":"bool"}}],[11,"ne","","",218,{"inputs":[{"name":"self"},{"name":"xrrcrtcinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",219,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",219,{"inputs":[{"name":"self"}],"output":{"name":"xrrcrtcgamma"}}],[11,"eq","","",219,{"inputs":[{"name":"self"},{"name":"xrrcrtcgamma"}],"output":{"name":"bool"}}],[11,"ne","","",219,{"inputs":[{"name":"self"},{"name":"xrrcrtcgamma"}],"output":{"name":"bool"}}],[11,"fmt","","",220,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",220,{"inputs":[{"name":"self"}],"output":{"name":"xrrcrtctransformattributes"}}],[11,"eq","","",220,{"inputs":[{"name":"self"},{"name":"xrrcrtctransformattributes"}],"output":{"name":"bool"}}],[11,"ne","","",220,{"inputs":[{"name":"self"},{"name":"xrrcrtctransformattributes"}],"output":{"name":"bool"}}],[11,"fmt","","",221,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",221,{"inputs":[{"name":"self"}],"output":{"name":"xrrpanning"}}],[11,"eq","","",221,{"inputs":[{"name":"self"},{"name":"xrrpanning"}],"output":{"name":"bool"}}],[11,"ne","","",221,{"inputs":[{"name":"self"},{"name":"xrrpanning"}],"output":{"name":"bool"}}],[11,"fmt","","",222,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",222,{"inputs":[{"name":"self"}],"output":{"name":"xrrproviderresources"}}],[11,"eq","","",222,{"inputs":[{"name":"self"},{"name":"xrrproviderresources"}],"output":{"name":"bool"}}],[11,"ne","","",222,{"inputs":[{"name":"self"},{"name":"xrrproviderresources"}],"output":{"name":"bool"}}],[11,"fmt","","",223,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",223,{"inputs":[{"name":"self"}],"output":{"name":"xrrproviderinfo"}}],[11,"eq","","",223,{"inputs":[{"name":"self"},{"name":"xrrproviderinfo"}],"output":{"name":"bool"}}],[11,"ne","","",223,{"inputs":[{"name":"self"},{"name":"xrrproviderinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",224,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",224,{"inputs":[{"name":"self"}],"output":{"name":"xrrmonitorinfo"}}],[11,"eq","","",224,{"inputs":[{"name":"self"},{"name":"xrrmonitorinfo"}],"output":{"name":"bool"}}],[11,"ne","","",224,{"inputs":[{"name":"self"},{"name":"xrrmonitorinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",225,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",225,{"inputs":[{"name":"self"}],"output":{"name":"xrrscreenchangenotifyevent"}}],[11,"eq","","",225,{"inputs":[{"name":"self"},{"name":"xrrscreenchangenotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",225,{"inputs":[{"name":"self"},{"name":"xrrscreenchangenotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",226,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",226,{"inputs":[{"name":"self"}],"output":{"name":"xrrnotifyevent"}}],[11,"eq","","",226,{"inputs":[{"name":"self"},{"name":"xrrnotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",226,{"inputs":[{"name":"self"},{"name":"xrrnotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",227,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",227,{"inputs":[{"name":"self"}],"output":{"name":"xrroutputchangenotifyevent"}}],[11,"eq","","",227,{"inputs":[{"name":"self"},{"name":"xrroutputchangenotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",227,{"inputs":[{"name":"self"},{"name":"xrroutputchangenotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",228,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",228,{"inputs":[{"name":"self"}],"output":{"name":"xrrcrtcchangenotifyevent"}}],[11,"eq","","",228,{"inputs":[{"name":"self"},{"name":"xrrcrtcchangenotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",228,{"inputs":[{"name":"self"},{"name":"xrrcrtcchangenotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",229,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",229,{"inputs":[{"name":"self"}],"output":{"name":"xrroutputpropertynotifyevent"}}],[11,"eq","","",229,{"inputs":[{"name":"self"},{"name":"xrroutputpropertynotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",229,{"inputs":[{"name":"self"},{"name":"xrroutputpropertynotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",230,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",230,{"inputs":[{"name":"self"}],"output":{"name":"xrrproviderchangenotifyevent"}}],[11,"eq","","",230,{"inputs":[{"name":"self"},{"name":"xrrproviderchangenotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",230,{"inputs":[{"name":"self"},{"name":"xrrproviderchangenotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",231,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",231,{"inputs":[{"name":"self"}],"output":{"name":"xrrproviderpropertynotifyevent"}}],[11,"eq","","",231,{"inputs":[{"name":"self"},{"name":"xrrproviderpropertynotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",231,{"inputs":[{"name":"self"},{"name":"xrrproviderpropertynotifyevent"}],"output":{"name":"bool"}}],[11,"fmt","","",232,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",232,{"inputs":[{"name":"self"}],"output":{"name":"xrrresourcechangenotifyevent"}}],[11,"eq","","",232,{"inputs":[{"name":"self"},{"name":"xrrresourcechangenotifyevent"}],"output":{"name":"bool"}}],[11,"ne","","",232,{"inputs":[{"name":"self"},{"name":"xrrresourcechangenotifyevent"}],"output":{"name":"bool"}}],[11,"as_mut","x11_dl::xlib","",97,{"inputs":[{"name":"self"}],"output":{"name":"xrrscreenchangenotifyevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xrrscreenchangenotifyevent"}}],[11,"from","","",97,{"inputs":[{"name":"xrrscreenchangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xrrscreenchangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","x11_dl::xrandr","",225,{"inputs":[{"name":"xevent"}],"output":{"name":"xrrscreenchangenotifyevent"}}],[11,"from","","",225,{"inputs":[{"name":"xevent"}],"output":{"name":"xrrscreenchangenotifyevent"}}],[11,"as_mut","x11_dl::xlib","",97,{"inputs":[{"name":"self"}],"output":{"name":"xrrnotifyevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xrrnotifyevent"}}],[11,"from","","",97,{"inputs":[{"name":"xrrnotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xrrnotifyevent"}],"output":{"name":"xevent"}}],[11,"from","x11_dl::xrandr","",226,{"inputs":[{"name":"xevent"}],"output":{"name":"xrrnotifyevent"}}],[11,"from","","",226,{"inputs":[{"name":"xevent"}],"output":{"name":"xrrnotifyevent"}}],[11,"as_mut","x11_dl::xlib","",97,{"inputs":[{"name":"self"}],"output":{"name":"xrroutputchangenotifyevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xrroutputchangenotifyevent"}}],[11,"from","","",97,{"inputs":[{"name":"xrroutputchangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xrroutputchangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","x11_dl::xrandr","",227,{"inputs":[{"name":"xevent"}],"output":{"name":"xrroutputchangenotifyevent"}}],[11,"from","","",227,{"inputs":[{"name":"xevent"}],"output":{"name":"xrroutputchangenotifyevent"}}],[11,"as_mut","x11_dl::xlib","",97,{"inputs":[{"name":"self"}],"output":{"name":"xrrcrtcchangenotifyevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xrrcrtcchangenotifyevent"}}],[11,"from","","",97,{"inputs":[{"name":"xrrcrtcchangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xrrcrtcchangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","x11_dl::xrandr","",228,{"inputs":[{"name":"xevent"}],"output":{"name":"xrrcrtcchangenotifyevent"}}],[11,"from","","",228,{"inputs":[{"name":"xevent"}],"output":{"name":"xrrcrtcchangenotifyevent"}}],[11,"as_mut","x11_dl::xlib","",97,{"inputs":[{"name":"self"}],"output":{"name":"xrroutputpropertynotifyevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xrroutputpropertynotifyevent"}}],[11,"from","","",97,{"inputs":[{"name":"xrroutputpropertynotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xrroutputpropertynotifyevent"}],"output":{"name":"xevent"}}],[11,"from","x11_dl::xrandr","",229,{"inputs":[{"name":"xevent"}],"output":{"name":"xrroutputpropertynotifyevent"}}],[11,"from","","",229,{"inputs":[{"name":"xevent"}],"output":{"name":"xrroutputpropertynotifyevent"}}],[11,"as_mut","x11_dl::xlib","",97,{"inputs":[{"name":"self"}],"output":{"name":"xrrproviderchangenotifyevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xrrproviderchangenotifyevent"}}],[11,"from","","",97,{"inputs":[{"name":"xrrproviderchangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xrrproviderchangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","x11_dl::xrandr","",230,{"inputs":[{"name":"xevent"}],"output":{"name":"xrrproviderchangenotifyevent"}}],[11,"from","","",230,{"inputs":[{"name":"xevent"}],"output":{"name":"xrrproviderchangenotifyevent"}}],[11,"as_mut","x11_dl::xlib","",97,{"inputs":[{"name":"self"}],"output":{"name":"xrrproviderpropertynotifyevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xrrproviderpropertynotifyevent"}}],[11,"from","","",97,{"inputs":[{"name":"xrrproviderpropertynotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xrrproviderpropertynotifyevent"}],"output":{"name":"xevent"}}],[11,"from","x11_dl::xrandr","",231,{"inputs":[{"name":"xevent"}],"output":{"name":"xrrproviderpropertynotifyevent"}}],[11,"from","","",231,{"inputs":[{"name":"xevent"}],"output":{"name":"xrrproviderpropertynotifyevent"}}],[11,"as_mut","x11_dl::xlib","",97,{"inputs":[{"name":"self"}],"output":{"name":"xrrresourcechangenotifyevent"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"xrrresourcechangenotifyevent"}}],[11,"from","","",97,{"inputs":[{"name":"xrrresourcechangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xrrresourcechangenotifyevent"}],"output":{"name":"xevent"}}],[11,"from","x11_dl::xrandr","",232,{"inputs":[{"name":"xevent"}],"output":{"name":"xrrresourcechangenotifyevent"}}],[11,"from","","",232,{"inputs":[{"name":"xevent"}],"output":{"name":"xrrresourcechangenotifyevent"}}],[11,"open","","",233,{"inputs":[],"output":{"generics":["xrandr_2_2_0","openerror"],"name":"result"}}]],"paths":[[4,"OpenErrorKind"],[3,"OpenError"],[3,"Xlib"],[3,"XAnyEvent"],[3,"XButtonEvent"],[3,"XCirculateEvent"],[3,"XCirculateRequestEvent"],[3,"XClientMessageEvent"],[3,"XColormapEvent"],[3,"XConfigureEvent"],[3,"XConfigureRequestEvent"],[3,"XCreateWindowEvent"],[3,"XCrossingEvent"],[3,"XDestroyWindowEvent"],[3,"XErrorEvent"],[3,"XExposeEvent"],[3,"XFocusChangeEvent"],[3,"XGraphicsExposeEvent"],[3,"XGravityEvent"],[3,"XKeyEvent"],[3,"XKeymapEvent"],[3,"XMapEvent"],[3,"XMappingEvent"],[3,"XMapRequestEvent"],[3,"XMotionEvent"],[3,"XNoExposeEvent"],[3,"XPropertyEvent"],[3,"XReparentEvent"],[3,"XResizeRequestEvent"],[3,"XSelectionClearEvent"],[3,"XSelectionEvent"],[3,"XSelectionRequestEvent"],[3,"XUnmapEvent"],[3,"XVisibilityEvent"],[3,"_XkbCompatMapRec"],[3,"_XkbDesc"],[3,"_XkbIndicatorRec"],[3,"_XkbKeyAliasRec"],[3,"_XkbKeyNameRec"],[3,"_XkbNamesRec"],[3,"XkbAnyEvent"],[3,"XkbNewKeyboardNotifyEvent"],[3,"_XkbMapNotifyEvent"],[3,"XkbStateNotifyEvent"],[3,"_XkbControlsNotifyEvent"],[3,"XkbIndicatorNotifyEvent"],[3,"_XkbNamesNotifyEvent"],[3,"XkbCompatMapNotifyEvent"],[3,"XkbBellNotifyEvent"],[3,"XkbActionMessageEvent"],[3,"XkbAccessXNotifyEvent"],[3,"_XkbExtensionDeviceNotifyEvent"],[3,"Depth"],[3,"Screen"],[3,"ScreenFormat"],[3,"Visual"],[3,"XArc"],[3,"XChar2b"],[3,"XCharStruct"],[3,"XClassHint"],[3,"XColor"],[3,"XComposeStatus"],[3,"XExtCodes"],[3,"XExtData"],[3,"XFontProp"],[3,"XFontSetExtents"],[3,"XFontStruct"],[3,"XGCValues"],[3,"XGenericEventCookie"],[3,"XHostAddress"],[3,"XIconSize"],[3,"XImage"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XmbTextItem"],[3,"XModifierKeymap"],[3,"XOMCharSetList"],[3,"XPixmapFormatValues"],[3,"XPoint"],[3,"XRectangle"],[3,"XrmOptionDescRec"],[3,"XrmValue"],[3,"XSegment"],[3,"XSetWindowAttributes"],[3,"XSizeHints"],[3,"XStandardColormap"],[3,"XTextItem"],[3,"XTextItem16"],[3,"XTextProperty"],[3,"XTimeCoord"],[3,"XVisualInfo"],[3,"XwcTextItem"],[3,"XWindowAttributes"],[3,"XWindowChanges"],[3,"XWMHints"],[3,"AspectRatio"],[3,"ImageFns"],[19,"XEvent"],[3,"XkbEvent"],[3,"ClientMessageData"],[3,"Xext"],[3,"Glx"],[3,"Xcursor"],[3,"_XcursorAnimate"],[3,"_XcursorChunkHeader"],[3,"_XcursorComment"],[3,"_XcursorComments"],[3,"_XcursorCursors"],[3,"_XcursorFile"],[3,"_XcursorFileHeader"],[3,"_XcursorFileToc"],[3,"_XcursorImage"],[3,"_XcursorImages"],[3,"Xf86vmode"],[3,"XF86VidModeGamma"],[3,"XF86VidModeModeInfo"],[3,"XF86VidModeModeLine"],[3,"XF86VidModeMonitor"],[3,"XF86VidModeSyncRange"],[3,"XF86VidModeNotifyEvent"],[3,"Xft"],[3,"XftFont"],[3,"XftColor"],[3,"XftCharSpec"],[3,"XftCharFontSpec"],[3,"XftFontSet"],[3,"XftGlyphSpec"],[3,"XftGlyphFontSpec"],[4,"FcEndian"],[4,"FcResult"],[3,"Xlib"],[3,"XineramaScreenInfo"],[3,"XPanoramiXInfo"],[3,"XInput"],[3,"XDevice"],[3,"XDeviceControl"],[3,"XDeviceInfo"],[3,"XDeviceState"],[3,"XDeviceTimeCoord"],[3,"XExtensionVersion"],[3,"XFeedbackControl"],[3,"XFeedbackState"],[3,"XInputClass"],[3,"XInputClassInfo"],[3,"XInput2"],[3,"XIAddMasterInfo"],[3,"XIRemoveMasterInfo"],[3,"XIAttachSlaveInfo"],[3,"XIDetachSlaveInfo"],[3,"XIAnyHierarchyChangeInfo"],[3,"XIModifierState"],[3,"XIButtonState"],[3,"XIValuatorState"],[3,"XIEventMask"],[3,"XIAnyClassInfo"],[3,"XIButtonClassInfo"],[3,"XIKeyClassInfo"],[3,"XIValuatorClassInfo"],[3,"XIScrollClassInfo"],[3,"XITouchClassInfo"],[3,"XIDeviceInfo"],[3,"XIGrabModifiers"],[3,"XIBarrierReleasePointerInfo"],[3,"XIEvent"],[3,"XIHierarchyInfo"],[3,"XIHierarchyEvent"],[3,"XIDeviceChangedEvent"],[3,"XIDeviceEvent"],[3,"XIRawEvent"],[3,"XIEnterEvent"],[3,"XIPropertyEvent"],[3,"XITouchOwnershipEvent"],[3,"XIBarrierEvent"],[3,"Xmu"],[3,"Xf86vmode"],[3,"XRecordClientInfo"],[3,"XRecordExtRange"],[3,"XRecordInterceptData"],[3,"XRecordRange"],[3,"XRecordRange8"],[3,"XRecordRange16"],[3,"XRecordState"],[3,"Xrender"],[3,"_XAnimCursor"],[3,"_XCircle"],[3,"_XConicalGradient"],[3,"_XFilters"],[3,"_XGlyphElt8"],[3,"_XGlyphElt16"],[3,"_XGlyphElt32"],[3,"_XGlyphInfo"],[3,"_XIndexValue"],[3,"_XLinearGradient"],[3,"_XLineFixed"],[3,"_XPointDouble"],[3,"_XPointFixed"],[3,"_XRadialGradient"],[3,"XRenderColor"],[3,"XRenderDirectFormat"],[3,"XRenderPictFormat"],[3,"_XRenderPictureAttributes"],[3,"_XSpanFix"],[3,"_XTrap"],[3,"_XTrapezoid"],[3,"_XTriangle"],[3,"_XTransform"],[3,"Xss"],[3,"XScreenSaverInfo"],[3,"XScreenSaverNotifyEvent"],[3,"Xt"],[3,"Xf86vmode"],[3,"Xlib_xcb"],[3,"Xrandr"],[3,"XRRScreenSize"],[3,"XRRModeInfo"],[3,"XRRScreenResources"],[3,"XRROutputInfo"],[3,"XRRPropertyInfo"],[3,"XRRCrtcInfo"],[3,"XRRCrtcGamma"],[3,"XRRCrtcTransformAttributes"],[3,"XRRPanning"],[3,"XRRProviderResources"],[3,"XRRProviderInfo"],[3,"XRRMonitorInfo"],[3,"XRRScreenChangeNotifyEvent"],[3,"XRRNotifyEvent"],[3,"XRROutputChangeNotifyEvent"],[3,"XRRCrtcChangeNotifyEvent"],[3,"XRROutputPropertyNotifyEvent"],[3,"XRRProviderChangeNotifyEvent"],[3,"XRRProviderPropertyNotifyEvent"],[3,"XRRResourceChangeNotifyEvent"],[3,"Xrandr_2_2_0"]]};
searchIndex["xcb"] = {"doc":"Rust bindings to the XCB library.","items":[[0,"base","xcb","",null,null],[3,"StructPtr","xcb::base","`StructPtr` is a wrapper for pointer to struct owned by XCB that must not be freed it is instead bound to the lifetime of its parent that it borrows immutably",null,null],[12,"ptr","","",0,null],[3,"Event","","`Event` wraps a pointer to `xcb_*_event_t` this pointer will be freed when the `Event` goes out of scope",null,null],[12,"ptr","","",1,null],[3,"Error","","`Error` wraps a pointer to `xcb_*_error_t` this pointer will be freed when the `Error` goes out of scope",null,null],[12,"ptr","","",2,null],[3,"Cookie","","wraps a cookie as returned by a request function. Instantiations of `Cookie` that are not `VoidCookie` should provide a `get_reply` method to return a `Reply`",null,null],[12,"cookie","","",3,null],[12,"conn","","",3,null],[12,"checked","","",3,null],[3,"Reply","","Wraps a pointer to a `xcb_*_reply_t` the pointer is freed when the `Reply` goes out of scope",null,null],[12,"ptr","","",4,null],[3,"Connection","","xcb::Connection handles communication with the X server. It wraps an `xcb_connection_t` object and will call `xcb_disconnect` when the `Connection` goes out of scope",null,null],[3,"QueryExtensionData","","",null,null],[4,"ConnError","","Error type that is returned by `Connection::has_error`",null,null],[13,"Connection","","xcb connection errors because of socket, pipe and other stream errors.",5,null],[13,"ClosedExtNotSupported","","xcb connection shutdown because of extension not supported",5,null],[13,"ClosedMemInsufficient","","malloc(), calloc() and realloc() error upon failure, for eg ENOMEM",5,null],[13,"ClosedReqLenExceed","","Connection closed, exceeding request length that server accepts.",5,null],[13,"ClosedParseErr","","Connection closed, error during parsing display string.",5,null],[13,"ClosedInvalidScreen","","Connection closed because the server does not have a screen matching the display.",5,null],[13,"ClosedFdPassingFailed","","Connection closed because some FD passing operation failed",5,null],[5,"cast_event","","Casts the generic event to the right event. Assumes that the given event is really the correct type.",null,{"inputs":[{"name":"genericevent"}],"output":{"name":"t"}}],[5,"cast_error","","Casts the generic error to the right error. Assumes that the given error is really the correct type.",null,{"inputs":[{"name":"genericerror"}],"output":{"name":"t"}}],[5,"pack_bitfield","","pack bitfields tuples into vector usable for FFI requests `let values = [ (xcb::CW_EVENT_MASK, xcb::EVENT_MASK_EXPOSURE | xcb::EVENT_MASK_KEY_PRESS), (xcb::CW_BACK_PIXEL, 0xffffffff), ]; let ffi_values = ( xcb::CW_BACK_PIXEL | xcb::CW_EVENT_MASK, [ Oxffffffff, xcb::EVENT_MASK_EXPOSURE | xcb::EVENT_MASK_KEY_PRESS, 0 ] ); assert_eq!(pack_bitfield(&mut values), ffi_values);`",null,null],[6,"Extension","","Opaque type used as key for `Connection::get_extension_data`",null,null],[6,"VoidCookie","","",null,null],[6,"GenericEvent","","",null,null],[6,"GenericError","","",null,null],[6,"GenericReply","","",null,null],[6,"AuthInfo","","",null,null],[6,"ConnResult","","",null,null],[17,"X_PROTOCOL","","Current protocol version",null,null],[17,"X_PROTOCOL_REVISION","","Current minor version",null,null],[17,"X_TCP_PORT","","X_TCP_PORT + display number = server port for TCP transport",null,null],[17,"NONE","","`xcb::NONE` is the universal null resource or null atom parameter value for many core X requests",null,null],[17,"COPY_FROM_PARENT","","`xcb::COPY_FROM_PARENT` can be used for many `xcb::create_window` parameters",null,null],[17,"CURRENT_TIME","","`xcb::CURRENT_TIME` can be used in most requests that take an `xcb::Timestamp`",null,null],[17,"NO_SYMBOL","","`xcb::NO_SYMBOL` fills in unused entries in `xcb::Keysym` tables",null,null],[8,"Zero","","",null,null],[10,"zero","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"response_type","","",1,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"drop","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"response_type","","",2,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"error_code","","",2,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"drop","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"request_check","","",7,{"inputs":[{"name":"self"}],"output":{"generics":["genericerror"],"name":"result"}}],[11,"drop","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"flush","","Forces any buffered output to be written to the server. Blocks until the write is complete.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_maximum_request_length","","Returns the maximum request length that this server accepts.",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"prefetch_maximum_request_length","","Prefetch the maximum request length without blocking.",8,{"inputs":[{"name":"self"}],"output":null}],[11,"wait_for_event","","Returns the next event or error from the server.",8,{"inputs":[{"name":"self"}],"output":{"generics":["genericevent"],"name":"option"}}],[11,"poll_for_event","","Returns the next event or error from the server.",8,{"inputs":[{"name":"self"}],"output":{"generics":["genericevent"],"name":"option"}}],[11,"poll_for_queued_event","","Returns the next event without reading from the connection.",8,{"inputs":[{"name":"self"}],"output":{"generics":["genericevent"],"name":"option"}}],[11,"get_setup","","Access the data returned by the server.",8,{"inputs":[{"name":"self"}],"output":{"name":"setup"}}],[11,"has_error","","Test whether the connection has shut down due to a fatal error.",8,{"inputs":[{"name":"self"}],"output":{"name":"connresult"}}],[11,"generate_id","","Allocates an XID for a new object.",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_raw_conn","","Returns the inner ffi `xcb_connection_t` pointer",8,null],[11,"prefetch_extension_data","","Prefetch of extension data into the extension cache",8,{"inputs":[{"name":"self"},{"name":"extension"}],"output":null}],[11,"get_extension_data","","Caches reply information from QueryExtension requests.",8,{"inputs":[{"name":"self"},{"name":"extension"}],"output":{"generics":["queryextensiondata"],"name":"option"}}],[11,"connect","","Connects to the X server. `displayname:` The name of the display.",8,{"inputs":[{"generics":["str"],"name":"option"}],"output":{"name":"connresult"}}],[11,"connect_with_auth_info","","Connects to the X server, using an authorization information. display: The name of the display. auth_info: The authorization information. screen: A pointer to a preferred screen number. Returns A newly allocated `Connection` structure.",8,{"inputs":[{"generics":["str"],"name":"option"},{"name":"authinfo"}],"output":{"name":"connresult"}}],[11,"from_raw_conn","","builds a new Connection object from an available connection",8,null],[11,"as_raw_fd","","",8,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"drop","","",8,{"inputs":[{"name":"self"}],"output":null}],[11,"present","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"major_opcode","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_event","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_error","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[0,"xproto","xcb","",null,null],[3,"RequestError","xcb::xproto","",null,null],[12,"base","","",10,null],[3,"ValueError","","",null,null],[12,"base","","",11,null],[3,"WindowError","","",null,null],[12,"base","","",12,null],[3,"PixmapError","","",null,null],[12,"base","","",13,null],[3,"AtomError","","",null,null],[12,"base","","",14,null],[3,"CursorError","","",null,null],[12,"base","","",15,null],[3,"FontError","","",null,null],[12,"base","","",16,null],[3,"MatchError","","",null,null],[12,"base","","",17,null],[3,"DrawableError","","",null,null],[12,"base","","",18,null],[3,"AccessError","","",null,null],[12,"base","","",19,null],[3,"AllocError","","",null,null],[12,"base","","",20,null],[3,"ColormapError","","",null,null],[12,"base","","",21,null],[3,"GContextError","","",null,null],[12,"base","","",22,null],[3,"IdChoiceError","","",null,null],[12,"base","","",23,null],[3,"NameError","","",null,null],[12,"base","","",24,null],[3,"LengthError","","",null,null],[12,"base","","",25,null],[3,"ImplementationError","","",null,null],[12,"base","","",26,null],[3,"Char2b","","",null,null],[12,"base","","",27,null],[3,"Point","","",null,null],[12,"base","","",28,null],[3,"Rectangle","","",null,null],[12,"base","","",29,null],[3,"Arc","","",null,null],[12,"base","","",30,null],[3,"Format","","",null,null],[12,"base","","",31,null],[3,"Visualtype","","",null,null],[12,"base","","",32,null],[3,"Timecoord","","",null,null],[12,"base","","",33,null],[3,"Fontprop","","",null,null],[12,"base","","",34,null],[3,"Charinfo","","",null,null],[12,"base","","",35,null],[3,"Segment","","",null,null],[12,"base","","",36,null],[3,"Coloritem","","",null,null],[12,"base","","",37,null],[3,"Rgb","","",null,null],[12,"base","","",38,null],[5,"create_window","","Creates a window",null,null],[5,"create_window_checked","","Creates a window",null,null],[5,"change_window_attributes","","change window attributes",null,null],[5,"change_window_attributes_checked","","change window attributes",null,null],[5,"get_window_attributes","","Gets window attributes",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"getwindowattributescookie"}}],[5,"get_window_attributes_unchecked","","Gets window attributes",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"getwindowattributescookie"}}],[5,"destroy_window","","Destroys a window",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"destroy_window_checked","","Destroys a window",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"destroy_subwindows","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"destroy_subwindows_checked","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"change_save_set","","Changes a client's save set",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"change_save_set_checked","","Changes a client's save set",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"reparent_window","","Reparents a window",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"}],"output":{"name":"voidcookie"}}],[5,"reparent_window_checked","","Reparents a window",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"}],"output":{"name":"voidcookie"}}],[5,"map_window","","Makes a window visible",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"map_window_checked","","Makes a window visible",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"map_subwindows","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"map_subwindows_checked","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"unmap_window","","Makes a window invisible",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"unmap_window_checked","","Makes a window invisible",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"unmap_subwindows","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"unmap_subwindows_checked","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"configure_window","","Configures window attributes",null,null],[5,"configure_window_checked","","Configures window attributes",null,null],[5,"circulate_window","","Change window stacking order",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"circulate_window_checked","","Change window stacking order",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"get_geometry","","Get current window geometry",null,{"inputs":[{"name":"connection"},{"name":"drawable"}],"output":{"name":"getgeometrycookie"}}],[5,"get_geometry_unchecked","","Get current window geometry",null,{"inputs":[{"name":"connection"},{"name":"drawable"}],"output":{"name":"getgeometrycookie"}}],[5,"query_tree","","query the window tree",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"querytreecookie"}}],[5,"query_tree_unchecked","","query the window tree",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"querytreecookie"}}],[5,"intern_atom","","Get atom identifier by name",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"str"}],"output":{"name":"internatomcookie"}}],[5,"intern_atom_unchecked","","Get atom identifier by name",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"str"}],"output":{"name":"internatomcookie"}}],[5,"get_atom_name","","",null,{"inputs":[{"name":"connection"},{"name":"atom"}],"output":{"name":"getatomnamecookie"}}],[5,"get_atom_name_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"atom"}],"output":{"name":"getatomnamecookie"}}],[5,"change_property","","Changes a window property",null,null],[5,"change_property_checked","","Changes a window property",null,null],[5,"delete_property","","",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"atom"}],"output":{"name":"voidcookie"}}],[5,"delete_property_checked","","",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"atom"}],"output":{"name":"voidcookie"}}],[5,"get_property","","Gets a window property",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"u32"},{"name":"u32"}],"output":{"name":"getpropertycookie"}}],[5,"get_property_unchecked","","Gets a window property",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"u32"},{"name":"u32"}],"output":{"name":"getpropertycookie"}}],[5,"list_properties","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"listpropertiescookie"}}],[5,"list_properties_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"listpropertiescookie"}}],[5,"set_selection_owner","","Sets the owner of a selection",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"atom"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"set_selection_owner_checked","","Sets the owner of a selection",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"atom"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"get_selection_owner","","Gets the owner of a selection",null,{"inputs":[{"name":"connection"},{"name":"atom"}],"output":{"name":"getselectionownercookie"}}],[5,"get_selection_owner_unchecked","","Gets the owner of a selection",null,{"inputs":[{"name":"connection"},{"name":"atom"}],"output":{"name":"getselectionownercookie"}}],[5,"convert_selection","","",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"atom"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"convert_selection_checked","","",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"atom"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"send_event","","send an event",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"u32"},{"name":"event"}],"output":{"name":"voidcookie"}}],[5,"send_event_checked","","send an event",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"u32"},{"name":"event"}],"output":{"name":"voidcookie"}}],[5,"grab_pointer","","Grab the pointer",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"u16"},{"name":"u8"},{"name":"u8"},{"name":"window"},{"name":"cursor"},{"name":"timestamp"}],"output":{"name":"grabpointercookie"}}],[5,"grab_pointer_unchecked","","Grab the pointer",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"u16"},{"name":"u8"},{"name":"u8"},{"name":"window"},{"name":"cursor"},{"name":"timestamp"}],"output":{"name":"grabpointercookie"}}],[5,"ungrab_pointer","","release the pointer",null,{"inputs":[{"name":"connection"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"ungrab_pointer_checked","","release the pointer",null,{"inputs":[{"name":"connection"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"grab_button","","Grab pointer button(s)",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"u16"},{"name":"u8"},{"name":"u8"},{"name":"window"},{"name":"cursor"},{"name":"u8"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"grab_button_checked","","Grab pointer button(s)",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"u16"},{"name":"u8"},{"name":"u8"},{"name":"window"},{"name":"cursor"},{"name":"u8"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"ungrab_button","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"window"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"ungrab_button_checked","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"window"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"change_active_pointer_grab","","",null,{"inputs":[{"name":"connection"},{"name":"cursor"},{"name":"timestamp"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"change_active_pointer_grab_checked","","",null,{"inputs":[{"name":"connection"},{"name":"cursor"},{"name":"timestamp"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"grab_keyboard","","Grab the keyboard",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"timestamp"},{"name":"u8"},{"name":"u8"}],"output":{"name":"grabkeyboardcookie"}}],[5,"grab_keyboard_unchecked","","Grab the keyboard",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"timestamp"},{"name":"u8"},{"name":"u8"}],"output":{"name":"grabkeyboardcookie"}}],[5,"ungrab_keyboard","","",null,{"inputs":[{"name":"connection"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"ungrab_keyboard_checked","","",null,{"inputs":[{"name":"connection"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"grab_key","","Grab keyboard key(s)",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"u16"},{"name":"keycode"},{"name":"u8"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"grab_key_checked","","Grab keyboard key(s)",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"u16"},{"name":"keycode"},{"name":"u8"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"ungrab_key","","release a key combination",null,{"inputs":[{"name":"connection"},{"name":"keycode"},{"name":"window"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"ungrab_key_checked","","release a key combination",null,{"inputs":[{"name":"connection"},{"name":"keycode"},{"name":"window"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"allow_events","","release queued events",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"allow_events_checked","","release queued events",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"grab_server","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"voidcookie"}}],[5,"grab_server_checked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"voidcookie"}}],[5,"ungrab_server","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"voidcookie"}}],[5,"ungrab_server_checked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"voidcookie"}}],[5,"query_pointer","","get pointer coordinates",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"querypointercookie"}}],[5,"query_pointer_unchecked","","get pointer coordinates",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"querypointercookie"}}],[5,"get_motion_events","","",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"timestamp"},{"name":"timestamp"}],"output":{"name":"getmotioneventscookie"}}],[5,"get_motion_events_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"timestamp"},{"name":"timestamp"}],"output":{"name":"getmotioneventscookie"}}],[5,"translate_coordinates","","",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"}],"output":{"name":"translatecoordinatescookie"}}],[5,"translate_coordinates_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"}],"output":{"name":"translatecoordinatescookie"}}],[5,"warp_pointer","","move mouse pointer",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"voidcookie"}}],[5,"warp_pointer_checked","","move mouse pointer",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"voidcookie"}}],[5,"set_input_focus","","Sets input focus",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"window"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"set_input_focus_checked","","Sets input focus",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"window"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"get_input_focus","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getinputfocuscookie"}}],[5,"get_input_focus_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getinputfocuscookie"}}],[5,"query_keymap","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"querykeymapcookie"}}],[5,"query_keymap_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"querykeymapcookie"}}],[5,"open_font","","opens a font",null,{"inputs":[{"name":"connection"},{"name":"font"},{"name":"str"}],"output":{"name":"voidcookie"}}],[5,"open_font_checked","","opens a font",null,{"inputs":[{"name":"connection"},{"name":"font"},{"name":"str"}],"output":{"name":"voidcookie"}}],[5,"close_font","","",null,{"inputs":[{"name":"connection"},{"name":"font"}],"output":{"name":"voidcookie"}}],[5,"close_font_checked","","",null,{"inputs":[{"name":"connection"},{"name":"font"}],"output":{"name":"voidcookie"}}],[5,"query_font","","query font metrics",null,{"inputs":[{"name":"connection"},{"name":"fontable"}],"output":{"name":"queryfontcookie"}}],[5,"query_font_unchecked","","query font metrics",null,{"inputs":[{"name":"connection"},{"name":"fontable"}],"output":{"name":"queryfontcookie"}}],[5,"query_text_extents","","get text extents",null,null],[5,"query_text_extents_unchecked","","get text extents",null,null],[5,"list_fonts","","get matching font names",null,{"inputs":[{"name":"connection"},{"name":"u16"},{"name":"str"}],"output":{"name":"listfontscookie"}}],[5,"list_fonts_unchecked","","get matching font names",null,{"inputs":[{"name":"connection"},{"name":"u16"},{"name":"str"}],"output":{"name":"listfontscookie"}}],[5,"list_fonts_with_info","","get matching font names and information",null,{"inputs":[{"name":"connection"},{"name":"u16"},{"name":"str"}],"output":{"name":"listfontswithinfocookie"}}],[5,"list_fonts_with_info_unchecked","","get matching font names and information",null,{"inputs":[{"name":"connection"},{"name":"u16"},{"name":"str"}],"output":{"name":"listfontswithinfocookie"}}],[5,"set_font_path","","",null,null],[5,"set_font_path_checked","","",null,null],[5,"get_font_path","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getfontpathcookie"}}],[5,"get_font_path_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getfontpathcookie"}}],[5,"create_pixmap","","Creates a pixmap",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"pixmap"},{"name":"drawable"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"create_pixmap_checked","","Creates a pixmap",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"pixmap"},{"name":"drawable"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"free_pixmap","","Destroys a pixmap",null,{"inputs":[{"name":"connection"},{"name":"pixmap"}],"output":{"name":"voidcookie"}}],[5,"free_pixmap_checked","","Destroys a pixmap",null,{"inputs":[{"name":"connection"},{"name":"pixmap"}],"output":{"name":"voidcookie"}}],[5,"create_gc","","Creates a graphics context",null,null],[5,"create_gc_checked","","Creates a graphics context",null,null],[5,"change_gc","","change graphics context components",null,null],[5,"change_gc_checked","","change graphics context components",null,null],[5,"copy_gc","","",null,{"inputs":[{"name":"connection"},{"name":"gcontext"},{"name":"gcontext"},{"name":"u32"}],"output":{"name":"voidcookie"}}],[5,"copy_gc_checked","","",null,{"inputs":[{"name":"connection"},{"name":"gcontext"},{"name":"gcontext"},{"name":"u32"}],"output":{"name":"voidcookie"}}],[5,"set_dashes","","",null,null],[5,"set_dashes_checked","","",null,null],[5,"set_clip_rectangles","","",null,null],[5,"set_clip_rectangles_checked","","",null,null],[5,"free_gc","","Destroys a graphics context",null,{"inputs":[{"name":"connection"},{"name":"gcontext"}],"output":{"name":"voidcookie"}}],[5,"free_gc_checked","","Destroys a graphics context",null,{"inputs":[{"name":"connection"},{"name":"gcontext"}],"output":{"name":"voidcookie"}}],[5,"clear_area","","",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"clear_area_checked","","",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"copy_area","","copy areas",null,{"inputs":[{"name":"connection"},{"name":"drawable"},{"name":"drawable"},{"name":"gcontext"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"copy_area_checked","","copy areas",null,{"inputs":[{"name":"connection"},{"name":"drawable"},{"name":"drawable"},{"name":"gcontext"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"copy_plane","","",null,{"inputs":[{"name":"connection"},{"name":"drawable"},{"name":"drawable"},{"name":"gcontext"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"u32"}],"output":{"name":"voidcookie"}}],[5,"copy_plane_checked","","",null,{"inputs":[{"name":"connection"},{"name":"drawable"},{"name":"drawable"},{"name":"gcontext"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"u32"}],"output":{"name":"voidcookie"}}],[5,"poly_point","","",null,null],[5,"poly_point_checked","","",null,null],[5,"poly_line","","draw lines",null,null],[5,"poly_line_checked","","draw lines",null,null],[5,"poly_segment","","draw lines",null,null],[5,"poly_segment_checked","","draw lines",null,null],[5,"poly_rectangle","","",null,null],[5,"poly_rectangle_checked","","",null,null],[5,"poly_arc","","",null,null],[5,"poly_arc_checked","","",null,null],[5,"fill_poly","","",null,null],[5,"fill_poly_checked","","",null,null],[5,"poly_fill_rectangle","","Fills rectangles",null,null],[5,"poly_fill_rectangle_checked","","Fills rectangles",null,null],[5,"poly_fill_arc","","",null,null],[5,"poly_fill_arc_checked","","",null,null],[5,"put_image","","",null,null],[5,"put_image_checked","","",null,null],[5,"get_image","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"drawable"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"u32"}],"output":{"name":"getimagecookie"}}],[5,"get_image_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"drawable"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"u32"}],"output":{"name":"getimagecookie"}}],[5,"poly_text_8","","",null,null],[5,"poly_text_8_checked","","",null,null],[5,"poly_text_16","","",null,null],[5,"poly_text_16_checked","","",null,null],[5,"image_text_8","","Draws text",null,{"inputs":[{"name":"connection"},{"name":"drawable"},{"name":"gcontext"},{"name":"i16"},{"name":"i16"},{"name":"str"}],"output":{"name":"voidcookie"}}],[5,"image_text_8_checked","","Draws text",null,{"inputs":[{"name":"connection"},{"name":"drawable"},{"name":"gcontext"},{"name":"i16"},{"name":"i16"},{"name":"str"}],"output":{"name":"voidcookie"}}],[5,"image_text_16","","Draws text",null,null],[5,"image_text_16_checked","","Draws text",null,null],[5,"create_colormap","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"colormap"},{"name":"window"},{"name":"visualid"}],"output":{"name":"voidcookie"}}],[5,"create_colormap_checked","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"colormap"},{"name":"window"},{"name":"visualid"}],"output":{"name":"voidcookie"}}],[5,"free_colormap","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"}],"output":{"name":"voidcookie"}}],[5,"free_colormap_checked","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"}],"output":{"name":"voidcookie"}}],[5,"copy_colormap_and_free","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"},{"name":"colormap"}],"output":{"name":"voidcookie"}}],[5,"copy_colormap_and_free_checked","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"},{"name":"colormap"}],"output":{"name":"voidcookie"}}],[5,"install_colormap","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"}],"output":{"name":"voidcookie"}}],[5,"install_colormap_checked","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"}],"output":{"name":"voidcookie"}}],[5,"uninstall_colormap","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"}],"output":{"name":"voidcookie"}}],[5,"uninstall_colormap_checked","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"}],"output":{"name":"voidcookie"}}],[5,"list_installed_colormaps","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"listinstalledcolormapscookie"}}],[5,"list_installed_colormaps_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"listinstalledcolormapscookie"}}],[5,"alloc_color","","Allocate a color",null,{"inputs":[{"name":"connection"},{"name":"colormap"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"alloccolorcookie"}}],[5,"alloc_color_unchecked","","Allocate a color",null,{"inputs":[{"name":"connection"},{"name":"colormap"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"alloccolorcookie"}}],[5,"alloc_named_color","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"},{"name":"str"}],"output":{"name":"allocnamedcolorcookie"}}],[5,"alloc_named_color_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"},{"name":"str"}],"output":{"name":"allocnamedcolorcookie"}}],[5,"alloc_color_cells","","",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"colormap"},{"name":"u16"},{"name":"u16"}],"output":{"name":"alloccolorcellscookie"}}],[5,"alloc_color_cells_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"colormap"},{"name":"u16"},{"name":"u16"}],"output":{"name":"alloccolorcellscookie"}}],[5,"alloc_color_planes","","",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"colormap"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"alloccolorplanescookie"}}],[5,"alloc_color_planes_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"colormap"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"alloccolorplanescookie"}}],[5,"free_colors","","",null,null],[5,"free_colors_checked","","",null,null],[5,"store_colors","","",null,null],[5,"store_colors_checked","","",null,null],[5,"store_named_color","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"colormap"},{"name":"u32"},{"name":"str"}],"output":{"name":"voidcookie"}}],[5,"store_named_color_checked","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"colormap"},{"name":"u32"},{"name":"str"}],"output":{"name":"voidcookie"}}],[5,"query_colors","","",null,null],[5,"query_colors_unchecked","","",null,null],[5,"lookup_color","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"},{"name":"str"}],"output":{"name":"lookupcolorcookie"}}],[5,"lookup_color_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"},{"name":"str"}],"output":{"name":"lookupcolorcookie"}}],[5,"create_cursor","","",null,{"inputs":[{"name":"connection"},{"name":"cursor"},{"name":"pixmap"},{"name":"pixmap"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"create_cursor_checked","","",null,{"inputs":[{"name":"connection"},{"name":"cursor"},{"name":"pixmap"},{"name":"pixmap"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"create_glyph_cursor","","create cursor",null,{"inputs":[{"name":"connection"},{"name":"cursor"},{"name":"font"},{"name":"font"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"create_glyph_cursor_checked","","create cursor",null,{"inputs":[{"name":"connection"},{"name":"cursor"},{"name":"font"},{"name":"font"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"free_cursor","","Deletes a cursor",null,{"inputs":[{"name":"connection"},{"name":"cursor"}],"output":{"name":"voidcookie"}}],[5,"free_cursor_checked","","Deletes a cursor",null,{"inputs":[{"name":"connection"},{"name":"cursor"}],"output":{"name":"voidcookie"}}],[5,"recolor_cursor","","",null,{"inputs":[{"name":"connection"},{"name":"cursor"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"recolor_cursor_checked","","",null,{"inputs":[{"name":"connection"},{"name":"cursor"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"query_best_size","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"drawable"},{"name":"u16"},{"name":"u16"}],"output":{"name":"querybestsizecookie"}}],[5,"query_best_size_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"drawable"},{"name":"u16"},{"name":"u16"}],"output":{"name":"querybestsizecookie"}}],[5,"query_extension","","check if extension is present",null,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"queryextensioncookie"}}],[5,"query_extension_unchecked","","check if extension is present",null,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"queryextensioncookie"}}],[5,"list_extensions","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"listextensionscookie"}}],[5,"list_extensions_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"listextensionscookie"}}],[5,"change_keyboard_mapping","","",null,null],[5,"change_keyboard_mapping_checked","","",null,null],[5,"get_keyboard_mapping","","",null,{"inputs":[{"name":"connection"},{"name":"keycode"},{"name":"u8"}],"output":{"name":"getkeyboardmappingcookie"}}],[5,"get_keyboard_mapping_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"keycode"},{"name":"u8"}],"output":{"name":"getkeyboardmappingcookie"}}],[5,"change_keyboard_control","","",null,null],[5,"change_keyboard_control_checked","","",null,null],[5,"get_keyboard_control","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getkeyboardcontrolcookie"}}],[5,"get_keyboard_control_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getkeyboardcontrolcookie"}}],[5,"bell","","",null,{"inputs":[{"name":"connection"},{"name":"i8"}],"output":{"name":"voidcookie"}}],[5,"bell_checked","","",null,{"inputs":[{"name":"connection"},{"name":"i8"}],"output":{"name":"voidcookie"}}],[5,"change_pointer_control","","",null,{"inputs":[{"name":"connection"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"bool"},{"name":"bool"}],"output":{"name":"voidcookie"}}],[5,"change_pointer_control_checked","","",null,{"inputs":[{"name":"connection"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"bool"},{"name":"bool"}],"output":{"name":"voidcookie"}}],[5,"get_pointer_control","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getpointercontrolcookie"}}],[5,"get_pointer_control_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getpointercontrolcookie"}}],[5,"set_screen_saver","","",null,{"inputs":[{"name":"connection"},{"name":"i16"},{"name":"i16"},{"name":"u8"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"set_screen_saver_checked","","",null,{"inputs":[{"name":"connection"},{"name":"i16"},{"name":"i16"},{"name":"u8"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"get_screen_saver","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getscreensavercookie"}}],[5,"get_screen_saver_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getscreensavercookie"}}],[5,"change_hosts","","",null,null],[5,"change_hosts_checked","","",null,null],[5,"list_hosts","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"listhostscookie"}}],[5,"list_hosts_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"listhostscookie"}}],[5,"set_access_control","","",null,{"inputs":[{"name":"connection"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"set_access_control_checked","","",null,{"inputs":[{"name":"connection"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"set_close_down_mode","","",null,{"inputs":[{"name":"connection"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"set_close_down_mode_checked","","",null,{"inputs":[{"name":"connection"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"kill_client","","kills a client",null,{"inputs":[{"name":"connection"},{"name":"u32"}],"output":{"name":"voidcookie"}}],[5,"kill_client_checked","","kills a client",null,{"inputs":[{"name":"connection"},{"name":"u32"}],"output":{"name":"voidcookie"}}],[5,"rotate_properties","","",null,null],[5,"rotate_properties_checked","","",null,null],[5,"force_screen_saver","","",null,{"inputs":[{"name":"connection"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"force_screen_saver_checked","","",null,{"inputs":[{"name":"connection"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"set_pointer_mapping","","",null,null],[5,"set_pointer_mapping_unchecked","","",null,null],[5,"get_pointer_mapping","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getpointermappingcookie"}}],[5,"get_pointer_mapping_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getpointermappingcookie"}}],[5,"set_modifier_mapping","","",null,null],[5,"set_modifier_mapping_unchecked","","",null,null],[5,"get_modifier_mapping","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getmodifiermappingcookie"}}],[5,"get_modifier_mapping_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getmodifiermappingcookie"}}],[5,"no_operation","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"voidcookie"}}],[5,"no_operation_checked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"voidcookie"}}],[6,"Window","","",null,null],[6,"Pixmap","","",null,null],[6,"Cursor","","",null,null],[6,"Font","","",null,null],[6,"Gcontext","","",null,null],[6,"Colormap","","",null,null],[6,"Atom","","",null,null],[6,"Drawable","","",null,null],[6,"Fontable","","",null,null],[6,"Visualid","","",null,null],[6,"Timestamp","","",null,null],[6,"Keysym","","",null,null],[6,"Keycode","","",null,null],[6,"Button","","",null,null],[6,"VisualClass","","",null,null],[6,"EventMask","","",null,null],[6,"BackingStore","","",null,null],[6,"ImageOrder","","",null,null],[6,"ModMask","","",null,null],[6,"KeyButMask","","",null,null],[6,"WindowEnum","","",null,null],[6,"ButtonMask","","",null,null],[6,"Motion","","",null,null],[6,"NotifyDetail","","",null,null],[6,"NotifyMode","","",null,null],[6,"Visibility","","",null,null],[6,"Place","","",null,null],[6,"Property","","",null,null],[6,"Time","","",null,null],[6,"AtomEnum","","",null,null],[6,"ColormapState","","",null,null],[6,"ColormapEnum","","",null,null],[6,"Mapping","","",null,null],[6,"WindowClass","","",null,null],[6,"Cw","","",null,null],[6,"BackPixmap","","",null,null],[6,"Gravity","","",null,null],[6,"MapState","","",null,null],[6,"SetMode","","",null,null],[6,"ConfigWindow","","",null,null],[6,"StackMode","","",null,null],[6,"Circulate","","",null,null],[6,"PropMode","","",null,null],[6,"GetPropertyType","","",null,null],[6,"SendEventDest","","",null,null],[6,"GrabMode","","",null,null],[6,"GrabStatus","","",null,null],[6,"CursorEnum","","",null,null],[6,"ButtonIndex","","",null,null],[6,"Grab","","",null,null],[6,"Allow","","",null,null],[6,"InputFocus","","",null,null],[6,"FontDraw","","",null,null],[6,"Gc","","",null,null],[6,"Gx","","",null,null],[6,"LineStyle","","",null,null],[6,"CapStyle","","",null,null],[6,"JoinStyle","","",null,null],[6,"FillStyle","","",null,null],[6,"FillRule","","",null,null],[6,"SubwindowMode","","",null,null],[6,"ArcMode","","",null,null],[6,"ClipOrdering","","",null,null],[6,"CoordMode","","",null,null],[6,"PolyShape","","",null,null],[6,"ImageFormat","","",null,null],[6,"ColormapAlloc","","",null,null],[6,"ColorFlag","","",null,null],[6,"PixmapEnum","","",null,null],[6,"FontEnum","","",null,null],[6,"QueryShapeOf","","",null,null],[6,"Kb","","",null,null],[6,"LedMode","","",null,null],[6,"AutoRepeatMode","","",null,null],[6,"Blanking","","",null,null],[6,"Exposures","","",null,null],[6,"HostMode","","",null,null],[6,"Family","","",null,null],[6,"AccessControl","","",null,null],[6,"CloseDown","","",null,null],[6,"Kill","","",null,null],[6,"ScreenSaver","","",null,null],[6,"MappingStatus","","",null,null],[6,"MapIndex","","",null,null],[6,"Char2bIterator","","",null,null],[6,"PointIterator","","",null,null],[6,"RectangleIterator","","",null,null],[6,"ArcIterator","","",null,null],[6,"FormatIterator","","",null,null],[6,"VisualtypeIterator","","",null,null],[6,"Depth","","",null,null],[6,"DepthIterator","","",null,null],[6,"Screen","","",null,null],[6,"ScreenIterator","","",null,null],[6,"SetupRequest","","",null,null],[6,"SetupRequestIterator","","",null,null],[6,"SetupFailed","","",null,null],[6,"SetupFailedIterator","","",null,null],[6,"SetupAuthenticate","","",null,null],[6,"SetupAuthenticateIterator","","",null,null],[6,"Setup","","",null,null],[6,"SetupIterator","","",null,null],[6,"KeyPressEvent","","a key was pressed/released",null,null],[6,"KeyReleaseEvent","","a key was pressed/released",null,null],[6,"ButtonPressEvent","","a mouse button was pressed/released",null,null],[6,"ButtonReleaseEvent","","a mouse button was pressed/released",null,null],[6,"MotionNotifyEvent","","a key was pressed",null,null],[6,"EnterNotifyEvent","","the pointer is in a different window",null,null],[6,"LeaveNotifyEvent","","the pointer is in a different window",null,null],[6,"FocusInEvent","","NOT YET DOCUMENTED",null,null],[6,"FocusOutEvent","","NOT YET DOCUMENTED",null,null],[6,"KeymapNotifyEvent","","",null,null],[6,"ExposeEvent","","NOT YET DOCUMENTED",null,null],[6,"GraphicsExposureEvent","","",null,null],[6,"NoExposureEvent","","",null,null],[6,"VisibilityNotifyEvent","","",null,null],[6,"CreateNotifyEvent","","",null,null],[6,"DestroyNotifyEvent","","a window is destroyed",null,null],[6,"UnmapNotifyEvent","","a window is unmapped",null,null],[6,"MapNotifyEvent","","a window was mapped",null,null],[6,"MapRequestEvent","","window wants to be mapped",null,null],[6,"ReparentNotifyEvent","","",null,null],[6,"ConfigureNotifyEvent","","NOT YET DOCUMENTED",null,null],[6,"ConfigureRequestEvent","","",null,null],[6,"GravityNotifyEvent","","",null,null],[6,"ResizeRequestEvent","","",null,null],[6,"CirculateNotifyEvent","","NOT YET DOCUMENTED",null,null],[6,"CirculateRequestEvent","","NOT YET DOCUMENTED",null,null],[6,"PropertyNotifyEvent","","a window property changed",null,null],[6,"SelectionClearEvent","","",null,null],[6,"SelectionRequestEvent","","",null,null],[6,"SelectionNotifyEvent","","",null,null],[6,"ColormapNotifyEvent","","the colormap for some window changed",null,null],[6,"ClientMessageData","","",null,null],[6,"ClientMessageDataIterator","","",null,null],[6,"ClientMessageEvent","","NOT YET DOCUMENTED",null,null],[6,"MappingNotifyEvent","","keyboard mapping changed",null,null],[6,"GeGenericEvent","","generic event (with length)",null,null],[6,"GetWindowAttributesCookie","","",null,null],[6,"GetWindowAttributesReply","","",null,null],[6,"GetGeometryCookie","","",null,null],[6,"GetGeometryReply","","",null,null],[6,"QueryTreeCookie","","",null,null],[6,"QueryTreeReply","","",null,null],[6,"InternAtomCookie","","",null,null],[6,"InternAtomReply","","",null,null],[6,"GetAtomNameCookie","","",null,null],[6,"GetAtomNameReply","","",null,null],[6,"GetPropertyCookie","","",null,null],[6,"GetPropertyReply","","",null,null],[6,"ListPropertiesCookie","","",null,null],[6,"ListPropertiesReply","","",null,null],[6,"GetSelectionOwnerCookie","","",null,null],[6,"GetSelectionOwnerReply","","",null,null],[6,"GrabPointerCookie","","",null,null],[6,"GrabPointerReply","","",null,null],[6,"GrabKeyboardCookie","","",null,null],[6,"GrabKeyboardReply","","",null,null],[6,"QueryPointerCookie","","",null,null],[6,"QueryPointerReply","","",null,null],[6,"TimecoordIterator","","",null,null],[6,"GetMotionEventsCookie","","",null,null],[6,"GetMotionEventsReply","","",null,null],[6,"TranslateCoordinatesCookie","","",null,null],[6,"TranslateCoordinatesReply","","",null,null],[6,"GetInputFocusCookie","","",null,null],[6,"GetInputFocusReply","","",null,null],[6,"QueryKeymapCookie","","",null,null],[6,"QueryKeymapReply","","",null,null],[6,"FontpropIterator","","",null,null],[6,"CharinfoIterator","","",null,null],[6,"QueryFontCookie","","",null,null],[6,"QueryFontReply","","",null,null],[6,"QueryTextExtentsCookie","","",null,null],[6,"QueryTextExtentsReply","","",null,null],[6,"Str","","",null,null],[6,"StrIterator","","",null,null],[6,"ListFontsCookie","","",null,null],[6,"ListFontsReply","","",null,null],[6,"ListFontsWithInfoCookie","","",null,null],[6,"ListFontsWithInfoReply","","",null,null],[6,"GetFontPathCookie","","",null,null],[6,"GetFontPathReply","","",null,null],[6,"SegmentIterator","","",null,null],[6,"GetImageCookie","","",null,null],[6,"GetImageReply","","",null,null],[6,"ListInstalledColormapsCookie","","",null,null],[6,"ListInstalledColormapsReply","","",null,null],[6,"AllocColorCookie","","",null,null],[6,"AllocColorReply","","",null,null],[6,"AllocNamedColorCookie","","",null,null],[6,"AllocNamedColorReply","","",null,null],[6,"AllocColorCellsCookie","","",null,null],[6,"AllocColorCellsReply","","",null,null],[6,"AllocColorPlanesCookie","","",null,null],[6,"AllocColorPlanesReply","","",null,null],[6,"ColoritemIterator","","",null,null],[6,"RgbIterator","","",null,null],[6,"QueryColorsCookie","","",null,null],[6,"QueryColorsReply","","",null,null],[6,"LookupColorCookie","","",null,null],[6,"LookupColorReply","","",null,null],[6,"QueryBestSizeCookie","","",null,null],[6,"QueryBestSizeReply","","",null,null],[6,"QueryExtensionCookie","","",null,null],[6,"QueryExtensionReply","","",null,null],[6,"ListExtensionsCookie","","",null,null],[6,"ListExtensionsReply","","",null,null],[6,"GetKeyboardMappingCookie","","",null,null],[6,"GetKeyboardMappingReply","","",null,null],[6,"GetKeyboardControlCookie","","",null,null],[6,"GetKeyboardControlReply","","",null,null],[6,"GetPointerControlCookie","","",null,null],[6,"GetPointerControlReply","","",null,null],[6,"GetScreenSaverCookie","","",null,null],[6,"GetScreenSaverReply","","",null,null],[6,"Host","","",null,null],[6,"HostIterator","","",null,null],[6,"ListHostsCookie","","",null,null],[6,"ListHostsReply","","",null,null],[6,"SetPointerMappingCookie","","",null,null],[6,"SetPointerMappingReply","","",null,null],[6,"GetPointerMappingCookie","","",null,null],[6,"GetPointerMappingReply","","",null,null],[6,"SetModifierMappingCookie","","",null,null],[6,"SetModifierMappingReply","","",null,null],[6,"GetModifierMappingCookie","","",null,null],[6,"GetModifierMappingReply","","",null,null],[17,"VISUAL_CLASS_STATIC_GRAY","","",null,null],[17,"VISUAL_CLASS_GRAY_SCALE","","",null,null],[17,"VISUAL_CLASS_STATIC_COLOR","","",null,null],[17,"VISUAL_CLASS_PSEUDO_COLOR","","",null,null],[17,"VISUAL_CLASS_TRUE_COLOR","","",null,null],[17,"VISUAL_CLASS_DIRECT_COLOR","","",null,null],[17,"EVENT_MASK_NO_EVENT","","",null,null],[17,"EVENT_MASK_KEY_PRESS","","",null,null],[17,"EVENT_MASK_KEY_RELEASE","","",null,null],[17,"EVENT_MASK_BUTTON_PRESS","","",null,null],[17,"EVENT_MASK_BUTTON_RELEASE","","",null,null],[17,"EVENT_MASK_ENTER_WINDOW","","",null,null],[17,"EVENT_MASK_LEAVE_WINDOW","","",null,null],[17,"EVENT_MASK_POINTER_MOTION","","",null,null],[17,"EVENT_MASK_POINTER_MOTION_HINT","","",null,null],[17,"EVENT_MASK_BUTTON_1_MOTION","","",null,null],[17,"EVENT_MASK_BUTTON_2_MOTION","","",null,null],[17,"EVENT_MASK_BUTTON_3_MOTION","","",null,null],[17,"EVENT_MASK_BUTTON_4_MOTION","","",null,null],[17,"EVENT_MASK_BUTTON_5_MOTION","","",null,null],[17,"EVENT_MASK_BUTTON_MOTION","","",null,null],[17,"EVENT_MASK_KEYMAP_STATE","","",null,null],[17,"EVENT_MASK_EXPOSURE","","",null,null],[17,"EVENT_MASK_VISIBILITY_CHANGE","","",null,null],[17,"EVENT_MASK_STRUCTURE_NOTIFY","","",null,null],[17,"EVENT_MASK_RESIZE_REDIRECT","","",null,null],[17,"EVENT_MASK_SUBSTRUCTURE_NOTIFY","","",null,null],[17,"EVENT_MASK_SUBSTRUCTURE_REDIRECT","","",null,null],[17,"EVENT_MASK_FOCUS_CHANGE","","",null,null],[17,"EVENT_MASK_PROPERTY_CHANGE","","",null,null],[17,"EVENT_MASK_COLOR_MAP_CHANGE","","",null,null],[17,"EVENT_MASK_OWNER_GRAB_BUTTON","","",null,null],[17,"BACKING_STORE_NOT_USEFUL","","",null,null],[17,"BACKING_STORE_WHEN_MAPPED","","",null,null],[17,"BACKING_STORE_ALWAYS","","",null,null],[17,"IMAGE_ORDER_LSB_FIRST","","",null,null],[17,"IMAGE_ORDER_MSB_FIRST","","",null,null],[17,"MOD_MASK_SHIFT","","",null,null],[17,"MOD_MASK_LOCK","","",null,null],[17,"MOD_MASK_CONTROL","","",null,null],[17,"MOD_MASK_1","","",null,null],[17,"MOD_MASK_2","","",null,null],[17,"MOD_MASK_3","","",null,null],[17,"MOD_MASK_4","","",null,null],[17,"MOD_MASK_5","","",null,null],[17,"MOD_MASK_ANY","","",null,null],[17,"KEY_BUT_MASK_SHIFT","","",null,null],[17,"KEY_BUT_MASK_LOCK","","",null,null],[17,"KEY_BUT_MASK_CONTROL","","",null,null],[17,"KEY_BUT_MASK_MOD_1","","",null,null],[17,"KEY_BUT_MASK_MOD_2","","",null,null],[17,"KEY_BUT_MASK_MOD_3","","",null,null],[17,"KEY_BUT_MASK_MOD_4","","",null,null],[17,"KEY_BUT_MASK_MOD_5","","",null,null],[17,"KEY_BUT_MASK_BUTTON_1","","",null,null],[17,"KEY_BUT_MASK_BUTTON_2","","",null,null],[17,"KEY_BUT_MASK_BUTTON_3","","",null,null],[17,"KEY_BUT_MASK_BUTTON_4","","",null,null],[17,"KEY_BUT_MASK_BUTTON_5","","",null,null],[17,"WINDOW_NONE","","",null,null],[17,"BUTTON_MASK_1","","",null,null],[17,"BUTTON_MASK_2","","",null,null],[17,"BUTTON_MASK_3","","",null,null],[17,"BUTTON_MASK_4","","",null,null],[17,"BUTTON_MASK_5","","",null,null],[17,"BUTTON_MASK_ANY","","",null,null],[17,"MOTION_NORMAL","","",null,null],[17,"MOTION_HINT","","",null,null],[17,"NOTIFY_DETAIL_ANCESTOR","","",null,null],[17,"NOTIFY_DETAIL_VIRTUAL","","",null,null],[17,"NOTIFY_DETAIL_INFERIOR","","",null,null],[17,"NOTIFY_DETAIL_NONLINEAR","","",null,null],[17,"NOTIFY_DETAIL_NONLINEAR_VIRTUAL","","",null,null],[17,"NOTIFY_DETAIL_POINTER","","",null,null],[17,"NOTIFY_DETAIL_POINTER_ROOT","","",null,null],[17,"NOTIFY_DETAIL_NONE","","",null,null],[17,"NOTIFY_MODE_NORMAL","","",null,null],[17,"NOTIFY_MODE_GRAB","","",null,null],[17,"NOTIFY_MODE_UNGRAB","","",null,null],[17,"NOTIFY_MODE_WHILE_GRABBED","","",null,null],[17,"VISIBILITY_UNOBSCURED","","",null,null],[17,"VISIBILITY_PARTIALLY_OBSCURED","","",null,null],[17,"VISIBILITY_FULLY_OBSCURED","","",null,null],[17,"PLACE_ON_TOP","","The window is now on top of all siblings.",null,null],[17,"PLACE_ON_BOTTOM","","The window is now below all siblings.",null,null],[17,"PROPERTY_NEW_VALUE","","",null,null],[17,"PROPERTY_DELETE","","",null,null],[17,"TIME_CURRENT_TIME","","",null,null],[17,"ATOM_NONE","","",null,null],[17,"ATOM_ANY","","",null,null],[17,"ATOM_PRIMARY","","",null,null],[17,"ATOM_SECONDARY","","",null,null],[17,"ATOM_ARC","","",null,null],[17,"ATOM_ATOM","","",null,null],[17,"ATOM_BITMAP","","",null,null],[17,"ATOM_CARDINAL","","",null,null],[17,"ATOM_COLORMAP","","",null,null],[17,"ATOM_CURSOR","","",null,null],[17,"ATOM_CUT_BUFFER0","","",null,null],[17,"ATOM_CUT_BUFFER1","","",null,null],[17,"ATOM_CUT_BUFFER2","","",null,null],[17,"ATOM_CUT_BUFFER3","","",null,null],[17,"ATOM_CUT_BUFFER4","","",null,null],[17,"ATOM_CUT_BUFFER5","","",null,null],[17,"ATOM_CUT_BUFFER6","","",null,null],[17,"ATOM_CUT_BUFFER7","","",null,null],[17,"ATOM_DRAWABLE","","",null,null],[17,"ATOM_FONT","","",null,null],[17,"ATOM_INTEGER","","",null,null],[17,"ATOM_PIXMAP","","",null,null],[17,"ATOM_POINT","","",null,null],[17,"ATOM_RECTANGLE","","",null,null],[17,"ATOM_RESOURCE_MANAGER","","",null,null],[17,"ATOM_RGB_COLOR_MAP","","",null,null],[17,"ATOM_RGB_BEST_MAP","","",null,null],[17,"ATOM_RGB_BLUE_MAP","","",null,null],[17,"ATOM_RGB_DEFAULT_MAP","","",null,null],[17,"ATOM_RGB_GRAY_MAP","","",null,null],[17,"ATOM_RGB_GREEN_MAP","","",null,null],[17,"ATOM_RGB_RED_MAP","","",null,null],[17,"ATOM_STRING","","",null,null],[17,"ATOM_VISUALID","","",null,null],[17,"ATOM_WINDOW","","",null,null],[17,"ATOM_WM_COMMAND","","",null,null],[17,"ATOM_WM_HINTS","","",null,null],[17,"ATOM_WM_CLIENT_MACHINE","","",null,null],[17,"ATOM_WM_ICON_NAME","","",null,null],[17,"ATOM_WM_ICON_SIZE","","",null,null],[17,"ATOM_WM_NAME","","",null,null],[17,"ATOM_WM_NORMAL_HINTS","","",null,null],[17,"ATOM_WM_SIZE_HINTS","","",null,null],[17,"ATOM_WM_ZOOM_HINTS","","",null,null],[17,"ATOM_MIN_SPACE","","",null,null],[17,"ATOM_NORM_SPACE","","",null,null],[17,"ATOM_MAX_SPACE","","",null,null],[17,"ATOM_END_SPACE","","",null,null],[17,"ATOM_SUPERSCRIPT_X","","",null,null],[17,"ATOM_SUPERSCRIPT_Y","","",null,null],[17,"ATOM_SUBSCRIPT_X","","",null,null],[17,"ATOM_SUBSCRIPT_Y","","",null,null],[17,"ATOM_UNDERLINE_POSITION","","",null,null],[17,"ATOM_UNDERLINE_THICKNESS","","",null,null],[17,"ATOM_STRIKEOUT_ASCENT","","",null,null],[17,"ATOM_STRIKEOUT_DESCENT","","",null,null],[17,"ATOM_ITALIC_ANGLE","","",null,null],[17,"ATOM_X_HEIGHT","","",null,null],[17,"ATOM_QUAD_WIDTH","","",null,null],[17,"ATOM_WEIGHT","","",null,null],[17,"ATOM_POINT_SIZE","","",null,null],[17,"ATOM_RESOLUTION","","",null,null],[17,"ATOM_COPYRIGHT","","",null,null],[17,"ATOM_NOTICE","","",null,null],[17,"ATOM_FONT_NAME","","",null,null],[17,"ATOM_FAMILY_NAME","","",null,null],[17,"ATOM_FULL_NAME","","",null,null],[17,"ATOM_CAP_HEIGHT","","",null,null],[17,"ATOM_WM_CLASS","","",null,null],[17,"ATOM_WM_TRANSIENT_FOR","","",null,null],[17,"COLORMAP_STATE_UNINSTALLED","","The colormap was uninstalled.",null,null],[17,"COLORMAP_STATE_INSTALLED","","The colormap was installed.",null,null],[17,"COLORMAP_NONE","","",null,null],[17,"MAPPING_MODIFIER","","",null,null],[17,"MAPPING_KEYBOARD","","",null,null],[17,"MAPPING_POINTER","","",null,null],[17,"WINDOW_CLASS_COPY_FROM_PARENT","","",null,null],[17,"WINDOW_CLASS_INPUT_OUTPUT","","",null,null],[17,"WINDOW_CLASS_INPUT_ONLY","","",null,null],[17,"CW_BACK_PIXMAP","","Overrides the default background-pixmap. The background pixmap and window must have the same root and same depth. Any size pixmap can be used, although some sizes may be faster than others.",null,null],[17,"CW_BACK_PIXEL","","Overrides `BackPixmap`. A pixmap of undefined size filled with the specified background pixel is used for the background. Range-checking is not performed, the background pixel is truncated to the appropriate number of bits.",null,null],[17,"CW_BORDER_PIXMAP","","Overrides the default border-pixmap. The border pixmap and window must have the same root and the same depth. Any size pixmap can be used, although some sizes may be faster than others.",null,null],[17,"CW_BORDER_PIXEL","","Overrides `BorderPixmap`. A pixmap of undefined size filled with the specified border pixel is used for the border. Range checking is not performed on the border-pixel value, it is truncated to the appropriate number of bits.",null,null],[17,"CW_BIT_GRAVITY","","Defines which region of the window should be retained if the window is resized.",null,null],[17,"CW_WIN_GRAVITY","","Defines how the window should be repositioned if the parent is resized (see `ConfigureWindow`).",null,null],[17,"CW_BACKING_STORE","","A backing-store of `WhenMapped` advises the server that maintaining contents of obscured regions when the window is mapped would be beneficial. A backing-store of `Always` advises the server that maintaining contents even when the window is unmapped would be beneficial. In this case, the server may generate an exposure event when the window is created. A value of `NotUseful` advises the server that maintaining contents is unnecessary, although a server may still choose to maintain contents while the window is mapped. Note that if the server maintains contents, then the server should maintain complete contents not just the region within the parent boundaries, even if the window is larger than its parent. While the server maintains contents, exposure events will not normally be generated, but the server may stop maintaining contents at any time.",null,null],[17,"CW_BACKING_PLANES","","The backing-planes indicates (with bits set to 1) which bit planes of the window hold dynamic data that must be preserved in backing-stores and during save-unders.",null,null],[17,"CW_BACKING_PIXEL","","The backing-pixel specifies what value to use in planes not covered by backing-planes. The server is free to save only the specified bit planes in the backing-store or save-under and regenerate the remaining planes with the specified pixel value. Any bits beyond the specified depth of the window in these values are simply ignored.",null,null],[17,"CW_OVERRIDE_REDIRECT","","The override-redirect specifies whether map and configure requests on this window should override a SubstructureRedirect on the parent, typically to inform a window manager not to tamper with the window.",null,null],[17,"CW_SAVE_UNDER","","If 1, the server is advised that when this window is mapped, saving the contents of windows it obscures would be beneficial.",null,null],[17,"CW_EVENT_MASK","","The event-mask defines which events the client is interested in for this window (or for some event types, inferiors of the window).",null,null],[17,"CW_DONT_PROPAGATE","","The do-not-propagate-mask defines which events should not be propagated to ancestor windows when no client has the event type selected in this window.",null,null],[17,"CW_COLORMAP","","The colormap specifies the colormap that best reflects the true colors of the window. Servers capable of supporting multiple hardware colormaps may use this information, and window man- agers may use it for InstallColormap requests. The colormap must have the same visual type and root as the window (or a Match error results). If CopyFromParent is specified, the parent's colormap is copied (subsequent changes to the parent's colormap attribute do not affect the child). However, the window must have the same visual type as the parent (or a Match error results), and the parent must not have a colormap of None (or a Match error results). For an explanation of None, see FreeColormap request. The colormap is copied by sharing the colormap object between the child and the parent, not by making a complete copy of the colormap contents.",null,null],[17,"CW_CURSOR","","If a cursor is specified, it will be used whenever the pointer is in the window. If None is speci- fied, the parent's cursor will be used when the pointer is in the window, and any change in the parent's cursor will cause an immediate change in the displayed cursor.",null,null],[17,"BACK_PIXMAP_NONE","","",null,null],[17,"BACK_PIXMAP_PARENT_RELATIVE","","",null,null],[17,"GRAVITY_BIT_FORGET","","",null,null],[17,"GRAVITY_WIN_UNMAP","","",null,null],[17,"GRAVITY_NORTH_WEST","","",null,null],[17,"GRAVITY_NORTH","","",null,null],[17,"GRAVITY_NORTH_EAST","","",null,null],[17,"GRAVITY_WEST","","",null,null],[17,"GRAVITY_CENTER","","",null,null],[17,"GRAVITY_EAST","","",null,null],[17,"GRAVITY_SOUTH_WEST","","",null,null],[17,"GRAVITY_SOUTH","","",null,null],[17,"GRAVITY_SOUTH_EAST","","",null,null],[17,"GRAVITY_STATIC","","",null,null],[17,"MAP_STATE_UNMAPPED","","",null,null],[17,"MAP_STATE_UNVIEWABLE","","",null,null],[17,"MAP_STATE_VIEWABLE","","",null,null],[17,"SET_MODE_INSERT","","",null,null],[17,"SET_MODE_DELETE","","",null,null],[17,"CONFIG_WINDOW_X","","",null,null],[17,"CONFIG_WINDOW_Y","","",null,null],[17,"CONFIG_WINDOW_WIDTH","","",null,null],[17,"CONFIG_WINDOW_HEIGHT","","",null,null],[17,"CONFIG_WINDOW_BORDER_WIDTH","","",null,null],[17,"CONFIG_WINDOW_SIBLING","","",null,null],[17,"CONFIG_WINDOW_STACK_MODE","","",null,null],[17,"STACK_MODE_ABOVE","","",null,null],[17,"STACK_MODE_BELOW","","",null,null],[17,"STACK_MODE_TOP_IF","","",null,null],[17,"STACK_MODE_BOTTOM_IF","","",null,null],[17,"STACK_MODE_OPPOSITE","","",null,null],[17,"CIRCULATE_RAISE_LOWEST","","",null,null],[17,"CIRCULATE_LOWER_HIGHEST","","",null,null],[17,"PROP_MODE_REPLACE","","Discard the previous property value and store the new data.",null,null],[17,"PROP_MODE_PREPEND","","Insert the new data before the beginning of existing data. The `format` must match existing property value. If the property is undefined, it is treated as defined with the correct type and format with zero-length data.",null,null],[17,"PROP_MODE_APPEND","","Insert the new data after the beginning of existing data. The `format` must match existing property value. If the property is undefined, it is treated as defined with the correct type and format with zero-length data.",null,null],[17,"GET_PROPERTY_TYPE_ANY","","",null,null],[17,"SEND_EVENT_DEST_POINTER_WINDOW","","",null,null],[17,"SEND_EVENT_DEST_ITEM_FOCUS","","",null,null],[17,"GRAB_MODE_SYNC","","The state of the keyboard appears to freeze: No further keyboard events are generated by the server until the grabbing client issues a releasing `AllowEvents` request or until the keyboard grab is released.",null,null],[17,"GRAB_MODE_ASYNC","","Keyboard event processing continues normally.",null,null],[17,"GRAB_STATUS_SUCCESS","","",null,null],[17,"GRAB_STATUS_ALREADY_GRABBED","","",null,null],[17,"GRAB_STATUS_INVALID_TIME","","",null,null],[17,"GRAB_STATUS_NOT_VIEWABLE","","",null,null],[17,"GRAB_STATUS_FROZEN","","",null,null],[17,"CURSOR_NONE","","",null,null],[17,"BUTTON_INDEX_ANY","","Any of the following (or none):",null,null],[17,"BUTTON_INDEX_1","","The left mouse button.",null,null],[17,"BUTTON_INDEX_2","","The right mouse button.",null,null],[17,"BUTTON_INDEX_3","","The middle mouse button.",null,null],[17,"BUTTON_INDEX_4","","Scroll wheel. TODO: direction?",null,null],[17,"BUTTON_INDEX_5","","Scroll wheel. TODO: direction?",null,null],[17,"GRAB_ANY","","",null,null],[17,"ALLOW_ASYNC_POINTER","","For AsyncPointer, if the pointer is frozen by the client, pointer event processing continues normally. If the pointer is frozen twice by the client on behalf of two separate grabs, AsyncPointer thaws for both. AsyncPointer has no effect if the pointer is not frozen by the client, but the pointer need not be grabbed by the client.",null,null],[17,"ALLOW_SYNC_POINTER","","For SyncPointer, if the pointer is frozen and actively grabbed by the client, pointer event processing continues normally until the next ButtonPress or ButtonRelease event is reported to the client, at which time the pointer again appears to freeze. However, if the reported event causes the pointer grab to be released, then the pointer does not freeze. SyncPointer has no effect if the pointer is not frozen by the client or if the pointer is not grabbed by the client.",null,null],[17,"ALLOW_REPLAY_POINTER","","For ReplayPointer, if the pointer is actively grabbed by the client and is frozen as the result of an event having been sent to the client (either from the activation of a GrabButton or from a previous AllowEvents with mode SyncPointer but not from a GrabPointer), then the pointer grab is released and that event is completely reprocessed, this time ignoring any passive grabs at or above (towards the root) the grab-window of the grab just released. The request has no effect if the pointer is not grabbed by the client or if the pointer is not frozen as the result of an event.",null,null],[17,"ALLOW_ASYNC_KEYBOARD","","For AsyncKeyboard, if the keyboard is frozen by the client, keyboard event processing continues normally. If the keyboard is frozen twice by the client on behalf of two separate grabs, AsyncKeyboard thaws for both. AsyncKeyboard has no effect if the keyboard is not frozen by the client, but the keyboard need not be grabbed by the client.",null,null],[17,"ALLOW_SYNC_KEYBOARD","","For SyncKeyboard, if the keyboard is frozen and actively grabbed by the client, keyboard event processing continues normally until the next KeyPress or KeyRelease event is reported to the client, at which time the keyboard again appears to freeze. However, if the reported event causes the keyboard grab to be released, then the keyboard does not freeze. SyncKeyboard has no effect if the keyboard is not frozen by the client or if the keyboard is not grabbed by the client.",null,null],[17,"ALLOW_REPLAY_KEYBOARD","","For ReplayKeyboard, if the keyboard is actively grabbed by the client and is frozen as the result of an event having been sent to the client (either from the activation of a GrabKey or from a previous AllowEvents with mode SyncKeyboard but not from a GrabKeyboard), then the keyboard grab is released and that event is completely reprocessed, this time ignoring any passive grabs at or above (towards the root) the grab-window of the grab just released. The request has no effect if the keyboard is not grabbed by the client or if the keyboard is not frozen as the result of an event.",null,null],[17,"ALLOW_ASYNC_BOTH","","For AsyncBoth, if the pointer and the keyboard are frozen by the client, event processing for both devices continues normally. If a device is frozen twice by the client on behalf of two separate grabs, AsyncBoth thaws for both. AsyncBoth has no effect unless both pointer and keyboard are frozen by the client.",null,null],[17,"ALLOW_SYNC_BOTH","","For SyncBoth, if both pointer and keyboard are frozen by the client, event processing (for both devices) continues normally until the next ButtonPress, ButtonRelease, KeyPress, or KeyRelease event is reported to the client for a grabbed device (button event for the pointer, key event for the keyboard), at which time the devices again appear to freeze. However, if the reported event causes the grab to be released, then the devices do not freeze (but if the other device is still grabbed, then a subsequent event for it will still cause both devices to freeze). SyncBoth has no effect unless both pointer and keyboard are frozen by the client. If the pointer or keyboard is frozen twice by the client on behalf of two separate grabs, SyncBoth thaws for both (but a subsequent freeze for SyncBoth will only freeze each device once).",null,null],[17,"INPUT_FOCUS_NONE","","The focus reverts to `XCB_NONE`, so no window will have the input focus.",null,null],[17,"INPUT_FOCUS_POINTER_ROOT","","The focus reverts to `XCB_POINTER_ROOT` respectively. When the focus reverts, FocusIn and FocusOut events are generated, but the last-focus-change time is not changed.",null,null],[17,"INPUT_FOCUS_PARENT","","The focus reverts to the parent (or closest viewable ancestor) and the new revert_to value is `XCB_INPUT_FOCUS_NONE`.",null,null],[17,"INPUT_FOCUS_FOLLOW_KEYBOARD","","NOT YET DOCUMENTED. Only relevant for the xinput extension.",null,null],[17,"FONT_DRAW_LEFT_TO_RIGHT","","",null,null],[17,"FONT_DRAW_RIGHT_TO_LEFT","","",null,null],[17,"GC_FUNCTION","","TODO: Refer to GX",null,null],[17,"GC_PLANE_MASK","","In graphics operations, given a source and destination pixel, the result is computed bitwise on corresponding bits of the pixels; that is, a Boolean operation is performed in each bit plane. The plane-mask restricts the operation to a subset of planes, so the result is:",null,null],[17,"GC_FOREGROUND","","Foreground colorpixel.",null,null],[17,"GC_BACKGROUND","","Background colorpixel.",null,null],[17,"GC_LINE_WIDTH","","The line-width is measured in pixels and can be greater than or equal to one, a wide line, or the special value zero, a thin line.",null,null],[17,"GC_LINE_STYLE","","The line-style defines which sections of a line are drawn: Solid                The full path of the line is drawn. DoubleDash           The full path of the line is drawn, but the even dashes are filled differently                      than the odd dashes (see fill-style), with Butt cap-style used where even and                      odd dashes meet. OnOffDash            Only the even dashes are drawn, and cap-style applies to all internal ends of                      the individual dashes (except NotLast is treated as Butt).",null,null],[17,"GC_CAP_STYLE","","The cap-style defines how the endpoints of a path are drawn: NotLast    The result is equivalent to Butt, except that for a line-width of zero the final            endpoint is not drawn. Butt       The result is square at the endpoint (perpendicular to the slope of the line)            with no projection beyond. Round      The result is a circular arc with its diameter equal to the line-width, centered            on the endpoint; it is equivalent to Butt for line-width zero. Projecting The result is square at the end, but the path continues beyond the endpoint for            a distance equal to half the line-width; it is equivalent to Butt for line-width            zero.",null,null],[17,"GC_JOIN_STYLE","","The join-style defines how corners are drawn for wide lines: Miter               The outer edges of the two lines extend to meet at an angle. However, if the                     angle is less than 11 degrees, a Bevel join-style is used instead. Round               The result is a circular arc with a diameter equal to the line-width, centered                     on the joinpoint. Bevel               The result is Butt endpoint styles, and then the triangular notch is filled.",null,null],[17,"GC_FILL_STYLE","","The fill-style defines the contents of the source for line, text, and fill requests. For all text and fill requests (for example, PolyText8, PolyText16, PolyFillRectangle, FillPoly, and PolyFillArc) as well as for line requests with line-style Solid, (for example, PolyLine, PolySegment, PolyRectangle, PolyArc) and for the even dashes for line requests with line-style OnOffDash or DoubleDash: Solid                     Foreground Tiled                     Tile OpaqueStippled            A tile with the same width and height as stipple but with background                           everywhere stipple has a zero and with foreground everywhere stipple                           has a one Stippled                  Foreground masked by stipple For the odd dashes for line requests with line-style DoubleDash: Solid                     Background Tiled                     Same as for even dashes OpaqueStippled            Same as for even dashes Stippled                  Background masked by stipple",null,null],[17,"GC_FILL_RULE","","",null,null],[17,"GC_TILE","","The tile/stipple represents an infinite two-dimensional plane with the tile/stipple replicated in all dimensions. When that plane is superimposed on the drawable for use in a graphics operation, the upper-left corner of some instance of the tile/stipple is at the coordinates within the drawable specified by the tile/stipple origin. The tile/stipple and clip origins are interpreted relative to the origin of whatever destination drawable is specified in a graphics request. The tile pixmap must have the same root and depth as the gcontext (or a Match error results). The stipple pixmap must have depth one and must have the same root as the gcontext (or a Match error results). For fill-style Stippled (but not fill-style OpaqueStippled), the stipple pattern is tiled in a single plane and acts as an additional clip mask to be ANDed with the clip-mask. Any size pixmap can be used for tiling or stippling, although some sizes may be faster to use than others.",null,null],[17,"GC_STIPPLE","","The tile/stipple represents an infinite two-dimensional plane with the tile/stipple replicated in all dimensions. When that plane is superimposed on the drawable for use in a graphics operation, the upper-left corner of some instance of the tile/stipple is at the coordinates within the drawable specified by the tile/stipple origin. The tile/stipple and clip origins are interpreted relative to the origin of whatever destination drawable is specified in a graphics request. The tile pixmap must have the same root and depth as the gcontext (or a Match error results). The stipple pixmap must have depth one and must have the same root as the gcontext (or a Match error results). For fill-style Stippled (but not fill-style OpaqueStippled), the stipple pattern is tiled in a single plane and acts as an additional clip mask to be ANDed with the clip-mask. Any size pixmap can be used for tiling or stippling, although some sizes may be faster to use than others.",null,null],[17,"GC_TILE_STIPPLE_ORIGIN_X","","TODO",null,null],[17,"GC_TILE_STIPPLE_ORIGIN_Y","","TODO",null,null],[17,"GC_FONT","","Which font to use for the `ImageText8` and `ImageText16` requests.",null,null],[17,"GC_SUBWINDOW_MODE","","For ClipByChildren, both source and destination windows are additionally clipped by all viewable InputOutput children. For IncludeInferiors, neither source nor destination window is clipped by inferiors. This will result in including subwindow contents in the source and drawing through subwindow boundaries of the destination. The use of IncludeInferiors with a source or destination window of one depth with mapped inferiors of differing depth is not illegal, but the semantics is undefined by the core protocol.",null,null],[17,"GC_GRAPHICS_EXPOSURES","","Whether ExposureEvents should be generated (1) or not (0).",null,null],[17,"GC_CLIP_ORIGIN_X","","TODO",null,null],[17,"GC_CLIP_ORIGIN_Y","","TODO",null,null],[17,"GC_CLIP_MASK","","The clip-mask restricts writes to the destination drawable. Only pixels where the clip-mask has bits set to 1 are drawn. Pixels are not drawn outside the area covered by the clip-mask or where the clip-mask has bits set to 0. The clip-mask affects all graphics requests, but it does not clip sources. The clip-mask origin is interpreted relative to the origin of whatever destination drawable is specified in a graphics request. If a pixmap is specified as the clip-mask, it must have depth 1 and have the same root as the gcontext (or a Match error results). If clip-mask is None, then pixels are always drawn, regardless of the clip origin. The clip-mask can also be set with the SetClipRectangles request.",null,null],[17,"GC_DASH_OFFSET","","TODO",null,null],[17,"GC_DASH_LIST","","TODO",null,null],[17,"GC_ARC_MODE","","TODO",null,null],[17,"GX_CLEAR","","",null,null],[17,"GX_AND","","",null,null],[17,"GX_AND_REVERSE","","",null,null],[17,"GX_COPY","","",null,null],[17,"GX_AND_INVERTED","","",null,null],[17,"GX_NOOP","","",null,null],[17,"GX_XOR","","",null,null],[17,"GX_OR","","",null,null],[17,"GX_NOR","","",null,null],[17,"GX_EQUIV","","",null,null],[17,"GX_INVERT","","",null,null],[17,"GX_OR_REVERSE","","",null,null],[17,"GX_COPY_INVERTED","","",null,null],[17,"GX_OR_INVERTED","","",null,null],[17,"GX_NAND","","",null,null],[17,"GX_SET","","",null,null],[17,"LINE_STYLE_SOLID","","",null,null],[17,"LINE_STYLE_ON_OFF_DASH","","",null,null],[17,"LINE_STYLE_DOUBLE_DASH","","",null,null],[17,"CAP_STYLE_NOT_LAST","","",null,null],[17,"CAP_STYLE_BUTT","","",null,null],[17,"CAP_STYLE_ROUND","","",null,null],[17,"CAP_STYLE_PROJECTING","","",null,null],[17,"JOIN_STYLE_MITER","","",null,null],[17,"JOIN_STYLE_ROUND","","",null,null],[17,"JOIN_STYLE_BEVEL","","",null,null],[17,"FILL_STYLE_SOLID","","",null,null],[17,"FILL_STYLE_TILED","","",null,null],[17,"FILL_STYLE_STIPPLED","","",null,null],[17,"FILL_STYLE_OPAQUE_STIPPLED","","",null,null],[17,"FILL_RULE_EVEN_ODD","","",null,null],[17,"FILL_RULE_WINDING","","",null,null],[17,"SUBWINDOW_MODE_CLIP_BY_CHILDREN","","",null,null],[17,"SUBWINDOW_MODE_INCLUDE_INFERIORS","","",null,null],[17,"ARC_MODE_CHORD","","",null,null],[17,"ARC_MODE_PIE_SLICE","","",null,null],[17,"CLIP_ORDERING_UNSORTED","","",null,null],[17,"CLIP_ORDERING_Y_SORTED","","",null,null],[17,"CLIP_ORDERING_YX_SORTED","","",null,null],[17,"CLIP_ORDERING_YX_BANDED","","",null,null],[17,"COORD_MODE_ORIGIN","","Treats all coordinates as relative to the origin.",null,null],[17,"COORD_MODE_PREVIOUS","","Treats all coordinates after the first as relative to the previous coordinate.",null,null],[17,"POLY_SHAPE_COMPLEX","","",null,null],[17,"POLY_SHAPE_NONCONVEX","","",null,null],[17,"POLY_SHAPE_CONVEX","","",null,null],[17,"IMAGE_FORMAT_XY_BITMAP","","",null,null],[17,"IMAGE_FORMAT_XY_PIXMAP","","",null,null],[17,"IMAGE_FORMAT_Z_PIXMAP","","",null,null],[17,"COLORMAP_ALLOC_NONE","","",null,null],[17,"COLORMAP_ALLOC_ALL","","",null,null],[17,"COLOR_FLAG_RED","","",null,null],[17,"COLOR_FLAG_GREEN","","",null,null],[17,"COLOR_FLAG_BLUE","","",null,null],[17,"PIXMAP_NONE","","",null,null],[17,"FONT_NONE","","",null,null],[17,"QUERY_SHAPE_OF_LARGEST_CURSOR","","",null,null],[17,"QUERY_SHAPE_OF_FASTEST_TILE","","",null,null],[17,"QUERY_SHAPE_OF_FASTEST_STIPPLE","","",null,null],[17,"KB_KEY_CLICK_PERCENT","","",null,null],[17,"KB_BELL_PERCENT","","",null,null],[17,"KB_BELL_PITCH","","",null,null],[17,"KB_BELL_DURATION","","",null,null],[17,"KB_LED","","",null,null],[17,"KB_LED_MODE","","",null,null],[17,"KB_KEY","","",null,null],[17,"KB_AUTO_REPEAT_MODE","","",null,null],[17,"LED_MODE_OFF","","",null,null],[17,"LED_MODE_ON","","",null,null],[17,"AUTO_REPEAT_MODE_OFF","","",null,null],[17,"AUTO_REPEAT_MODE_ON","","",null,null],[17,"AUTO_REPEAT_MODE_DEFAULT","","",null,null],[17,"BLANKING_NOT_PREFERRED","","",null,null],[17,"BLANKING_PREFERRED","","",null,null],[17,"BLANKING_DEFAULT","","",null,null],[17,"EXPOSURES_NOT_ALLOWED","","",null,null],[17,"EXPOSURES_ALLOWED","","",null,null],[17,"EXPOSURES_DEFAULT","","",null,null],[17,"HOST_MODE_INSERT","","",null,null],[17,"HOST_MODE_DELETE","","",null,null],[17,"FAMILY_INTERNET","","",null,null],[17,"FAMILY_DE_CNET","","",null,null],[17,"FAMILY_CHAOS","","",null,null],[17,"FAMILY_SERVER_INTERPRETED","","",null,null],[17,"FAMILY_INTERNET_6","","",null,null],[17,"ACCESS_CONTROL_DISABLE","","",null,null],[17,"ACCESS_CONTROL_ENABLE","","",null,null],[17,"CLOSE_DOWN_DESTROY_ALL","","",null,null],[17,"CLOSE_DOWN_RETAIN_PERMANENT","","",null,null],[17,"CLOSE_DOWN_RETAIN_TEMPORARY","","",null,null],[17,"KILL_ALL_TEMPORARY","","",null,null],[17,"SCREEN_SAVER_RESET","","",null,null],[17,"SCREEN_SAVER_ACTIVE","","",null,null],[17,"MAPPING_STATUS_SUCCESS","","",null,null],[17,"MAPPING_STATUS_BUSY","","",null,null],[17,"MAPPING_STATUS_FAILURE","","",null,null],[17,"MAP_INDEX_SHIFT","","",null,null],[17,"MAP_INDEX_LOCK","","",null,null],[17,"MAP_INDEX_CONTROL","","",null,null],[17,"MAP_INDEX_1","","",null,null],[17,"MAP_INDEX_2","","",null,null],[17,"MAP_INDEX_3","","",null,null],[17,"MAP_INDEX_4","","",null,null],[17,"MAP_INDEX_5","","",null,null],[17,"KEY_PRESS","","",null,null],[17,"KEY_RELEASE","","",null,null],[17,"BUTTON_PRESS","","",null,null],[17,"BUTTON_RELEASE","","",null,null],[17,"MOTION_NOTIFY","","",null,null],[17,"ENTER_NOTIFY","","",null,null],[17,"LEAVE_NOTIFY","","",null,null],[17,"FOCUS_IN","","",null,null],[17,"FOCUS_OUT","","",null,null],[17,"KEYMAP_NOTIFY","","",null,null],[17,"EXPOSE","","",null,null],[17,"GRAPHICS_EXPOSURE","","",null,null],[17,"NO_EXPOSURE","","",null,null],[17,"VISIBILITY_NOTIFY","","",null,null],[17,"CREATE_NOTIFY","","",null,null],[17,"DESTROY_NOTIFY","","",null,null],[17,"UNMAP_NOTIFY","","",null,null],[17,"MAP_NOTIFY","","",null,null],[17,"MAP_REQUEST","","",null,null],[17,"REPARENT_NOTIFY","","",null,null],[17,"CONFIGURE_NOTIFY","","",null,null],[17,"CONFIGURE_REQUEST","","",null,null],[17,"GRAVITY_NOTIFY","","",null,null],[17,"RESIZE_REQUEST","","",null,null],[17,"CIRCULATE_NOTIFY","","",null,null],[17,"CIRCULATE_REQUEST","","",null,null],[17,"PROPERTY_NOTIFY","","",null,null],[17,"SELECTION_CLEAR","","",null,null],[17,"SELECTION_REQUEST","","",null,null],[17,"SELECTION_NOTIFY","","",null,null],[17,"COLORMAP_NOTIFY","","",null,null],[17,"CLIENT_MESSAGE","","",null,null],[17,"MAPPING_NOTIFY","","",null,null],[17,"GE_GENERIC","","",null,null],[17,"REQUEST","","",null,null],[17,"VALUE","","",null,null],[17,"WINDOW","","",null,null],[17,"PIXMAP","","",null,null],[17,"ATOM","","",null,null],[17,"CURSOR","","",null,null],[17,"FONT","","",null,null],[17,"MATCH","","",null,null],[17,"DRAWABLE","","",null,null],[17,"ACCESS","","",null,null],[17,"ALLOC","","",null,null],[17,"COLORMAP","","",null,null],[17,"G_CONTEXT","","",null,null],[17,"ID_CHOICE","","",null,null],[17,"NAME","","",null,null],[17,"LENGTH","","",null,null],[17,"IMPLEMENTATION","","",null,null],[17,"CREATE_WINDOW","","",null,null],[17,"CHANGE_WINDOW_ATTRIBUTES","","",null,null],[17,"GET_WINDOW_ATTRIBUTES","","",null,null],[17,"DESTROY_WINDOW","","",null,null],[17,"DESTROY_SUBWINDOWS","","",null,null],[17,"CHANGE_SAVE_SET","","",null,null],[17,"REPARENT_WINDOW","","",null,null],[17,"MAP_WINDOW","","",null,null],[17,"MAP_SUBWINDOWS","","",null,null],[17,"UNMAP_WINDOW","","",null,null],[17,"UNMAP_SUBWINDOWS","","",null,null],[17,"CONFIGURE_WINDOW","","",null,null],[17,"CIRCULATE_WINDOW","","",null,null],[17,"GET_GEOMETRY","","",null,null],[17,"QUERY_TREE","","",null,null],[17,"INTERN_ATOM","","",null,null],[17,"GET_ATOM_NAME","","",null,null],[17,"CHANGE_PROPERTY","","",null,null],[17,"DELETE_PROPERTY","","",null,null],[17,"GET_PROPERTY","","",null,null],[17,"LIST_PROPERTIES","","",null,null],[17,"SET_SELECTION_OWNER","","",null,null],[17,"GET_SELECTION_OWNER","","",null,null],[17,"CONVERT_SELECTION","","",null,null],[17,"SEND_EVENT","","",null,null],[17,"GRAB_POINTER","","",null,null],[17,"UNGRAB_POINTER","","",null,null],[17,"GRAB_BUTTON","","",null,null],[17,"UNGRAB_BUTTON","","",null,null],[17,"CHANGE_ACTIVE_POINTER_GRAB","","",null,null],[17,"GRAB_KEYBOARD","","",null,null],[17,"UNGRAB_KEYBOARD","","",null,null],[17,"GRAB_KEY","","",null,null],[17,"UNGRAB_KEY","","",null,null],[17,"ALLOW_EVENTS","","",null,null],[17,"GRAB_SERVER","","",null,null],[17,"UNGRAB_SERVER","","",null,null],[17,"QUERY_POINTER","","",null,null],[17,"GET_MOTION_EVENTS","","",null,null],[17,"TRANSLATE_COORDINATES","","",null,null],[17,"WARP_POINTER","","",null,null],[17,"SET_INPUT_FOCUS","","",null,null],[17,"GET_INPUT_FOCUS","","",null,null],[17,"QUERY_KEYMAP","","",null,null],[17,"OPEN_FONT","","",null,null],[17,"CLOSE_FONT","","",null,null],[17,"QUERY_FONT","","",null,null],[17,"QUERY_TEXT_EXTENTS","","",null,null],[17,"LIST_FONTS","","",null,null],[17,"LIST_FONTS_WITH_INFO","","",null,null],[17,"SET_FONT_PATH","","",null,null],[17,"GET_FONT_PATH","","",null,null],[17,"CREATE_PIXMAP","","",null,null],[17,"FREE_PIXMAP","","",null,null],[17,"CREATE_GC","","",null,null],[17,"CHANGE_GC","","",null,null],[17,"COPY_GC","","",null,null],[17,"SET_DASHES","","",null,null],[17,"SET_CLIP_RECTANGLES","","",null,null],[17,"FREE_GC","","",null,null],[17,"CLEAR_AREA","","",null,null],[17,"COPY_AREA","","",null,null],[17,"COPY_PLANE","","",null,null],[17,"POLY_POINT","","",null,null],[17,"POLY_LINE","","",null,null],[17,"POLY_SEGMENT","","",null,null],[17,"POLY_RECTANGLE","","",null,null],[17,"POLY_ARC","","",null,null],[17,"FILL_POLY","","",null,null],[17,"POLY_FILL_RECTANGLE","","",null,null],[17,"POLY_FILL_ARC","","",null,null],[17,"PUT_IMAGE","","",null,null],[17,"GET_IMAGE","","",null,null],[17,"POLY_TEXT_8","","",null,null],[17,"POLY_TEXT_16","","",null,null],[17,"IMAGE_TEXT_8","","",null,null],[17,"IMAGE_TEXT_16","","",null,null],[17,"CREATE_COLORMAP","","",null,null],[17,"FREE_COLORMAP","","",null,null],[17,"COPY_COLORMAP_AND_FREE","","",null,null],[17,"INSTALL_COLORMAP","","",null,null],[17,"UNINSTALL_COLORMAP","","",null,null],[17,"LIST_INSTALLED_COLORMAPS","","",null,null],[17,"ALLOC_COLOR","","",null,null],[17,"ALLOC_NAMED_COLOR","","",null,null],[17,"ALLOC_COLOR_CELLS","","",null,null],[17,"ALLOC_COLOR_PLANES","","",null,null],[17,"FREE_COLORS","","",null,null],[17,"STORE_COLORS","","",null,null],[17,"STORE_NAMED_COLOR","","",null,null],[17,"QUERY_COLORS","","",null,null],[17,"LOOKUP_COLOR","","",null,null],[17,"CREATE_CURSOR","","",null,null],[17,"CREATE_GLYPH_CURSOR","","",null,null],[17,"FREE_CURSOR","","",null,null],[17,"RECOLOR_CURSOR","","",null,null],[17,"QUERY_BEST_SIZE","","",null,null],[17,"QUERY_EXTENSION","","",null,null],[17,"LIST_EXTENSIONS","","",null,null],[17,"CHANGE_KEYBOARD_MAPPING","","",null,null],[17,"GET_KEYBOARD_MAPPING","","",null,null],[17,"CHANGE_KEYBOARD_CONTROL","","",null,null],[17,"GET_KEYBOARD_CONTROL","","",null,null],[17,"BELL","","",null,null],[17,"CHANGE_POINTER_CONTROL","","",null,null],[17,"GET_POINTER_CONTROL","","",null,null],[17,"SET_SCREEN_SAVER","","",null,null],[17,"GET_SCREEN_SAVER","","",null,null],[17,"CHANGE_HOSTS","","",null,null],[17,"LIST_HOSTS","","",null,null],[17,"SET_ACCESS_CONTROL","","",null,null],[17,"SET_CLOSE_DOWN_MODE","","",null,null],[17,"KILL_CLIENT","","",null,null],[17,"ROTATE_PROPERTIES","","",null,null],[17,"FORCE_SCREEN_SAVER","","",null,null],[17,"SET_POINTER_MAPPING","","",null,null],[17,"GET_POINTER_MAPPING","","",null,null],[17,"SET_MODIFIER_MAPPING","","",null,null],[17,"GET_MODIFIER_MAPPING","","",null,null],[17,"NO_OPERATION","","",null,null],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"char2b"}}],[11,"new","","",27,{"inputs":[{"name":"u8"},{"name":"u8"}],"output":{"name":"char2b"}}],[11,"byte1","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"byte2","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",39,{"inputs":[{"name":"self"}],"output":{"generics":["char2b"],"name":"option"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"new","","",28,{"inputs":[{"name":"i16"},{"name":"i16"}],"output":{"name":"point"}}],[11,"x","","",28,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",28,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"next","","",40,{"inputs":[{"name":"self"}],"output":{"generics":["point"],"name":"option"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[11,"new","","",29,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"rectangle"}}],[11,"x","","",29,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",29,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"width","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"next","","",41,{"inputs":[{"name":"self"}],"output":{"generics":["rectangle"],"name":"option"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"arc"}}],[11,"new","","",30,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"arc"}}],[11,"x","","",30,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",30,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"width","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"angle1","","",30,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"angle2","","",30,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"next","","",42,{"inputs":[{"name":"self"}],"output":{"generics":["arc"],"name":"option"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"format"}}],[11,"new","","",31,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"format"}}],[11,"depth","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bits_per_pixel","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"scanline_pad","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",43,{"inputs":[{"name":"self"}],"output":{"generics":["format"],"name":"option"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"visualtype"}}],[11,"new","","",32,{"inputs":[{"name":"visualid"},{"name":"u8"},{"name":"u8"},{"name":"u16"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"visualtype"}}],[11,"visual_id","","",32,{"inputs":[{"name":"self"}],"output":{"name":"visualid"}}],[11,"class","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bits_per_rgb_value","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"colormap_entries","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"red_mask","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"green_mask","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"blue_mask","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next","","",44,{"inputs":[{"name":"self"}],"output":{"generics":["visualtype"],"name":"option"}}],[11,"depth","","",45,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"visuals_len","","",45,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"visuals","","",45,{"inputs":[{"name":"self"}],"output":{"name":"visualtypeiterator"}}],[11,"next","","",46,{"inputs":[{"name":"self"}],"output":{"generics":["depth"],"name":"option"}}],[11,"root","","",47,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"default_colormap","","",47,{"inputs":[{"name":"self"}],"output":{"name":"colormap"}}],[11,"white_pixel","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"black_pixel","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"current_input_masks","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"width_in_pixels","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height_in_pixels","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"width_in_millimeters","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height_in_millimeters","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"min_installed_maps","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"max_installed_maps","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"root_visual","","",47,{"inputs":[{"name":"self"}],"output":{"name":"visualid"}}],[11,"backing_stores","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"save_unders","","",47,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"root_depth","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"allowed_depths_len","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"allowed_depths","","",47,{"inputs":[{"name":"self"}],"output":{"name":"depthiterator"}}],[11,"next","","",48,{"inputs":[{"name":"self"}],"output":{"generics":["screen"],"name":"option"}}],[11,"byte_order","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"protocol_major_version","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"protocol_minor_version","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"authorization_protocol_name_len","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"authorization_protocol_data_len","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"authorization_protocol_name","","",49,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"authorization_protocol_data","","",49,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"next","","",50,{"inputs":[{"name":"self"}],"output":{"generics":["setuprequest"],"name":"option"}}],[11,"status","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"reason_len","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"protocol_major_version","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"protocol_minor_version","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"length","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"reason","","",51,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"next","","",52,{"inputs":[{"name":"self"}],"output":{"generics":["setupfailed"],"name":"option"}}],[11,"status","","",53,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"length","","",53,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"reason","","",53,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"next","","",54,{"inputs":[{"name":"self"}],"output":{"generics":["setupauthenticate"],"name":"option"}}],[11,"status","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"protocol_major_version","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"protocol_minor_version","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"length","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"release_number","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"resource_id_base","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"resource_id_mask","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"motion_buffer_size","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"vendor_len","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"maximum_request_length","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"roots_len","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"pixmap_formats_len","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"image_byte_order","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bitmap_format_bit_order","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bitmap_format_scanline_unit","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bitmap_format_scanline_pad","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"min_keycode","","",55,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"max_keycode","","",55,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"vendor","","",55,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"pixmap_formats","","",55,{"inputs":[{"name":"self"}],"output":{"name":"formatiterator"}}],[11,"roots","","",55,{"inputs":[{"name":"self"}],"output":{"name":"screeniterator"}}],[11,"next","","",56,{"inputs":[{"name":"self"}],"output":{"generics":["setup"],"name":"option"}}],[11,"detail","","The keycode (a number representing a physical key on the keyboard) of the key which was pressed.",57,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"time","","Time when the event was generated (in milliseconds).",57,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"root","","The root window of `child`.",57,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"event","","",57,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"child","","",57,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"root_x","","The X coordinate of the pointer relative to the `root` window at the time of the event.",57,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"root_y","","The Y coordinate of the pointer relative to the `root` window at the time of the event.",57,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"event_x","","If `same_screen` is true, this is the X coordinate relative to the `event` window's origin. Otherwise, `event_x` will be set to zero.",57,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"event_y","","If `same_screen` is true, this is the Y coordinate relative to the `event` window's origin. Otherwise, `event_y` will be set to zero.",57,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"state","","The logical state of the pointer buttons and modifier keys just prior to the event.",57,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"same_screen","","Whether the `event` window is on the same screen as the `root` window.",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new KeyPressEvent `response_type` must be set to one of:     - `KEY_RELEASE`     - `KEY_PRESS`",57,{"inputs":[{"name":"u8"},{"name":"keycode"},{"name":"timestamp"},{"name":"window"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"bool"}],"output":{"name":"keypressevent"}}],[11,"detail","","The keycode (a number representing a physical key on the keyboard) of the key which was pressed.",58,{"inputs":[{"name":"self"}],"output":{"name":"button"}}],[11,"time","","Time when the event was generated (in milliseconds).",58,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"root","","The root window of `child`.",58,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"event","","",58,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"child","","",58,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"root_x","","The X coordinate of the pointer relative to the `root` window at the time of the event.",58,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"root_y","","The Y coordinate of the pointer relative to the `root` window at the time of the event.",58,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"event_x","","If `same_screen` is true, this is the X coordinate relative to the `event` window's origin. Otherwise, `event_x` will be set to zero.",58,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"event_y","","If `same_screen` is true, this is the Y coordinate relative to the `event` window's origin. Otherwise, `event_y` will be set to zero.",58,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"state","","The logical state of the pointer buttons and modifier keys just prior to the event.",58,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"same_screen","","Whether the `event` window is on the same screen as the `root` window.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new ButtonPressEvent `response_type` must be set to one of:     - `BUTTON_RELEASE`     - `BUTTON_PRESS`",58,{"inputs":[{"name":"u8"},{"name":"button"},{"name":"timestamp"},{"name":"window"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"bool"}],"output":{"name":"buttonpressevent"}}],[11,"detail","","The keycode (a number representing a physical key on the keyboard) of the key which was pressed.",59,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"time","","Time when the event was generated (in milliseconds).",59,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"root","","The root window of `child`.",59,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"event","","",59,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"child","","",59,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"root_x","","The X coordinate of the pointer relative to the `root` window at the time of the event.",59,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"root_y","","The Y coordinate of the pointer relative to the `root` window at the time of the event.",59,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"event_x","","If `same_screen` is true, this is the X coordinate relative to the `event` window's origin. Otherwise, `event_x` will be set to zero.",59,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"event_y","","If `same_screen` is true, this is the Y coordinate relative to the `event` window's origin. Otherwise, `event_y` will be set to zero.",59,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"state","","The logical state of the pointer buttons and modifier keys just prior to the event.",59,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"same_screen","","Whether the `event` window is on the same screen as the `root` window.",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new MotionNotifyEvent `response_type` will be set automatically to MOTION_NOTIFY",59,{"inputs":[{"name":"u8"},{"name":"timestamp"},{"name":"window"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"bool"}],"output":{"name":"motionnotifyevent"}}],[11,"detail","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"time","","",60,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"root","","The root window for the final cursor position.",60,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"event","","The window on which the event was generated.",60,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"child","","If the `event` window has subwindows and the final pointer position is in one of them, then `child` is set to that subwindow, `XCB_WINDOW_NONE` otherwise.",60,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"root_x","","The pointer X coordinate relative to `root`'s origin at the time of the event.",60,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"root_y","","The pointer Y coordinate relative to `root`'s origin at the time of the event.",60,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"event_x","","If `event` is on the same screen as `root`, this is the pointer X coordinate relative to the event window's origin.",60,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"event_y","","If `event` is on the same screen as `root`, this is the pointer Y coordinate relative to the event window's origin.",60,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"state","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"mode","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"same_screen_focus","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new EnterNotifyEvent `response_type` must be set to one of:     - `ENTER_NOTIFY`     - `LEAVE_NOTIFY`",60,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"timestamp"},{"name":"window"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u8"},{"name":"u8"}],"output":{"name":"enternotifyevent"}}],[11,"detail","","",61,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"event","","The window on which the focus event was generated. This is the window used by the X server to report the event.",61,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"mode","","",61,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new FocusInEvent `response_type` must be set to one of:     - `FOCUS_IN`     - `FOCUS_OUT`",61,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"window"},{"name":"u8"}],"output":{"name":"focusinevent"}}],[11,"keys","","",62,null],[11,"new","","Constructs a new KeymapNotifyEvent `response_type` will be set automatically to KEYMAP_NOTIFY",62,null],[11,"window","","The exposed (damaged) window.",63,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"x","","The X coordinate of the left-upper corner of the exposed rectangle, relative to the `window`'s origin.",63,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"y","","The Y coordinate of the left-upper corner of the exposed rectangle, relative to the `window`'s origin.",63,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"width","","The width of the exposed rectangle.",63,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","The height of the exposed rectangle.",63,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"count","","The amount of `Expose` events following this one. Simple applications that do not want to optimize redisplay by distinguishing between subareas of its window can just ignore all Expose events with nonzero counts and perform full redisplays on events with zero counts.",63,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"new","","Constructs a new ExposeEvent `response_type` will be set automatically to EXPOSE",63,{"inputs":[{"name":"window"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"exposeevent"}}],[11,"drawable","","",64,{"inputs":[{"name":"self"}],"output":{"name":"drawable"}}],[11,"x","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"y","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"width","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"minor_opcode","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"count","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"major_opcode","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new GraphicsExposureEvent `response_type` will be set automatically to GRAPHICS_EXPOSURE",64,{"inputs":[{"name":"drawable"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u8"}],"output":{"name":"graphicsexposureevent"}}],[11,"drawable","","",65,{"inputs":[{"name":"self"}],"output":{"name":"drawable"}}],[11,"minor_opcode","","",65,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"major_opcode","","",65,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new NoExposureEvent `response_type` will be set automatically to NO_EXPOSURE",65,{"inputs":[{"name":"drawable"},{"name":"u16"},{"name":"u8"}],"output":{"name":"noexposureevent"}}],[11,"window","","",66,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"state","","",66,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new VisibilityNotifyEvent `response_type` will be set automatically to VISIBILITY_NOTIFY",66,{"inputs":[{"name":"window"},{"name":"u8"}],"output":{"name":"visibilitynotifyevent"}}],[11,"parent","","",67,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","",67,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"x","","",67,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",67,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"width","","",67,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","",67,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"border_width","","",67,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"override_redirect","","",67,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new CreateNotifyEvent `response_type` will be set automatically to CREATE_NOTIFY",67,{"inputs":[{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"bool"}],"output":{"name":"createnotifyevent"}}],[11,"event","","The reconfigured window or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",68,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","The window that is destroyed.",68,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"new","","Constructs a new DestroyNotifyEvent `response_type` will be set automatically to DESTROY_NOTIFY",68,{"inputs":[{"name":"window"},{"name":"window"}],"output":{"name":"destroynotifyevent"}}],[11,"event","","The reconfigured window or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",69,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","The window that was unmapped.",69,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"from_configure","","Set to 1 if the event was generated as a result of a resizing of the window's parent when `window` had a win_gravity of `UnmapGravity`.",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new UnmapNotifyEvent `response_type` will be set automatically to UNMAP_NOTIFY",69,{"inputs":[{"name":"window"},{"name":"window"},{"name":"bool"}],"output":{"name":"unmapnotifyevent"}}],[11,"event","","The window which was mapped or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",70,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","The window that was mapped.",70,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"override_redirect","","Window managers should ignore this window if `override_redirect` is 1.",70,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new MapNotifyEvent `response_type` will be set automatically to MAP_NOTIFY",70,{"inputs":[{"name":"window"},{"name":"window"},{"name":"bool"}],"output":{"name":"mapnotifyevent"}}],[11,"parent","","The parent of `window`.",71,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","The window to be mapped.",71,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"new","","Constructs a new MapRequestEvent `response_type` will be set automatically to MAP_REQUEST",71,{"inputs":[{"name":"window"},{"name":"window"}],"output":{"name":"maprequestevent"}}],[11,"event","","",72,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","",72,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"parent","","",72,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"x","","",72,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",72,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"override_redirect","","",72,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new ReparentNotifyEvent `response_type` will be set automatically to REPARENT_NOTIFY",72,{"inputs":[{"name":"window"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"bool"}],"output":{"name":"reparentnotifyevent"}}],[11,"event","","The reconfigured window or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",73,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","The window whose size, position, border, and/or stacking order was changed.",73,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"above_sibling","","If `XCB_NONE`, the `window` is on the bottom of the stack with respect to sibling windows. However, if set to a sibling window, the `window` is placed on top of this sibling window.",73,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"x","","The X coordinate of the upper-left outside corner of `window`, relative to the parent window's origin.",73,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","The Y coordinate of the upper-left outside corner of `window`, relative to the parent window's origin.",73,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"width","","The inside width of `window`, not including the border.",73,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","The inside height of `window`, not including the border.",73,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"border_width","","The border width of `window`.",73,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"override_redirect","","Window managers should ignore this window if `override_redirect` is 1.",73,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new ConfigureNotifyEvent `response_type` will be set automatically to CONFIGURE_NOTIFY",73,{"inputs":[{"name":"window"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"bool"}],"output":{"name":"configurenotifyevent"}}],[11,"stack_mode","","",74,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"parent","","",74,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","",74,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"sibling","","",74,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"x","","",74,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",74,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"width","","",74,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","",74,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"border_width","","",74,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"value_mask","","",74,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"new","","Constructs a new ConfigureRequestEvent `response_type` will be set automatically to CONFIGURE_REQUEST",74,{"inputs":[{"name":"u8"},{"name":"window"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"configurerequestevent"}}],[11,"event","","",75,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","",75,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"x","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"new","","Constructs a new GravityNotifyEvent `response_type` will be set automatically to GRAVITY_NOTIFY",75,{"inputs":[{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"}],"output":{"name":"gravitynotifyevent"}}],[11,"window","","",76,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"width","","",76,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","",76,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"new","","Constructs a new ResizeRequestEvent `response_type` will be set automatically to RESIZE_REQUEST",76,{"inputs":[{"name":"window"},{"name":"u16"},{"name":"u16"}],"output":{"name":"resizerequestevent"}}],[11,"event","","Either the restacked window or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",77,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","The restacked window.",77,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"place","","",77,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new CirculateNotifyEvent `response_type` must be set to one of:     - `CIRCULATE_REQUEST`     - `CIRCULATE_NOTIFY`",77,{"inputs":[{"name":"u8"},{"name":"window"},{"name":"window"},{"name":"u8"}],"output":{"name":"circulatenotifyevent"}}],[11,"window","","The window whose associated property was changed.",78,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"atom","","The property's atom, to indicate which property was changed.",78,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"time","","A timestamp of the server time when the property was changed.",78,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"state","","",78,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new PropertyNotifyEvent `response_type` will be set automatically to PROPERTY_NOTIFY",78,{"inputs":[{"name":"window"},{"name":"atom"},{"name":"timestamp"},{"name":"u8"}],"output":{"name":"propertynotifyevent"}}],[11,"time","","",79,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"owner","","",79,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"selection","","",79,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"new","","Constructs a new SelectionClearEvent `response_type` will be set automatically to SELECTION_CLEAR",79,{"inputs":[{"name":"timestamp"},{"name":"window"},{"name":"atom"}],"output":{"name":"selectionclearevent"}}],[11,"time","","",80,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"owner","","",80,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"requestor","","",80,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"selection","","",80,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"target","","",80,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"property","","",80,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"new","","Constructs a new SelectionRequestEvent `response_type` will be set automatically to SELECTION_REQUEST",80,{"inputs":[{"name":"timestamp"},{"name":"window"},{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"atom"}],"output":{"name":"selectionrequestevent"}}],[11,"time","","",81,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"requestor","","",81,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"selection","","",81,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"target","","",81,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"property","","",81,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"new","","Constructs a new SelectionNotifyEvent `response_type` will be set automatically to SELECTION_NOTIFY",81,{"inputs":[{"name":"timestamp"},{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"atom"}],"output":{"name":"selectionnotifyevent"}}],[11,"window","","The window whose associated colormap is changed, installed or uninstalled.",82,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"colormap","","The colormap which is changed, installed or uninstalled. This is `XCB_NONE` when the colormap is changed by a call to `FreeColormap`.",82,{"inputs":[{"name":"self"}],"output":{"name":"colormap"}}],[11,"new_","","",82,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"state","","",82,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new ColormapNotifyEvent `response_type` will be set automatically to COLORMAP_NOTIFY",82,{"inputs":[{"name":"window"},{"name":"colormap"},{"name":"bool"},{"name":"u8"}],"output":{"name":"colormapnotifyevent"}}],[11,"data8","","",83,null],[11,"from_data8","","",83,null],[11,"data16","","",83,null],[11,"from_data16","","",83,null],[11,"data32","","",83,null],[11,"from_data32","","",83,null],[11,"next","","",84,{"inputs":[{"name":"self"}],"output":{"generics":["clientmessagedata"],"name":"option"}}],[11,"format","","Specifies how to interpret `data`. Can be either 8, 16 or 32.",85,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"window","","",85,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"type_","","An atom which indicates how the data should be interpreted by the receiving client.",85,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"data","","The data itself (20 bytes max).",85,{"inputs":[{"name":"self"}],"output":{"name":"clientmessagedata"}}],[11,"new","","Constructs a new ClientMessageEvent `response_type` will be set automatically to CLIENT_MESSAGE",85,{"inputs":[{"name":"u8"},{"name":"window"},{"name":"atom"},{"name":"clientmessagedata"}],"output":{"name":"clientmessageevent"}}],[11,"request","","",86,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_keycode","","The first number in the range of the altered mapping.",86,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"count","","The number of keycodes altered.",86,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new MappingNotifyEvent `response_type` will be set automatically to MAPPING_NOTIFY",86,{"inputs":[{"name":"u8"},{"name":"keycode"},{"name":"u8"}],"output":{"name":"mappingnotifyevent"}}],[11,"new","","Constructs a new GeGenericEvent `response_type` will be set automatically to GE_GENERIC",87,{"inputs":[],"output":{"name":"gegenericevent"}}],[11,"get_reply","","",88,{"inputs":[{"name":"self"}],"output":{"generics":["getwindowattributesreply","genericerror"],"name":"result"}}],[11,"backing_store","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"visual","","",89,{"inputs":[{"name":"self"}],"output":{"name":"visualid"}}],[11,"class","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"bit_gravity","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"win_gravity","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"backing_planes","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"backing_pixel","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"save_under","","",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"map_is_installed","","",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"map_state","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"override_redirect","","",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"colormap","","",89,{"inputs":[{"name":"self"}],"output":{"name":"colormap"}}],[11,"all_event_masks","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"your_event_mask","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"do_not_propagate_mask","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",90,{"inputs":[{"name":"self"}],"output":{"generics":["getgeometryreply","genericerror"],"name":"result"}}],[11,"depth","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"root","","",91,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"x","","",91,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",91,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"width","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"border_width","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",92,{"inputs":[{"name":"self"}],"output":{"generics":["querytreereply","genericerror"],"name":"result"}}],[11,"root","","",93,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"parent","","",93,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"children_len","","",93,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"children","","",93,null],[11,"get_reply","","",94,{"inputs":[{"name":"self"}],"output":{"generics":["internatomreply","genericerror"],"name":"result"}}],[11,"atom","","",95,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"get_reply","","",96,{"inputs":[{"name":"self"}],"output":{"generics":["getatomnamereply","genericerror"],"name":"result"}}],[11,"name_len","","",97,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"name","","",97,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"get_reply","","",98,{"inputs":[{"name":"self"}],"output":{"generics":["getpropertyreply","genericerror"],"name":"result"}}],[11,"format","","",99,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"type_","","",99,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"bytes_after","","",99,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"value_len","","",99,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"value","","",99,null],[11,"get_reply","","",100,{"inputs":[{"name":"self"}],"output":{"generics":["listpropertiesreply","genericerror"],"name":"result"}}],[11,"atoms_len","","",101,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"atoms","","",101,null],[11,"get_reply","","",102,{"inputs":[{"name":"self"}],"output":{"generics":["getselectionownerreply","genericerror"],"name":"result"}}],[11,"owner","","",103,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"get_reply","","",104,{"inputs":[{"name":"self"}],"output":{"generics":["grabpointerreply","genericerror"],"name":"result"}}],[11,"status","","",105,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_reply","","",106,{"inputs":[{"name":"self"}],"output":{"generics":["grabkeyboardreply","genericerror"],"name":"result"}}],[11,"status","","",107,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_reply","","",108,{"inputs":[{"name":"self"}],"output":{"generics":["querypointerreply","genericerror"],"name":"result"}}],[11,"same_screen","","",109,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"root","","",109,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"child","","",109,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"root_x","","",109,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"root_y","","",109,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"win_x","","",109,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"win_y","","",109,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"mask","","",109,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"timecoord"}}],[11,"new","","",33,{"inputs":[{"name":"timestamp"},{"name":"i16"},{"name":"i16"}],"output":{"name":"timecoord"}}],[11,"time","","",33,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"x","","",33,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",33,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"next","","",110,{"inputs":[{"name":"self"}],"output":{"generics":["timecoord"],"name":"option"}}],[11,"get_reply","","",111,{"inputs":[{"name":"self"}],"output":{"generics":["getmotioneventsreply","genericerror"],"name":"result"}}],[11,"events_len","","",112,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"events","","",112,{"inputs":[{"name":"self"}],"output":{"name":"timecoorditerator"}}],[11,"get_reply","","",113,{"inputs":[{"name":"self"}],"output":{"generics":["translatecoordinatesreply","genericerror"],"name":"result"}}],[11,"same_screen","","",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",114,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"dst_x","","",114,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"dst_y","","",114,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"get_reply","","",115,{"inputs":[{"name":"self"}],"output":{"generics":["getinputfocusreply","genericerror"],"name":"result"}}],[11,"revert_to","","",116,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"focus","","",116,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"get_reply","","",117,{"inputs":[{"name":"self"}],"output":{"generics":["querykeymapreply","genericerror"],"name":"result"}}],[11,"keys","","",118,null],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"fontprop"}}],[11,"new","","",34,{"inputs":[{"name":"atom"},{"name":"u32"}],"output":{"name":"fontprop"}}],[11,"name","","",34,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"value","","",34,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next","","",119,{"inputs":[{"name":"self"}],"output":{"generics":["fontprop"],"name":"option"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"charinfo"}}],[11,"new","","",35,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"}],"output":{"name":"charinfo"}}],[11,"left_side_bearing","","",35,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"right_side_bearing","","",35,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"character_width","","",35,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"ascent","","",35,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"descent","","",35,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"attributes","","",35,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"next","","",120,{"inputs":[{"name":"self"}],"output":{"generics":["charinfo"],"name":"option"}}],[11,"get_reply","","",121,{"inputs":[{"name":"self"}],"output":{"generics":["queryfontreply","genericerror"],"name":"result"}}],[11,"min_bounds","","",122,{"inputs":[{"name":"self"}],"output":{"name":"charinfo"}}],[11,"max_bounds","","",122,{"inputs":[{"name":"self"}],"output":{"name":"charinfo"}}],[11,"min_char_or_byte2","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"max_char_or_byte2","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"default_char","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"properties_len","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"draw_direction","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"min_byte1","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"max_byte1","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"all_chars_exist","","",122,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"font_ascent","","",122,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"font_descent","","",122,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"char_infos_len","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"properties","","",122,{"inputs":[{"name":"self"}],"output":{"name":"fontpropiterator"}}],[11,"char_infos","","",122,{"inputs":[{"name":"self"}],"output":{"name":"charinfoiterator"}}],[11,"get_reply","","",123,{"inputs":[{"name":"self"}],"output":{"generics":["querytextextentsreply","genericerror"],"name":"result"}}],[11,"draw_direction","","",124,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"font_ascent","","",124,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"font_descent","","",124,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"overall_ascent","","",124,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"overall_descent","","",124,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"overall_width","","",124,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"overall_left","","",124,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"overall_right","","",124,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"name_len","","",125,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"name","","",125,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"next","","",126,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"get_reply","","",127,{"inputs":[{"name":"self"}],"output":{"generics":["listfontsreply","genericerror"],"name":"result"}}],[11,"names_len","","",128,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"names","","",128,{"inputs":[{"name":"self"}],"output":{"name":"striterator"}}],[11,"get_reply","","",129,{"inputs":[{"name":"self"}],"output":{"generics":["listfontswithinforeply","genericerror"],"name":"result"}}],[11,"name_len","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"min_bounds","","",130,{"inputs":[{"name":"self"}],"output":{"name":"charinfo"}}],[11,"max_bounds","","",130,{"inputs":[{"name":"self"}],"output":{"name":"charinfo"}}],[11,"min_char_or_byte2","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"max_char_or_byte2","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"default_char","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"properties_len","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"draw_direction","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"min_byte1","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"max_byte1","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"all_chars_exist","","",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"font_ascent","","",130,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"font_descent","","",130,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"replies_hint","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"properties","","",130,{"inputs":[{"name":"self"}],"output":{"name":"fontpropiterator"}}],[11,"name","","",130,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"get_reply","","",131,{"inputs":[{"name":"self"}],"output":{"generics":["getfontpathreply","genericerror"],"name":"result"}}],[11,"path_len","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"path","","",132,{"inputs":[{"name":"self"}],"output":{"name":"striterator"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"segment"}}],[11,"new","","",36,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"segment"}}],[11,"x1","","",36,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y1","","",36,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"x2","","",36,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y2","","",36,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"next","","",133,{"inputs":[{"name":"self"}],"output":{"generics":["segment"],"name":"option"}}],[11,"get_reply","","",134,{"inputs":[{"name":"self"}],"output":{"generics":["getimagereply","genericerror"],"name":"result"}}],[11,"depth","","",135,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"visual","","",135,{"inputs":[{"name":"self"}],"output":{"name":"visualid"}}],[11,"data","","",135,null],[11,"get_reply","","",136,{"inputs":[{"name":"self"}],"output":{"generics":["listinstalledcolormapsreply","genericerror"],"name":"result"}}],[11,"cmaps_len","","",137,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"cmaps","","",137,null],[11,"get_reply","","",138,{"inputs":[{"name":"self"}],"output":{"generics":["alloccolorreply","genericerror"],"name":"result"}}],[11,"red","","",139,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"green","","",139,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"blue","","",139,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"pixel","","",139,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_reply","","",140,{"inputs":[{"name":"self"}],"output":{"generics":["allocnamedcolorreply","genericerror"],"name":"result"}}],[11,"pixel","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"exact_red","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"exact_green","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"exact_blue","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"visual_red","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"visual_green","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"visual_blue","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",142,{"inputs":[{"name":"self"}],"output":{"generics":["alloccolorcellsreply","genericerror"],"name":"result"}}],[11,"pixels_len","","",143,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"masks_len","","",143,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"pixels","","",143,null],[11,"masks","","",143,null],[11,"get_reply","","",144,{"inputs":[{"name":"self"}],"output":{"generics":["alloccolorplanesreply","genericerror"],"name":"result"}}],[11,"pixels_len","","",145,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"red_mask","","",145,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"green_mask","","",145,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"blue_mask","","",145,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"pixels","","",145,null],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"coloritem"}}],[11,"new","","",37,{"inputs":[{"name":"u32"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u8"}],"output":{"name":"coloritem"}}],[11,"pixel","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"red","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"green","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"blue","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"flags","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",146,{"inputs":[{"name":"self"}],"output":{"generics":["coloritem"],"name":"option"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"rgb"}}],[11,"new","","",38,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"rgb"}}],[11,"red","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"green","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"blue","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"next","","",147,{"inputs":[{"name":"self"}],"output":{"generics":["rgb"],"name":"option"}}],[11,"get_reply","","",148,{"inputs":[{"name":"self"}],"output":{"generics":["querycolorsreply","genericerror"],"name":"result"}}],[11,"colors_len","","",149,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"colors","","",149,{"inputs":[{"name":"self"}],"output":{"name":"rgbiterator"}}],[11,"get_reply","","",150,{"inputs":[{"name":"self"}],"output":{"generics":["lookupcolorreply","genericerror"],"name":"result"}}],[11,"exact_red","","",151,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"exact_green","","",151,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"exact_blue","","",151,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"visual_red","","",151,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"visual_green","","",151,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"visual_blue","","",151,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",152,{"inputs":[{"name":"self"}],"output":{"generics":["querybestsizereply","genericerror"],"name":"result"}}],[11,"width","","",153,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","",153,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",154,{"inputs":[{"name":"self"}],"output":{"generics":["queryextensionreply","genericerror"],"name":"result"}}],[11,"present","","",155,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"major_opcode","","",155,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_event","","",155,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_error","","",155,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_reply","","",156,{"inputs":[{"name":"self"}],"output":{"generics":["listextensionsreply","genericerror"],"name":"result"}}],[11,"names_len","","",157,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"names","","",157,{"inputs":[{"name":"self"}],"output":{"name":"striterator"}}],[11,"get_reply","","",158,{"inputs":[{"name":"self"}],"output":{"generics":["getkeyboardmappingreply","genericerror"],"name":"result"}}],[11,"keysyms_per_keycode","","",159,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"keysyms","","",159,null],[11,"get_reply","","",160,{"inputs":[{"name":"self"}],"output":{"generics":["getkeyboardcontrolreply","genericerror"],"name":"result"}}],[11,"global_auto_repeat","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"led_mask","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"key_click_percent","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bell_percent","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bell_pitch","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"bell_duration","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"auto_repeats","","",161,null],[11,"get_reply","","",162,{"inputs":[{"name":"self"}],"output":{"generics":["getpointercontrolreply","genericerror"],"name":"result"}}],[11,"acceleration_numerator","","",163,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"acceleration_denominator","","",163,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"threshold","","",163,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",164,{"inputs":[{"name":"self"}],"output":{"generics":["getscreensaverreply","genericerror"],"name":"result"}}],[11,"timeout","","",165,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"interval","","",165,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"prefer_blanking","","",165,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"allow_exposures","","",165,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"family","","",166,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"address_len","","",166,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"address","","",166,null],[11,"next","","",167,{"inputs":[{"name":"self"}],"output":{"generics":["host"],"name":"option"}}],[11,"get_reply","","",168,{"inputs":[{"name":"self"}],"output":{"generics":["listhostsreply","genericerror"],"name":"result"}}],[11,"mode","","",169,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"hosts_len","","",169,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"hosts","","",169,{"inputs":[{"name":"self"}],"output":{"name":"hostiterator"}}],[11,"get_reply","","",170,{"inputs":[{"name":"self"}],"output":{"generics":["setpointermappingreply","genericerror"],"name":"result"}}],[11,"status","","",171,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_reply","","",172,{"inputs":[{"name":"self"}],"output":{"generics":["getpointermappingreply","genericerror"],"name":"result"}}],[11,"map_len","","",173,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"map","","",173,null],[11,"get_reply","","",174,{"inputs":[{"name":"self"}],"output":{"generics":["setmodifiermappingreply","genericerror"],"name":"result"}}],[11,"status","","",175,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_reply","","",176,{"inputs":[{"name":"self"}],"output":{"generics":["getmodifiermappingreply","genericerror"],"name":"result"}}],[11,"keycodes_per_modifier","","",177,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"keycodes","","",177,null],[0,"big_requests","xcb","",null,null],[5,"id","xcb::big_requests","",null,{"inputs":[],"output":{"name":"extension"}}],[5,"enable","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"enablecookie"}}],[5,"enable_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"enablecookie"}}],[6,"EnableCookie","","",null,null],[6,"EnableReply","","",null,null],[17,"MAJOR_VERSION","","",null,null],[17,"MINOR_VERSION","","",null,null],[17,"ENABLE","","",null,null],[11,"get_reply","","",178,{"inputs":[{"name":"self"}],"output":{"generics":["enablereply","genericerror"],"name":"result"}}],[11,"maximum_request_length","","",179,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[0,"xc_misc","xcb","",null,null],[5,"id","xcb::xc_misc","",null,{"inputs":[],"output":{"name":"extension"}}],[5,"get_version","","",null,{"inputs":[{"name":"connection"},{"name":"u16"},{"name":"u16"}],"output":{"name":"getversioncookie"}}],[5,"get_version_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"u16"},{"name":"u16"}],"output":{"name":"getversioncookie"}}],[5,"get_xid_range","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getxidrangecookie"}}],[5,"get_xid_range_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getxidrangecookie"}}],[5,"get_xid_list","","",null,{"inputs":[{"name":"connection"},{"name":"u32"}],"output":{"name":"getxidlistcookie"}}],[5,"get_xid_list_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"u32"}],"output":{"name":"getxidlistcookie"}}],[6,"GetVersionCookie","","",null,null],[6,"GetVersionReply","","",null,null],[6,"GetXidRangeCookie","","",null,null],[6,"GetXidRangeReply","","",null,null],[6,"GetXidListCookie","","",null,null],[6,"GetXidListReply","","",null,null],[17,"MAJOR_VERSION","","",null,null],[17,"MINOR_VERSION","","",null,null],[17,"GET_VERSION","","",null,null],[17,"GET_XID_RANGE","","",null,null],[17,"GET_XID_LIST","","",null,null],[11,"get_reply","","",180,{"inputs":[{"name":"self"}],"output":{"generics":["getversionreply","genericerror"],"name":"result"}}],[11,"server_major_version","","",181,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"server_minor_version","","",181,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",182,{"inputs":[{"name":"self"}],"output":{"generics":["getxidrangereply","genericerror"],"name":"result"}}],[11,"start_id","","",183,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"count","","",183,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_reply","","",184,{"inputs":[{"name":"self"}],"output":{"generics":["getxidlistreply","genericerror"],"name":"result"}}],[11,"ids_len","","",185,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"ids","","",185,null],[0,"ffi","xcb","",null,null],[0,"base","xcb::ffi","",null,null],[3,"xcb_generic_iterator_t","xcb::ffi::base","Generic iterator",null,null],[12,"data","","",186,null],[12,"rem","","",186,null],[12,"index","","",186,null],[3,"xcb_generic_reply_t","","Generic reply",null,null],[12,"response_type","","",187,null],[12,"sequence","","",187,null],[12,"length","","",187,null],[3,"xcb_generic_event_t","","Generic event",null,null],[12,"response_type","","",188,null],[12,"pad0","","",188,null],[12,"sequence","","",188,null],[12,"pad","","",188,null],[12,"full_sequence","","",188,null],[3,"xcb_ge_event_t","","GE event",null,null],[12,"response_type","","",189,null],[12,"sequence","","",189,null],[12,"length","","",189,null],[12,"event_type","","",189,null],[12,"full_sequence","","",189,null],[3,"xcb_generic_error_t","","Generic error",null,null],[12,"response_type","","",190,null],[12,"error_code","","",190,null],[12,"sequence","","",190,null],[12,"resource_id","","",190,null],[12,"minor_code","","",190,null],[12,"major_code","","",190,null],[12,"full_sequence","","",190,null],[3,"xcb_void_cookie_t","","Generic cookie",null,null],[12,"sequence","","sequence number",191,null],[3,"xcb_auth_info_t","","Container for authorization information. A container for authorization information to be sent to the X server",null,null],[12,"namelen","","length of the string name (as returned by strlen)",192,null],[12,"name","","String containing the authentication protocol name, such as \"MIT-MAGIC-COOKIE-1\" or \"XDM-AUTHORIZATION-1\".",192,null],[12,"datalen","","length of the data member",192,null],[12,"data","","data interpreted in a protocol specific manner",192,null],[4,"xcb_connection_t","","XCB connection structure An opaque structure that contain all data that XCB needs to communicate with an X server.",null,null],[4,"xcb_extension_t","","Opaque structure used as key for xcb_get_extension_data_t",null,null],[4,"xcb_special_event_t","","",null,null],[5,"xcb_flush","","Forces any buffered output to be written to the server. Blocks until the write is complete.",null,null],[5,"xcb_get_maximum_request_length","","Returns the maximum request length that this server accepts.",null,null],[5,"xcb_prefetch_maximum_request_length","","Prefetch the maximum request length without blocking.",null,null],[5,"xcb_wait_for_event","","Returns the next event or error from the server.",null,null],[5,"xcb_poll_for_event","","Returns the next event or error from the server.",null,null],[5,"xcb_poll_for_queued_event","","Returns the next event without reading from the connection.",null,null],[5,"xcb_poll_for_special_event","","Returns the next event from a special queue",null,null],[5,"xcb_wait_for_special_event","","Returns the next event from a special queue, blocking until one arrives",null,null],[5,"xcb_register_for_special_xge","","Listen for a special event",null,null],[5,"xcb_unregister_for_special_event","","Stop listening for a special event",null,null],[5,"xcb_request_check","","Return the error for a request, or NULL if none can ever arrive.",null,null],[5,"xcb_discard_reply","","Discards the reply for a request.",null,null],[5,"xcb_discard_reply64","","Discards the reply for a request, given by a 64bit sequence number",null,null],[5,"xcb_get_extension_data","","Caches reply information from QueryExtension requests.",null,null],[5,"xcb_prefetch_extension_data","","Prefetch of extension data into the extension cache",null,null],[5,"xcb_get_setup","","Access the data returned by the server.",null,null],[5,"xcb_get_file_descriptor","","Access the file descriptor of the connection.",null,null],[5,"xcb_connection_has_error","","Test whether the connection has shut down due to a fatal error.",null,null],[5,"xcb_connect_to_fd","","Connects to the X server.",null,null],[5,"xcb_disconnect","","Closes the connection.",null,null],[5,"xcb_parse_display","","Parses a display string name in the form documented by X(7x). name: The name of the display. host: A pointer to a malloc'd copy of the hostname. display: A pointer to the display number. screen: A pointer to the screen number.",null,null],[5,"xcb_connect","","Connects to the X server. displayname: The name of the display. screenp: A pointer to a preferred screen number. Returns A newly allocated xcb_connection_t structure.",null,null],[5,"xcb_connect_to_display_with_auth_info","","Connects to the X server, using an authorization information. display: The name of the display. auth: The authorization information. screen: A pointer to a preferred screen number. Returns A newly allocated xcb_connection_t structure.",null,null],[5,"xcb_generate_id","","Allocates an XID for a new object. Returns A newly allocated XID.",null,null],[17,"XCB_CONN_ERROR","","xcb connection errors because of socket, pipe and other stream errors.",null,null],[17,"XCB_CONN_CLOSED_EXT_NOTSUPPORTED","","xcb connection shutdown because of extension not supported",null,null],[17,"XCB_CONN_CLOSED_MEM_INSUFFICIENT","","malloc(), calloc() and realloc() error upon failure, for eg ENOMEM",null,null],[17,"XCB_CONN_CLOSED_REQ_LEN_EXCEED","","Connection closed, exceeding request length that server accepts.",null,null],[17,"XCB_CONN_CLOSED_PARSE_ERR","","Connection closed, error during parsing display string.",null,null],[17,"XCB_CONN_CLOSED_INVALID_SCREEN","","Connection closed because the server does not have a screen matching the display.",null,null],[17,"XCB_CONN_CLOSED_FDPASSING_FAILED","","Connection closed because some FD passing operation failed",null,null],[17,"XCB_NONE","","XCB_NONE is the universal null resource or null atom parameter value for many core X requests",null,null],[17,"XCB_COPY_FROM_PARENT","","XCB_COPY_FROM_PARENT can be used for many xcb_create_window parameters",null,null],[17,"XCB_CURRENT_TIME","","XCB_CURRENT_TIME can be used in most requests that take an xcb_timestamp_t",null,null],[17,"XCB_NO_SYMBOL","","XCB_NO_SYMBOL fills in unused entries in xcb_keysym_t tables",null,null],[11,"clone","","",187,{"inputs":[{"name":"self"}],"output":{"name":"xcb_generic_reply_t"}}],[11,"clone","","",188,{"inputs":[{"name":"self"}],"output":{"name":"xcb_generic_event_t"}}],[11,"clone","","",189,{"inputs":[{"name":"self"}],"output":{"name":"xcb_ge_event_t"}}],[11,"fmt","","",190,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",190,{"inputs":[{"name":"self"}],"output":{"name":"xcb_generic_error_t"}}],[11,"clone","","",191,{"inputs":[{"name":"self"}],"output":{"name":"xcb_void_cookie_t"}}],[0,"xproto","xcb::ffi","",null,null],[3,"xcb_char2b_t","xcb::ffi::xproto","",null,null],[12,"byte1","","",193,null],[12,"byte2","","",193,null],[3,"xcb_char2b_iterator_t","","",null,null],[12,"data","","",194,null],[12,"rem","","",194,null],[12,"index","","",194,null],[3,"xcb_window_iterator_t","","",null,null],[12,"data","","",195,null],[12,"rem","","",195,null],[12,"index","","",195,null],[3,"xcb_pixmap_iterator_t","","",null,null],[12,"data","","",196,null],[12,"rem","","",196,null],[12,"index","","",196,null],[3,"xcb_cursor_iterator_t","","",null,null],[12,"data","","",197,null],[12,"rem","","",197,null],[12,"index","","",197,null],[3,"xcb_font_iterator_t","","",null,null],[12,"data","","",198,null],[12,"rem","","",198,null],[12,"index","","",198,null],[3,"xcb_gcontext_iterator_t","","",null,null],[12,"data","","",199,null],[12,"rem","","",199,null],[12,"index","","",199,null],[3,"xcb_colormap_iterator_t","","",null,null],[12,"data","","",200,null],[12,"rem","","",200,null],[12,"index","","",200,null],[3,"xcb_atom_iterator_t","","",null,null],[12,"data","","",201,null],[12,"rem","","",201,null],[12,"index","","",201,null],[3,"xcb_drawable_iterator_t","","",null,null],[12,"data","","",202,null],[12,"rem","","",202,null],[12,"index","","",202,null],[3,"xcb_fontable_iterator_t","","",null,null],[12,"data","","",203,null],[12,"rem","","",203,null],[12,"index","","",203,null],[3,"xcb_visualid_iterator_t","","",null,null],[12,"data","","",204,null],[12,"rem","","",204,null],[12,"index","","",204,null],[3,"xcb_timestamp_iterator_t","","",null,null],[12,"data","","",205,null],[12,"rem","","",205,null],[12,"index","","",205,null],[3,"xcb_keysym_iterator_t","","",null,null],[12,"data","","",206,null],[12,"rem","","",206,null],[12,"index","","",206,null],[3,"xcb_keycode_iterator_t","","",null,null],[12,"data","","",207,null],[12,"rem","","",207,null],[12,"index","","",207,null],[3,"xcb_button_iterator_t","","",null,null],[12,"data","","",208,null],[12,"rem","","",208,null],[12,"index","","",208,null],[3,"xcb_point_t","","",null,null],[12,"x","","",209,null],[12,"y","","",209,null],[3,"xcb_point_iterator_t","","",null,null],[12,"data","","",210,null],[12,"rem","","",210,null],[12,"index","","",210,null],[3,"xcb_rectangle_t","","",null,null],[12,"x","","",211,null],[12,"y","","",211,null],[12,"width","","",211,null],[12,"height","","",211,null],[3,"xcb_rectangle_iterator_t","","",null,null],[12,"data","","",212,null],[12,"rem","","",212,null],[12,"index","","",212,null],[3,"xcb_arc_t","","",null,null],[12,"x","","",213,null],[12,"y","","",213,null],[12,"width","","",213,null],[12,"height","","",213,null],[12,"angle1","","",213,null],[12,"angle2","","",213,null],[3,"xcb_arc_iterator_t","","",null,null],[12,"data","","",214,null],[12,"rem","","",214,null],[12,"index","","",214,null],[3,"xcb_format_t","","",null,null],[12,"depth","","",215,null],[12,"bits_per_pixel","","",215,null],[12,"scanline_pad","","",215,null],[12,"pad0","","",215,null],[3,"xcb_format_iterator_t","","",null,null],[12,"data","","",216,null],[12,"rem","","",216,null],[12,"index","","",216,null],[3,"xcb_visualtype_t","","",null,null],[12,"visual_id","","",217,null],[12,"class","","",217,null],[12,"bits_per_rgb_value","","",217,null],[12,"colormap_entries","","",217,null],[12,"red_mask","","",217,null],[12,"green_mask","","",217,null],[12,"blue_mask","","",217,null],[12,"pad0","","",217,null],[3,"xcb_visualtype_iterator_t","","",null,null],[12,"data","","",218,null],[12,"rem","","",218,null],[12,"index","","",218,null],[3,"xcb_depth_t","","",null,null],[12,"depth","","",219,null],[12,"pad0","","",219,null],[12,"visuals_len","","",219,null],[12,"pad1","","",219,null],[3,"xcb_depth_iterator_t","","",null,null],[12,"data","","",220,null],[12,"rem","","",220,null],[12,"index","","",220,null],[3,"xcb_screen_t","","",null,null],[12,"root","","",221,null],[12,"default_colormap","","",221,null],[12,"white_pixel","","",221,null],[12,"black_pixel","","",221,null],[12,"current_input_masks","","",221,null],[12,"width_in_pixels","","",221,null],[12,"height_in_pixels","","",221,null],[12,"width_in_millimeters","","",221,null],[12,"height_in_millimeters","","",221,null],[12,"min_installed_maps","","",221,null],[12,"max_installed_maps","","",221,null],[12,"root_visual","","",221,null],[12,"backing_stores","","",221,null],[12,"save_unders","","",221,null],[12,"root_depth","","",221,null],[12,"allowed_depths_len","","",221,null],[3,"xcb_screen_iterator_t","","",null,null],[12,"data","","",222,null],[12,"rem","","",222,null],[12,"index","","",222,null],[3,"xcb_setup_request_t","","",null,null],[12,"byte_order","","",223,null],[12,"pad0","","",223,null],[12,"protocol_major_version","","",223,null],[12,"protocol_minor_version","","",223,null],[12,"authorization_protocol_name_len","","",223,null],[12,"authorization_protocol_data_len","","",223,null],[12,"pad1","","",223,null],[3,"xcb_setup_request_iterator_t","","",null,null],[12,"data","","",224,null],[12,"rem","","",224,null],[12,"index","","",224,null],[3,"xcb_setup_failed_t","","",null,null],[12,"status","","",225,null],[12,"reason_len","","",225,null],[12,"protocol_major_version","","",225,null],[12,"protocol_minor_version","","",225,null],[12,"length","","",225,null],[3,"xcb_setup_failed_iterator_t","","",null,null],[12,"data","","",226,null],[12,"rem","","",226,null],[12,"index","","",226,null],[3,"xcb_setup_authenticate_t","","",null,null],[12,"status","","",227,null],[12,"pad0","","",227,null],[12,"length","","",227,null],[3,"xcb_setup_authenticate_iterator_t","","",null,null],[12,"data","","",228,null],[12,"rem","","",228,null],[12,"index","","",228,null],[3,"xcb_setup_t","","",null,null],[12,"status","","",229,null],[12,"pad0","","",229,null],[12,"protocol_major_version","","",229,null],[12,"protocol_minor_version","","",229,null],[12,"length","","",229,null],[12,"release_number","","",229,null],[12,"resource_id_base","","",229,null],[12,"resource_id_mask","","",229,null],[12,"motion_buffer_size","","",229,null],[12,"vendor_len","","",229,null],[12,"maximum_request_length","","",229,null],[12,"roots_len","","",229,null],[12,"pixmap_formats_len","","",229,null],[12,"image_byte_order","","",229,null],[12,"bitmap_format_bit_order","","",229,null],[12,"bitmap_format_scanline_unit","","",229,null],[12,"bitmap_format_scanline_pad","","",229,null],[12,"min_keycode","","",229,null],[12,"max_keycode","","",229,null],[12,"pad1","","",229,null],[3,"xcb_setup_iterator_t","","",null,null],[12,"data","","",230,null],[12,"rem","","",230,null],[12,"index","","",230,null],[3,"xcb_key_press_event_t","","a key was pressed/released",null,null],[12,"response_type","","",231,null],[12,"detail","","The keycode (a number representing a physical key on the keyboard) of the key which was pressed.",231,null],[12,"sequence","","",231,null],[12,"time","","Time when the event was generated (in milliseconds).",231,null],[12,"root","","The root window of `child`.",231,null],[12,"event","","",231,null],[12,"child","","",231,null],[12,"root_x","","The X coordinate of the pointer relative to the `root` window at the time of the event.",231,null],[12,"root_y","","The Y coordinate of the pointer relative to the `root` window at the time of the event.",231,null],[12,"event_x","","If `same_screen` is true, this is the X coordinate relative to the `event` window's origin. Otherwise, `event_x` will be set to zero.",231,null],[12,"event_y","","If `same_screen` is true, this is the Y coordinate relative to the `event` window's origin. Otherwise, `event_y` will be set to zero.",231,null],[12,"state","","The logical state of the pointer buttons and modifier keys just prior to the event.",231,null],[12,"same_screen","","Whether the `event` window is on the same screen as the `root` window.",231,null],[12,"pad0","","",231,null],[3,"xcb_button_press_event_t","","a mouse button was pressed/released",null,null],[12,"response_type","","",232,null],[12,"detail","","The keycode (a number representing a physical key on the keyboard) of the key which was pressed.",232,null],[12,"sequence","","",232,null],[12,"time","","Time when the event was generated (in milliseconds).",232,null],[12,"root","","The root window of `child`.",232,null],[12,"event","","",232,null],[12,"child","","",232,null],[12,"root_x","","The X coordinate of the pointer relative to the `root` window at the time of the event.",232,null],[12,"root_y","","The Y coordinate of the pointer relative to the `root` window at the time of the event.",232,null],[12,"event_x","","If `same_screen` is true, this is the X coordinate relative to the `event` window's origin. Otherwise, `event_x` will be set to zero.",232,null],[12,"event_y","","If `same_screen` is true, this is the Y coordinate relative to the `event` window's origin. Otherwise, `event_y` will be set to zero.",232,null],[12,"state","","The logical state of the pointer buttons and modifier keys just prior to the event.",232,null],[12,"same_screen","","Whether the `event` window is on the same screen as the `root` window.",232,null],[12,"pad0","","",232,null],[3,"xcb_motion_notify_event_t","","a key was pressed",null,null],[12,"response_type","","",233,null],[12,"detail","","The keycode (a number representing a physical key on the keyboard) of the key which was pressed.",233,null],[12,"sequence","","",233,null],[12,"time","","Time when the event was generated (in milliseconds).",233,null],[12,"root","","The root window of `child`.",233,null],[12,"event","","",233,null],[12,"child","","",233,null],[12,"root_x","","The X coordinate of the pointer relative to the `root` window at the time of the event.",233,null],[12,"root_y","","The Y coordinate of the pointer relative to the `root` window at the time of the event.",233,null],[12,"event_x","","If `same_screen` is true, this is the X coordinate relative to the `event` window's origin. Otherwise, `event_x` will be set to zero.",233,null],[12,"event_y","","If `same_screen` is true, this is the Y coordinate relative to the `event` window's origin. Otherwise, `event_y` will be set to zero.",233,null],[12,"state","","The logical state of the pointer buttons and modifier keys just prior to the event.",233,null],[12,"same_screen","","Whether the `event` window is on the same screen as the `root` window.",233,null],[12,"pad0","","",233,null],[3,"xcb_enter_notify_event_t","","the pointer is in a different window",null,null],[12,"response_type","","",234,null],[12,"detail","","",234,null],[12,"sequence","","",234,null],[12,"time","","",234,null],[12,"root","","The root window for the final cursor position.",234,null],[12,"event","","The window on which the event was generated.",234,null],[12,"child","","If the `event` window has subwindows and the final pointer position is in one of them, then `child` is set to that subwindow, `XCB_WINDOW_NONE` otherwise.",234,null],[12,"root_x","","The pointer X coordinate relative to `root`'s origin at the time of the event.",234,null],[12,"root_y","","The pointer Y coordinate relative to `root`'s origin at the time of the event.",234,null],[12,"event_x","","If `event` is on the same screen as `root`, this is the pointer X coordinate relative to the event window's origin.",234,null],[12,"event_y","","If `event` is on the same screen as `root`, this is the pointer Y coordinate relative to the event window's origin.",234,null],[12,"state","","",234,null],[12,"mode","","",234,null],[12,"same_screen_focus","","",234,null],[3,"xcb_focus_in_event_t","","NOT YET DOCUMENTED",null,null],[12,"response_type","","",235,null],[12,"detail","","",235,null],[12,"sequence","","",235,null],[12,"event","","The window on which the focus event was generated. This is the window used by the X server to report the event.",235,null],[12,"mode","","",235,null],[12,"pad0","","",235,null],[3,"xcb_keymap_notify_event_t","","",null,null],[12,"response_type","","",236,null],[12,"keys","","",236,null],[3,"xcb_expose_event_t","","NOT YET DOCUMENTED",null,null],[12,"response_type","","",237,null],[12,"pad0","","",237,null],[12,"sequence","","",237,null],[12,"window","","The exposed (damaged) window.",237,null],[12,"x","","The X coordinate of the left-upper corner of the exposed rectangle, relative to the `window`'s origin.",237,null],[12,"y","","The Y coordinate of the left-upper corner of the exposed rectangle, relative to the `window`'s origin.",237,null],[12,"width","","The width of the exposed rectangle.",237,null],[12,"height","","The height of the exposed rectangle.",237,null],[12,"count","","The amount of `Expose` events following this one. Simple applications that do not want to optimize redisplay by distinguishing between subareas of its window can just ignore all Expose events with nonzero counts and perform full redisplays on events with zero counts.",237,null],[12,"pad1","","",237,null],[3,"xcb_graphics_exposure_event_t","","",null,null],[12,"response_type","","",238,null],[12,"pad0","","",238,null],[12,"sequence","","",238,null],[12,"drawable","","",238,null],[12,"x","","",238,null],[12,"y","","",238,null],[12,"width","","",238,null],[12,"height","","",238,null],[12,"minor_opcode","","",238,null],[12,"count","","",238,null],[12,"major_opcode","","",238,null],[12,"pad1","","",238,null],[3,"xcb_no_exposure_event_t","","",null,null],[12,"response_type","","",239,null],[12,"pad0","","",239,null],[12,"sequence","","",239,null],[12,"drawable","","",239,null],[12,"minor_opcode","","",239,null],[12,"major_opcode","","",239,null],[12,"pad1","","",239,null],[3,"xcb_visibility_notify_event_t","","",null,null],[12,"response_type","","",240,null],[12,"pad0","","",240,null],[12,"sequence","","",240,null],[12,"window","","",240,null],[12,"state","","",240,null],[12,"pad1","","",240,null],[3,"xcb_create_notify_event_t","","",null,null],[12,"response_type","","",241,null],[12,"pad0","","",241,null],[12,"sequence","","",241,null],[12,"parent","","",241,null],[12,"window","","",241,null],[12,"x","","",241,null],[12,"y","","",241,null],[12,"width","","",241,null],[12,"height","","",241,null],[12,"border_width","","",241,null],[12,"override_redirect","","",241,null],[12,"pad1","","",241,null],[3,"xcb_destroy_notify_event_t","","a window is destroyed",null,null],[12,"response_type","","",242,null],[12,"pad0","","",242,null],[12,"sequence","","",242,null],[12,"event","","The reconfigured window or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",242,null],[12,"window","","The window that is destroyed.",242,null],[3,"xcb_unmap_notify_event_t","","a window is unmapped",null,null],[12,"response_type","","",243,null],[12,"pad0","","",243,null],[12,"sequence","","",243,null],[12,"event","","The reconfigured window or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",243,null],[12,"window","","The window that was unmapped.",243,null],[12,"from_configure","","Set to 1 if the event was generated as a result of a resizing of the window's parent when `window` had a win_gravity of `UnmapGravity`.",243,null],[12,"pad1","","",243,null],[3,"xcb_map_notify_event_t","","a window was mapped",null,null],[12,"response_type","","",244,null],[12,"pad0","","",244,null],[12,"sequence","","",244,null],[12,"event","","The window which was mapped or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",244,null],[12,"window","","The window that was mapped.",244,null],[12,"override_redirect","","Window managers should ignore this window if `override_redirect` is 1.",244,null],[12,"pad1","","",244,null],[3,"xcb_map_request_event_t","","window wants to be mapped",null,null],[12,"response_type","","",245,null],[12,"pad0","","",245,null],[12,"sequence","","",245,null],[12,"parent","","The parent of `window`.",245,null],[12,"window","","The window to be mapped.",245,null],[3,"xcb_reparent_notify_event_t","","",null,null],[12,"response_type","","",246,null],[12,"pad0","","",246,null],[12,"sequence","","",246,null],[12,"event","","",246,null],[12,"window","","",246,null],[12,"parent","","",246,null],[12,"x","","",246,null],[12,"y","","",246,null],[12,"override_redirect","","",246,null],[12,"pad1","","",246,null],[3,"xcb_configure_notify_event_t","","NOT YET DOCUMENTED",null,null],[12,"response_type","","",247,null],[12,"pad0","","",247,null],[12,"sequence","","",247,null],[12,"event","","The reconfigured window or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",247,null],[12,"window","","The window whose size, position, border, and/or stacking order was changed.",247,null],[12,"above_sibling","","If `XCB_NONE`, the `window` is on the bottom of the stack with respect to sibling windows. However, if set to a sibling window, the `window` is placed on top of this sibling window.",247,null],[12,"x","","The X coordinate of the upper-left outside corner of `window`, relative to the parent window's origin.",247,null],[12,"y","","The Y coordinate of the upper-left outside corner of `window`, relative to the parent window's origin.",247,null],[12,"width","","The inside width of `window`, not including the border.",247,null],[12,"height","","The inside height of `window`, not including the border.",247,null],[12,"border_width","","The border width of `window`.",247,null],[12,"override_redirect","","Window managers should ignore this window if `override_redirect` is 1.",247,null],[12,"pad1","","",247,null],[3,"xcb_configure_request_event_t","","",null,null],[12,"response_type","","",248,null],[12,"stack_mode","","",248,null],[12,"sequence","","",248,null],[12,"parent","","",248,null],[12,"window","","",248,null],[12,"sibling","","",248,null],[12,"x","","",248,null],[12,"y","","",248,null],[12,"width","","",248,null],[12,"height","","",248,null],[12,"border_width","","",248,null],[12,"value_mask","","",248,null],[3,"xcb_gravity_notify_event_t","","",null,null],[12,"response_type","","",249,null],[12,"pad0","","",249,null],[12,"sequence","","",249,null],[12,"event","","",249,null],[12,"window","","",249,null],[12,"x","","",249,null],[12,"y","","",249,null],[3,"xcb_resize_request_event_t","","",null,null],[12,"response_type","","",250,null],[12,"pad0","","",250,null],[12,"sequence","","",250,null],[12,"window","","",250,null],[12,"width","","",250,null],[12,"height","","",250,null],[3,"xcb_circulate_notify_event_t","","NOT YET DOCUMENTED",null,null],[12,"response_type","","",251,null],[12,"pad0","","",251,null],[12,"sequence","","",251,null],[12,"event","","Either the restacked window or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",251,null],[12,"window","","The restacked window.",251,null],[12,"pad1","","",251,null],[12,"place","","",251,null],[12,"pad2","","",251,null],[3,"xcb_property_notify_event_t","","a window property changed",null,null],[12,"response_type","","",252,null],[12,"pad0","","",252,null],[12,"sequence","","",252,null],[12,"window","","The window whose associated property was changed.",252,null],[12,"atom","","The property's atom, to indicate which property was changed.",252,null],[12,"time","","A timestamp of the server time when the property was changed.",252,null],[12,"state","","",252,null],[12,"pad1","","",252,null],[3,"xcb_selection_clear_event_t","","",null,null],[12,"response_type","","",253,null],[12,"pad0","","",253,null],[12,"sequence","","",253,null],[12,"time","","",253,null],[12,"owner","","",253,null],[12,"selection","","",253,null],[3,"xcb_selection_request_event_t","","",null,null],[12,"response_type","","",254,null],[12,"pad0","","",254,null],[12,"sequence","","",254,null],[12,"time","","",254,null],[12,"owner","","",254,null],[12,"requestor","","",254,null],[12,"selection","","",254,null],[12,"target","","",254,null],[12,"property","","",254,null],[3,"xcb_selection_notify_event_t","","",null,null],[12,"response_type","","",255,null],[12,"pad0","","",255,null],[12,"sequence","","",255,null],[12,"time","","",255,null],[12,"requestor","","",255,null],[12,"selection","","",255,null],[12,"target","","",255,null],[12,"property","","",255,null],[3,"xcb_colormap_notify_event_t","","the colormap for some window changed",null,null],[12,"response_type","","",256,null],[12,"pad0","","",256,null],[12,"sequence","","",256,null],[12,"window","","The window whose associated colormap is changed, installed or uninstalled.",256,null],[12,"colormap","","The colormap which is changed, installed or uninstalled. This is `XCB_NONE` when the colormap is changed by a call to `FreeColormap`.",256,null],[12,"new_","","",256,null],[12,"state","","",256,null],[12,"pad1","","",256,null],[3,"xcb_client_message_data_t","","",null,null],[12,"data","","",257,null],[3,"xcb_client_message_data_iterator_t","","",null,null],[12,"data","","",258,null],[12,"rem","","",258,null],[12,"index","","",258,null],[3,"xcb_client_message_event_t","","NOT YET DOCUMENTED",null,null],[12,"response_type","","",259,null],[12,"format","","Specifies how to interpret `data`. Can be either 8, 16 or 32.",259,null],[12,"sequence","","",259,null],[12,"window","","",259,null],[12,"type_","","An atom which indicates how the data should be interpreted by the receiving client.",259,null],[12,"data","","The data itself (20 bytes max).",259,null],[3,"xcb_mapping_notify_event_t","","keyboard mapping changed",null,null],[12,"response_type","","",260,null],[12,"pad0","","",260,null],[12,"sequence","","",260,null],[12,"request","","",260,null],[12,"first_keycode","","The first number in the range of the altered mapping.",260,null],[12,"count","","The number of keycodes altered.",260,null],[12,"pad1","","",260,null],[3,"xcb_ge_generic_event_t","","generic event (with length)",null,null],[12,"response_type","","",261,null],[12,"extension","","The major opcode of the extension creating this event",261,null],[12,"sequence","","",261,null],[12,"length","","The amount (in 4-byte units) of data beyond 32 bytes",261,null],[12,"event_type","","",261,null],[12,"pad0","","",261,null],[12,"full_sequence","","",261,null],[3,"xcb_request_error_t","","",null,null],[12,"response_type","","",262,null],[12,"error_code","","",262,null],[12,"sequence","","",262,null],[12,"bad_value","","",262,null],[12,"minor_opcode","","",262,null],[12,"major_opcode","","",262,null],[12,"pad0","","",262,null],[3,"xcb_value_error_t","","",null,null],[12,"response_type","","",263,null],[12,"error_code","","",263,null],[12,"sequence","","",263,null],[12,"bad_value","","",263,null],[12,"minor_opcode","","",263,null],[12,"major_opcode","","",263,null],[12,"pad0","","",263,null],[3,"xcb_create_window_request_t","","Creates a window",null,null],[12,"major_opcode","","",264,null],[12,"depth","","Specifies the new window's depth (TODO: what unit?).",264,null],[12,"length","","",264,null],[12,"wid","","The ID with which you will refer to the new window, created by `xcb_generate_id`.",264,null],[12,"parent","","The parent window of the new window.",264,null],[12,"x","","The X coordinate of the new window.",264,null],[12,"y","","The Y coordinate of the new window.",264,null],[12,"width","","The width of the new window.",264,null],[12,"height","","The height of the new window.",264,null],[12,"border_width","","TODO:",264,null],[12,"class","","",264,null],[12,"visual","","Specifies the id for the new window's visual.",264,null],[12,"value_mask","","",264,null],[3,"xcb_change_window_attributes_request_t","","change window attributes",null,null],[12,"major_opcode","","",265,null],[12,"pad0","","",265,null],[12,"length","","",265,null],[12,"window","","The window to change.",265,null],[12,"value_mask","","",265,null],[3,"xcb_get_window_attributes_request_t","","Gets window attributes",null,null],[12,"major_opcode","","",266,null],[12,"pad0","","",266,null],[12,"length","","",266,null],[12,"window","","The window to get the attributes from.",266,null],[3,"xcb_get_window_attributes_cookie_t","","",null,null],[3,"xcb_get_window_attributes_reply_t","","",null,null],[12,"response_type","","",267,null],[12,"backing_store","","",267,null],[12,"sequence","","",267,null],[12,"length","","",267,null],[12,"visual","","The associated visual structure of `window`.",267,null],[12,"class","","",267,null],[12,"bit_gravity","","",267,null],[12,"win_gravity","","",267,null],[12,"backing_planes","","Planes to be preserved if possible.",267,null],[12,"backing_pixel","","Value to be used when restoring planes.",267,null],[12,"save_under","","Boolean, should bits under be saved?",267,null],[12,"map_is_installed","","",267,null],[12,"map_state","","",267,null],[12,"override_redirect","","Window managers should ignore this window if `override_redirect` is 1.",267,null],[12,"colormap","","Color map to be associated with window.",267,null],[12,"all_event_masks","","Set of events all people have interest in.",267,null],[12,"your_event_mask","","My event mask.",267,null],[12,"do_not_propagate_mask","","Set of events that should not propagate.",267,null],[12,"pad0","","",267,null],[3,"xcb_destroy_window_request_t","","Destroys a window",null,null],[12,"major_opcode","","",268,null],[12,"pad0","","",268,null],[12,"length","","",268,null],[12,"window","","The window to destroy.",268,null],[3,"xcb_destroy_subwindows_request_t","","",null,null],[12,"major_opcode","","",269,null],[12,"pad0","","",269,null],[12,"length","","",269,null],[12,"window","","",269,null],[3,"xcb_change_save_set_request_t","","Changes a client's save set",null,null],[12,"major_opcode","","",270,null],[12,"mode","","Insert to add the specified window to the save set or Delete to delete it from the save set.",270,null],[12,"length","","",270,null],[12,"window","","The window to add or delete to/from your save set.",270,null],[3,"xcb_reparent_window_request_t","","Reparents a window",null,null],[12,"major_opcode","","",271,null],[12,"pad0","","",271,null],[12,"length","","",271,null],[12,"window","","The window to reparent.",271,null],[12,"parent","","The new parent of the window.",271,null],[12,"x","","The X position of the window within its new parent.",271,null],[12,"y","","The Y position of the window within its new parent.",271,null],[3,"xcb_map_window_request_t","","Makes a window visible",null,null],[12,"major_opcode","","",272,null],[12,"pad0","","",272,null],[12,"length","","",272,null],[12,"window","","The window to make visible.",272,null],[3,"xcb_map_subwindows_request_t","","",null,null],[12,"major_opcode","","",273,null],[12,"pad0","","",273,null],[12,"length","","",273,null],[12,"window","","",273,null],[3,"xcb_unmap_window_request_t","","Makes a window invisible",null,null],[12,"major_opcode","","",274,null],[12,"pad0","","",274,null],[12,"length","","",274,null],[12,"window","","The window to make invisible.",274,null],[3,"xcb_unmap_subwindows_request_t","","",null,null],[12,"major_opcode","","",275,null],[12,"pad0","","",275,null],[12,"length","","",275,null],[12,"window","","",275,null],[3,"xcb_configure_window_request_t","","Configures window attributes",null,null],[12,"major_opcode","","",276,null],[12,"pad0","","",276,null],[12,"length","","",276,null],[12,"window","","The window to configure.",276,null],[12,"value_mask","","Bitmask of attributes to change.",276,null],[12,"pad1","","",276,null],[3,"xcb_circulate_window_request_t","","Change window stacking order",null,null],[12,"major_opcode","","",277,null],[12,"direction","","",277,null],[12,"length","","",277,null],[12,"window","","The window to raise/lower (depending on `direction`).",277,null],[3,"xcb_get_geometry_request_t","","Get current window geometry",null,null],[12,"major_opcode","","",278,null],[12,"pad0","","",278,null],[12,"length","","",278,null],[12,"drawable","","The drawable (`Window` or `Pixmap`) of which the geometry will be received.",278,null],[3,"xcb_get_geometry_cookie_t","","",null,null],[3,"xcb_get_geometry_reply_t","","",null,null],[12,"response_type","","",279,null],[12,"depth","","The depth of the drawable (bits per pixel for the object).",279,null],[12,"sequence","","",279,null],[12,"length","","",279,null],[12,"root","","Root window of the screen containing `drawable`.",279,null],[12,"x","","The X coordinate of `drawable`. If `drawable` is a window, the coordinate specifies the upper-left outer corner relative to its parent's origin. If `drawable` is a pixmap, the X coordinate is always 0.",279,null],[12,"y","","The Y coordinate of `drawable`. If `drawable` is a window, the coordinate specifies the upper-left outer corner relative to its parent's origin. If `drawable` is a pixmap, the Y coordinate is always 0.",279,null],[12,"width","","The width of `drawable`.",279,null],[12,"height","","The height of `drawable`.",279,null],[12,"border_width","","The border width (in pixels).",279,null],[12,"pad0","","",279,null],[3,"xcb_query_tree_request_t","","query the window tree",null,null],[12,"major_opcode","","",280,null],[12,"pad0","","",280,null],[12,"length","","",280,null],[12,"window","","The `window` to query.",280,null],[3,"xcb_query_tree_cookie_t","","",null,null],[3,"xcb_query_tree_reply_t","","",null,null],[12,"response_type","","",281,null],[12,"pad0","","",281,null],[12,"sequence","","",281,null],[12,"length","","",281,null],[12,"root","","The root window of `window`.",281,null],[12,"parent","","The parent window of `window`.",281,null],[12,"children_len","","The number of child windows.",281,null],[12,"pad1","","",281,null],[3,"xcb_intern_atom_request_t","","Get atom identifier by name",null,null],[12,"major_opcode","","",282,null],[12,"only_if_exists","","Return a valid atom id only if the atom already exists.",282,null],[12,"length","","",282,null],[12,"name_len","","The length of the following `name`.",282,null],[12,"pad0","","",282,null],[3,"xcb_intern_atom_cookie_t","","",null,null],[3,"xcb_intern_atom_reply_t","","",null,null],[12,"response_type","","",283,null],[12,"pad0","","",283,null],[12,"sequence","","",283,null],[12,"length","","",283,null],[12,"atom","","",283,null],[3,"xcb_get_atom_name_request_t","","",null,null],[12,"major_opcode","","",284,null],[12,"pad0","","",284,null],[12,"length","","",284,null],[12,"atom","","",284,null],[3,"xcb_get_atom_name_cookie_t","","",null,null],[3,"xcb_get_atom_name_reply_t","","",null,null],[12,"response_type","","",285,null],[12,"pad0","","",285,null],[12,"sequence","","",285,null],[12,"length","","",285,null],[12,"name_len","","",285,null],[12,"pad1","","",285,null],[3,"xcb_change_property_request_t","","Changes a window property",null,null],[12,"major_opcode","","",286,null],[12,"mode","","",286,null],[12,"length","","",286,null],[12,"window","","The window whose property you want to change.",286,null],[12,"property","","The property you want to change (an atom).",286,null],[12,"type_","","The type of the property you want to change (an atom).",286,null],[12,"format","","Specifies whether the data should be viewed as a list of 8-bit, 16-bit or 32-bit quantities. Possible values are 8, 16 and 32. This information allows the X server to correctly perform byte-swap operations as necessary.",286,null],[12,"pad0","","",286,null],[12,"data_len","","Specifies the number of elements (see `format`).",286,null],[3,"xcb_delete_property_request_t","","",null,null],[12,"major_opcode","","",287,null],[12,"pad0","","",287,null],[12,"length","","",287,null],[12,"window","","",287,null],[12,"property","","",287,null],[3,"xcb_get_property_request_t","","Gets a window property",null,null],[12,"major_opcode","","",288,null],[12,"delete","","Whether the property should actually be deleted. For deleting a property, the specified `type` has to match the actual property type.",288,null],[12,"length","","",288,null],[12,"window","","The window whose property you want to get.",288,null],[12,"property","","The property you want to get (an atom).",288,null],[12,"type_","","The type of the property you want to get (an atom).",288,null],[12,"long_offset","","Specifies the offset (in 32-bit multiples) in the specified property where the data is to be retrieved.",288,null],[12,"long_length","","Specifies how many 32-bit multiples of data should be retrieved (e.g. if you set `long_length` to 4, you will receive 16 bytes of data).",288,null],[3,"xcb_get_property_cookie_t","","",null,null],[3,"xcb_get_property_reply_t","","",null,null],[12,"response_type","","",289,null],[12,"format","","Specifies whether the data should be viewed as a list of 8-bit, 16-bit, or 32-bit quantities. Possible values are 8, 16, and 32. This information allows the X server to correctly perform byte-swap operations as necessary.",289,null],[12,"sequence","","",289,null],[12,"length","","",289,null],[12,"type_","","The actual type of the property (an atom).",289,null],[12,"bytes_after","","The number of bytes remaining to be read in the property if a partial read was performed.",289,null],[12,"value_len","","The length of value. You should use the corresponding accessor instead of this field.",289,null],[12,"pad0","","",289,null],[3,"xcb_list_properties_request_t","","",null,null],[12,"major_opcode","","",290,null],[12,"pad0","","",290,null],[12,"length","","",290,null],[12,"window","","",290,null],[3,"xcb_list_properties_cookie_t","","",null,null],[3,"xcb_list_properties_reply_t","","",null,null],[12,"response_type","","",291,null],[12,"pad0","","",291,null],[12,"sequence","","",291,null],[12,"length","","",291,null],[12,"atoms_len","","",291,null],[12,"pad1","","",291,null],[3,"xcb_set_selection_owner_request_t","","Sets the owner of a selection",null,null],[12,"major_opcode","","",292,null],[12,"pad0","","",292,null],[12,"length","","",292,null],[12,"owner","","The new owner of the selection.",292,null],[12,"selection","","The selection.",292,null],[12,"time","","Timestamp to avoid race conditions when running X over the network.",292,null],[3,"xcb_get_selection_owner_request_t","","Gets the owner of a selection",null,null],[12,"major_opcode","","",293,null],[12,"pad0","","",293,null],[12,"length","","",293,null],[12,"selection","","The selection.",293,null],[3,"xcb_get_selection_owner_cookie_t","","",null,null],[3,"xcb_get_selection_owner_reply_t","","",null,null],[12,"response_type","","",294,null],[12,"pad0","","",294,null],[12,"sequence","","",294,null],[12,"length","","",294,null],[12,"owner","","The current selection owner window.",294,null],[3,"xcb_convert_selection_request_t","","",null,null],[12,"major_opcode","","",295,null],[12,"pad0","","",295,null],[12,"length","","",295,null],[12,"requestor","","",295,null],[12,"selection","","",295,null],[12,"target","","",295,null],[12,"property","","",295,null],[12,"time","","",295,null],[3,"xcb_send_event_request_t","","send an event",null,null],[12,"major_opcode","","",296,null],[12,"propagate","","If `propagate` is true and no clients have selected any event on `destination`, the destination is replaced with the closest ancestor of `destination` for which some client has selected a type in `event_mask` and for which no intervening window has that type in its do-not-propagate-mask. If no such window exists or if the window is an ancestor of the focus window and `InputFocus` was originally specified as the destination, the event is not sent to any clients. Otherwise, the event is reported to every client selecting on the final destination any of the types specified in `event_mask`.",296,null],[12,"length","","",296,null],[12,"destination","","The window to send this event to. Every client which selects any event within `event_mask` on `destination` will get the event.",296,null],[12,"event_mask","","Event_mask for determining which clients should receive the specified event. See `destination` and `propagate`.",296,null],[12,"event","","The event to send to the specified `destination`.",296,null],[3,"xcb_grab_pointer_request_t","","Grab the pointer",null,null],[12,"major_opcode","","",297,null],[12,"owner_events","","If 1, the `grab_window` will still get the pointer events. If 0, events are not reported to the `grab_window`.",297,null],[12,"length","","",297,null],[12,"grab_window","","Specifies the window on which the pointer should be grabbed.",297,null],[12,"event_mask","","Specifies which pointer events are reported to the client.",297,null],[12,"pointer_mode","","",297,null],[12,"keyboard_mode","","",297,null],[12,"confine_to","","Specifies the window to confine the pointer in (the user will not be able to move the pointer out of that window).",297,null],[12,"cursor","","Specifies the cursor that should be displayed or `XCB_NONE` to not change the cursor.",297,null],[12,"time","","The time argument allows you to avoid certain circumstances that come up if applications take a long time to respond or if there are long network delays. Consider a situation where you have two applications, both of which normally grab the pointer when clicked on. If both applications specify the timestamp from the event, the second application may wake up faster and successfully grab the pointer before the first application. The first application then will get an indication that the other application grabbed the pointer before its request was processed.",297,null],[3,"xcb_grab_pointer_cookie_t","","",null,null],[3,"xcb_grab_pointer_reply_t","","",null,null],[12,"response_type","","",298,null],[12,"status","","",298,null],[12,"sequence","","",298,null],[12,"length","","",298,null],[3,"xcb_ungrab_pointer_request_t","","release the pointer",null,null],[12,"major_opcode","","",299,null],[12,"pad0","","",299,null],[12,"length","","",299,null],[12,"time","","Timestamp to avoid race conditions when running X over the network.",299,null],[3,"xcb_grab_button_request_t","","Grab pointer button(s)",null,null],[12,"major_opcode","","",300,null],[12,"owner_events","","If 1, the `grab_window` will still get the pointer events. If 0, events are not reported to the `grab_window`.",300,null],[12,"length","","",300,null],[12,"grab_window","","Specifies the window on which the pointer should be grabbed.",300,null],[12,"event_mask","","Specifies which pointer events are reported to the client.",300,null],[12,"pointer_mode","","",300,null],[12,"keyboard_mode","","",300,null],[12,"confine_to","","Specifies the window to confine the pointer in (the user will not be able to move the pointer out of that window).",300,null],[12,"cursor","","Specifies the cursor that should be displayed or `XCB_NONE` to not change the cursor.",300,null],[12,"button","","",300,null],[12,"pad0","","",300,null],[12,"modifiers","","The modifiers to grab.",300,null],[3,"xcb_ungrab_button_request_t","","",null,null],[12,"major_opcode","","",301,null],[12,"button","","",301,null],[12,"length","","",301,null],[12,"grab_window","","",301,null],[12,"modifiers","","",301,null],[12,"pad0","","",301,null],[3,"xcb_change_active_pointer_grab_request_t","","",null,null],[12,"major_opcode","","",302,null],[12,"pad0","","",302,null],[12,"length","","",302,null],[12,"cursor","","",302,null],[12,"time","","",302,null],[12,"event_mask","","",302,null],[12,"pad1","","",302,null],[3,"xcb_grab_keyboard_request_t","","Grab the keyboard",null,null],[12,"major_opcode","","",303,null],[12,"owner_events","","If 1, the `grab_window` will still get the pointer events. If 0, events are not reported to the `grab_window`.",303,null],[12,"length","","",303,null],[12,"grab_window","","Specifies the window on which the pointer should be grabbed.",303,null],[12,"time","","Timestamp to avoid race conditions when running X over the network.",303,null],[12,"pointer_mode","","",303,null],[12,"keyboard_mode","","",303,null],[12,"pad0","","",303,null],[3,"xcb_grab_keyboard_cookie_t","","",null,null],[3,"xcb_grab_keyboard_reply_t","","",null,null],[12,"response_type","","",304,null],[12,"status","","",304,null],[12,"sequence","","",304,null],[12,"length","","",304,null],[3,"xcb_ungrab_keyboard_request_t","","",null,null],[12,"major_opcode","","",305,null],[12,"pad0","","",305,null],[12,"length","","",305,null],[12,"time","","",305,null],[3,"xcb_grab_key_request_t","","Grab keyboard key(s)",null,null],[12,"major_opcode","","",306,null],[12,"owner_events","","If 1, the `grab_window` will still get the pointer events. If 0, events are not reported to the `grab_window`.",306,null],[12,"length","","",306,null],[12,"grab_window","","Specifies the window on which the pointer should be grabbed.",306,null],[12,"modifiers","","The modifiers to grab.",306,null],[12,"key","","The keycode of the key to grab.",306,null],[12,"pointer_mode","","",306,null],[12,"keyboard_mode","","",306,null],[12,"pad0","","",306,null],[3,"xcb_ungrab_key_request_t","","release a key combination",null,null],[12,"major_opcode","","",307,null],[12,"key","","The keycode of the specified key combination.",307,null],[12,"length","","",307,null],[12,"grab_window","","The window on which the grabbed key combination will be released.",307,null],[12,"modifiers","","The modifiers of the specified key combination.",307,null],[12,"pad0","","",307,null],[3,"xcb_allow_events_request_t","","release queued events",null,null],[12,"major_opcode","","",308,null],[12,"mode","","",308,null],[12,"length","","",308,null],[12,"time","","Timestamp to avoid race conditions when running X over the network.",308,null],[3,"xcb_grab_server_request_t","","",null,null],[12,"major_opcode","","",309,null],[12,"pad0","","",309,null],[12,"length","","",309,null],[3,"xcb_ungrab_server_request_t","","",null,null],[12,"major_opcode","","",310,null],[12,"pad0","","",310,null],[12,"length","","",310,null],[3,"xcb_query_pointer_request_t","","get pointer coordinates",null,null],[12,"major_opcode","","",311,null],[12,"pad0","","",311,null],[12,"length","","",311,null],[12,"window","","A window to check if the pointer is on the same screen as `window` (see the `same_screen` field in the reply).",311,null],[3,"xcb_query_pointer_cookie_t","","",null,null],[3,"xcb_query_pointer_reply_t","","",null,null],[12,"response_type","","",312,null],[12,"same_screen","","If `same_screen` is False, then the pointer is not on the same screen as the argument window, `child` is None, and `win_x` and `win_y` are zero. If `same_screen` is True, then `win_x` and `win_y` are the pointer coordinates relative to the argument window's origin, and child is the child containing the pointer, if any.",312,null],[12,"sequence","","",312,null],[12,"length","","",312,null],[12,"root","","The root window the pointer is logically on.",312,null],[12,"child","","The child window containing the pointer, if any, if `same_screen` is true. If `same_screen` is false, `XCB_NONE` is returned.",312,null],[12,"root_x","","The pointer X position, relative to `root`.",312,null],[12,"root_y","","The pointer Y position, relative to `root`.",312,null],[12,"win_x","","The pointer X coordinate, relative to `child`, if `same_screen` is true. Zero otherwise.",312,null],[12,"win_y","","The pointer Y coordinate, relative to `child`, if `same_screen` is true. Zero otherwise.",312,null],[12,"mask","","The current logical state of the modifier keys and the buttons. Note that the logical state of a device (as seen by means of the protocol) may lag the physical state if device event processing is frozen.",312,null],[12,"pad0","","",312,null],[3,"xcb_timecoord_t","","",null,null],[12,"time","","",313,null],[12,"x","","",313,null],[12,"y","","",313,null],[3,"xcb_timecoord_iterator_t","","",null,null],[12,"data","","",314,null],[12,"rem","","",314,null],[12,"index","","",314,null],[3,"xcb_get_motion_events_request_t","","",null,null],[12,"major_opcode","","",315,null],[12,"pad0","","",315,null],[12,"length","","",315,null],[12,"window","","",315,null],[12,"start","","",315,null],[12,"stop","","",315,null],[3,"xcb_get_motion_events_cookie_t","","",null,null],[3,"xcb_get_motion_events_reply_t","","",null,null],[12,"response_type","","",316,null],[12,"pad0","","",316,null],[12,"sequence","","",316,null],[12,"length","","",316,null],[12,"events_len","","",316,null],[12,"pad1","","",316,null],[3,"xcb_translate_coordinates_request_t","","",null,null],[12,"major_opcode","","",317,null],[12,"pad0","","",317,null],[12,"length","","",317,null],[12,"src_window","","",317,null],[12,"dst_window","","",317,null],[12,"src_x","","",317,null],[12,"src_y","","",317,null],[3,"xcb_translate_coordinates_cookie_t","","",null,null],[3,"xcb_translate_coordinates_reply_t","","",null,null],[12,"response_type","","",318,null],[12,"same_screen","","",318,null],[12,"sequence","","",318,null],[12,"length","","",318,null],[12,"child","","",318,null],[12,"dst_x","","",318,null],[12,"dst_y","","",318,null],[3,"xcb_warp_pointer_request_t","","move mouse pointer",null,null],[12,"major_opcode","","",319,null],[12,"pad0","","",319,null],[12,"length","","",319,null],[12,"src_window","","If `src_window` is not `XCB_NONE` (TODO), the move will only take place if the pointer is inside `src_window` and within the rectangle specified by (`src_x`, `src_y`, `src_width`, `src_height`). The rectangle coordinates are relative to `src_window`.",319,null],[12,"dst_window","","If `dst_window` is not `XCB_NONE` (TODO), the pointer will be moved to the offsets (`dst_x`, `dst_y`) relative to `dst_window`. If `dst_window` is `XCB_NONE` (TODO), the pointer will be moved by the offsets (`dst_x`, `dst_y`) relative to the current position of the pointer.",319,null],[12,"src_x","","",319,null],[12,"src_y","","",319,null],[12,"src_width","","",319,null],[12,"src_height","","",319,null],[12,"dst_x","","",319,null],[12,"dst_y","","",319,null],[3,"xcb_set_input_focus_request_t","","Sets input focus",null,null],[12,"major_opcode","","",320,null],[12,"revert_to","","Specifies what happens when the `focus` window becomes unviewable (if `focus` is neither `XCB_NONE` nor `XCB_POINTER_ROOT`).",320,null],[12,"length","","",320,null],[12,"focus","","The window to focus. All keyboard events will be reported to this window. The window must be viewable (TODO), or a `xcb_match_error_t` occurs (TODO).",320,null],[12,"time","","Timestamp to avoid race conditions when running X over the network.",320,null],[3,"xcb_get_input_focus_request_t","","",null,null],[12,"major_opcode","","",321,null],[12,"pad0","","",321,null],[12,"length","","",321,null],[3,"xcb_get_input_focus_cookie_t","","",null,null],[3,"xcb_get_input_focus_reply_t","","",null,null],[12,"response_type","","",322,null],[12,"revert_to","","",322,null],[12,"sequence","","",322,null],[12,"length","","",322,null],[12,"focus","","",322,null],[3,"xcb_query_keymap_request_t","","",null,null],[12,"major_opcode","","",323,null],[12,"pad0","","",323,null],[12,"length","","",323,null],[3,"xcb_query_keymap_cookie_t","","",null,null],[3,"xcb_query_keymap_reply_t","","",null,null],[12,"response_type","","",324,null],[12,"pad0","","",324,null],[12,"sequence","","",324,null],[12,"length","","",324,null],[12,"keys","","",324,null],[3,"xcb_open_font_request_t","","opens a font",null,null],[12,"major_opcode","","",325,null],[12,"pad0","","",325,null],[12,"length","","",325,null],[12,"fid","","The ID with which you will refer to the font, created by `xcb_generate_id`.",325,null],[12,"name_len","","Length (in bytes) of `name`.",325,null],[12,"pad1","","",325,null],[3,"xcb_close_font_request_t","","",null,null],[12,"major_opcode","","",326,null],[12,"pad0","","",326,null],[12,"length","","",326,null],[12,"font","","",326,null],[3,"xcb_fontprop_t","","",null,null],[12,"name","","",327,null],[12,"value","","",327,null],[3,"xcb_fontprop_iterator_t","","",null,null],[12,"data","","",328,null],[12,"rem","","",328,null],[12,"index","","",328,null],[3,"xcb_charinfo_t","","",null,null],[12,"left_side_bearing","","",329,null],[12,"right_side_bearing","","",329,null],[12,"character_width","","",329,null],[12,"ascent","","",329,null],[12,"descent","","",329,null],[12,"attributes","","",329,null],[3,"xcb_charinfo_iterator_t","","",null,null],[12,"data","","",330,null],[12,"rem","","",330,null],[12,"index","","",330,null],[3,"xcb_query_font_request_t","","query font metrics",null,null],[12,"major_opcode","","",331,null],[12,"pad0","","",331,null],[12,"length","","",331,null],[12,"font","","The fontable (Font or Graphics Context) to query.",331,null],[3,"xcb_query_font_cookie_t","","",null,null],[3,"xcb_query_font_reply_t","","",null,null],[12,"response_type","","",332,null],[12,"pad0","","",332,null],[12,"sequence","","",332,null],[12,"length","","",332,null],[12,"min_bounds","","minimum bounds over all existing char",332,null],[12,"pad1","","",332,null],[12,"max_bounds","","maximum bounds over all existing char",332,null],[12,"pad2","","",332,null],[12,"min_char_or_byte2","","first character",332,null],[12,"max_char_or_byte2","","last character",332,null],[12,"default_char","","char to print for undefined character",332,null],[12,"properties_len","","how many properties there are",332,null],[12,"draw_direction","","",332,null],[12,"min_byte1","","",332,null],[12,"max_byte1","","",332,null],[12,"all_chars_exist","","flag if all characters have nonzero size",332,null],[12,"font_ascent","","baseline to top edge of raster",332,null],[12,"font_descent","","baseline to bottom edge of raster",332,null],[12,"char_infos_len","","",332,null],[3,"xcb_query_text_extents_request_t","","get text extents",null,null],[12,"major_opcode","","",333,null],[12,"odd_length","","",333,null],[12,"length","","",333,null],[12,"font","","The `font` to calculate text extents in. You can also pass a graphics context.",333,null],[3,"xcb_query_text_extents_cookie_t","","",null,null],[3,"xcb_query_text_extents_reply_t","","",null,null],[12,"response_type","","",334,null],[12,"draw_direction","","",334,null],[12,"sequence","","",334,null],[12,"length","","",334,null],[12,"font_ascent","","",334,null],[12,"font_descent","","",334,null],[12,"overall_ascent","","",334,null],[12,"overall_descent","","",334,null],[12,"overall_width","","",334,null],[12,"overall_left","","",334,null],[12,"overall_right","","",334,null],[3,"xcb_str_t","","",null,null],[12,"name_len","","",335,null],[3,"xcb_str_iterator_t","","",null,null],[12,"data","","",336,null],[12,"rem","","",336,null],[12,"index","","",336,null],[3,"xcb_list_fonts_request_t","","get matching font names",null,null],[12,"major_opcode","","",337,null],[12,"pad0","","",337,null],[12,"length","","",337,null],[12,"max_names","","The maximum number of fonts to be returned.",337,null],[12,"pattern_len","","The length (in bytes) of `pattern`.",337,null],[3,"xcb_list_fonts_cookie_t","","",null,null],[3,"xcb_list_fonts_reply_t","","",null,null],[12,"response_type","","",338,null],[12,"pad0","","",338,null],[12,"sequence","","",338,null],[12,"length","","",338,null],[12,"names_len","","The number of font names.",338,null],[12,"pad1","","",338,null],[3,"xcb_list_fonts_with_info_request_t","","get matching font names and information",null,null],[12,"major_opcode","","",339,null],[12,"pad0","","",339,null],[12,"length","","",339,null],[12,"max_names","","The maximum number of fonts to be returned.",339,null],[12,"pattern_len","","The length (in bytes) of `pattern`.",339,null],[3,"xcb_list_fonts_with_info_cookie_t","","",null,null],[3,"xcb_list_fonts_with_info_reply_t","","",null,null],[12,"response_type","","",340,null],[12,"name_len","","The number of matched font names.",340,null],[12,"sequence","","",340,null],[12,"length","","",340,null],[12,"min_bounds","","minimum bounds over all existing char",340,null],[12,"pad0","","",340,null],[12,"max_bounds","","maximum bounds over all existing char",340,null],[12,"pad1","","",340,null],[12,"min_char_or_byte2","","first character",340,null],[12,"max_char_or_byte2","","last character",340,null],[12,"default_char","","char to print for undefined character",340,null],[12,"properties_len","","how many properties there are",340,null],[12,"draw_direction","","",340,null],[12,"min_byte1","","",340,null],[12,"max_byte1","","",340,null],[12,"all_chars_exist","","flag if all characters have nonzero size",340,null],[12,"font_ascent","","baseline to top edge of raster",340,null],[12,"font_descent","","baseline to bottom edge of raster",340,null],[12,"replies_hint","","An indication of how many more fonts will be returned. This is only a hint and may be larger or smaller than the number of fonts actually returned. A zero value does not guarantee that no more fonts will be returned.",340,null],[3,"xcb_set_font_path_request_t","","",null,null],[12,"major_opcode","","",341,null],[12,"pad0","","",341,null],[12,"length","","",341,null],[12,"font_qty","","",341,null],[12,"pad1","","",341,null],[3,"xcb_get_font_path_request_t","","",null,null],[12,"major_opcode","","",342,null],[12,"pad0","","",342,null],[12,"length","","",342,null],[3,"xcb_get_font_path_cookie_t","","",null,null],[3,"xcb_get_font_path_reply_t","","",null,null],[12,"response_type","","",343,null],[12,"pad0","","",343,null],[12,"sequence","","",343,null],[12,"length","","",343,null],[12,"path_len","","",343,null],[12,"pad1","","",343,null],[3,"xcb_create_pixmap_request_t","","Creates a pixmap",null,null],[12,"major_opcode","","",344,null],[12,"depth","","TODO",344,null],[12,"length","","",344,null],[12,"pid","","The ID with which you will refer to the new pixmap, created by `xcb_generate_id`.",344,null],[12,"drawable","","Drawable to get the screen from.",344,null],[12,"width","","The width of the new pixmap.",344,null],[12,"height","","The height of the new pixmap.",344,null],[3,"xcb_free_pixmap_request_t","","Destroys a pixmap",null,null],[12,"major_opcode","","",345,null],[12,"pad0","","",345,null],[12,"length","","",345,null],[12,"pixmap","","The pixmap to destroy.",345,null],[3,"xcb_create_gc_request_t","","Creates a graphics context",null,null],[12,"major_opcode","","",346,null],[12,"pad0","","",346,null],[12,"length","","",346,null],[12,"cid","","The ID with which you will refer to the graphics context, created by `xcb_generate_id`.",346,null],[12,"drawable","","Drawable to get the root/depth from.",346,null],[12,"value_mask","","",346,null],[3,"xcb_change_gc_request_t","","change graphics context components",null,null],[12,"major_opcode","","",347,null],[12,"pad0","","",347,null],[12,"length","","",347,null],[12,"gc","","The graphics context to change.",347,null],[12,"value_mask","","",347,null],[3,"xcb_copy_gc_request_t","","",null,null],[12,"major_opcode","","",348,null],[12,"pad0","","",348,null],[12,"length","","",348,null],[12,"src_gc","","",348,null],[12,"dst_gc","","",348,null],[12,"value_mask","","",348,null],[3,"xcb_set_dashes_request_t","","",null,null],[12,"major_opcode","","",349,null],[12,"pad0","","",349,null],[12,"length","","",349,null],[12,"gc","","",349,null],[12,"dash_offset","","",349,null],[12,"dashes_len","","",349,null],[3,"xcb_set_clip_rectangles_request_t","","",null,null],[12,"major_opcode","","",350,null],[12,"ordering","","",350,null],[12,"length","","",350,null],[12,"gc","","",350,null],[12,"clip_x_origin","","",350,null],[12,"clip_y_origin","","",350,null],[3,"xcb_free_gc_request_t","","Destroys a graphics context",null,null],[12,"major_opcode","","",351,null],[12,"pad0","","",351,null],[12,"length","","",351,null],[12,"gc","","The graphics context to destroy.",351,null],[3,"xcb_clear_area_request_t","","",null,null],[12,"major_opcode","","",352,null],[12,"exposures","","",352,null],[12,"length","","",352,null],[12,"window","","",352,null],[12,"x","","",352,null],[12,"y","","",352,null],[12,"width","","",352,null],[12,"height","","",352,null],[3,"xcb_copy_area_request_t","","copy areas",null,null],[12,"major_opcode","","",353,null],[12,"pad0","","",353,null],[12,"length","","",353,null],[12,"src_drawable","","The source drawable (Window or Pixmap).",353,null],[12,"dst_drawable","","The destination drawable (Window or Pixmap).",353,null],[12,"gc","","The graphics context to use.",353,null],[12,"src_x","","The source X coordinate.",353,null],[12,"src_y","","The source Y coordinate.",353,null],[12,"dst_x","","The destination X coordinate.",353,null],[12,"dst_y","","The destination Y coordinate.",353,null],[12,"width","","The width of the area to copy (in pixels).",353,null],[12,"height","","The height of the area to copy (in pixels).",353,null],[3,"xcb_copy_plane_request_t","","",null,null],[12,"major_opcode","","",354,null],[12,"pad0","","",354,null],[12,"length","","",354,null],[12,"src_drawable","","",354,null],[12,"dst_drawable","","",354,null],[12,"gc","","",354,null],[12,"src_x","","",354,null],[12,"src_y","","",354,null],[12,"dst_x","","",354,null],[12,"dst_y","","",354,null],[12,"width","","",354,null],[12,"height","","",354,null],[12,"bit_plane","","",354,null],[3,"xcb_poly_point_request_t","","",null,null],[12,"major_opcode","","",355,null],[12,"coordinate_mode","","",355,null],[12,"length","","",355,null],[12,"drawable","","",355,null],[12,"gc","","",355,null],[3,"xcb_poly_line_request_t","","draw lines",null,null],[12,"major_opcode","","",356,null],[12,"coordinate_mode","","",356,null],[12,"length","","",356,null],[12,"drawable","","The drawable to draw the line(s) on.",356,null],[12,"gc","","The graphics context to use.",356,null],[3,"xcb_segment_t","","",null,null],[12,"x1","","",357,null],[12,"y1","","",357,null],[12,"x2","","",357,null],[12,"y2","","",357,null],[3,"xcb_segment_iterator_t","","",null,null],[12,"data","","",358,null],[12,"rem","","",358,null],[12,"index","","",358,null],[3,"xcb_poly_segment_request_t","","draw lines",null,null],[12,"major_opcode","","",359,null],[12,"pad0","","",359,null],[12,"length","","",359,null],[12,"drawable","","A drawable (Window or Pixmap) to draw on.",359,null],[12,"gc","","The graphics context to use.",359,null],[3,"xcb_poly_rectangle_request_t","","",null,null],[12,"major_opcode","","",360,null],[12,"pad0","","",360,null],[12,"length","","",360,null],[12,"drawable","","",360,null],[12,"gc","","",360,null],[3,"xcb_poly_arc_request_t","","",null,null],[12,"major_opcode","","",361,null],[12,"pad0","","",361,null],[12,"length","","",361,null],[12,"drawable","","",361,null],[12,"gc","","",361,null],[3,"xcb_fill_poly_request_t","","",null,null],[12,"major_opcode","","",362,null],[12,"pad0","","",362,null],[12,"length","","",362,null],[12,"drawable","","",362,null],[12,"gc","","",362,null],[12,"shape","","",362,null],[12,"coordinate_mode","","",362,null],[12,"pad1","","",362,null],[3,"xcb_poly_fill_rectangle_request_t","","Fills rectangles",null,null],[12,"major_opcode","","",363,null],[12,"pad0","","",363,null],[12,"length","","",363,null],[12,"drawable","","The drawable (Window or Pixmap) to draw on.",363,null],[12,"gc","","The graphics context to use.",363,null],[3,"xcb_poly_fill_arc_request_t","","",null,null],[12,"major_opcode","","",364,null],[12,"pad0","","",364,null],[12,"length","","",364,null],[12,"drawable","","",364,null],[12,"gc","","",364,null],[3,"xcb_put_image_request_t","","",null,null],[12,"major_opcode","","",365,null],[12,"format","","",365,null],[12,"length","","",365,null],[12,"drawable","","",365,null],[12,"gc","","",365,null],[12,"width","","",365,null],[12,"height","","",365,null],[12,"dst_x","","",365,null],[12,"dst_y","","",365,null],[12,"left_pad","","",365,null],[12,"depth","","",365,null],[12,"pad0","","",365,null],[3,"xcb_get_image_request_t","","",null,null],[12,"major_opcode","","",366,null],[12,"format","","",366,null],[12,"length","","",366,null],[12,"drawable","","",366,null],[12,"x","","",366,null],[12,"y","","",366,null],[12,"width","","",366,null],[12,"height","","",366,null],[12,"plane_mask","","",366,null],[3,"xcb_get_image_cookie_t","","",null,null],[3,"xcb_get_image_reply_t","","",null,null],[12,"response_type","","",367,null],[12,"depth","","",367,null],[12,"sequence","","",367,null],[12,"length","","",367,null],[12,"visual","","",367,null],[12,"pad0","","",367,null],[3,"xcb_poly_text_8_request_t","","",null,null],[12,"major_opcode","","",368,null],[12,"pad0","","",368,null],[12,"length","","",368,null],[12,"drawable","","",368,null],[12,"gc","","",368,null],[12,"x","","",368,null],[12,"y","","",368,null],[3,"xcb_poly_text_16_request_t","","",null,null],[12,"major_opcode","","",369,null],[12,"pad0","","",369,null],[12,"length","","",369,null],[12,"drawable","","",369,null],[12,"gc","","",369,null],[12,"x","","",369,null],[12,"y","","",369,null],[3,"xcb_image_text_8_request_t","","Draws text",null,null],[12,"major_opcode","","",370,null],[12,"string_len","","The length of the `string`. Note that this parameter limited by 255 due to using 8 bits!",370,null],[12,"length","","",370,null],[12,"drawable","","The drawable (Window or Pixmap) to draw text on.",370,null],[12,"gc","","The graphics context to use.",370,null],[12,"x","","The x coordinate of the first character, relative to the origin of `drawable`.",370,null],[12,"y","","The y coordinate of the first character, relative to the origin of `drawable`.",370,null],[3,"xcb_image_text_16_request_t","","Draws text",null,null],[12,"major_opcode","","",371,null],[12,"string_len","","The length of the `string` in characters. Note that this parameter limited by 255 due to using 8 bits!",371,null],[12,"length","","",371,null],[12,"drawable","","The drawable (Window or Pixmap) to draw text on.",371,null],[12,"gc","","The graphics context to use.",371,null],[12,"x","","The x coordinate of the first character, relative to the origin of `drawable`.",371,null],[12,"y","","The y coordinate of the first character, relative to the origin of `drawable`.",371,null],[3,"xcb_create_colormap_request_t","","",null,null],[12,"major_opcode","","",372,null],[12,"alloc","","",372,null],[12,"length","","",372,null],[12,"mid","","",372,null],[12,"window","","",372,null],[12,"visual","","",372,null],[3,"xcb_free_colormap_request_t","","",null,null],[12,"major_opcode","","",373,null],[12,"pad0","","",373,null],[12,"length","","",373,null],[12,"cmap","","",373,null],[3,"xcb_copy_colormap_and_free_request_t","","",null,null],[12,"major_opcode","","",374,null],[12,"pad0","","",374,null],[12,"length","","",374,null],[12,"mid","","",374,null],[12,"src_cmap","","",374,null],[3,"xcb_install_colormap_request_t","","",null,null],[12,"major_opcode","","",375,null],[12,"pad0","","",375,null],[12,"length","","",375,null],[12,"cmap","","",375,null],[3,"xcb_uninstall_colormap_request_t","","",null,null],[12,"major_opcode","","",376,null],[12,"pad0","","",376,null],[12,"length","","",376,null],[12,"cmap","","",376,null],[3,"xcb_list_installed_colormaps_request_t","","",null,null],[12,"major_opcode","","",377,null],[12,"pad0","","",377,null],[12,"length","","",377,null],[12,"window","","",377,null],[3,"xcb_list_installed_colormaps_cookie_t","","",null,null],[3,"xcb_list_installed_colormaps_reply_t","","",null,null],[12,"response_type","","",378,null],[12,"pad0","","",378,null],[12,"sequence","","",378,null],[12,"length","","",378,null],[12,"cmaps_len","","",378,null],[12,"pad1","","",378,null],[3,"xcb_alloc_color_request_t","","Allocate a color",null,null],[12,"major_opcode","","",379,null],[12,"pad0","","",379,null],[12,"length","","",379,null],[12,"cmap","","TODO",379,null],[12,"red","","The red value of your color.",379,null],[12,"green","","The green value of your color.",379,null],[12,"blue","","The blue value of your color.",379,null],[12,"pad1","","",379,null],[3,"xcb_alloc_color_cookie_t","","",null,null],[3,"xcb_alloc_color_reply_t","","",null,null],[12,"response_type","","",380,null],[12,"pad0","","",380,null],[12,"sequence","","",380,null],[12,"length","","",380,null],[12,"red","","",380,null],[12,"green","","",380,null],[12,"blue","","",380,null],[12,"pad1","","",380,null],[12,"pixel","","",380,null],[3,"xcb_alloc_named_color_request_t","","",null,null],[12,"major_opcode","","",381,null],[12,"pad0","","",381,null],[12,"length","","",381,null],[12,"cmap","","",381,null],[12,"name_len","","",381,null],[12,"pad1","","",381,null],[3,"xcb_alloc_named_color_cookie_t","","",null,null],[3,"xcb_alloc_named_color_reply_t","","",null,null],[12,"response_type","","",382,null],[12,"pad0","","",382,null],[12,"sequence","","",382,null],[12,"length","","",382,null],[12,"pixel","","",382,null],[12,"exact_red","","",382,null],[12,"exact_green","","",382,null],[12,"exact_blue","","",382,null],[12,"visual_red","","",382,null],[12,"visual_green","","",382,null],[12,"visual_blue","","",382,null],[3,"xcb_alloc_color_cells_request_t","","",null,null],[12,"major_opcode","","",383,null],[12,"contiguous","","",383,null],[12,"length","","",383,null],[12,"cmap","","",383,null],[12,"colors","","",383,null],[12,"planes","","",383,null],[3,"xcb_alloc_color_cells_cookie_t","","",null,null],[3,"xcb_alloc_color_cells_reply_t","","",null,null],[12,"response_type","","",384,null],[12,"pad0","","",384,null],[12,"sequence","","",384,null],[12,"length","","",384,null],[12,"pixels_len","","",384,null],[12,"masks_len","","",384,null],[12,"pad1","","",384,null],[3,"xcb_alloc_color_planes_request_t","","",null,null],[12,"major_opcode","","",385,null],[12,"contiguous","","",385,null],[12,"length","","",385,null],[12,"cmap","","",385,null],[12,"colors","","",385,null],[12,"reds","","",385,null],[12,"greens","","",385,null],[12,"blues","","",385,null],[3,"xcb_alloc_color_planes_cookie_t","","",null,null],[3,"xcb_alloc_color_planes_reply_t","","",null,null],[12,"response_type","","",386,null],[12,"pad0","","",386,null],[12,"sequence","","",386,null],[12,"length","","",386,null],[12,"pixels_len","","",386,null],[12,"pad1","","",386,null],[12,"red_mask","","",386,null],[12,"green_mask","","",386,null],[12,"blue_mask","","",386,null],[12,"pad2","","",386,null],[3,"xcb_free_colors_request_t","","",null,null],[12,"major_opcode","","",387,null],[12,"pad0","","",387,null],[12,"length","","",387,null],[12,"cmap","","",387,null],[12,"plane_mask","","",387,null],[3,"xcb_coloritem_t","","",null,null],[12,"pixel","","",388,null],[12,"red","","",388,null],[12,"green","","",388,null],[12,"blue","","",388,null],[12,"flags","","",388,null],[12,"pad0","","",388,null],[3,"xcb_coloritem_iterator_t","","",null,null],[12,"data","","",389,null],[12,"rem","","",389,null],[12,"index","","",389,null],[3,"xcb_store_colors_request_t","","",null,null],[12,"major_opcode","","",390,null],[12,"pad0","","",390,null],[12,"length","","",390,null],[12,"cmap","","",390,null],[3,"xcb_store_named_color_request_t","","",null,null],[12,"major_opcode","","",391,null],[12,"flags","","",391,null],[12,"length","","",391,null],[12,"cmap","","",391,null],[12,"pixel","","",391,null],[12,"name_len","","",391,null],[12,"pad0","","",391,null],[3,"xcb_rgb_t","","",null,null],[12,"red","","",392,null],[12,"green","","",392,null],[12,"blue","","",392,null],[12,"pad0","","",392,null],[3,"xcb_rgb_iterator_t","","",null,null],[12,"data","","",393,null],[12,"rem","","",393,null],[12,"index","","",393,null],[3,"xcb_query_colors_request_t","","",null,null],[12,"major_opcode","","",394,null],[12,"pad0","","",394,null],[12,"length","","",394,null],[12,"cmap","","",394,null],[3,"xcb_query_colors_cookie_t","","",null,null],[3,"xcb_query_colors_reply_t","","",null,null],[12,"response_type","","",395,null],[12,"pad0","","",395,null],[12,"sequence","","",395,null],[12,"length","","",395,null],[12,"colors_len","","",395,null],[12,"pad1","","",395,null],[3,"xcb_lookup_color_request_t","","",null,null],[12,"major_opcode","","",396,null],[12,"pad0","","",396,null],[12,"length","","",396,null],[12,"cmap","","",396,null],[12,"name_len","","",396,null],[12,"pad1","","",396,null],[3,"xcb_lookup_color_cookie_t","","",null,null],[3,"xcb_lookup_color_reply_t","","",null,null],[12,"response_type","","",397,null],[12,"pad0","","",397,null],[12,"sequence","","",397,null],[12,"length","","",397,null],[12,"exact_red","","",397,null],[12,"exact_green","","",397,null],[12,"exact_blue","","",397,null],[12,"visual_red","","",397,null],[12,"visual_green","","",397,null],[12,"visual_blue","","",397,null],[3,"xcb_create_cursor_request_t","","",null,null],[12,"major_opcode","","",398,null],[12,"pad0","","",398,null],[12,"length","","",398,null],[12,"cid","","",398,null],[12,"source","","",398,null],[12,"mask","","",398,null],[12,"fore_red","","",398,null],[12,"fore_green","","",398,null],[12,"fore_blue","","",398,null],[12,"back_red","","",398,null],[12,"back_green","","",398,null],[12,"back_blue","","",398,null],[12,"x","","",398,null],[12,"y","","",398,null],[3,"xcb_create_glyph_cursor_request_t","","create cursor",null,null],[12,"major_opcode","","",399,null],[12,"pad0","","",399,null],[12,"length","","",399,null],[12,"cid","","The ID with which you will refer to the cursor, created by `xcb_generate_id`.",399,null],[12,"source_font","","In which font to look for the cursor glyph.",399,null],[12,"mask_font","","In which font to look for the mask glyph.",399,null],[12,"source_char","","The glyph of `source_font` to use.",399,null],[12,"mask_char","","The glyph of `mask_font` to use as a mask: Pixels which are set to 1 define which source pixels are displayed. All pixels which are set to 0 are not displayed.",399,null],[12,"fore_red","","The red value of the foreground color.",399,null],[12,"fore_green","","The green value of the foreground color.",399,null],[12,"fore_blue","","The blue value of the foreground color.",399,null],[12,"back_red","","The red value of the background color.",399,null],[12,"back_green","","The green value of the background color.",399,null],[12,"back_blue","","The blue value of the background color.",399,null],[3,"xcb_free_cursor_request_t","","Deletes a cursor",null,null],[12,"major_opcode","","",400,null],[12,"pad0","","",400,null],[12,"length","","",400,null],[12,"cursor","","The cursor to destroy.",400,null],[3,"xcb_recolor_cursor_request_t","","",null,null],[12,"major_opcode","","",401,null],[12,"pad0","","",401,null],[12,"length","","",401,null],[12,"cursor","","",401,null],[12,"fore_red","","",401,null],[12,"fore_green","","",401,null],[12,"fore_blue","","",401,null],[12,"back_red","","",401,null],[12,"back_green","","",401,null],[12,"back_blue","","",401,null],[3,"xcb_query_best_size_request_t","","",null,null],[12,"major_opcode","","",402,null],[12,"class","","",402,null],[12,"length","","",402,null],[12,"drawable","","",402,null],[12,"width","","",402,null],[12,"height","","",402,null],[3,"xcb_query_best_size_cookie_t","","",null,null],[3,"xcb_query_best_size_reply_t","","",null,null],[12,"response_type","","",403,null],[12,"pad0","","",403,null],[12,"sequence","","",403,null],[12,"length","","",403,null],[12,"width","","",403,null],[12,"height","","",403,null],[3,"xcb_query_extension_request_t","","check if extension is present",null,null],[12,"major_opcode","","",404,null],[12,"pad0","","",404,null],[12,"length","","",404,null],[12,"name_len","","The length of `name` in bytes.",404,null],[12,"pad1","","",404,null],[3,"xcb_query_extension_cookie_t","","",null,null],[3,"xcb_query_extension_reply_t","","",null,null],[12,"response_type","","",405,null],[12,"pad0","","",405,null],[12,"sequence","","",405,null],[12,"length","","",405,null],[12,"present","","Whether the extension is present on this X11 server.",405,null],[12,"major_opcode","","The major opcode for requests.",405,null],[12,"first_event","","The first event code, if any.",405,null],[12,"first_error","","The first error code, if any.",405,null],[3,"xcb_list_extensions_request_t","","",null,null],[12,"major_opcode","","",406,null],[12,"pad0","","",406,null],[12,"length","","",406,null],[3,"xcb_list_extensions_cookie_t","","",null,null],[3,"xcb_list_extensions_reply_t","","",null,null],[12,"response_type","","",407,null],[12,"names_len","","",407,null],[12,"sequence","","",407,null],[12,"length","","",407,null],[12,"pad0","","",407,null],[3,"xcb_change_keyboard_mapping_request_t","","",null,null],[12,"major_opcode","","",408,null],[12,"keycode_count","","",408,null],[12,"length","","",408,null],[12,"first_keycode","","",408,null],[12,"keysyms_per_keycode","","",408,null],[12,"pad0","","",408,null],[3,"xcb_get_keyboard_mapping_request_t","","",null,null],[12,"major_opcode","","",409,null],[12,"pad0","","",409,null],[12,"length","","",409,null],[12,"first_keycode","","",409,null],[12,"count","","",409,null],[3,"xcb_get_keyboard_mapping_cookie_t","","",null,null],[3,"xcb_get_keyboard_mapping_reply_t","","",null,null],[12,"response_type","","",410,null],[12,"keysyms_per_keycode","","",410,null],[12,"sequence","","",410,null],[12,"length","","",410,null],[12,"pad0","","",410,null],[3,"xcb_change_keyboard_control_request_t","","",null,null],[12,"major_opcode","","",411,null],[12,"pad0","","",411,null],[12,"length","","",411,null],[12,"value_mask","","",411,null],[3,"xcb_get_keyboard_control_request_t","","",null,null],[12,"major_opcode","","",412,null],[12,"pad0","","",412,null],[12,"length","","",412,null],[3,"xcb_get_keyboard_control_cookie_t","","",null,null],[3,"xcb_get_keyboard_control_reply_t","","",null,null],[12,"response_type","","",413,null],[12,"global_auto_repeat","","",413,null],[12,"sequence","","",413,null],[12,"length","","",413,null],[12,"led_mask","","",413,null],[12,"key_click_percent","","",413,null],[12,"bell_percent","","",413,null],[12,"bell_pitch","","",413,null],[12,"bell_duration","","",413,null],[12,"pad0","","",413,null],[12,"auto_repeats","","",413,null],[3,"xcb_bell_request_t","","",null,null],[12,"major_opcode","","",414,null],[12,"percent","","",414,null],[12,"length","","",414,null],[3,"xcb_change_pointer_control_request_t","","",null,null],[12,"major_opcode","","",415,null],[12,"pad0","","",415,null],[12,"length","","",415,null],[12,"acceleration_numerator","","",415,null],[12,"acceleration_denominator","","",415,null],[12,"threshold","","",415,null],[12,"do_acceleration","","",415,null],[12,"do_threshold","","",415,null],[3,"xcb_get_pointer_control_request_t","","",null,null],[12,"major_opcode","","",416,null],[12,"pad0","","",416,null],[12,"length","","",416,null],[3,"xcb_get_pointer_control_cookie_t","","",null,null],[3,"xcb_get_pointer_control_reply_t","","",null,null],[12,"response_type","","",417,null],[12,"pad0","","",417,null],[12,"sequence","","",417,null],[12,"length","","",417,null],[12,"acceleration_numerator","","",417,null],[12,"acceleration_denominator","","",417,null],[12,"threshold","","",417,null],[12,"pad1","","",417,null],[3,"xcb_set_screen_saver_request_t","","",null,null],[12,"major_opcode","","",418,null],[12,"pad0","","",418,null],[12,"length","","",418,null],[12,"timeout","","",418,null],[12,"interval","","",418,null],[12,"prefer_blanking","","",418,null],[12,"allow_exposures","","",418,null],[3,"xcb_get_screen_saver_request_t","","",null,null],[12,"major_opcode","","",419,null],[12,"pad0","","",419,null],[12,"length","","",419,null],[3,"xcb_get_screen_saver_cookie_t","","",null,null],[3,"xcb_get_screen_saver_reply_t","","",null,null],[12,"response_type","","",420,null],[12,"pad0","","",420,null],[12,"sequence","","",420,null],[12,"length","","",420,null],[12,"timeout","","",420,null],[12,"interval","","",420,null],[12,"prefer_blanking","","",420,null],[12,"allow_exposures","","",420,null],[12,"pad1","","",420,null],[3,"xcb_change_hosts_request_t","","",null,null],[12,"major_opcode","","",421,null],[12,"mode","","",421,null],[12,"length","","",421,null],[12,"family","","",421,null],[12,"pad0","","",421,null],[12,"address_len","","",421,null],[3,"xcb_host_t","","",null,null],[12,"family","","",422,null],[12,"pad0","","",422,null],[12,"address_len","","",422,null],[3,"xcb_host_iterator_t","","",null,null],[12,"data","","",423,null],[12,"rem","","",423,null],[12,"index","","",423,null],[3,"xcb_list_hosts_request_t","","",null,null],[12,"major_opcode","","",424,null],[12,"pad0","","",424,null],[12,"length","","",424,null],[3,"xcb_list_hosts_cookie_t","","",null,null],[3,"xcb_list_hosts_reply_t","","",null,null],[12,"response_type","","",425,null],[12,"mode","","",425,null],[12,"sequence","","",425,null],[12,"length","","",425,null],[12,"hosts_len","","",425,null],[12,"pad0","","",425,null],[3,"xcb_set_access_control_request_t","","",null,null],[12,"major_opcode","","",426,null],[12,"mode","","",426,null],[12,"length","","",426,null],[3,"xcb_set_close_down_mode_request_t","","",null,null],[12,"major_opcode","","",427,null],[12,"mode","","",427,null],[12,"length","","",427,null],[3,"xcb_kill_client_request_t","","kills a client",null,null],[12,"major_opcode","","",428,null],[12,"pad0","","",428,null],[12,"length","","",428,null],[12,"resource","","Any resource belonging to the client (for example a Window), used to identify the client connection.",428,null],[3,"xcb_rotate_properties_request_t","","",null,null],[12,"major_opcode","","",429,null],[12,"pad0","","",429,null],[12,"length","","",429,null],[12,"window","","",429,null],[12,"atoms_len","","",429,null],[12,"delta","","",429,null],[3,"xcb_force_screen_saver_request_t","","",null,null],[12,"major_opcode","","",430,null],[12,"mode","","",430,null],[12,"length","","",430,null],[3,"xcb_set_pointer_mapping_request_t","","",null,null],[12,"major_opcode","","",431,null],[12,"map_len","","",431,null],[12,"length","","",431,null],[3,"xcb_set_pointer_mapping_cookie_t","","",null,null],[3,"xcb_set_pointer_mapping_reply_t","","",null,null],[12,"response_type","","",432,null],[12,"status","","",432,null],[12,"sequence","","",432,null],[12,"length","","",432,null],[3,"xcb_get_pointer_mapping_request_t","","",null,null],[12,"major_opcode","","",433,null],[12,"pad0","","",433,null],[12,"length","","",433,null],[3,"xcb_get_pointer_mapping_cookie_t","","",null,null],[3,"xcb_get_pointer_mapping_reply_t","","",null,null],[12,"response_type","","",434,null],[12,"map_len","","",434,null],[12,"sequence","","",434,null],[12,"length","","",434,null],[12,"pad0","","",434,null],[3,"xcb_set_modifier_mapping_request_t","","",null,null],[12,"major_opcode","","",435,null],[12,"keycodes_per_modifier","","",435,null],[12,"length","","",435,null],[3,"xcb_set_modifier_mapping_cookie_t","","",null,null],[3,"xcb_set_modifier_mapping_reply_t","","",null,null],[12,"response_type","","",436,null],[12,"status","","",436,null],[12,"sequence","","",436,null],[12,"length","","",436,null],[3,"xcb_get_modifier_mapping_request_t","","",null,null],[12,"major_opcode","","",437,null],[12,"pad0","","",437,null],[12,"length","","",437,null],[3,"xcb_get_modifier_mapping_cookie_t","","",null,null],[3,"xcb_get_modifier_mapping_reply_t","","",null,null],[12,"response_type","","",438,null],[12,"keycodes_per_modifier","","",438,null],[12,"sequence","","",438,null],[12,"length","","",438,null],[12,"pad0","","",438,null],[3,"xcb_no_operation_request_t","","",null,null],[12,"major_opcode","","",439,null],[12,"pad0","","",439,null],[12,"length","","",439,null],[5,"xcb_char2b_next","","",null,null],[5,"xcb_char2b_end","","",null,null],[5,"xcb_window_next","","",null,null],[5,"xcb_window_end","","",null,null],[5,"xcb_pixmap_next","","",null,null],[5,"xcb_pixmap_end","","",null,null],[5,"xcb_cursor_next","","",null,null],[5,"xcb_cursor_end","","",null,null],[5,"xcb_font_next","","",null,null],[5,"xcb_font_end","","",null,null],[5,"xcb_gcontext_next","","",null,null],[5,"xcb_gcontext_end","","",null,null],[5,"xcb_colormap_next","","",null,null],[5,"xcb_colormap_end","","",null,null],[5,"xcb_atom_next","","",null,null],[5,"xcb_atom_end","","",null,null],[5,"xcb_drawable_next","","",null,null],[5,"xcb_drawable_end","","",null,null],[5,"xcb_fontable_next","","",null,null],[5,"xcb_fontable_end","","",null,null],[5,"xcb_visualid_next","","",null,null],[5,"xcb_visualid_end","","",null,null],[5,"xcb_timestamp_next","","",null,null],[5,"xcb_timestamp_end","","",null,null],[5,"xcb_keysym_next","","",null,null],[5,"xcb_keysym_end","","",null,null],[5,"xcb_keycode_next","","",null,null],[5,"xcb_keycode_end","","",null,null],[5,"xcb_button_next","","",null,null],[5,"xcb_button_end","","",null,null],[5,"xcb_point_next","","",null,null],[5,"xcb_point_end","","",null,null],[5,"xcb_rectangle_next","","",null,null],[5,"xcb_rectangle_end","","",null,null],[5,"xcb_arc_next","","",null,null],[5,"xcb_arc_end","","",null,null],[5,"xcb_format_next","","",null,null],[5,"xcb_format_end","","",null,null],[5,"xcb_visualtype_next","","",null,null],[5,"xcb_visualtype_end","","",null,null],[5,"xcb_depth_visuals","","",null,null],[5,"xcb_depth_visuals_length","","",null,null],[5,"xcb_depth_visuals_iterator","","",null,null],[5,"xcb_depth_next","","",null,null],[5,"xcb_depth_end","","",null,null],[5,"xcb_screen_allowed_depths_length","","",null,null],[5,"xcb_screen_allowed_depths_iterator","","",null,null],[5,"xcb_screen_next","","",null,null],[5,"xcb_screen_end","","",null,null],[5,"xcb_setup_request_authorization_protocol_name","","",null,null],[5,"xcb_setup_request_authorization_protocol_name_length","","",null,null],[5,"xcb_setup_request_authorization_protocol_name_end","","",null,null],[5,"xcb_setup_request_authorization_protocol_data","","",null,null],[5,"xcb_setup_request_authorization_protocol_data_length","","",null,null],[5,"xcb_setup_request_authorization_protocol_data_end","","",null,null],[5,"xcb_setup_request_next","","",null,null],[5,"xcb_setup_request_end","","",null,null],[5,"xcb_setup_failed_reason","","",null,null],[5,"xcb_setup_failed_reason_length","","",null,null],[5,"xcb_setup_failed_reason_end","","",null,null],[5,"xcb_setup_failed_next","","",null,null],[5,"xcb_setup_failed_end","","",null,null],[5,"xcb_setup_authenticate_reason","","",null,null],[5,"xcb_setup_authenticate_reason_length","","",null,null],[5,"xcb_setup_authenticate_reason_end","","",null,null],[5,"xcb_setup_authenticate_next","","",null,null],[5,"xcb_setup_authenticate_end","","",null,null],[5,"xcb_setup_vendor","","",null,null],[5,"xcb_setup_vendor_length","","",null,null],[5,"xcb_setup_vendor_end","","",null,null],[5,"xcb_setup_pixmap_formats","","",null,null],[5,"xcb_setup_pixmap_formats_length","","",null,null],[5,"xcb_setup_pixmap_formats_iterator","","",null,null],[5,"xcb_setup_roots_length","","",null,null],[5,"xcb_setup_roots_iterator","","",null,null],[5,"xcb_setup_next","","",null,null],[5,"xcb_setup_end","","",null,null],[5,"xcb_client_message_data_next","","",null,null],[5,"xcb_client_message_data_end","","",null,null],[5,"xcb_create_window","","Creates a window",null,null],[5,"xcb_create_window_checked","","Creates a window",null,null],[5,"xcb_change_window_attributes","","change window attributes",null,null],[5,"xcb_change_window_attributes_checked","","change window attributes",null,null],[5,"xcb_get_window_attributes_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_window_attributes","","Gets window attributes",null,null],[5,"xcb_get_window_attributes_unchecked","","Gets window attributes",null,null],[5,"xcb_destroy_window","","Destroys a window",null,null],[5,"xcb_destroy_window_checked","","Destroys a window",null,null],[5,"xcb_destroy_subwindows","","",null,null],[5,"xcb_destroy_subwindows_checked","","",null,null],[5,"xcb_change_save_set","","Changes a client's save set",null,null],[5,"xcb_change_save_set_checked","","Changes a client's save set",null,null],[5,"xcb_reparent_window","","Reparents a window",null,null],[5,"xcb_reparent_window_checked","","Reparents a window",null,null],[5,"xcb_map_window","","Makes a window visible",null,null],[5,"xcb_map_window_checked","","Makes a window visible",null,null],[5,"xcb_map_subwindows","","",null,null],[5,"xcb_map_subwindows_checked","","",null,null],[5,"xcb_unmap_window","","Makes a window invisible",null,null],[5,"xcb_unmap_window_checked","","Makes a window invisible",null,null],[5,"xcb_unmap_subwindows","","",null,null],[5,"xcb_unmap_subwindows_checked","","",null,null],[5,"xcb_configure_window","","Configures window attributes",null,null],[5,"xcb_configure_window_checked","","Configures window attributes",null,null],[5,"xcb_circulate_window","","Change window stacking order",null,null],[5,"xcb_circulate_window_checked","","Change window stacking order",null,null],[5,"xcb_get_geometry_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_geometry","","Get current window geometry",null,null],[5,"xcb_get_geometry_unchecked","","Get current window geometry",null,null],[5,"xcb_query_tree_children","","",null,null],[5,"xcb_query_tree_children_length","","",null,null],[5,"xcb_query_tree_children_end","","",null,null],[5,"xcb_query_tree_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_query_tree","","query the window tree",null,null],[5,"xcb_query_tree_unchecked","","query the window tree",null,null],[5,"xcb_intern_atom_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_intern_atom","","Get atom identifier by name",null,null],[5,"xcb_intern_atom_unchecked","","Get atom identifier by name",null,null],[5,"xcb_get_atom_name_name","","",null,null],[5,"xcb_get_atom_name_name_length","","",null,null],[5,"xcb_get_atom_name_name_end","","",null,null],[5,"xcb_get_atom_name_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_atom_name","","",null,null],[5,"xcb_get_atom_name_unchecked","","",null,null],[5,"xcb_change_property","","Changes a window property",null,null],[5,"xcb_change_property_checked","","Changes a window property",null,null],[5,"xcb_delete_property","","",null,null],[5,"xcb_delete_property_checked","","",null,null],[5,"xcb_get_property_value","","",null,null],[5,"xcb_get_property_value_length","","",null,null],[5,"xcb_get_property_value_end","","",null,null],[5,"xcb_get_property_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_property","","Gets a window property",null,null],[5,"xcb_get_property_unchecked","","Gets a window property",null,null],[5,"xcb_list_properties_atoms","","",null,null],[5,"xcb_list_properties_atoms_length","","",null,null],[5,"xcb_list_properties_atoms_end","","",null,null],[5,"xcb_list_properties_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_list_properties","","",null,null],[5,"xcb_list_properties_unchecked","","",null,null],[5,"xcb_set_selection_owner","","Sets the owner of a selection",null,null],[5,"xcb_set_selection_owner_checked","","Sets the owner of a selection",null,null],[5,"xcb_get_selection_owner_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_selection_owner","","Gets the owner of a selection",null,null],[5,"xcb_get_selection_owner_unchecked","","Gets the owner of a selection",null,null],[5,"xcb_convert_selection","","",null,null],[5,"xcb_convert_selection_checked","","",null,null],[5,"xcb_send_event","","send an event",null,null],[5,"xcb_send_event_checked","","send an event",null,null],[5,"xcb_grab_pointer_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_grab_pointer","","Grab the pointer",null,null],[5,"xcb_grab_pointer_unchecked","","Grab the pointer",null,null],[5,"xcb_ungrab_pointer","","release the pointer",null,null],[5,"xcb_ungrab_pointer_checked","","release the pointer",null,null],[5,"xcb_grab_button","","Grab pointer button(s)",null,null],[5,"xcb_grab_button_checked","","Grab pointer button(s)",null,null],[5,"xcb_ungrab_button","","",null,null],[5,"xcb_ungrab_button_checked","","",null,null],[5,"xcb_change_active_pointer_grab","","",null,null],[5,"xcb_change_active_pointer_grab_checked","","",null,null],[5,"xcb_grab_keyboard_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_grab_keyboard","","Grab the keyboard",null,null],[5,"xcb_grab_keyboard_unchecked","","Grab the keyboard",null,null],[5,"xcb_ungrab_keyboard","","",null,null],[5,"xcb_ungrab_keyboard_checked","","",null,null],[5,"xcb_grab_key","","Grab keyboard key(s)",null,null],[5,"xcb_grab_key_checked","","Grab keyboard key(s)",null,null],[5,"xcb_ungrab_key","","release a key combination",null,null],[5,"xcb_ungrab_key_checked","","release a key combination",null,null],[5,"xcb_allow_events","","release queued events",null,null],[5,"xcb_allow_events_checked","","release queued events",null,null],[5,"xcb_grab_server","","",null,null],[5,"xcb_grab_server_checked","","",null,null],[5,"xcb_ungrab_server","","",null,null],[5,"xcb_ungrab_server_checked","","",null,null],[5,"xcb_query_pointer_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_query_pointer","","get pointer coordinates",null,null],[5,"xcb_query_pointer_unchecked","","get pointer coordinates",null,null],[5,"xcb_timecoord_next","","",null,null],[5,"xcb_timecoord_end","","",null,null],[5,"xcb_get_motion_events_events","","",null,null],[5,"xcb_get_motion_events_events_length","","",null,null],[5,"xcb_get_motion_events_events_iterator","","",null,null],[5,"xcb_get_motion_events_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_motion_events","","",null,null],[5,"xcb_get_motion_events_unchecked","","",null,null],[5,"xcb_translate_coordinates_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_translate_coordinates","","",null,null],[5,"xcb_translate_coordinates_unchecked","","",null,null],[5,"xcb_warp_pointer","","move mouse pointer",null,null],[5,"xcb_warp_pointer_checked","","move mouse pointer",null,null],[5,"xcb_set_input_focus","","Sets input focus",null,null],[5,"xcb_set_input_focus_checked","","Sets input focus",null,null],[5,"xcb_get_input_focus_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_input_focus","","",null,null],[5,"xcb_get_input_focus_unchecked","","",null,null],[5,"xcb_query_keymap_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_query_keymap","","",null,null],[5,"xcb_query_keymap_unchecked","","",null,null],[5,"xcb_open_font","","opens a font",null,null],[5,"xcb_open_font_checked","","opens a font",null,null],[5,"xcb_close_font","","",null,null],[5,"xcb_close_font_checked","","",null,null],[5,"xcb_fontprop_next","","",null,null],[5,"xcb_fontprop_end","","",null,null],[5,"xcb_charinfo_next","","",null,null],[5,"xcb_charinfo_end","","",null,null],[5,"xcb_query_font_properties","","",null,null],[5,"xcb_query_font_properties_length","","",null,null],[5,"xcb_query_font_properties_iterator","","",null,null],[5,"xcb_query_font_char_infos","","",null,null],[5,"xcb_query_font_char_infos_length","","",null,null],[5,"xcb_query_font_char_infos_iterator","","",null,null],[5,"xcb_query_font_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_query_font","","query font metrics",null,null],[5,"xcb_query_font_unchecked","","query font metrics",null,null],[5,"xcb_query_text_extents_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_query_text_extents","","get text extents",null,null],[5,"xcb_query_text_extents_unchecked","","get text extents",null,null],[5,"xcb_str_name","","",null,null],[5,"xcb_str_name_length","","",null,null],[5,"xcb_str_name_end","","",null,null],[5,"xcb_str_next","","",null,null],[5,"xcb_str_end","","",null,null],[5,"xcb_list_fonts_names_length","","",null,null],[5,"xcb_list_fonts_names_iterator","","",null,null],[5,"xcb_list_fonts_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_list_fonts","","get matching font names",null,null],[5,"xcb_list_fonts_unchecked","","get matching font names",null,null],[5,"xcb_list_fonts_with_info_properties","","",null,null],[5,"xcb_list_fonts_with_info_properties_length","","",null,null],[5,"xcb_list_fonts_with_info_properties_iterator","","",null,null],[5,"xcb_list_fonts_with_info_name","","",null,null],[5,"xcb_list_fonts_with_info_name_length","","",null,null],[5,"xcb_list_fonts_with_info_name_end","","",null,null],[5,"xcb_list_fonts_with_info_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_list_fonts_with_info","","get matching font names and information",null,null],[5,"xcb_list_fonts_with_info_unchecked","","get matching font names and information",null,null],[5,"xcb_set_font_path","","",null,null],[5,"xcb_set_font_path_checked","","",null,null],[5,"xcb_get_font_path_path_length","","",null,null],[5,"xcb_get_font_path_path_iterator","","",null,null],[5,"xcb_get_font_path_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_font_path","","",null,null],[5,"xcb_get_font_path_unchecked","","",null,null],[5,"xcb_create_pixmap","","Creates a pixmap",null,null],[5,"xcb_create_pixmap_checked","","Creates a pixmap",null,null],[5,"xcb_free_pixmap","","Destroys a pixmap",null,null],[5,"xcb_free_pixmap_checked","","Destroys a pixmap",null,null],[5,"xcb_create_gc","","Creates a graphics context",null,null],[5,"xcb_create_gc_checked","","Creates a graphics context",null,null],[5,"xcb_change_gc","","change graphics context components",null,null],[5,"xcb_change_gc_checked","","change graphics context components",null,null],[5,"xcb_copy_gc","","",null,null],[5,"xcb_copy_gc_checked","","",null,null],[5,"xcb_set_dashes","","",null,null],[5,"xcb_set_dashes_checked","","",null,null],[5,"xcb_set_clip_rectangles","","",null,null],[5,"xcb_set_clip_rectangles_checked","","",null,null],[5,"xcb_free_gc","","Destroys a graphics context",null,null],[5,"xcb_free_gc_checked","","Destroys a graphics context",null,null],[5,"xcb_clear_area","","",null,null],[5,"xcb_clear_area_checked","","",null,null],[5,"xcb_copy_area","","copy areas",null,null],[5,"xcb_copy_area_checked","","copy areas",null,null],[5,"xcb_copy_plane","","",null,null],[5,"xcb_copy_plane_checked","","",null,null],[5,"xcb_poly_point","","",null,null],[5,"xcb_poly_point_checked","","",null,null],[5,"xcb_poly_line","","draw lines",null,null],[5,"xcb_poly_line_checked","","draw lines",null,null],[5,"xcb_segment_next","","",null,null],[5,"xcb_segment_end","","",null,null],[5,"xcb_poly_segment","","draw lines",null,null],[5,"xcb_poly_segment_checked","","draw lines",null,null],[5,"xcb_poly_rectangle","","",null,null],[5,"xcb_poly_rectangle_checked","","",null,null],[5,"xcb_poly_arc","","",null,null],[5,"xcb_poly_arc_checked","","",null,null],[5,"xcb_fill_poly","","",null,null],[5,"xcb_fill_poly_checked","","",null,null],[5,"xcb_poly_fill_rectangle","","Fills rectangles",null,null],[5,"xcb_poly_fill_rectangle_checked","","Fills rectangles",null,null],[5,"xcb_poly_fill_arc","","",null,null],[5,"xcb_poly_fill_arc_checked","","",null,null],[5,"xcb_put_image","","",null,null],[5,"xcb_put_image_checked","","",null,null],[5,"xcb_get_image_data","","",null,null],[5,"xcb_get_image_data_length","","",null,null],[5,"xcb_get_image_data_end","","",null,null],[5,"xcb_get_image_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_image","","",null,null],[5,"xcb_get_image_unchecked","","",null,null],[5,"xcb_poly_text_8","","",null,null],[5,"xcb_poly_text_8_checked","","",null,null],[5,"xcb_poly_text_16","","",null,null],[5,"xcb_poly_text_16_checked","","",null,null],[5,"xcb_image_text_8","","Draws text",null,null],[5,"xcb_image_text_8_checked","","Draws text",null,null],[5,"xcb_image_text_16","","Draws text",null,null],[5,"xcb_image_text_16_checked","","Draws text",null,null],[5,"xcb_create_colormap","","",null,null],[5,"xcb_create_colormap_checked","","",null,null],[5,"xcb_free_colormap","","",null,null],[5,"xcb_free_colormap_checked","","",null,null],[5,"xcb_copy_colormap_and_free","","",null,null],[5,"xcb_copy_colormap_and_free_checked","","",null,null],[5,"xcb_install_colormap","","",null,null],[5,"xcb_install_colormap_checked","","",null,null],[5,"xcb_uninstall_colormap","","",null,null],[5,"xcb_uninstall_colormap_checked","","",null,null],[5,"xcb_list_installed_colormaps_cmaps","","",null,null],[5,"xcb_list_installed_colormaps_cmaps_length","","",null,null],[5,"xcb_list_installed_colormaps_cmaps_end","","",null,null],[5,"xcb_list_installed_colormaps_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_list_installed_colormaps","","",null,null],[5,"xcb_list_installed_colormaps_unchecked","","",null,null],[5,"xcb_alloc_color_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_alloc_color","","Allocate a color",null,null],[5,"xcb_alloc_color_unchecked","","Allocate a color",null,null],[5,"xcb_alloc_named_color_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_alloc_named_color","","",null,null],[5,"xcb_alloc_named_color_unchecked","","",null,null],[5,"xcb_alloc_color_cells_pixels","","",null,null],[5,"xcb_alloc_color_cells_pixels_length","","",null,null],[5,"xcb_alloc_color_cells_pixels_end","","",null,null],[5,"xcb_alloc_color_cells_masks","","",null,null],[5,"xcb_alloc_color_cells_masks_length","","",null,null],[5,"xcb_alloc_color_cells_masks_end","","",null,null],[5,"xcb_alloc_color_cells_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_alloc_color_cells","","",null,null],[5,"xcb_alloc_color_cells_unchecked","","",null,null],[5,"xcb_alloc_color_planes_pixels","","",null,null],[5,"xcb_alloc_color_planes_pixels_length","","",null,null],[5,"xcb_alloc_color_planes_pixels_end","","",null,null],[5,"xcb_alloc_color_planes_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_alloc_color_planes","","",null,null],[5,"xcb_alloc_color_planes_unchecked","","",null,null],[5,"xcb_free_colors","","",null,null],[5,"xcb_free_colors_checked","","",null,null],[5,"xcb_coloritem_next","","",null,null],[5,"xcb_coloritem_end","","",null,null],[5,"xcb_store_colors","","",null,null],[5,"xcb_store_colors_checked","","",null,null],[5,"xcb_store_named_color","","",null,null],[5,"xcb_store_named_color_checked","","",null,null],[5,"xcb_rgb_next","","",null,null],[5,"xcb_rgb_end","","",null,null],[5,"xcb_query_colors_colors","","",null,null],[5,"xcb_query_colors_colors_length","","",null,null],[5,"xcb_query_colors_colors_iterator","","",null,null],[5,"xcb_query_colors_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_query_colors","","",null,null],[5,"xcb_query_colors_unchecked","","",null,null],[5,"xcb_lookup_color_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_lookup_color","","",null,null],[5,"xcb_lookup_color_unchecked","","",null,null],[5,"xcb_create_cursor","","",null,null],[5,"xcb_create_cursor_checked","","",null,null],[5,"xcb_create_glyph_cursor","","create cursor",null,null],[5,"xcb_create_glyph_cursor_checked","","create cursor",null,null],[5,"xcb_free_cursor","","Deletes a cursor",null,null],[5,"xcb_free_cursor_checked","","Deletes a cursor",null,null],[5,"xcb_recolor_cursor","","",null,null],[5,"xcb_recolor_cursor_checked","","",null,null],[5,"xcb_query_best_size_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_query_best_size","","",null,null],[5,"xcb_query_best_size_unchecked","","",null,null],[5,"xcb_query_extension_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_query_extension","","check if extension is present",null,null],[5,"xcb_query_extension_unchecked","","check if extension is present",null,null],[5,"xcb_list_extensions_names_length","","",null,null],[5,"xcb_list_extensions_names_iterator","","",null,null],[5,"xcb_list_extensions_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_list_extensions","","",null,null],[5,"xcb_list_extensions_unchecked","","",null,null],[5,"xcb_change_keyboard_mapping","","",null,null],[5,"xcb_change_keyboard_mapping_checked","","",null,null],[5,"xcb_get_keyboard_mapping_keysyms","","",null,null],[5,"xcb_get_keyboard_mapping_keysyms_length","","",null,null],[5,"xcb_get_keyboard_mapping_keysyms_end","","",null,null],[5,"xcb_get_keyboard_mapping_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_keyboard_mapping","","",null,null],[5,"xcb_get_keyboard_mapping_unchecked","","",null,null],[5,"xcb_change_keyboard_control","","",null,null],[5,"xcb_change_keyboard_control_checked","","",null,null],[5,"xcb_get_keyboard_control_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_keyboard_control","","",null,null],[5,"xcb_get_keyboard_control_unchecked","","",null,null],[5,"xcb_bell","","",null,null],[5,"xcb_bell_checked","","",null,null],[5,"xcb_change_pointer_control","","",null,null],[5,"xcb_change_pointer_control_checked","","",null,null],[5,"xcb_get_pointer_control_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_pointer_control","","",null,null],[5,"xcb_get_pointer_control_unchecked","","",null,null],[5,"xcb_set_screen_saver","","",null,null],[5,"xcb_set_screen_saver_checked","","",null,null],[5,"xcb_get_screen_saver_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_screen_saver","","",null,null],[5,"xcb_get_screen_saver_unchecked","","",null,null],[5,"xcb_change_hosts","","",null,null],[5,"xcb_change_hosts_checked","","",null,null],[5,"xcb_host_address","","",null,null],[5,"xcb_host_address_length","","",null,null],[5,"xcb_host_address_end","","",null,null],[5,"xcb_host_next","","",null,null],[5,"xcb_host_end","","",null,null],[5,"xcb_list_hosts_hosts_length","","",null,null],[5,"xcb_list_hosts_hosts_iterator","","",null,null],[5,"xcb_list_hosts_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_list_hosts","","",null,null],[5,"xcb_list_hosts_unchecked","","",null,null],[5,"xcb_set_access_control","","",null,null],[5,"xcb_set_access_control_checked","","",null,null],[5,"xcb_set_close_down_mode","","",null,null],[5,"xcb_set_close_down_mode_checked","","",null,null],[5,"xcb_kill_client","","kills a client",null,null],[5,"xcb_kill_client_checked","","kills a client",null,null],[5,"xcb_rotate_properties","","",null,null],[5,"xcb_rotate_properties_checked","","",null,null],[5,"xcb_force_screen_saver","","",null,null],[5,"xcb_force_screen_saver_checked","","",null,null],[5,"xcb_set_pointer_mapping_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_set_pointer_mapping","","",null,null],[5,"xcb_set_pointer_mapping_unchecked","","",null,null],[5,"xcb_get_pointer_mapping_map","","",null,null],[5,"xcb_get_pointer_mapping_map_length","","",null,null],[5,"xcb_get_pointer_mapping_map_end","","",null,null],[5,"xcb_get_pointer_mapping_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_pointer_mapping","","",null,null],[5,"xcb_get_pointer_mapping_unchecked","","",null,null],[5,"xcb_set_modifier_mapping_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_set_modifier_mapping","","",null,null],[5,"xcb_set_modifier_mapping_unchecked","","",null,null],[5,"xcb_get_modifier_mapping_keycodes","","",null,null],[5,"xcb_get_modifier_mapping_keycodes_length","","",null,null],[5,"xcb_get_modifier_mapping_keycodes_end","","",null,null],[5,"xcb_get_modifier_mapping_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_modifier_mapping","","",null,null],[5,"xcb_get_modifier_mapping_unchecked","","",null,null],[5,"xcb_no_operation","","",null,null],[5,"xcb_no_operation_checked","","",null,null],[6,"xcb_window_t","","",null,null],[6,"xcb_pixmap_t","","",null,null],[6,"xcb_cursor_t","","",null,null],[6,"xcb_font_t","","",null,null],[6,"xcb_gcontext_t","","",null,null],[6,"xcb_colormap_t","","",null,null],[6,"xcb_atom_t","","",null,null],[6,"xcb_drawable_t","","",null,null],[6,"xcb_fontable_t","","",null,null],[6,"xcb_visualid_t","","",null,null],[6,"xcb_timestamp_t","","",null,null],[6,"xcb_keysym_t","","",null,null],[6,"xcb_keycode_t","","",null,null],[6,"xcb_button_t","","",null,null],[6,"xcb_visual_class_t","","",null,null],[6,"xcb_event_mask_t","","",null,null],[6,"xcb_backing_store_t","","",null,null],[6,"xcb_image_order_t","","",null,null],[6,"xcb_mod_mask_t","","",null,null],[6,"xcb_key_but_mask_t","","",null,null],[6,"xcb_window_enum_t","","",null,null],[6,"xcb_key_release_event_t","","",null,null],[6,"xcb_button_mask_t","","",null,null],[6,"xcb_button_release_event_t","","",null,null],[6,"xcb_motion_t","","",null,null],[6,"xcb_notify_detail_t","","",null,null],[6,"xcb_notify_mode_t","","",null,null],[6,"xcb_leave_notify_event_t","","",null,null],[6,"xcb_focus_out_event_t","","",null,null],[6,"xcb_visibility_t","","",null,null],[6,"xcb_place_t","","",null,null],[6,"xcb_circulate_request_event_t","","",null,null],[6,"xcb_property_t","","",null,null],[6,"xcb_time_t","","",null,null],[6,"xcb_atom_enum_t","","",null,null],[6,"xcb_colormap_state_t","","",null,null],[6,"xcb_colormap_enum_t","","",null,null],[6,"xcb_mapping_t","","",null,null],[6,"xcb_window_error_t","","",null,null],[6,"xcb_pixmap_error_t","","",null,null],[6,"xcb_atom_error_t","","",null,null],[6,"xcb_cursor_error_t","","",null,null],[6,"xcb_font_error_t","","",null,null],[6,"xcb_match_error_t","","",null,null],[6,"xcb_drawable_error_t","","",null,null],[6,"xcb_access_error_t","","",null,null],[6,"xcb_alloc_error_t","","",null,null],[6,"xcb_colormap_error_t","","",null,null],[6,"xcb_g_context_error_t","","",null,null],[6,"xcb_id_choice_error_t","","",null,null],[6,"xcb_name_error_t","","",null,null],[6,"xcb_length_error_t","","",null,null],[6,"xcb_implementation_error_t","","",null,null],[6,"xcb_window_class_t","","",null,null],[6,"xcb_cw_t","","",null,null],[6,"xcb_back_pixmap_t","","",null,null],[6,"xcb_gravity_t","","",null,null],[6,"xcb_map_state_t","","",null,null],[6,"xcb_set_mode_t","","",null,null],[6,"xcb_config_window_t","","",null,null],[6,"xcb_stack_mode_t","","",null,null],[6,"xcb_circulate_t","","",null,null],[6,"xcb_prop_mode_t","","",null,null],[6,"xcb_get_property_type_t","","",null,null],[6,"xcb_send_event_dest_t","","",null,null],[6,"xcb_grab_mode_t","","",null,null],[6,"xcb_grab_status_t","","",null,null],[6,"xcb_cursor_enum_t","","",null,null],[6,"xcb_button_index_t","","",null,null],[6,"xcb_grab_t","","",null,null],[6,"xcb_allow_t","","",null,null],[6,"xcb_input_focus_t","","",null,null],[6,"xcb_font_draw_t","","",null,null],[6,"xcb_gc_t","","",null,null],[6,"xcb_gx_t","","",null,null],[6,"xcb_line_style_t","","",null,null],[6,"xcb_cap_style_t","","",null,null],[6,"xcb_join_style_t","","",null,null],[6,"xcb_fill_style_t","","",null,null],[6,"xcb_fill_rule_t","","",null,null],[6,"xcb_subwindow_mode_t","","",null,null],[6,"xcb_arc_mode_t","","",null,null],[6,"xcb_clip_ordering_t","","",null,null],[6,"xcb_coord_mode_t","","",null,null],[6,"xcb_poly_shape_t","","",null,null],[6,"xcb_image_format_t","","",null,null],[6,"xcb_colormap_alloc_t","","",null,null],[6,"xcb_color_flag_t","","",null,null],[6,"xcb_pixmap_enum_t","","",null,null],[6,"xcb_font_enum_t","","",null,null],[6,"xcb_query_shape_of_t","","",null,null],[6,"xcb_kb_t","","",null,null],[6,"xcb_led_mode_t","","",null,null],[6,"xcb_auto_repeat_mode_t","","",null,null],[6,"xcb_blanking_t","","",null,null],[6,"xcb_exposures_t","","",null,null],[6,"xcb_host_mode_t","","",null,null],[6,"xcb_family_t","","",null,null],[6,"xcb_access_control_t","","",null,null],[6,"xcb_close_down_t","","",null,null],[6,"xcb_kill_t","","",null,null],[6,"xcb_screen_saver_t","","",null,null],[6,"xcb_mapping_status_t","","",null,null],[6,"xcb_map_index_t","","",null,null],[17,"XCB_VISUAL_CLASS_STATIC_GRAY","","",null,null],[17,"XCB_VISUAL_CLASS_GRAY_SCALE","","",null,null],[17,"XCB_VISUAL_CLASS_STATIC_COLOR","","",null,null],[17,"XCB_VISUAL_CLASS_PSEUDO_COLOR","","",null,null],[17,"XCB_VISUAL_CLASS_TRUE_COLOR","","",null,null],[17,"XCB_VISUAL_CLASS_DIRECT_COLOR","","",null,null],[17,"XCB_EVENT_MASK_NO_EVENT","","",null,null],[17,"XCB_EVENT_MASK_KEY_PRESS","","",null,null],[17,"XCB_EVENT_MASK_KEY_RELEASE","","",null,null],[17,"XCB_EVENT_MASK_BUTTON_PRESS","","",null,null],[17,"XCB_EVENT_MASK_BUTTON_RELEASE","","",null,null],[17,"XCB_EVENT_MASK_ENTER_WINDOW","","",null,null],[17,"XCB_EVENT_MASK_LEAVE_WINDOW","","",null,null],[17,"XCB_EVENT_MASK_POINTER_MOTION","","",null,null],[17,"XCB_EVENT_MASK_POINTER_MOTION_HINT","","",null,null],[17,"XCB_EVENT_MASK_BUTTON_1_MOTION","","",null,null],[17,"XCB_EVENT_MASK_BUTTON_2_MOTION","","",null,null],[17,"XCB_EVENT_MASK_BUTTON_3_MOTION","","",null,null],[17,"XCB_EVENT_MASK_BUTTON_4_MOTION","","",null,null],[17,"XCB_EVENT_MASK_BUTTON_5_MOTION","","",null,null],[17,"XCB_EVENT_MASK_BUTTON_MOTION","","",null,null],[17,"XCB_EVENT_MASK_KEYMAP_STATE","","",null,null],[17,"XCB_EVENT_MASK_EXPOSURE","","",null,null],[17,"XCB_EVENT_MASK_VISIBILITY_CHANGE","","",null,null],[17,"XCB_EVENT_MASK_STRUCTURE_NOTIFY","","",null,null],[17,"XCB_EVENT_MASK_RESIZE_REDIRECT","","",null,null],[17,"XCB_EVENT_MASK_SUBSTRUCTURE_NOTIFY","","",null,null],[17,"XCB_EVENT_MASK_SUBSTRUCTURE_REDIRECT","","",null,null],[17,"XCB_EVENT_MASK_FOCUS_CHANGE","","",null,null],[17,"XCB_EVENT_MASK_PROPERTY_CHANGE","","",null,null],[17,"XCB_EVENT_MASK_COLOR_MAP_CHANGE","","",null,null],[17,"XCB_EVENT_MASK_OWNER_GRAB_BUTTON","","",null,null],[17,"XCB_BACKING_STORE_NOT_USEFUL","","",null,null],[17,"XCB_BACKING_STORE_WHEN_MAPPED","","",null,null],[17,"XCB_BACKING_STORE_ALWAYS","","",null,null],[17,"XCB_IMAGE_ORDER_LSB_FIRST","","",null,null],[17,"XCB_IMAGE_ORDER_MSB_FIRST","","",null,null],[17,"XCB_MOD_MASK_SHIFT","","",null,null],[17,"XCB_MOD_MASK_LOCK","","",null,null],[17,"XCB_MOD_MASK_CONTROL","","",null,null],[17,"XCB_MOD_MASK_1","","",null,null],[17,"XCB_MOD_MASK_2","","",null,null],[17,"XCB_MOD_MASK_3","","",null,null],[17,"XCB_MOD_MASK_4","","",null,null],[17,"XCB_MOD_MASK_5","","",null,null],[17,"XCB_MOD_MASK_ANY","","",null,null],[17,"XCB_KEY_BUT_MASK_SHIFT","","",null,null],[17,"XCB_KEY_BUT_MASK_LOCK","","",null,null],[17,"XCB_KEY_BUT_MASK_CONTROL","","",null,null],[17,"XCB_KEY_BUT_MASK_MOD_1","","",null,null],[17,"XCB_KEY_BUT_MASK_MOD_2","","",null,null],[17,"XCB_KEY_BUT_MASK_MOD_3","","",null,null],[17,"XCB_KEY_BUT_MASK_MOD_4","","",null,null],[17,"XCB_KEY_BUT_MASK_MOD_5","","",null,null],[17,"XCB_KEY_BUT_MASK_BUTTON_1","","",null,null],[17,"XCB_KEY_BUT_MASK_BUTTON_2","","",null,null],[17,"XCB_KEY_BUT_MASK_BUTTON_3","","",null,null],[17,"XCB_KEY_BUT_MASK_BUTTON_4","","",null,null],[17,"XCB_KEY_BUT_MASK_BUTTON_5","","",null,null],[17,"XCB_WINDOW_NONE","","",null,null],[17,"XCB_KEY_PRESS","","",null,null],[17,"XCB_KEY_RELEASE","","",null,null],[17,"XCB_BUTTON_MASK_1","","",null,null],[17,"XCB_BUTTON_MASK_2","","",null,null],[17,"XCB_BUTTON_MASK_3","","",null,null],[17,"XCB_BUTTON_MASK_4","","",null,null],[17,"XCB_BUTTON_MASK_5","","",null,null],[17,"XCB_BUTTON_MASK_ANY","","",null,null],[17,"XCB_BUTTON_PRESS","","",null,null],[17,"XCB_BUTTON_RELEASE","","",null,null],[17,"XCB_MOTION_NORMAL","","",null,null],[17,"XCB_MOTION_HINT","","",null,null],[17,"XCB_MOTION_NOTIFY","","",null,null],[17,"XCB_NOTIFY_DETAIL_ANCESTOR","","",null,null],[17,"XCB_NOTIFY_DETAIL_VIRTUAL","","",null,null],[17,"XCB_NOTIFY_DETAIL_INFERIOR","","",null,null],[17,"XCB_NOTIFY_DETAIL_NONLINEAR","","",null,null],[17,"XCB_NOTIFY_DETAIL_NONLINEAR_VIRTUAL","","",null,null],[17,"XCB_NOTIFY_DETAIL_POINTER","","",null,null],[17,"XCB_NOTIFY_DETAIL_POINTER_ROOT","","",null,null],[17,"XCB_NOTIFY_DETAIL_NONE","","",null,null],[17,"XCB_NOTIFY_MODE_NORMAL","","",null,null],[17,"XCB_NOTIFY_MODE_GRAB","","",null,null],[17,"XCB_NOTIFY_MODE_UNGRAB","","",null,null],[17,"XCB_NOTIFY_MODE_WHILE_GRABBED","","",null,null],[17,"XCB_ENTER_NOTIFY","","",null,null],[17,"XCB_LEAVE_NOTIFY","","",null,null],[17,"XCB_FOCUS_IN","","",null,null],[17,"XCB_FOCUS_OUT","","",null,null],[17,"XCB_KEYMAP_NOTIFY","","",null,null],[17,"XCB_EXPOSE","","",null,null],[17,"XCB_GRAPHICS_EXPOSURE","","",null,null],[17,"XCB_NO_EXPOSURE","","",null,null],[17,"XCB_VISIBILITY_UNOBSCURED","","",null,null],[17,"XCB_VISIBILITY_PARTIALLY_OBSCURED","","",null,null],[17,"XCB_VISIBILITY_FULLY_OBSCURED","","",null,null],[17,"XCB_VISIBILITY_NOTIFY","","",null,null],[17,"XCB_CREATE_NOTIFY","","",null,null],[17,"XCB_DESTROY_NOTIFY","","",null,null],[17,"XCB_UNMAP_NOTIFY","","",null,null],[17,"XCB_MAP_NOTIFY","","",null,null],[17,"XCB_MAP_REQUEST","","",null,null],[17,"XCB_REPARENT_NOTIFY","","",null,null],[17,"XCB_CONFIGURE_NOTIFY","","",null,null],[17,"XCB_CONFIGURE_REQUEST","","",null,null],[17,"XCB_GRAVITY_NOTIFY","","",null,null],[17,"XCB_RESIZE_REQUEST","","",null,null],[17,"XCB_PLACE_ON_TOP","","The window is now on top of all siblings.",null,null],[17,"XCB_PLACE_ON_BOTTOM","","The window is now below all siblings.",null,null],[17,"XCB_CIRCULATE_NOTIFY","","",null,null],[17,"XCB_CIRCULATE_REQUEST","","",null,null],[17,"XCB_PROPERTY_NEW_VALUE","","",null,null],[17,"XCB_PROPERTY_DELETE","","",null,null],[17,"XCB_PROPERTY_NOTIFY","","",null,null],[17,"XCB_SELECTION_CLEAR","","",null,null],[17,"XCB_TIME_CURRENT_TIME","","",null,null],[17,"XCB_ATOM_NONE","","",null,null],[17,"XCB_ATOM_ANY","","",null,null],[17,"XCB_ATOM_PRIMARY","","",null,null],[17,"XCB_ATOM_SECONDARY","","",null,null],[17,"XCB_ATOM_ARC","","",null,null],[17,"XCB_ATOM_ATOM","","",null,null],[17,"XCB_ATOM_BITMAP","","",null,null],[17,"XCB_ATOM_CARDINAL","","",null,null],[17,"XCB_ATOM_COLORMAP","","",null,null],[17,"XCB_ATOM_CURSOR","","",null,null],[17,"XCB_ATOM_CUT_BUFFER0","","",null,null],[17,"XCB_ATOM_CUT_BUFFER1","","",null,null],[17,"XCB_ATOM_CUT_BUFFER2","","",null,null],[17,"XCB_ATOM_CUT_BUFFER3","","",null,null],[17,"XCB_ATOM_CUT_BUFFER4","","",null,null],[17,"XCB_ATOM_CUT_BUFFER5","","",null,null],[17,"XCB_ATOM_CUT_BUFFER6","","",null,null],[17,"XCB_ATOM_CUT_BUFFER7","","",null,null],[17,"XCB_ATOM_DRAWABLE","","",null,null],[17,"XCB_ATOM_FONT","","",null,null],[17,"XCB_ATOM_INTEGER","","",null,null],[17,"XCB_ATOM_PIXMAP","","",null,null],[17,"XCB_ATOM_POINT","","",null,null],[17,"XCB_ATOM_RECTANGLE","","",null,null],[17,"XCB_ATOM_RESOURCE_MANAGER","","",null,null],[17,"XCB_ATOM_RGB_COLOR_MAP","","",null,null],[17,"XCB_ATOM_RGB_BEST_MAP","","",null,null],[17,"XCB_ATOM_RGB_BLUE_MAP","","",null,null],[17,"XCB_ATOM_RGB_DEFAULT_MAP","","",null,null],[17,"XCB_ATOM_RGB_GRAY_MAP","","",null,null],[17,"XCB_ATOM_RGB_GREEN_MAP","","",null,null],[17,"XCB_ATOM_RGB_RED_MAP","","",null,null],[17,"XCB_ATOM_STRING","","",null,null],[17,"XCB_ATOM_VISUALID","","",null,null],[17,"XCB_ATOM_WINDOW","","",null,null],[17,"XCB_ATOM_WM_COMMAND","","",null,null],[17,"XCB_ATOM_WM_HINTS","","",null,null],[17,"XCB_ATOM_WM_CLIENT_MACHINE","","",null,null],[17,"XCB_ATOM_WM_ICON_NAME","","",null,null],[17,"XCB_ATOM_WM_ICON_SIZE","","",null,null],[17,"XCB_ATOM_WM_NAME","","",null,null],[17,"XCB_ATOM_WM_NORMAL_HINTS","","",null,null],[17,"XCB_ATOM_WM_SIZE_HINTS","","",null,null],[17,"XCB_ATOM_WM_ZOOM_HINTS","","",null,null],[17,"XCB_ATOM_MIN_SPACE","","",null,null],[17,"XCB_ATOM_NORM_SPACE","","",null,null],[17,"XCB_ATOM_MAX_SPACE","","",null,null],[17,"XCB_ATOM_END_SPACE","","",null,null],[17,"XCB_ATOM_SUPERSCRIPT_X","","",null,null],[17,"XCB_ATOM_SUPERSCRIPT_Y","","",null,null],[17,"XCB_ATOM_SUBSCRIPT_X","","",null,null],[17,"XCB_ATOM_SUBSCRIPT_Y","","",null,null],[17,"XCB_ATOM_UNDERLINE_POSITION","","",null,null],[17,"XCB_ATOM_UNDERLINE_THICKNESS","","",null,null],[17,"XCB_ATOM_STRIKEOUT_ASCENT","","",null,null],[17,"XCB_ATOM_STRIKEOUT_DESCENT","","",null,null],[17,"XCB_ATOM_ITALIC_ANGLE","","",null,null],[17,"XCB_ATOM_X_HEIGHT","","",null,null],[17,"XCB_ATOM_QUAD_WIDTH","","",null,null],[17,"XCB_ATOM_WEIGHT","","",null,null],[17,"XCB_ATOM_POINT_SIZE","","",null,null],[17,"XCB_ATOM_RESOLUTION","","",null,null],[17,"XCB_ATOM_COPYRIGHT","","",null,null],[17,"XCB_ATOM_NOTICE","","",null,null],[17,"XCB_ATOM_FONT_NAME","","",null,null],[17,"XCB_ATOM_FAMILY_NAME","","",null,null],[17,"XCB_ATOM_FULL_NAME","","",null,null],[17,"XCB_ATOM_CAP_HEIGHT","","",null,null],[17,"XCB_ATOM_WM_CLASS","","",null,null],[17,"XCB_ATOM_WM_TRANSIENT_FOR","","",null,null],[17,"XCB_SELECTION_REQUEST","","",null,null],[17,"XCB_SELECTION_NOTIFY","","",null,null],[17,"XCB_COLORMAP_STATE_UNINSTALLED","","The colormap was uninstalled.",null,null],[17,"XCB_COLORMAP_STATE_INSTALLED","","The colormap was installed.",null,null],[17,"XCB_COLORMAP_NONE","","",null,null],[17,"XCB_COLORMAP_NOTIFY","","",null,null],[17,"XCB_CLIENT_MESSAGE","","",null,null],[17,"XCB_MAPPING_MODIFIER","","",null,null],[17,"XCB_MAPPING_KEYBOARD","","",null,null],[17,"XCB_MAPPING_POINTER","","",null,null],[17,"XCB_MAPPING_NOTIFY","","",null,null],[17,"XCB_GE_GENERIC","","",null,null],[17,"XCB_REQUEST","","",null,null],[17,"XCB_VALUE","","",null,null],[17,"XCB_WINDOW","","",null,null],[17,"XCB_PIXMAP","","",null,null],[17,"XCB_ATOM","","",null,null],[17,"XCB_CURSOR","","",null,null],[17,"XCB_FONT","","",null,null],[17,"XCB_MATCH","","",null,null],[17,"XCB_DRAWABLE","","",null,null],[17,"XCB_ACCESS","","",null,null],[17,"XCB_ALLOC","","",null,null],[17,"XCB_COLORMAP","","",null,null],[17,"XCB_G_CONTEXT","","",null,null],[17,"XCB_ID_CHOICE","","",null,null],[17,"XCB_NAME","","",null,null],[17,"XCB_LENGTH","","",null,null],[17,"XCB_IMPLEMENTATION","","",null,null],[17,"XCB_WINDOW_CLASS_COPY_FROM_PARENT","","",null,null],[17,"XCB_WINDOW_CLASS_INPUT_OUTPUT","","",null,null],[17,"XCB_WINDOW_CLASS_INPUT_ONLY","","",null,null],[17,"XCB_CW_BACK_PIXMAP","","Overrides the default background-pixmap. The background pixmap and window must have the same root and same depth. Any size pixmap can be used, although some sizes may be faster than others.",null,null],[17,"XCB_CW_BACK_PIXEL","","Overrides `BackPixmap`. A pixmap of undefined size filled with the specified background pixel is used for the background. Range-checking is not performed, the background pixel is truncated to the appropriate number of bits.",null,null],[17,"XCB_CW_BORDER_PIXMAP","","Overrides the default border-pixmap. The border pixmap and window must have the same root and the same depth. Any size pixmap can be used, although some sizes may be faster than others.",null,null],[17,"XCB_CW_BORDER_PIXEL","","Overrides `BorderPixmap`. A pixmap of undefined size filled with the specified border pixel is used for the border. Range checking is not performed on the border-pixel value, it is truncated to the appropriate number of bits.",null,null],[17,"XCB_CW_BIT_GRAVITY","","Defines which region of the window should be retained if the window is resized.",null,null],[17,"XCB_CW_WIN_GRAVITY","","Defines how the window should be repositioned if the parent is resized (see `ConfigureWindow`).",null,null],[17,"XCB_CW_BACKING_STORE","","A backing-store of `WhenMapped` advises the server that maintaining contents of obscured regions when the window is mapped would be beneficial. A backing-store of `Always` advises the server that maintaining contents even when the window is unmapped would be beneficial. In this case, the server may generate an exposure event when the window is created. A value of `NotUseful` advises the server that maintaining contents is unnecessary, although a server may still choose to maintain contents while the window is mapped. Note that if the server maintains contents, then the server should maintain complete contents not just the region within the parent boundaries, even if the window is larger than its parent. While the server maintains contents, exposure events will not normally be generated, but the server may stop maintaining contents at any time.",null,null],[17,"XCB_CW_BACKING_PLANES","","The backing-planes indicates (with bits set to 1) which bit planes of the window hold dynamic data that must be preserved in backing-stores and during save-unders.",null,null],[17,"XCB_CW_BACKING_PIXEL","","The backing-pixel specifies what value to use in planes not covered by backing-planes. The server is free to save only the specified bit planes in the backing-store or save-under and regenerate the remaining planes with the specified pixel value. Any bits beyond the specified depth of the window in these values are simply ignored.",null,null],[17,"XCB_CW_OVERRIDE_REDIRECT","","The override-redirect specifies whether map and configure requests on this window should override a SubstructureRedirect on the parent, typically to inform a window manager not to tamper with the window.",null,null],[17,"XCB_CW_SAVE_UNDER","","If 1, the server is advised that when this window is mapped, saving the contents of windows it obscures would be beneficial.",null,null],[17,"XCB_CW_EVENT_MASK","","The event-mask defines which events the client is interested in for this window (or for some event types, inferiors of the window).",null,null],[17,"XCB_CW_DONT_PROPAGATE","","The do-not-propagate-mask defines which events should not be propagated to ancestor windows when no client has the event type selected in this window.",null,null],[17,"XCB_CW_COLORMAP","","The colormap specifies the colormap that best reflects the true colors of the window. Servers capable of supporting multiple hardware colormaps may use this information, and window man- agers may use it for InstallColormap requests. The colormap must have the same visual type and root as the window (or a Match error results). If CopyFromParent is specified, the parent's colormap is copied (subsequent changes to the parent's colormap attribute do not affect the child). However, the window must have the same visual type as the parent (or a Match error results), and the parent must not have a colormap of None (or a Match error results). For an explanation of None, see FreeColormap request. The colormap is copied by sharing the colormap object between the child and the parent, not by making a complete copy of the colormap contents.",null,null],[17,"XCB_CW_CURSOR","","If a cursor is specified, it will be used whenever the pointer is in the window. If None is speci- fied, the parent's cursor will be used when the pointer is in the window, and any change in the parent's cursor will cause an immediate change in the displayed cursor.",null,null],[17,"XCB_BACK_PIXMAP_NONE","","",null,null],[17,"XCB_BACK_PIXMAP_PARENT_RELATIVE","","",null,null],[17,"XCB_GRAVITY_BIT_FORGET","","",null,null],[17,"XCB_GRAVITY_WIN_UNMAP","","",null,null],[17,"XCB_GRAVITY_NORTH_WEST","","",null,null],[17,"XCB_GRAVITY_NORTH","","",null,null],[17,"XCB_GRAVITY_NORTH_EAST","","",null,null],[17,"XCB_GRAVITY_WEST","","",null,null],[17,"XCB_GRAVITY_CENTER","","",null,null],[17,"XCB_GRAVITY_EAST","","",null,null],[17,"XCB_GRAVITY_SOUTH_WEST","","",null,null],[17,"XCB_GRAVITY_SOUTH","","",null,null],[17,"XCB_GRAVITY_SOUTH_EAST","","",null,null],[17,"XCB_GRAVITY_STATIC","","",null,null],[17,"XCB_CREATE_WINDOW","","",null,null],[17,"XCB_CHANGE_WINDOW_ATTRIBUTES","","",null,null],[17,"XCB_MAP_STATE_UNMAPPED","","",null,null],[17,"XCB_MAP_STATE_UNVIEWABLE","","",null,null],[17,"XCB_MAP_STATE_VIEWABLE","","",null,null],[17,"XCB_GET_WINDOW_ATTRIBUTES","","",null,null],[17,"XCB_DESTROY_WINDOW","","",null,null],[17,"XCB_DESTROY_SUBWINDOWS","","",null,null],[17,"XCB_SET_MODE_INSERT","","",null,null],[17,"XCB_SET_MODE_DELETE","","",null,null],[17,"XCB_CHANGE_SAVE_SET","","",null,null],[17,"XCB_REPARENT_WINDOW","","",null,null],[17,"XCB_MAP_WINDOW","","",null,null],[17,"XCB_MAP_SUBWINDOWS","","",null,null],[17,"XCB_UNMAP_WINDOW","","",null,null],[17,"XCB_UNMAP_SUBWINDOWS","","",null,null],[17,"XCB_CONFIG_WINDOW_X","","",null,null],[17,"XCB_CONFIG_WINDOW_Y","","",null,null],[17,"XCB_CONFIG_WINDOW_WIDTH","","",null,null],[17,"XCB_CONFIG_WINDOW_HEIGHT","","",null,null],[17,"XCB_CONFIG_WINDOW_BORDER_WIDTH","","",null,null],[17,"XCB_CONFIG_WINDOW_SIBLING","","",null,null],[17,"XCB_CONFIG_WINDOW_STACK_MODE","","",null,null],[17,"XCB_STACK_MODE_ABOVE","","",null,null],[17,"XCB_STACK_MODE_BELOW","","",null,null],[17,"XCB_STACK_MODE_TOP_IF","","",null,null],[17,"XCB_STACK_MODE_BOTTOM_IF","","",null,null],[17,"XCB_STACK_MODE_OPPOSITE","","",null,null],[17,"XCB_CONFIGURE_WINDOW","","",null,null],[17,"XCB_CIRCULATE_RAISE_LOWEST","","",null,null],[17,"XCB_CIRCULATE_LOWER_HIGHEST","","",null,null],[17,"XCB_CIRCULATE_WINDOW","","",null,null],[17,"XCB_GET_GEOMETRY","","",null,null],[17,"XCB_QUERY_TREE","","",null,null],[17,"XCB_INTERN_ATOM","","",null,null],[17,"XCB_GET_ATOM_NAME","","",null,null],[17,"XCB_PROP_MODE_REPLACE","","Discard the previous property value and store the new data.",null,null],[17,"XCB_PROP_MODE_PREPEND","","Insert the new data before the beginning of existing data. The `format` must match existing property value. If the property is undefined, it is treated as defined with the correct type and format with zero-length data.",null,null],[17,"XCB_PROP_MODE_APPEND","","Insert the new data after the beginning of existing data. The `format` must match existing property value. If the property is undefined, it is treated as defined with the correct type and format with zero-length data.",null,null],[17,"XCB_CHANGE_PROPERTY","","",null,null],[17,"XCB_DELETE_PROPERTY","","",null,null],[17,"XCB_GET_PROPERTY_TYPE_ANY","","",null,null],[17,"XCB_GET_PROPERTY","","",null,null],[17,"XCB_LIST_PROPERTIES","","",null,null],[17,"XCB_SET_SELECTION_OWNER","","",null,null],[17,"XCB_GET_SELECTION_OWNER","","",null,null],[17,"XCB_CONVERT_SELECTION","","",null,null],[17,"XCB_SEND_EVENT_DEST_POINTER_WINDOW","","",null,null],[17,"XCB_SEND_EVENT_DEST_ITEM_FOCUS","","",null,null],[17,"XCB_SEND_EVENT","","",null,null],[17,"XCB_GRAB_MODE_SYNC","","The state of the keyboard appears to freeze: No further keyboard events are generated by the server until the grabbing client issues a releasing `AllowEvents` request or until the keyboard grab is released.",null,null],[17,"XCB_GRAB_MODE_ASYNC","","Keyboard event processing continues normally.",null,null],[17,"XCB_GRAB_STATUS_SUCCESS","","",null,null],[17,"XCB_GRAB_STATUS_ALREADY_GRABBED","","",null,null],[17,"XCB_GRAB_STATUS_INVALID_TIME","","",null,null],[17,"XCB_GRAB_STATUS_NOT_VIEWABLE","","",null,null],[17,"XCB_GRAB_STATUS_FROZEN","","",null,null],[17,"XCB_CURSOR_NONE","","",null,null],[17,"XCB_GRAB_POINTER","","",null,null],[17,"XCB_UNGRAB_POINTER","","",null,null],[17,"XCB_BUTTON_INDEX_ANY","","Any of the following (or none):",null,null],[17,"XCB_BUTTON_INDEX_1","","The left mouse button.",null,null],[17,"XCB_BUTTON_INDEX_2","","The right mouse button.",null,null],[17,"XCB_BUTTON_INDEX_3","","The middle mouse button.",null,null],[17,"XCB_BUTTON_INDEX_4","","Scroll wheel. TODO: direction?",null,null],[17,"XCB_BUTTON_INDEX_5","","Scroll wheel. TODO: direction?",null,null],[17,"XCB_GRAB_BUTTON","","",null,null],[17,"XCB_UNGRAB_BUTTON","","",null,null],[17,"XCB_CHANGE_ACTIVE_POINTER_GRAB","","",null,null],[17,"XCB_GRAB_KEYBOARD","","",null,null],[17,"XCB_UNGRAB_KEYBOARD","","",null,null],[17,"XCB_GRAB_ANY","","",null,null],[17,"XCB_GRAB_KEY","","",null,null],[17,"XCB_UNGRAB_KEY","","",null,null],[17,"XCB_ALLOW_ASYNC_POINTER","","For AsyncPointer, if the pointer is frozen by the client, pointer event processing continues normally. If the pointer is frozen twice by the client on behalf of two separate grabs, AsyncPointer thaws for both. AsyncPointer has no effect if the pointer is not frozen by the client, but the pointer need not be grabbed by the client.",null,null],[17,"XCB_ALLOW_SYNC_POINTER","","For SyncPointer, if the pointer is frozen and actively grabbed by the client, pointer event processing continues normally until the next ButtonPress or ButtonRelease event is reported to the client, at which time the pointer again appears to freeze. However, if the reported event causes the pointer grab to be released, then the pointer does not freeze. SyncPointer has no effect if the pointer is not frozen by the client or if the pointer is not grabbed by the client.",null,null],[17,"XCB_ALLOW_REPLAY_POINTER","","For ReplayPointer, if the pointer is actively grabbed by the client and is frozen as the result of an event having been sent to the client (either from the activation of a GrabButton or from a previous AllowEvents with mode SyncPointer but not from a GrabPointer), then the pointer grab is released and that event is completely reprocessed, this time ignoring any passive grabs at or above (towards the root) the grab-window of the grab just released. The request has no effect if the pointer is not grabbed by the client or if the pointer is not frozen as the result of an event.",null,null],[17,"XCB_ALLOW_ASYNC_KEYBOARD","","For AsyncKeyboard, if the keyboard is frozen by the client, keyboard event processing continues normally. If the keyboard is frozen twice by the client on behalf of two separate grabs, AsyncKeyboard thaws for both. AsyncKeyboard has no effect if the keyboard is not frozen by the client, but the keyboard need not be grabbed by the client.",null,null],[17,"XCB_ALLOW_SYNC_KEYBOARD","","For SyncKeyboard, if the keyboard is frozen and actively grabbed by the client, keyboard event processing continues normally until the next KeyPress or KeyRelease event is reported to the client, at which time the keyboard again appears to freeze. However, if the reported event causes the keyboard grab to be released, then the keyboard does not freeze. SyncKeyboard has no effect if the keyboard is not frozen by the client or if the keyboard is not grabbed by the client.",null,null],[17,"XCB_ALLOW_REPLAY_KEYBOARD","","For ReplayKeyboard, if the keyboard is actively grabbed by the client and is frozen as the result of an event having been sent to the client (either from the activation of a GrabKey or from a previous AllowEvents with mode SyncKeyboard but not from a GrabKeyboard), then the keyboard grab is released and that event is completely reprocessed, this time ignoring any passive grabs at or above (towards the root) the grab-window of the grab just released. The request has no effect if the keyboard is not grabbed by the client or if the keyboard is not frozen as the result of an event.",null,null],[17,"XCB_ALLOW_ASYNC_BOTH","","For AsyncBoth, if the pointer and the keyboard are frozen by the client, event processing for both devices continues normally. If a device is frozen twice by the client on behalf of two separate grabs, AsyncBoth thaws for both. AsyncBoth has no effect unless both pointer and keyboard are frozen by the client.",null,null],[17,"XCB_ALLOW_SYNC_BOTH","","For SyncBoth, if both pointer and keyboard are frozen by the client, event processing (for both devices) continues normally until the next ButtonPress, ButtonRelease, KeyPress, or KeyRelease event is reported to the client for a grabbed device (button event for the pointer, key event for the keyboard), at which time the devices again appear to freeze. However, if the reported event causes the grab to be released, then the devices do not freeze (but if the other device is still grabbed, then a subsequent event for it will still cause both devices to freeze). SyncBoth has no effect unless both pointer and keyboard are frozen by the client. If the pointer or keyboard is frozen twice by the client on behalf of two separate grabs, SyncBoth thaws for both (but a subsequent freeze for SyncBoth will only freeze each device once).",null,null],[17,"XCB_ALLOW_EVENTS","","",null,null],[17,"XCB_GRAB_SERVER","","",null,null],[17,"XCB_UNGRAB_SERVER","","",null,null],[17,"XCB_QUERY_POINTER","","",null,null],[17,"XCB_GET_MOTION_EVENTS","","",null,null],[17,"XCB_TRANSLATE_COORDINATES","","",null,null],[17,"XCB_WARP_POINTER","","",null,null],[17,"XCB_INPUT_FOCUS_NONE","","The focus reverts to `XCB_NONE`, so no window will have the input focus.",null,null],[17,"XCB_INPUT_FOCUS_POINTER_ROOT","","The focus reverts to `XCB_POINTER_ROOT` respectively. When the focus reverts, FocusIn and FocusOut events are generated, but the last-focus-change time is not changed.",null,null],[17,"XCB_INPUT_FOCUS_PARENT","","The focus reverts to the parent (or closest viewable ancestor) and the new revert_to value is `XCB_INPUT_FOCUS_NONE`.",null,null],[17,"XCB_INPUT_FOCUS_FOLLOW_KEYBOARD","","NOT YET DOCUMENTED. Only relevant for the xinput extension.",null,null],[17,"XCB_SET_INPUT_FOCUS","","",null,null],[17,"XCB_GET_INPUT_FOCUS","","",null,null],[17,"XCB_QUERY_KEYMAP","","",null,null],[17,"XCB_OPEN_FONT","","",null,null],[17,"XCB_CLOSE_FONT","","",null,null],[17,"XCB_FONT_DRAW_LEFT_TO_RIGHT","","",null,null],[17,"XCB_FONT_DRAW_RIGHT_TO_LEFT","","",null,null],[17,"XCB_QUERY_FONT","","",null,null],[17,"XCB_QUERY_TEXT_EXTENTS","","",null,null],[17,"XCB_LIST_FONTS","","",null,null],[17,"XCB_LIST_FONTS_WITH_INFO","","",null,null],[17,"XCB_SET_FONT_PATH","","",null,null],[17,"XCB_GET_FONT_PATH","","",null,null],[17,"XCB_CREATE_PIXMAP","","",null,null],[17,"XCB_FREE_PIXMAP","","",null,null],[17,"XCB_GC_FUNCTION","","TODO: Refer to GX",null,null],[17,"XCB_GC_PLANE_MASK","","In graphics operations, given a source and destination pixel, the result is computed bitwise on corresponding bits of the pixels; that is, a Boolean operation is performed in each bit plane. The plane-mask restricts the operation to a subset of planes, so the result is:",null,null],[17,"XCB_GC_FOREGROUND","","Foreground colorpixel.",null,null],[17,"XCB_GC_BACKGROUND","","Background colorpixel.",null,null],[17,"XCB_GC_LINE_WIDTH","","The line-width is measured in pixels and can be greater than or equal to one, a wide line, or the special value zero, a thin line.",null,null],[17,"XCB_GC_LINE_STYLE","","The line-style defines which sections of a line are drawn: Solid                The full path of the line is drawn. DoubleDash           The full path of the line is drawn, but the even dashes are filled differently                      than the odd dashes (see fill-style), with Butt cap-style used where even and                      odd dashes meet. OnOffDash            Only the even dashes are drawn, and cap-style applies to all internal ends of                      the individual dashes (except NotLast is treated as Butt).",null,null],[17,"XCB_GC_CAP_STYLE","","The cap-style defines how the endpoints of a path are drawn: NotLast    The result is equivalent to Butt, except that for a line-width of zero the final            endpoint is not drawn. Butt       The result is square at the endpoint (perpendicular to the slope of the line)            with no projection beyond. Round      The result is a circular arc with its diameter equal to the line-width, centered            on the endpoint; it is equivalent to Butt for line-width zero. Projecting The result is square at the end, but the path continues beyond the endpoint for            a distance equal to half the line-width; it is equivalent to Butt for line-width            zero.",null,null],[17,"XCB_GC_JOIN_STYLE","","The join-style defines how corners are drawn for wide lines: Miter               The outer edges of the two lines extend to meet at an angle. However, if the                     angle is less than 11 degrees, a Bevel join-style is used instead. Round               The result is a circular arc with a diameter equal to the line-width, centered                     on the joinpoint. Bevel               The result is Butt endpoint styles, and then the triangular notch is filled.",null,null],[17,"XCB_GC_FILL_STYLE","","The fill-style defines the contents of the source for line, text, and fill requests. For all text and fill requests (for example, PolyText8, PolyText16, PolyFillRectangle, FillPoly, and PolyFillArc) as well as for line requests with line-style Solid, (for example, PolyLine, PolySegment, PolyRectangle, PolyArc) and for the even dashes for line requests with line-style OnOffDash or DoubleDash: Solid                     Foreground Tiled                     Tile OpaqueStippled            A tile with the same width and height as stipple but with background                           everywhere stipple has a zero and with foreground everywhere stipple                           has a one Stippled                  Foreground masked by stipple For the odd dashes for line requests with line-style DoubleDash: Solid                     Background Tiled                     Same as for even dashes OpaqueStippled            Same as for even dashes Stippled                  Background masked by stipple",null,null],[17,"XCB_GC_FILL_RULE","","",null,null],[17,"XCB_GC_TILE","","The tile/stipple represents an infinite two-dimensional plane with the tile/stipple replicated in all dimensions. When that plane is superimposed on the drawable for use in a graphics operation, the upper-left corner of some instance of the tile/stipple is at the coordinates within the drawable specified by the tile/stipple origin. The tile/stipple and clip origins are interpreted relative to the origin of whatever destination drawable is specified in a graphics request. The tile pixmap must have the same root and depth as the gcontext (or a Match error results). The stipple pixmap must have depth one and must have the same root as the gcontext (or a Match error results). For fill-style Stippled (but not fill-style OpaqueStippled), the stipple pattern is tiled in a single plane and acts as an additional clip mask to be ANDed with the clip-mask. Any size pixmap can be used for tiling or stippling, although some sizes may be faster to use than others.",null,null],[17,"XCB_GC_STIPPLE","","The tile/stipple represents an infinite two-dimensional plane with the tile/stipple replicated in all dimensions. When that plane is superimposed on the drawable for use in a graphics operation, the upper-left corner of some instance of the tile/stipple is at the coordinates within the drawable specified by the tile/stipple origin. The tile/stipple and clip origins are interpreted relative to the origin of whatever destination drawable is specified in a graphics request. The tile pixmap must have the same root and depth as the gcontext (or a Match error results). The stipple pixmap must have depth one and must have the same root as the gcontext (or a Match error results). For fill-style Stippled (but not fill-style OpaqueStippled), the stipple pattern is tiled in a single plane and acts as an additional clip mask to be ANDed with the clip-mask. Any size pixmap can be used for tiling or stippling, although some sizes may be faster to use than others.",null,null],[17,"XCB_GC_TILE_STIPPLE_ORIGIN_X","","TODO",null,null],[17,"XCB_GC_TILE_STIPPLE_ORIGIN_Y","","TODO",null,null],[17,"XCB_GC_FONT","","Which font to use for the `ImageText8` and `ImageText16` requests.",null,null],[17,"XCB_GC_SUBWINDOW_MODE","","For ClipByChildren, both source and destination windows are additionally clipped by all viewable InputOutput children. For IncludeInferiors, neither source nor destination window is clipped by inferiors. This will result in including subwindow contents in the source and drawing through subwindow boundaries of the destination. The use of IncludeInferiors with a source or destination window of one depth with mapped inferiors of differing depth is not illegal, but the semantics is undefined by the core protocol.",null,null],[17,"XCB_GC_GRAPHICS_EXPOSURES","","Whether ExposureEvents should be generated (1) or not (0).",null,null],[17,"XCB_GC_CLIP_ORIGIN_X","","TODO",null,null],[17,"XCB_GC_CLIP_ORIGIN_Y","","TODO",null,null],[17,"XCB_GC_CLIP_MASK","","The clip-mask restricts writes to the destination drawable. Only pixels where the clip-mask has bits set to 1 are drawn. Pixels are not drawn outside the area covered by the clip-mask or where the clip-mask has bits set to 0. The clip-mask affects all graphics requests, but it does not clip sources. The clip-mask origin is interpreted relative to the origin of whatever destination drawable is specified in a graphics request. If a pixmap is specified as the clip-mask, it must have depth 1 and have the same root as the gcontext (or a Match error results). If clip-mask is None, then pixels are always drawn, regardless of the clip origin. The clip-mask can also be set with the SetClipRectangles request.",null,null],[17,"XCB_GC_DASH_OFFSET","","TODO",null,null],[17,"XCB_GC_DASH_LIST","","TODO",null,null],[17,"XCB_GC_ARC_MODE","","TODO",null,null],[17,"XCB_GX_CLEAR","","",null,null],[17,"XCB_GX_AND","","",null,null],[17,"XCB_GX_AND_REVERSE","","",null,null],[17,"XCB_GX_COPY","","",null,null],[17,"XCB_GX_AND_INVERTED","","",null,null],[17,"XCB_GX_NOOP","","",null,null],[17,"XCB_GX_XOR","","",null,null],[17,"XCB_GX_OR","","",null,null],[17,"XCB_GX_NOR","","",null,null],[17,"XCB_GX_EQUIV","","",null,null],[17,"XCB_GX_INVERT","","",null,null],[17,"XCB_GX_OR_REVERSE","","",null,null],[17,"XCB_GX_COPY_INVERTED","","",null,null],[17,"XCB_GX_OR_INVERTED","","",null,null],[17,"XCB_GX_NAND","","",null,null],[17,"XCB_GX_SET","","",null,null],[17,"XCB_LINE_STYLE_SOLID","","",null,null],[17,"XCB_LINE_STYLE_ON_OFF_DASH","","",null,null],[17,"XCB_LINE_STYLE_DOUBLE_DASH","","",null,null],[17,"XCB_CAP_STYLE_NOT_LAST","","",null,null],[17,"XCB_CAP_STYLE_BUTT","","",null,null],[17,"XCB_CAP_STYLE_ROUND","","",null,null],[17,"XCB_CAP_STYLE_PROJECTING","","",null,null],[17,"XCB_JOIN_STYLE_MITER","","",null,null],[17,"XCB_JOIN_STYLE_ROUND","","",null,null],[17,"XCB_JOIN_STYLE_BEVEL","","",null,null],[17,"XCB_FILL_STYLE_SOLID","","",null,null],[17,"XCB_FILL_STYLE_TILED","","",null,null],[17,"XCB_FILL_STYLE_STIPPLED","","",null,null],[17,"XCB_FILL_STYLE_OPAQUE_STIPPLED","","",null,null],[17,"XCB_FILL_RULE_EVEN_ODD","","",null,null],[17,"XCB_FILL_RULE_WINDING","","",null,null],[17,"XCB_SUBWINDOW_MODE_CLIP_BY_CHILDREN","","",null,null],[17,"XCB_SUBWINDOW_MODE_INCLUDE_INFERIORS","","",null,null],[17,"XCB_ARC_MODE_CHORD","","",null,null],[17,"XCB_ARC_MODE_PIE_SLICE","","",null,null],[17,"XCB_CREATE_GC","","",null,null],[17,"XCB_CHANGE_GC","","",null,null],[17,"XCB_COPY_GC","","",null,null],[17,"XCB_SET_DASHES","","",null,null],[17,"XCB_CLIP_ORDERING_UNSORTED","","",null,null],[17,"XCB_CLIP_ORDERING_Y_SORTED","","",null,null],[17,"XCB_CLIP_ORDERING_YX_SORTED","","",null,null],[17,"XCB_CLIP_ORDERING_YX_BANDED","","",null,null],[17,"XCB_SET_CLIP_RECTANGLES","","",null,null],[17,"XCB_FREE_GC","","",null,null],[17,"XCB_CLEAR_AREA","","",null,null],[17,"XCB_COPY_AREA","","",null,null],[17,"XCB_COPY_PLANE","","",null,null],[17,"XCB_COORD_MODE_ORIGIN","","Treats all coordinates as relative to the origin.",null,null],[17,"XCB_COORD_MODE_PREVIOUS","","Treats all coordinates after the first as relative to the previous coordinate.",null,null],[17,"XCB_POLY_POINT","","",null,null],[17,"XCB_POLY_LINE","","",null,null],[17,"XCB_POLY_SEGMENT","","",null,null],[17,"XCB_POLY_RECTANGLE","","",null,null],[17,"XCB_POLY_ARC","","",null,null],[17,"XCB_POLY_SHAPE_COMPLEX","","",null,null],[17,"XCB_POLY_SHAPE_NONCONVEX","","",null,null],[17,"XCB_POLY_SHAPE_CONVEX","","",null,null],[17,"XCB_FILL_POLY","","",null,null],[17,"XCB_POLY_FILL_RECTANGLE","","",null,null],[17,"XCB_POLY_FILL_ARC","","",null,null],[17,"XCB_IMAGE_FORMAT_XY_BITMAP","","",null,null],[17,"XCB_IMAGE_FORMAT_XY_PIXMAP","","",null,null],[17,"XCB_IMAGE_FORMAT_Z_PIXMAP","","",null,null],[17,"XCB_PUT_IMAGE","","",null,null],[17,"XCB_GET_IMAGE","","",null,null],[17,"XCB_POLY_TEXT_8","","",null,null],[17,"XCB_POLY_TEXT_16","","",null,null],[17,"XCB_IMAGE_TEXT_8","","",null,null],[17,"XCB_IMAGE_TEXT_16","","",null,null],[17,"XCB_COLORMAP_ALLOC_NONE","","",null,null],[17,"XCB_COLORMAP_ALLOC_ALL","","",null,null],[17,"XCB_CREATE_COLORMAP","","",null,null],[17,"XCB_FREE_COLORMAP","","",null,null],[17,"XCB_COPY_COLORMAP_AND_FREE","","",null,null],[17,"XCB_INSTALL_COLORMAP","","",null,null],[17,"XCB_UNINSTALL_COLORMAP","","",null,null],[17,"XCB_LIST_INSTALLED_COLORMAPS","","",null,null],[17,"XCB_ALLOC_COLOR","","",null,null],[17,"XCB_ALLOC_NAMED_COLOR","","",null,null],[17,"XCB_ALLOC_COLOR_CELLS","","",null,null],[17,"XCB_ALLOC_COLOR_PLANES","","",null,null],[17,"XCB_FREE_COLORS","","",null,null],[17,"XCB_COLOR_FLAG_RED","","",null,null],[17,"XCB_COLOR_FLAG_GREEN","","",null,null],[17,"XCB_COLOR_FLAG_BLUE","","",null,null],[17,"XCB_STORE_COLORS","","",null,null],[17,"XCB_STORE_NAMED_COLOR","","",null,null],[17,"XCB_QUERY_COLORS","","",null,null],[17,"XCB_LOOKUP_COLOR","","",null,null],[17,"XCB_PIXMAP_NONE","","",null,null],[17,"XCB_CREATE_CURSOR","","",null,null],[17,"XCB_FONT_NONE","","",null,null],[17,"XCB_CREATE_GLYPH_CURSOR","","",null,null],[17,"XCB_FREE_CURSOR","","",null,null],[17,"XCB_RECOLOR_CURSOR","","",null,null],[17,"XCB_QUERY_SHAPE_OF_LARGEST_CURSOR","","",null,null],[17,"XCB_QUERY_SHAPE_OF_FASTEST_TILE","","",null,null],[17,"XCB_QUERY_SHAPE_OF_FASTEST_STIPPLE","","",null,null],[17,"XCB_QUERY_BEST_SIZE","","",null,null],[17,"XCB_QUERY_EXTENSION","","",null,null],[17,"XCB_LIST_EXTENSIONS","","",null,null],[17,"XCB_CHANGE_KEYBOARD_MAPPING","","",null,null],[17,"XCB_GET_KEYBOARD_MAPPING","","",null,null],[17,"XCB_KB_KEY_CLICK_PERCENT","","",null,null],[17,"XCB_KB_BELL_PERCENT","","",null,null],[17,"XCB_KB_BELL_PITCH","","",null,null],[17,"XCB_KB_BELL_DURATION","","",null,null],[17,"XCB_KB_LED","","",null,null],[17,"XCB_KB_LED_MODE","","",null,null],[17,"XCB_KB_KEY","","",null,null],[17,"XCB_KB_AUTO_REPEAT_MODE","","",null,null],[17,"XCB_LED_MODE_OFF","","",null,null],[17,"XCB_LED_MODE_ON","","",null,null],[17,"XCB_AUTO_REPEAT_MODE_OFF","","",null,null],[17,"XCB_AUTO_REPEAT_MODE_ON","","",null,null],[17,"XCB_AUTO_REPEAT_MODE_DEFAULT","","",null,null],[17,"XCB_CHANGE_KEYBOARD_CONTROL","","",null,null],[17,"XCB_GET_KEYBOARD_CONTROL","","",null,null],[17,"XCB_BELL","","",null,null],[17,"XCB_CHANGE_POINTER_CONTROL","","",null,null],[17,"XCB_GET_POINTER_CONTROL","","",null,null],[17,"XCB_BLANKING_NOT_PREFERRED","","",null,null],[17,"XCB_BLANKING_PREFERRED","","",null,null],[17,"XCB_BLANKING_DEFAULT","","",null,null],[17,"XCB_EXPOSURES_NOT_ALLOWED","","",null,null],[17,"XCB_EXPOSURES_ALLOWED","","",null,null],[17,"XCB_EXPOSURES_DEFAULT","","",null,null],[17,"XCB_SET_SCREEN_SAVER","","",null,null],[17,"XCB_GET_SCREEN_SAVER","","",null,null],[17,"XCB_HOST_MODE_INSERT","","",null,null],[17,"XCB_HOST_MODE_DELETE","","",null,null],[17,"XCB_FAMILY_INTERNET","","",null,null],[17,"XCB_FAMILY_DE_CNET","","",null,null],[17,"XCB_FAMILY_CHAOS","","",null,null],[17,"XCB_FAMILY_SERVER_INTERPRETED","","",null,null],[17,"XCB_FAMILY_INTERNET_6","","",null,null],[17,"XCB_CHANGE_HOSTS","","",null,null],[17,"XCB_LIST_HOSTS","","",null,null],[17,"XCB_ACCESS_CONTROL_DISABLE","","",null,null],[17,"XCB_ACCESS_CONTROL_ENABLE","","",null,null],[17,"XCB_SET_ACCESS_CONTROL","","",null,null],[17,"XCB_CLOSE_DOWN_DESTROY_ALL","","",null,null],[17,"XCB_CLOSE_DOWN_RETAIN_PERMANENT","","",null,null],[17,"XCB_CLOSE_DOWN_RETAIN_TEMPORARY","","",null,null],[17,"XCB_SET_CLOSE_DOWN_MODE","","",null,null],[17,"XCB_KILL_ALL_TEMPORARY","","",null,null],[17,"XCB_KILL_CLIENT","","",null,null],[17,"XCB_ROTATE_PROPERTIES","","",null,null],[17,"XCB_SCREEN_SAVER_RESET","","",null,null],[17,"XCB_SCREEN_SAVER_ACTIVE","","",null,null],[17,"XCB_FORCE_SCREEN_SAVER","","",null,null],[17,"XCB_MAPPING_STATUS_SUCCESS","","",null,null],[17,"XCB_MAPPING_STATUS_BUSY","","",null,null],[17,"XCB_MAPPING_STATUS_FAILURE","","",null,null],[17,"XCB_SET_POINTER_MAPPING","","",null,null],[17,"XCB_GET_POINTER_MAPPING","","",null,null],[17,"XCB_MAP_INDEX_SHIFT","","",null,null],[17,"XCB_MAP_INDEX_LOCK","","",null,null],[17,"XCB_MAP_INDEX_CONTROL","","",null,null],[17,"XCB_MAP_INDEX_1","","",null,null],[17,"XCB_MAP_INDEX_2","","",null,null],[17,"XCB_MAP_INDEX_3","","",null,null],[17,"XCB_MAP_INDEX_4","","",null,null],[17,"XCB_MAP_INDEX_5","","",null,null],[17,"XCB_SET_MODIFIER_MAPPING","","",null,null],[17,"XCB_GET_MODIFIER_MAPPING","","",null,null],[17,"XCB_NO_OPERATION","","",null,null],[11,"clone","","",193,{"inputs":[{"name":"self"}],"output":{"name":"xcb_char2b_t"}}],[11,"clone","","",209,{"inputs":[{"name":"self"}],"output":{"name":"xcb_point_t"}}],[11,"clone","","",211,{"inputs":[{"name":"self"}],"output":{"name":"xcb_rectangle_t"}}],[11,"clone","","",213,{"inputs":[{"name":"self"}],"output":{"name":"xcb_arc_t"}}],[11,"clone","","",215,{"inputs":[{"name":"self"}],"output":{"name":"xcb_format_t"}}],[11,"clone","","",217,{"inputs":[{"name":"self"}],"output":{"name":"xcb_visualtype_t"}}],[11,"clone","","",231,{"inputs":[{"name":"self"}],"output":{"name":"xcb_key_press_event_t"}}],[11,"clone","","",232,{"inputs":[{"name":"self"}],"output":{"name":"xcb_button_press_event_t"}}],[11,"clone","","",233,{"inputs":[{"name":"self"}],"output":{"name":"xcb_motion_notify_event_t"}}],[11,"clone","","",234,{"inputs":[{"name":"self"}],"output":{"name":"xcb_enter_notify_event_t"}}],[11,"clone","","",235,{"inputs":[{"name":"self"}],"output":{"name":"xcb_focus_in_event_t"}}],[11,"clone","","",236,{"inputs":[{"name":"self"}],"output":{"name":"xcb_keymap_notify_event_t"}}],[11,"clone","","",237,{"inputs":[{"name":"self"}],"output":{"name":"xcb_expose_event_t"}}],[11,"clone","","",238,{"inputs":[{"name":"self"}],"output":{"name":"xcb_graphics_exposure_event_t"}}],[11,"clone","","",239,{"inputs":[{"name":"self"}],"output":{"name":"xcb_no_exposure_event_t"}}],[11,"clone","","",240,{"inputs":[{"name":"self"}],"output":{"name":"xcb_visibility_notify_event_t"}}],[11,"clone","","",241,{"inputs":[{"name":"self"}],"output":{"name":"xcb_create_notify_event_t"}}],[11,"clone","","",242,{"inputs":[{"name":"self"}],"output":{"name":"xcb_destroy_notify_event_t"}}],[11,"clone","","",243,{"inputs":[{"name":"self"}],"output":{"name":"xcb_unmap_notify_event_t"}}],[11,"clone","","",244,{"inputs":[{"name":"self"}],"output":{"name":"xcb_map_notify_event_t"}}],[11,"clone","","",245,{"inputs":[{"name":"self"}],"output":{"name":"xcb_map_request_event_t"}}],[11,"clone","","",246,{"inputs":[{"name":"self"}],"output":{"name":"xcb_reparent_notify_event_t"}}],[11,"clone","","",247,{"inputs":[{"name":"self"}],"output":{"name":"xcb_configure_notify_event_t"}}],[11,"clone","","",248,{"inputs":[{"name":"self"}],"output":{"name":"xcb_configure_request_event_t"}}],[11,"clone","","",249,{"inputs":[{"name":"self"}],"output":{"name":"xcb_gravity_notify_event_t"}}],[11,"clone","","",250,{"inputs":[{"name":"self"}],"output":{"name":"xcb_resize_request_event_t"}}],[11,"clone","","",251,{"inputs":[{"name":"self"}],"output":{"name":"xcb_circulate_notify_event_t"}}],[11,"clone","","",252,{"inputs":[{"name":"self"}],"output":{"name":"xcb_property_notify_event_t"}}],[11,"clone","","",253,{"inputs":[{"name":"self"}],"output":{"name":"xcb_selection_clear_event_t"}}],[11,"clone","","",254,{"inputs":[{"name":"self"}],"output":{"name":"xcb_selection_request_event_t"}}],[11,"clone","","",255,{"inputs":[{"name":"self"}],"output":{"name":"xcb_selection_notify_event_t"}}],[11,"clone","","",256,{"inputs":[{"name":"self"}],"output":{"name":"xcb_colormap_notify_event_t"}}],[11,"clone","","",257,{"inputs":[{"name":"self"}],"output":{"name":"xcb_client_message_data_t"}}],[11,"clone","","",259,{"inputs":[{"name":"self"}],"output":{"name":"xcb_client_message_event_t"}}],[11,"clone","","",260,{"inputs":[{"name":"self"}],"output":{"name":"xcb_mapping_notify_event_t"}}],[11,"clone","","",261,{"inputs":[{"name":"self"}],"output":{"name":"xcb_ge_generic_event_t"}}],[11,"clone","","",262,{"inputs":[{"name":"self"}],"output":{"name":"xcb_request_error_t"}}],[11,"clone","","",263,{"inputs":[{"name":"self"}],"output":{"name":"xcb_value_error_t"}}],[11,"clone","","",266,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_window_attributes_request_t"}}],[11,"clone","","",440,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_window_attributes_cookie_t"}}],[11,"clone","","",267,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_window_attributes_reply_t"}}],[11,"clone","","",268,{"inputs":[{"name":"self"}],"output":{"name":"xcb_destroy_window_request_t"}}],[11,"clone","","",269,{"inputs":[{"name":"self"}],"output":{"name":"xcb_destroy_subwindows_request_t"}}],[11,"clone","","",270,{"inputs":[{"name":"self"}],"output":{"name":"xcb_change_save_set_request_t"}}],[11,"clone","","",271,{"inputs":[{"name":"self"}],"output":{"name":"xcb_reparent_window_request_t"}}],[11,"clone","","",272,{"inputs":[{"name":"self"}],"output":{"name":"xcb_map_window_request_t"}}],[11,"clone","","",273,{"inputs":[{"name":"self"}],"output":{"name":"xcb_map_subwindows_request_t"}}],[11,"clone","","",274,{"inputs":[{"name":"self"}],"output":{"name":"xcb_unmap_window_request_t"}}],[11,"clone","","",275,{"inputs":[{"name":"self"}],"output":{"name":"xcb_unmap_subwindows_request_t"}}],[11,"clone","","",277,{"inputs":[{"name":"self"}],"output":{"name":"xcb_circulate_window_request_t"}}],[11,"clone","","",278,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_geometry_request_t"}}],[11,"clone","","",441,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_geometry_cookie_t"}}],[11,"clone","","",279,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_geometry_reply_t"}}],[11,"clone","","",280,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_tree_request_t"}}],[11,"clone","","",442,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_tree_cookie_t"}}],[11,"clone","","",443,{"inputs":[{"name":"self"}],"output":{"name":"xcb_intern_atom_cookie_t"}}],[11,"clone","","",283,{"inputs":[{"name":"self"}],"output":{"name":"xcb_intern_atom_reply_t"}}],[11,"clone","","",284,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_atom_name_request_t"}}],[11,"clone","","",444,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_atom_name_cookie_t"}}],[11,"clone","","",287,{"inputs":[{"name":"self"}],"output":{"name":"xcb_delete_property_request_t"}}],[11,"clone","","",288,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_property_request_t"}}],[11,"clone","","",445,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_property_cookie_t"}}],[11,"clone","","",290,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_properties_request_t"}}],[11,"clone","","",446,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_properties_cookie_t"}}],[11,"clone","","",292,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_selection_owner_request_t"}}],[11,"clone","","",293,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_selection_owner_request_t"}}],[11,"clone","","",447,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_selection_owner_cookie_t"}}],[11,"clone","","",294,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_selection_owner_reply_t"}}],[11,"clone","","",295,{"inputs":[{"name":"self"}],"output":{"name":"xcb_convert_selection_request_t"}}],[11,"clone","","",296,{"inputs":[{"name":"self"}],"output":{"name":"xcb_send_event_request_t"}}],[11,"clone","","",297,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_pointer_request_t"}}],[11,"clone","","",448,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_pointer_cookie_t"}}],[11,"clone","","",298,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_pointer_reply_t"}}],[11,"clone","","",299,{"inputs":[{"name":"self"}],"output":{"name":"xcb_ungrab_pointer_request_t"}}],[11,"clone","","",300,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_button_request_t"}}],[11,"clone","","",301,{"inputs":[{"name":"self"}],"output":{"name":"xcb_ungrab_button_request_t"}}],[11,"clone","","",302,{"inputs":[{"name":"self"}],"output":{"name":"xcb_change_active_pointer_grab_request_t"}}],[11,"clone","","",303,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_keyboard_request_t"}}],[11,"clone","","",449,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_keyboard_cookie_t"}}],[11,"clone","","",304,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_keyboard_reply_t"}}],[11,"clone","","",305,{"inputs":[{"name":"self"}],"output":{"name":"xcb_ungrab_keyboard_request_t"}}],[11,"clone","","",306,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_key_request_t"}}],[11,"clone","","",307,{"inputs":[{"name":"self"}],"output":{"name":"xcb_ungrab_key_request_t"}}],[11,"clone","","",308,{"inputs":[{"name":"self"}],"output":{"name":"xcb_allow_events_request_t"}}],[11,"clone","","",309,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_server_request_t"}}],[11,"clone","","",310,{"inputs":[{"name":"self"}],"output":{"name":"xcb_ungrab_server_request_t"}}],[11,"clone","","",311,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_pointer_request_t"}}],[11,"clone","","",450,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_pointer_cookie_t"}}],[11,"clone","","",312,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_pointer_reply_t"}}],[11,"clone","","",313,{"inputs":[{"name":"self"}],"output":{"name":"xcb_timecoord_t"}}],[11,"clone","","",315,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_motion_events_request_t"}}],[11,"clone","","",451,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_motion_events_cookie_t"}}],[11,"clone","","",317,{"inputs":[{"name":"self"}],"output":{"name":"xcb_translate_coordinates_request_t"}}],[11,"clone","","",452,{"inputs":[{"name":"self"}],"output":{"name":"xcb_translate_coordinates_cookie_t"}}],[11,"clone","","",318,{"inputs":[{"name":"self"}],"output":{"name":"xcb_translate_coordinates_reply_t"}}],[11,"clone","","",319,{"inputs":[{"name":"self"}],"output":{"name":"xcb_warp_pointer_request_t"}}],[11,"clone","","",320,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_input_focus_request_t"}}],[11,"clone","","",321,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_input_focus_request_t"}}],[11,"clone","","",453,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_input_focus_cookie_t"}}],[11,"clone","","",322,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_input_focus_reply_t"}}],[11,"clone","","",323,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_keymap_request_t"}}],[11,"clone","","",454,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_keymap_cookie_t"}}],[11,"clone","","",324,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_keymap_reply_t"}}],[11,"clone","","",326,{"inputs":[{"name":"self"}],"output":{"name":"xcb_close_font_request_t"}}],[11,"clone","","",327,{"inputs":[{"name":"self"}],"output":{"name":"xcb_fontprop_t"}}],[11,"clone","","",329,{"inputs":[{"name":"self"}],"output":{"name":"xcb_charinfo_t"}}],[11,"clone","","",331,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_font_request_t"}}],[11,"clone","","",455,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_font_cookie_t"}}],[11,"clone","","",456,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_text_extents_cookie_t"}}],[11,"clone","","",334,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_text_extents_reply_t"}}],[11,"clone","","",457,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_fonts_cookie_t"}}],[11,"clone","","",458,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_fonts_with_info_cookie_t"}}],[11,"clone","","",342,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_font_path_request_t"}}],[11,"clone","","",459,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_font_path_cookie_t"}}],[11,"clone","","",344,{"inputs":[{"name":"self"}],"output":{"name":"xcb_create_pixmap_request_t"}}],[11,"clone","","",345,{"inputs":[{"name":"self"}],"output":{"name":"xcb_free_pixmap_request_t"}}],[11,"clone","","",348,{"inputs":[{"name":"self"}],"output":{"name":"xcb_copy_gc_request_t"}}],[11,"clone","","",351,{"inputs":[{"name":"self"}],"output":{"name":"xcb_free_gc_request_t"}}],[11,"clone","","",352,{"inputs":[{"name":"self"}],"output":{"name":"xcb_clear_area_request_t"}}],[11,"clone","","",353,{"inputs":[{"name":"self"}],"output":{"name":"xcb_copy_area_request_t"}}],[11,"clone","","",354,{"inputs":[{"name":"self"}],"output":{"name":"xcb_copy_plane_request_t"}}],[11,"clone","","",357,{"inputs":[{"name":"self"}],"output":{"name":"xcb_segment_t"}}],[11,"clone","","",366,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_image_request_t"}}],[11,"clone","","",460,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_image_cookie_t"}}],[11,"clone","","",372,{"inputs":[{"name":"self"}],"output":{"name":"xcb_create_colormap_request_t"}}],[11,"clone","","",373,{"inputs":[{"name":"self"}],"output":{"name":"xcb_free_colormap_request_t"}}],[11,"clone","","",374,{"inputs":[{"name":"self"}],"output":{"name":"xcb_copy_colormap_and_free_request_t"}}],[11,"clone","","",375,{"inputs":[{"name":"self"}],"output":{"name":"xcb_install_colormap_request_t"}}],[11,"clone","","",376,{"inputs":[{"name":"self"}],"output":{"name":"xcb_uninstall_colormap_request_t"}}],[11,"clone","","",377,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_installed_colormaps_request_t"}}],[11,"clone","","",461,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_installed_colormaps_cookie_t"}}],[11,"clone","","",379,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_color_request_t"}}],[11,"clone","","",462,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_color_cookie_t"}}],[11,"clone","","",380,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_color_reply_t"}}],[11,"clone","","",463,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_named_color_cookie_t"}}],[11,"clone","","",382,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_named_color_reply_t"}}],[11,"clone","","",383,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_color_cells_request_t"}}],[11,"clone","","",464,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_color_cells_cookie_t"}}],[11,"clone","","",385,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_color_planes_request_t"}}],[11,"clone","","",465,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_color_planes_cookie_t"}}],[11,"clone","","",388,{"inputs":[{"name":"self"}],"output":{"name":"xcb_coloritem_t"}}],[11,"clone","","",392,{"inputs":[{"name":"self"}],"output":{"name":"xcb_rgb_t"}}],[11,"clone","","",466,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_colors_cookie_t"}}],[11,"clone","","",467,{"inputs":[{"name":"self"}],"output":{"name":"xcb_lookup_color_cookie_t"}}],[11,"clone","","",397,{"inputs":[{"name":"self"}],"output":{"name":"xcb_lookup_color_reply_t"}}],[11,"clone","","",398,{"inputs":[{"name":"self"}],"output":{"name":"xcb_create_cursor_request_t"}}],[11,"clone","","",399,{"inputs":[{"name":"self"}],"output":{"name":"xcb_create_glyph_cursor_request_t"}}],[11,"clone","","",400,{"inputs":[{"name":"self"}],"output":{"name":"xcb_free_cursor_request_t"}}],[11,"clone","","",401,{"inputs":[{"name":"self"}],"output":{"name":"xcb_recolor_cursor_request_t"}}],[11,"clone","","",402,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_best_size_request_t"}}],[11,"clone","","",468,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_best_size_cookie_t"}}],[11,"clone","","",403,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_best_size_reply_t"}}],[11,"clone","","",469,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_extension_cookie_t"}}],[11,"clone","","",405,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_extension_reply_t"}}],[11,"clone","","",406,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_extensions_request_t"}}],[11,"clone","","",470,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_extensions_cookie_t"}}],[11,"clone","","",409,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_keyboard_mapping_request_t"}}],[11,"clone","","",471,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_keyboard_mapping_cookie_t"}}],[11,"clone","","",412,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_keyboard_control_request_t"}}],[11,"clone","","",472,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_keyboard_control_cookie_t"}}],[11,"clone","","",413,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_keyboard_control_reply_t"}}],[11,"clone","","",414,{"inputs":[{"name":"self"}],"output":{"name":"xcb_bell_request_t"}}],[11,"clone","","",415,{"inputs":[{"name":"self"}],"output":{"name":"xcb_change_pointer_control_request_t"}}],[11,"clone","","",416,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_pointer_control_request_t"}}],[11,"clone","","",473,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_pointer_control_cookie_t"}}],[11,"clone","","",417,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_pointer_control_reply_t"}}],[11,"clone","","",418,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_screen_saver_request_t"}}],[11,"clone","","",419,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_screen_saver_request_t"}}],[11,"clone","","",474,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_screen_saver_cookie_t"}}],[11,"clone","","",420,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_screen_saver_reply_t"}}],[11,"clone","","",424,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_hosts_request_t"}}],[11,"clone","","",475,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_hosts_cookie_t"}}],[11,"clone","","",426,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_access_control_request_t"}}],[11,"clone","","",427,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_close_down_mode_request_t"}}],[11,"clone","","",428,{"inputs":[{"name":"self"}],"output":{"name":"xcb_kill_client_request_t"}}],[11,"clone","","",430,{"inputs":[{"name":"self"}],"output":{"name":"xcb_force_screen_saver_request_t"}}],[11,"clone","","",476,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_pointer_mapping_cookie_t"}}],[11,"clone","","",432,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_pointer_mapping_reply_t"}}],[11,"clone","","",433,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_pointer_mapping_request_t"}}],[11,"clone","","",477,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_pointer_mapping_cookie_t"}}],[11,"clone","","",478,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_modifier_mapping_cookie_t"}}],[11,"clone","","",436,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_modifier_mapping_reply_t"}}],[11,"clone","","",437,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_modifier_mapping_request_t"}}],[11,"clone","","",479,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_modifier_mapping_cookie_t"}}],[11,"clone","","",439,{"inputs":[{"name":"self"}],"output":{"name":"xcb_no_operation_request_t"}}],[0,"big_requests","xcb::ffi","",null,null],[3,"xcb_big_requests_enable_request_t","xcb::ffi::big_requests","",null,null],[12,"major_opcode","","",480,null],[12,"minor_opcode","","",480,null],[12,"length","","",480,null],[3,"xcb_big_requests_enable_cookie_t","","",null,null],[3,"xcb_big_requests_enable_reply_t","","",null,null],[12,"response_type","","",481,null],[12,"pad0","","",481,null],[12,"sequence","","",481,null],[12,"length","","",481,null],[12,"maximum_request_length","","",481,null],[7,"xcb_big_requests_id","","",null,null],[5,"xcb_big_requests_enable_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_big_requests_enable","","",null,null],[5,"xcb_big_requests_enable_unchecked","","",null,null],[17,"XCB_BIG_REQUESTS_MAJOR_VERSION","","",null,null],[17,"XCB_BIG_REQUESTS_MINOR_VERSION","","",null,null],[17,"XCB_BIG_REQUESTS_ENABLE","","",null,null],[11,"clone","","",480,{"inputs":[{"name":"self"}],"output":{"name":"xcb_big_requests_enable_request_t"}}],[11,"clone","","",482,{"inputs":[{"name":"self"}],"output":{"name":"xcb_big_requests_enable_cookie_t"}}],[11,"clone","","",481,{"inputs":[{"name":"self"}],"output":{"name":"xcb_big_requests_enable_reply_t"}}],[0,"xc_misc","xcb::ffi","",null,null],[3,"xcb_xc_misc_get_version_request_t","xcb::ffi::xc_misc","",null,null],[12,"major_opcode","","",483,null],[12,"minor_opcode","","",483,null],[12,"length","","",483,null],[12,"client_major_version","","",483,null],[12,"client_minor_version","","",483,null],[3,"xcb_xc_misc_get_version_cookie_t","","",null,null],[3,"xcb_xc_misc_get_version_reply_t","","",null,null],[12,"response_type","","",484,null],[12,"pad0","","",484,null],[12,"sequence","","",484,null],[12,"length","","",484,null],[12,"server_major_version","","",484,null],[12,"server_minor_version","","",484,null],[3,"xcb_xc_misc_get_xid_range_request_t","","",null,null],[12,"major_opcode","","",485,null],[12,"minor_opcode","","",485,null],[12,"length","","",485,null],[3,"xcb_xc_misc_get_xid_range_cookie_t","","",null,null],[3,"xcb_xc_misc_get_xid_range_reply_t","","",null,null],[12,"response_type","","",486,null],[12,"pad0","","",486,null],[12,"sequence","","",486,null],[12,"length","","",486,null],[12,"start_id","","",486,null],[12,"count","","",486,null],[3,"xcb_xc_misc_get_xid_list_request_t","","",null,null],[12,"major_opcode","","",487,null],[12,"minor_opcode","","",487,null],[12,"length","","",487,null],[12,"count","","",487,null],[3,"xcb_xc_misc_get_xid_list_cookie_t","","",null,null],[3,"xcb_xc_misc_get_xid_list_reply_t","","",null,null],[12,"response_type","","",488,null],[12,"pad0","","",488,null],[12,"sequence","","",488,null],[12,"length","","",488,null],[12,"ids_len","","",488,null],[12,"pad1","","",488,null],[7,"xcb_xc_misc_id","","",null,null],[5,"xcb_xc_misc_get_version_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xc_misc_get_version","","",null,null],[5,"xcb_xc_misc_get_version_unchecked","","",null,null],[5,"xcb_xc_misc_get_xid_range_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xc_misc_get_xid_range","","",null,null],[5,"xcb_xc_misc_get_xid_range_unchecked","","",null,null],[5,"xcb_xc_misc_get_xid_list_ids","","",null,null],[5,"xcb_xc_misc_get_xid_list_ids_length","","",null,null],[5,"xcb_xc_misc_get_xid_list_ids_end","","",null,null],[5,"xcb_xc_misc_get_xid_list_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xc_misc_get_xid_list","","",null,null],[5,"xcb_xc_misc_get_xid_list_unchecked","","",null,null],[17,"XCB_XC_MISC_MAJOR_VERSION","","",null,null],[17,"XCB_XC_MISC_MINOR_VERSION","","",null,null],[17,"XCB_XC_MISC_GET_VERSION","","",null,null],[17,"XCB_XC_MISC_GET_XID_RANGE","","",null,null],[17,"XCB_XC_MISC_GET_XID_LIST","","",null,null],[11,"clone","","",483,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xc_misc_get_version_request_t"}}],[11,"clone","","",489,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xc_misc_get_version_cookie_t"}}],[11,"clone","","",484,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xc_misc_get_version_reply_t"}}],[11,"clone","","",485,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xc_misc_get_xid_range_request_t"}}],[11,"clone","","",490,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xc_misc_get_xid_range_cookie_t"}}],[11,"clone","","",486,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xc_misc_get_xid_range_reply_t"}}],[11,"clone","","",487,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xc_misc_get_xid_list_request_t"}}],[11,"clone","","",491,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xc_misc_get_xid_list_cookie_t"}}]],"paths":[[3,"StructPtr"],[3,"Event"],[3,"Error"],[3,"Cookie"],[3,"Reply"],[4,"ConnError"],[8,"Zero"],[6,"VoidCookie"],[3,"Connection"],[3,"QueryExtensionData"],[3,"RequestError"],[3,"ValueError"],[3,"WindowError"],[3,"PixmapError"],[3,"AtomError"],[3,"CursorError"],[3,"FontError"],[3,"MatchError"],[3,"DrawableError"],[3,"AccessError"],[3,"AllocError"],[3,"ColormapError"],[3,"GContextError"],[3,"IdChoiceError"],[3,"NameError"],[3,"LengthError"],[3,"ImplementationError"],[3,"Char2b"],[3,"Point"],[3,"Rectangle"],[3,"Arc"],[3,"Format"],[3,"Visualtype"],[3,"Timecoord"],[3,"Fontprop"],[3,"Charinfo"],[3,"Segment"],[3,"Coloritem"],[3,"Rgb"],[6,"Char2bIterator"],[6,"PointIterator"],[6,"RectangleIterator"],[6,"ArcIterator"],[6,"FormatIterator"],[6,"VisualtypeIterator"],[6,"Depth"],[6,"DepthIterator"],[6,"Screen"],[6,"ScreenIterator"],[6,"SetupRequest"],[6,"SetupRequestIterator"],[6,"SetupFailed"],[6,"SetupFailedIterator"],[6,"SetupAuthenticate"],[6,"SetupAuthenticateIterator"],[6,"Setup"],[6,"SetupIterator"],[6,"KeyPressEvent"],[6,"ButtonPressEvent"],[6,"MotionNotifyEvent"],[6,"EnterNotifyEvent"],[6,"FocusInEvent"],[6,"KeymapNotifyEvent"],[6,"ExposeEvent"],[6,"GraphicsExposureEvent"],[6,"NoExposureEvent"],[6,"VisibilityNotifyEvent"],[6,"CreateNotifyEvent"],[6,"DestroyNotifyEvent"],[6,"UnmapNotifyEvent"],[6,"MapNotifyEvent"],[6,"MapRequestEvent"],[6,"ReparentNotifyEvent"],[6,"ConfigureNotifyEvent"],[6,"ConfigureRequestEvent"],[6,"GravityNotifyEvent"],[6,"ResizeRequestEvent"],[6,"CirculateNotifyEvent"],[6,"PropertyNotifyEvent"],[6,"SelectionClearEvent"],[6,"SelectionRequestEvent"],[6,"SelectionNotifyEvent"],[6,"ColormapNotifyEvent"],[6,"ClientMessageData"],[6,"ClientMessageDataIterator"],[6,"ClientMessageEvent"],[6,"MappingNotifyEvent"],[6,"GeGenericEvent"],[6,"GetWindowAttributesCookie"],[6,"GetWindowAttributesReply"],[6,"GetGeometryCookie"],[6,"GetGeometryReply"],[6,"QueryTreeCookie"],[6,"QueryTreeReply"],[6,"InternAtomCookie"],[6,"InternAtomReply"],[6,"GetAtomNameCookie"],[6,"GetAtomNameReply"],[6,"GetPropertyCookie"],[6,"GetPropertyReply"],[6,"ListPropertiesCookie"],[6,"ListPropertiesReply"],[6,"GetSelectionOwnerCookie"],[6,"GetSelectionOwnerReply"],[6,"GrabPointerCookie"],[6,"GrabPointerReply"],[6,"GrabKeyboardCookie"],[6,"GrabKeyboardReply"],[6,"QueryPointerCookie"],[6,"QueryPointerReply"],[6,"TimecoordIterator"],[6,"GetMotionEventsCookie"],[6,"GetMotionEventsReply"],[6,"TranslateCoordinatesCookie"],[6,"TranslateCoordinatesReply"],[6,"GetInputFocusCookie"],[6,"GetInputFocusReply"],[6,"QueryKeymapCookie"],[6,"QueryKeymapReply"],[6,"FontpropIterator"],[6,"CharinfoIterator"],[6,"QueryFontCookie"],[6,"QueryFontReply"],[6,"QueryTextExtentsCookie"],[6,"QueryTextExtentsReply"],[6,"Str"],[6,"StrIterator"],[6,"ListFontsCookie"],[6,"ListFontsReply"],[6,"ListFontsWithInfoCookie"],[6,"ListFontsWithInfoReply"],[6,"GetFontPathCookie"],[6,"GetFontPathReply"],[6,"SegmentIterator"],[6,"GetImageCookie"],[6,"GetImageReply"],[6,"ListInstalledColormapsCookie"],[6,"ListInstalledColormapsReply"],[6,"AllocColorCookie"],[6,"AllocColorReply"],[6,"AllocNamedColorCookie"],[6,"AllocNamedColorReply"],[6,"AllocColorCellsCookie"],[6,"AllocColorCellsReply"],[6,"AllocColorPlanesCookie"],[6,"AllocColorPlanesReply"],[6,"ColoritemIterator"],[6,"RgbIterator"],[6,"QueryColorsCookie"],[6,"QueryColorsReply"],[6,"LookupColorCookie"],[6,"LookupColorReply"],[6,"QueryBestSizeCookie"],[6,"QueryBestSizeReply"],[6,"QueryExtensionCookie"],[6,"QueryExtensionReply"],[6,"ListExtensionsCookie"],[6,"ListExtensionsReply"],[6,"GetKeyboardMappingCookie"],[6,"GetKeyboardMappingReply"],[6,"GetKeyboardControlCookie"],[6,"GetKeyboardControlReply"],[6,"GetPointerControlCookie"],[6,"GetPointerControlReply"],[6,"GetScreenSaverCookie"],[6,"GetScreenSaverReply"],[6,"Host"],[6,"HostIterator"],[6,"ListHostsCookie"],[6,"ListHostsReply"],[6,"SetPointerMappingCookie"],[6,"SetPointerMappingReply"],[6,"GetPointerMappingCookie"],[6,"GetPointerMappingReply"],[6,"SetModifierMappingCookie"],[6,"SetModifierMappingReply"],[6,"GetModifierMappingCookie"],[6,"GetModifierMappingReply"],[6,"EnableCookie"],[6,"EnableReply"],[6,"GetVersionCookie"],[6,"GetVersionReply"],[6,"GetXidRangeCookie"],[6,"GetXidRangeReply"],[6,"GetXidListCookie"],[6,"GetXidListReply"],[3,"xcb_generic_iterator_t"],[3,"xcb_generic_reply_t"],[3,"xcb_generic_event_t"],[3,"xcb_ge_event_t"],[3,"xcb_generic_error_t"],[3,"xcb_void_cookie_t"],[3,"xcb_auth_info_t"],[3,"xcb_char2b_t"],[3,"xcb_char2b_iterator_t"],[3,"xcb_window_iterator_t"],[3,"xcb_pixmap_iterator_t"],[3,"xcb_cursor_iterator_t"],[3,"xcb_font_iterator_t"],[3,"xcb_gcontext_iterator_t"],[3,"xcb_colormap_iterator_t"],[3,"xcb_atom_iterator_t"],[3,"xcb_drawable_iterator_t"],[3,"xcb_fontable_iterator_t"],[3,"xcb_visualid_iterator_t"],[3,"xcb_timestamp_iterator_t"],[3,"xcb_keysym_iterator_t"],[3,"xcb_keycode_iterator_t"],[3,"xcb_button_iterator_t"],[3,"xcb_point_t"],[3,"xcb_point_iterator_t"],[3,"xcb_rectangle_t"],[3,"xcb_rectangle_iterator_t"],[3,"xcb_arc_t"],[3,"xcb_arc_iterator_t"],[3,"xcb_format_t"],[3,"xcb_format_iterator_t"],[3,"xcb_visualtype_t"],[3,"xcb_visualtype_iterator_t"],[3,"xcb_depth_t"],[3,"xcb_depth_iterator_t"],[3,"xcb_screen_t"],[3,"xcb_screen_iterator_t"],[3,"xcb_setup_request_t"],[3,"xcb_setup_request_iterator_t"],[3,"xcb_setup_failed_t"],[3,"xcb_setup_failed_iterator_t"],[3,"xcb_setup_authenticate_t"],[3,"xcb_setup_authenticate_iterator_t"],[3,"xcb_setup_t"],[3,"xcb_setup_iterator_t"],[3,"xcb_key_press_event_t"],[3,"xcb_button_press_event_t"],[3,"xcb_motion_notify_event_t"],[3,"xcb_enter_notify_event_t"],[3,"xcb_focus_in_event_t"],[3,"xcb_keymap_notify_event_t"],[3,"xcb_expose_event_t"],[3,"xcb_graphics_exposure_event_t"],[3,"xcb_no_exposure_event_t"],[3,"xcb_visibility_notify_event_t"],[3,"xcb_create_notify_event_t"],[3,"xcb_destroy_notify_event_t"],[3,"xcb_unmap_notify_event_t"],[3,"xcb_map_notify_event_t"],[3,"xcb_map_request_event_t"],[3,"xcb_reparent_notify_event_t"],[3,"xcb_configure_notify_event_t"],[3,"xcb_configure_request_event_t"],[3,"xcb_gravity_notify_event_t"],[3,"xcb_resize_request_event_t"],[3,"xcb_circulate_notify_event_t"],[3,"xcb_property_notify_event_t"],[3,"xcb_selection_clear_event_t"],[3,"xcb_selection_request_event_t"],[3,"xcb_selection_notify_event_t"],[3,"xcb_colormap_notify_event_t"],[3,"xcb_client_message_data_t"],[3,"xcb_client_message_data_iterator_t"],[3,"xcb_client_message_event_t"],[3,"xcb_mapping_notify_event_t"],[3,"xcb_ge_generic_event_t"],[3,"xcb_request_error_t"],[3,"xcb_value_error_t"],[3,"xcb_create_window_request_t"],[3,"xcb_change_window_attributes_request_t"],[3,"xcb_get_window_attributes_request_t"],[3,"xcb_get_window_attributes_reply_t"],[3,"xcb_destroy_window_request_t"],[3,"xcb_destroy_subwindows_request_t"],[3,"xcb_change_save_set_request_t"],[3,"xcb_reparent_window_request_t"],[3,"xcb_map_window_request_t"],[3,"xcb_map_subwindows_request_t"],[3,"xcb_unmap_window_request_t"],[3,"xcb_unmap_subwindows_request_t"],[3,"xcb_configure_window_request_t"],[3,"xcb_circulate_window_request_t"],[3,"xcb_get_geometry_request_t"],[3,"xcb_get_geometry_reply_t"],[3,"xcb_query_tree_request_t"],[3,"xcb_query_tree_reply_t"],[3,"xcb_intern_atom_request_t"],[3,"xcb_intern_atom_reply_t"],[3,"xcb_get_atom_name_request_t"],[3,"xcb_get_atom_name_reply_t"],[3,"xcb_change_property_request_t"],[3,"xcb_delete_property_request_t"],[3,"xcb_get_property_request_t"],[3,"xcb_get_property_reply_t"],[3,"xcb_list_properties_request_t"],[3,"xcb_list_properties_reply_t"],[3,"xcb_set_selection_owner_request_t"],[3,"xcb_get_selection_owner_request_t"],[3,"xcb_get_selection_owner_reply_t"],[3,"xcb_convert_selection_request_t"],[3,"xcb_send_event_request_t"],[3,"xcb_grab_pointer_request_t"],[3,"xcb_grab_pointer_reply_t"],[3,"xcb_ungrab_pointer_request_t"],[3,"xcb_grab_button_request_t"],[3,"xcb_ungrab_button_request_t"],[3,"xcb_change_active_pointer_grab_request_t"],[3,"xcb_grab_keyboard_request_t"],[3,"xcb_grab_keyboard_reply_t"],[3,"xcb_ungrab_keyboard_request_t"],[3,"xcb_grab_key_request_t"],[3,"xcb_ungrab_key_request_t"],[3,"xcb_allow_events_request_t"],[3,"xcb_grab_server_request_t"],[3,"xcb_ungrab_server_request_t"],[3,"xcb_query_pointer_request_t"],[3,"xcb_query_pointer_reply_t"],[3,"xcb_timecoord_t"],[3,"xcb_timecoord_iterator_t"],[3,"xcb_get_motion_events_request_t"],[3,"xcb_get_motion_events_reply_t"],[3,"xcb_translate_coordinates_request_t"],[3,"xcb_translate_coordinates_reply_t"],[3,"xcb_warp_pointer_request_t"],[3,"xcb_set_input_focus_request_t"],[3,"xcb_get_input_focus_request_t"],[3,"xcb_get_input_focus_reply_t"],[3,"xcb_query_keymap_request_t"],[3,"xcb_query_keymap_reply_t"],[3,"xcb_open_font_request_t"],[3,"xcb_close_font_request_t"],[3,"xcb_fontprop_t"],[3,"xcb_fontprop_iterator_t"],[3,"xcb_charinfo_t"],[3,"xcb_charinfo_iterator_t"],[3,"xcb_query_font_request_t"],[3,"xcb_query_font_reply_t"],[3,"xcb_query_text_extents_request_t"],[3,"xcb_query_text_extents_reply_t"],[3,"xcb_str_t"],[3,"xcb_str_iterator_t"],[3,"xcb_list_fonts_request_t"],[3,"xcb_list_fonts_reply_t"],[3,"xcb_list_fonts_with_info_request_t"],[3,"xcb_list_fonts_with_info_reply_t"],[3,"xcb_set_font_path_request_t"],[3,"xcb_get_font_path_request_t"],[3,"xcb_get_font_path_reply_t"],[3,"xcb_create_pixmap_request_t"],[3,"xcb_free_pixmap_request_t"],[3,"xcb_create_gc_request_t"],[3,"xcb_change_gc_request_t"],[3,"xcb_copy_gc_request_t"],[3,"xcb_set_dashes_request_t"],[3,"xcb_set_clip_rectangles_request_t"],[3,"xcb_free_gc_request_t"],[3,"xcb_clear_area_request_t"],[3,"xcb_copy_area_request_t"],[3,"xcb_copy_plane_request_t"],[3,"xcb_poly_point_request_t"],[3,"xcb_poly_line_request_t"],[3,"xcb_segment_t"],[3,"xcb_segment_iterator_t"],[3,"xcb_poly_segment_request_t"],[3,"xcb_poly_rectangle_request_t"],[3,"xcb_poly_arc_request_t"],[3,"xcb_fill_poly_request_t"],[3,"xcb_poly_fill_rectangle_request_t"],[3,"xcb_poly_fill_arc_request_t"],[3,"xcb_put_image_request_t"],[3,"xcb_get_image_request_t"],[3,"xcb_get_image_reply_t"],[3,"xcb_poly_text_8_request_t"],[3,"xcb_poly_text_16_request_t"],[3,"xcb_image_text_8_request_t"],[3,"xcb_image_text_16_request_t"],[3,"xcb_create_colormap_request_t"],[3,"xcb_free_colormap_request_t"],[3,"xcb_copy_colormap_and_free_request_t"],[3,"xcb_install_colormap_request_t"],[3,"xcb_uninstall_colormap_request_t"],[3,"xcb_list_installed_colormaps_request_t"],[3,"xcb_list_installed_colormaps_reply_t"],[3,"xcb_alloc_color_request_t"],[3,"xcb_alloc_color_reply_t"],[3,"xcb_alloc_named_color_request_t"],[3,"xcb_alloc_named_color_reply_t"],[3,"xcb_alloc_color_cells_request_t"],[3,"xcb_alloc_color_cells_reply_t"],[3,"xcb_alloc_color_planes_request_t"],[3,"xcb_alloc_color_planes_reply_t"],[3,"xcb_free_colors_request_t"],[3,"xcb_coloritem_t"],[3,"xcb_coloritem_iterator_t"],[3,"xcb_store_colors_request_t"],[3,"xcb_store_named_color_request_t"],[3,"xcb_rgb_t"],[3,"xcb_rgb_iterator_t"],[3,"xcb_query_colors_request_t"],[3,"xcb_query_colors_reply_t"],[3,"xcb_lookup_color_request_t"],[3,"xcb_lookup_color_reply_t"],[3,"xcb_create_cursor_request_t"],[3,"xcb_create_glyph_cursor_request_t"],[3,"xcb_free_cursor_request_t"],[3,"xcb_recolor_cursor_request_t"],[3,"xcb_query_best_size_request_t"],[3,"xcb_query_best_size_reply_t"],[3,"xcb_query_extension_request_t"],[3,"xcb_query_extension_reply_t"],[3,"xcb_list_extensions_request_t"],[3,"xcb_list_extensions_reply_t"],[3,"xcb_change_keyboard_mapping_request_t"],[3,"xcb_get_keyboard_mapping_request_t"],[3,"xcb_get_keyboard_mapping_reply_t"],[3,"xcb_change_keyboard_control_request_t"],[3,"xcb_get_keyboard_control_request_t"],[3,"xcb_get_keyboard_control_reply_t"],[3,"xcb_bell_request_t"],[3,"xcb_change_pointer_control_request_t"],[3,"xcb_get_pointer_control_request_t"],[3,"xcb_get_pointer_control_reply_t"],[3,"xcb_set_screen_saver_request_t"],[3,"xcb_get_screen_saver_request_t"],[3,"xcb_get_screen_saver_reply_t"],[3,"xcb_change_hosts_request_t"],[3,"xcb_host_t"],[3,"xcb_host_iterator_t"],[3,"xcb_list_hosts_request_t"],[3,"xcb_list_hosts_reply_t"],[3,"xcb_set_access_control_request_t"],[3,"xcb_set_close_down_mode_request_t"],[3,"xcb_kill_client_request_t"],[3,"xcb_rotate_properties_request_t"],[3,"xcb_force_screen_saver_request_t"],[3,"xcb_set_pointer_mapping_request_t"],[3,"xcb_set_pointer_mapping_reply_t"],[3,"xcb_get_pointer_mapping_request_t"],[3,"xcb_get_pointer_mapping_reply_t"],[3,"xcb_set_modifier_mapping_request_t"],[3,"xcb_set_modifier_mapping_reply_t"],[3,"xcb_get_modifier_mapping_request_t"],[3,"xcb_get_modifier_mapping_reply_t"],[3,"xcb_no_operation_request_t"],[3,"xcb_get_window_attributes_cookie_t"],[3,"xcb_get_geometry_cookie_t"],[3,"xcb_query_tree_cookie_t"],[3,"xcb_intern_atom_cookie_t"],[3,"xcb_get_atom_name_cookie_t"],[3,"xcb_get_property_cookie_t"],[3,"xcb_list_properties_cookie_t"],[3,"xcb_get_selection_owner_cookie_t"],[3,"xcb_grab_pointer_cookie_t"],[3,"xcb_grab_keyboard_cookie_t"],[3,"xcb_query_pointer_cookie_t"],[3,"xcb_get_motion_events_cookie_t"],[3,"xcb_translate_coordinates_cookie_t"],[3,"xcb_get_input_focus_cookie_t"],[3,"xcb_query_keymap_cookie_t"],[3,"xcb_query_font_cookie_t"],[3,"xcb_query_text_extents_cookie_t"],[3,"xcb_list_fonts_cookie_t"],[3,"xcb_list_fonts_with_info_cookie_t"],[3,"xcb_get_font_path_cookie_t"],[3,"xcb_get_image_cookie_t"],[3,"xcb_list_installed_colormaps_cookie_t"],[3,"xcb_alloc_color_cookie_t"],[3,"xcb_alloc_named_color_cookie_t"],[3,"xcb_alloc_color_cells_cookie_t"],[3,"xcb_alloc_color_planes_cookie_t"],[3,"xcb_query_colors_cookie_t"],[3,"xcb_lookup_color_cookie_t"],[3,"xcb_query_best_size_cookie_t"],[3,"xcb_query_extension_cookie_t"],[3,"xcb_list_extensions_cookie_t"],[3,"xcb_get_keyboard_mapping_cookie_t"],[3,"xcb_get_keyboard_control_cookie_t"],[3,"xcb_get_pointer_control_cookie_t"],[3,"xcb_get_screen_saver_cookie_t"],[3,"xcb_list_hosts_cookie_t"],[3,"xcb_set_pointer_mapping_cookie_t"],[3,"xcb_get_pointer_mapping_cookie_t"],[3,"xcb_set_modifier_mapping_cookie_t"],[3,"xcb_get_modifier_mapping_cookie_t"],[3,"xcb_big_requests_enable_request_t"],[3,"xcb_big_requests_enable_reply_t"],[3,"xcb_big_requests_enable_cookie_t"],[3,"xcb_xc_misc_get_version_request_t"],[3,"xcb_xc_misc_get_version_reply_t"],[3,"xcb_xc_misc_get_xid_range_request_t"],[3,"xcb_xc_misc_get_xid_range_reply_t"],[3,"xcb_xc_misc_get_xid_list_request_t"],[3,"xcb_xc_misc_get_xid_list_reply_t"],[3,"xcb_xc_misc_get_version_cookie_t"],[3,"xcb_xc_misc_get_xid_range_cookie_t"],[3,"xcb_xc_misc_get_xid_list_cookie_t"]]};
searchIndex["xi_unicode"] = {"doc":"Unicode utilities useful for text editing, including a line breaking iterator.","items":[[3,"LineBreakIterator","xi_unicode","An iterator which produces line breaks according to the UAX 14 line breaking algorithm. For each break, return a tuple consisting of the offset within the source string and a bool indicating whether it's a hard break.",null,null],[3,"LineBreakLeafIter","","A class (TODO, not right word) useful for computing line breaks in a rope or other non-contiguous string representation. This is a trickier problem than iterating in a string for a few reasons, the trickiest of which is that in the general case, line breaks require an indeterminate amount of look-behind.",null,null],[5,"linebreak_property","","",null,{"inputs":[{"name":"char"}],"output":{"name":"u8"}}],[5,"linebreak_property_str","","",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"linebreakiterator"}}],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","Create a new iterator for the given string slice.",0,{"inputs":[{"name":"str"}],"output":{"name":"linebreakiterator"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"linebreakleafiter"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"linebreakleafiter"}}],[11,"new","","Create a new line break iterator suitable for leaves in a rope. Precondition: ix references a codepoint in s (implies s is not empty).",1,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"linebreakleafiter"}}],[11,"next","","Return break pos and whether it's a hard break. Note: hard break indication may go away, this may not be useful in actual application. If end of leaf is found, return leaf's len. This does not indicate a break, as that requires at least one more codepoint of context. If it is a break, then subsequent next call will return an offset of 0. EOT is always a break, so in the EOT case it's up to the caller to figure that out.",1,null]],"paths":[[3,"LineBreakIterator"],[3,"LineBreakLeafIter"]]};
initSearch(searchIndex);
